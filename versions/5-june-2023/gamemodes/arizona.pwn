AntiDeAMX2()
{
	new a[][] =
	{
		"Unarmed (Fist)",
		"Brass K"
	};
	#pragma unused a
}
//============================== Include's =====================================
#include <a_samp> // не трогать
//#include <a_mail>// Include Mail для отсправки сообщений
#include <a_engine>// Include Двигатель
#include <dini>// Include DIni
#include <mxINI>// Include MxIni
//#include <md5> //MD5
#include <morphinc>// Include На дальновидность ника игрока
#include <streamer>// Include Streamer обьектов и много другого
#include <utils>// Include Проверка на то что есть файл игрока
#include <setgravity> // Гравити
#include <regex>
//============================== Define's ======================================
#undef MAX_PLAYERS // Максимум игроки
#pragma dynamic					11294// Dynamic - повышает место под стек, не в коем случае не убирать, до полной оптимизации.
#define MAX_PLAYERS 100 // Максимум игроки
#define F6        1
#define ADMIN_SPEC_TYPE_NONE	0// Откл слежки
#define ADMIN_SPEC_TYPE_PLAYER	1// Слежка в от 3 лица
#define ADMIN_SPEC_TYPE_VEHICLE	2// Слежка в авто
#define VEHICLE_PARAMS_OFF  	0// Выкл параметры авто
#define VEHICLE_PARAMS_ON   	1// Вкл параметры авто
#define CHECKPOINT_NONE 		0// Чекпоинт 0
#define CHECKPOINT_HOME 		12// Чекпоинт 12
#define NUMBER_OF_ARMYTRUCKS 	3// Кол-во Матовозов
#define Ammo_SDPISTOL 			16// Сколько надо выстрельнуть чтобы прокачать 1%
#define Ammo_DEAGLE 			6// Сколько надо выстрельнуть чтобы прокачать 1%
#define Ammo_SHOTGUN			4// Сколько надо выстрельнуть чтобы прокачать 1%
#define Ammo_MP5				29// Сколько надо выстрельнуть чтобы прокачать 1%
#define Ammo_AK47				29// Сколько надо выстрельнуть чтобы прокачать 1%
#define Ammo_M4A1				49// Сколько надо выстрельнуть чтобы прокачать 1%
#define vMaxN    				1000
#define vMaxP    				5000
#define vTimer   				12
#define BONUSE_LVL 				1 // Уровень
#define BONUSE_QUEST 			999 // Номер квеста
#define BONUSE_PASPORT 			1 // Состояние паспорта
#define BONUSE_CASH 			2000 // Деньги
#define BONUSE_DONATE 			50 // Донат
#define ADMIN_PASSWORD 			777333 // Админ пароль
#define NUMBER_TLF 				22031998 // Номер телефона
#define FixConsole(%1) for(new rSt; rSt < strlen(%1); rSt++) if(%1[rSt] > 191 && %1[rSt] < 240) %1[rSt] -= 64; else if(%1[rSt] > 239 && %1[rSt] < 256) %1[rSt] -= 16; else if (%1[rSt] == 168 ) %1[rSt] += 72; else if (%1[rSt] == 184) %1[rSt] += 57// Фикс консоли
//================================ Color's =====================================
#define COLOR_BOX 0x00000050
#define COLOR_GRAD1 0xB4B5B7FF
#define COLOR_GRAD2 0xBFC0C2FF
#define COLOR_GRAD3 0xCBCCCEFF
#define COLOR_GRAD4 0xD8D8D8FF
#define COLOR_GRAD5 0xE3E3E3FF
#define COLOR_GRAD6 0xF0F0F0FF
#define COLOR_USE 0x7FB151FF
#define COLOR_BLUE 0x33AAFFFF
#define COLOR_SALMON 0xFA8072AA
#define COLOR_INDIGO 0x4B00B0AA
#define COLOR_BLACK 0x000000AA
#define COLOR_GREY 0xAFAFAFAA
#define COLOR_ORANGE 0xFF9900AA
#define COLOR_GREEN 0x33AA33AA
#define COLOR_RED 0xAA3333AA
#define COLOR_LIGHTRED 0xFF6347AA
#define COLOR_LIGHTBLUE 0x33CCFFAA
#define COLOR_LIGHTGREEN 0x9ACD32AA
#define COLOR_YELLOW 0xFFFF00AA
#define COLOR_GOLD 0xFF00CCAA
#define COLOR_YELLOW2 0xF5DEB3AA
#define COLOR_WHITE 0xFFFFFFAA
#define COLOR_REDD 0x9F0000AA
#define COLOR_REDDD 0xFF0000AA
#define CGRAY 0xAFAFAFAA
#define COLOR_FADE1 0xE6E6E6E6
#define COLOR_FADE2 0xC8C8C8C8
#define COLOR_FADE3 0xAAAAAAAA
#define COLOR_FADE4 0x8C8C8C8C
#define COLOR_FADE5 0x6E6E6E6E
#define COLOR_PURPLE 0xC2A2DAAA
#define COLOR_ALLDEPT 0xFF8282AA
#define COLOR_NEWS 0xFFA500AA
#define COLOR_OOC 0xE0FFFFAA
#define TEAM_HIT_COLOR 0xFFFFFF00
#define TEAM_BLUE_COLOR 0x8D8DFF00
#define TEAM_GROVE_COLOR 0x00D900C8
#define TEAM_AZTECAS_COLOR 0x01FCFFC8
#define TEAM_CYAN_COLOR 0xFF8282AA
//================================ Forward's ===================================
forward ABroadCast(color,const string[],level);
forward Quiz();
forward VIPChat(color,const string[],level);
forward HelpChat(color,const string[],level);
forward AddictionTimer(playerid);
forward AdvertiseTimer();
forward AntiRemovePlayerFromVehicle(playerid);
forward AntiBunny(playerid);
forward AntiBunnyHop(playerid);
forward BatleGZoneEnded();
forward CheckForCheater(playerid);
forward CustomPickups();
forward Ddchat();
forward ServerName();
forward Fresh();
forward FixKickedPlayers();
forward ClearLastPickup();
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward SatietyCheck();
forward LicClose();
forward GzCheck();
forward MzCheck();
forward OnPlayerConnect(playerid);
forward OnPlayerLogin(playerid,password[]);
forward OnVehicleDamageStatusUpdate(vehicleid, playerid);
forward OtherTimer();
forward PayDay();
forward UpdateSpeedometr();
forward UnSurfCar(carid);
forward UnFreeze(playerid);
forward SaveAccounts();
forward SendTeamMessage(team, color, string[]);
forward SendGangMessage(family, color, string[]);
forward SetPlayerUnjail();
forward StartBatleGZone();
forward StopMusic();
forward split(const strsrc[], strdest[][], delimiter);
forward PaintBall();
forward PaintBallEnded();
forward StartPaintballtwo();
forward StartPaintball();
forward RaceEnded();
forward StartRace();
forward StartRacetwo();
forward StartRace1();
forward StartRace2();
forward StartRace3();
//================================== Variable's ================================
new Zhyk[MAX_PLAYERS];
new RegEx:reklamka;
new testDelay;
new plafk[MAX_PLAYERS];
new Viktorina = -5415614561541; // Викторина
new AntiBan[MAX_PLAYERS];
new Float:GMHP[MAX_PLAYERS][2];
new Float:VEHHP[MAX_PLAYERS][2];
new Float:GMARMOUR[MAX_PLAYERS][1];
new OldWheels[MAX_PLAYERS];
new OldSpoiler[MAX_PLAYERS];
new OldBumper1[MAX_PLAYERS];
new OldBumper2[MAX_PLAYERS];
new OldYubki[MAX_PLAYERS];
new OldYubki2[MAX_PLAYERS];
new OldVih[MAX_PLAYERS];
new OldVozd[MAX_PLAYERS];
new OldPaintJob[MAX_PLAYERS];
new OldNitro[MAX_PLAYERS];
new OldHydrawlic[MAX_PLAYERS];//============
new Float:ACP_pPos[MAX_PLAYERS][3];
new pokupka[MAX_PLAYERS];
new MaxSpeed[MAX_PLAYERS];
new AntiDM[MAX_PLAYERS];
new Menu:Buyint;
new Menu:Admin;
new SpecAd[MAX_PLAYERS];
new TransferAd[MAX_PLAYERS];
new Text:FULLRECON[MAX_PLAYERS];
new lspdslak;
new SpecID[MAX_PLAYERS];
new Float:TeleportDest[MAX_PLAYERS][8];
new TeleportDestNoFloat[MAX_PLAYERS][2];
stock getName( const playerid )
{
    new pname[ MAX_PLAYER_NAME ];
    GetPlayerName( playerid, pname, sizeof( pname ) );
    return pname;
}
//============================ Сердечко Логотипа ===============================
new Text:Textdraw0;
new Text:Textdraw1;
new Text:Textdraw2;
//==============================================================================
new text_bag[51]; // вот это обязательно
new ZapretDice[MAX_PLAYERS];// KOCTИ
new dicetime;
new KostiName[MAX_PLAYERS];
new KostiMoney[MAX_PLAYERS];//КОСТИ
new ScoreZahvat[20];
new capture[20],capt;
new Fishpic[1];
new JF_OBJ[17], JF_VEH[4], PU_JF1[31], PU_JF2[13], PU_JF3[2], Text3D:JF_Text;// Медузы
new GotHit[MAX_PLAYERS];
new GoChase[MAX_PLAYERS];
new GetChased[MAX_PLAYERS];
new hitfound = 0;
new hitid = 999;
new hitmansvorota2;
new Float:MpTp[MAX_PLAYERS][3];
new mpon;
new mppriz;
new mpdv;
new Mper[MAX_PLAYERS];
//new PlayerValue[MAX_PLAYERS];
//==============================================================================
#define ONE_HUNDRED_MSECOND                     100
#define COLOR_BORDER                                    0x00000AA
new Text:LBorder; //?????????? ?-???????  //
new Text:RBorder; //?????????? ?-???????  //
new Text:BBorder; //?????????? ?-???????  //
new Text:TBorder; //?????????? ?-???????  //
new     Text:Speed;
new Text:Fuelll;
new Text:Healthh;
new Text:Box;
new     Text:SpeedShow[MAX_PLAYERS];
new     Text:HealthShow[MAX_PLAYERS];
new Text:FuelShow[MAX_PLAYERS];
new Text:StatusShow[MAX_PLAYERS];
new Text:Speed2Show[MAX_PLAYERS];
new Text:EngineShow[MAX_PLAYERS];
//==============================================================================
enum AC_STRUCT_INFO
{
   Float:LastOnFootPosition[3],
   checkmaptp,
   maptplastclick,
   Float:maptp[3]
}
new winner[MAX_PLAYERS];
new acstruct[MAX_PLAYERS][AC_STRUCT_INFO];
new FixKickedPlayer[MAX_PLAYERS];
new AntiFlud[MAX_PLAYERS]; // asddd
new Float:PosPic[3][MAX_PLAYERS]; // asdddd
new Dpic[MAX_PLAYERS];// asdddd
new pLeaders[24][MAX_PLAYER_NAME];
new Collectionit[MAX_PLAYERS];
new Float:fishechkay[MAX_PLAYERS];
new Float:fishechkax[MAX_PLAYERS];
new NumberFishka[MAX_PLAYERS];
new Fishka[MAX_PLAYERS];
new bool:Upravakazino[MAX_PLAYERS];
new RuletkaStol[MAX_PLAYERS];
new bool:RuletStart[MAX_PLAYERS];
new bool:KrupieStart[2];
new KrupieTime[2];
new bool:Vidrulvigr[2];
new RuletTip[MAX_PLAYERS];
new RuletSum[MAX_PLAYERS];
new krupiedi[2];
new kaligmaf[MAX_PLAYER_NAME];
new Maxis[2];
new kaligmaf1;
new BarabanTimer[2];
new RuletTimer;
new RuletTimer2;
new Kazkamera[MAX_PLAYERS];
new Float:Barabanchik = 0.00;
new Float:Barabanchik2 = 0.00;
new Braban[2];
new AdvertTime;
new LastPickup[MAX_PLAYERS];
new RJFish[MAX_PLAYERS];
new WJFish[MAX_PLAYERS];
new adminreadsms[MAX_PLAYERS];
new ConnectPC[MAX_PLAYERS];
new adminreadpay[MAX_PLAYERS];
new adminreadconnect[MAX_PLAYERS];
new Weapons[MAX_PLAYERS][47];
new objectplayerid;
new TOTALADVERT[3];
new DonateMoney1;
new	ServerNameTimer;
new GovTax;
new robber;
new truckerspic[8];
new ConnectTimed[MAX_PLAYERS];
new IsConnected[MAX_PLAYERS];
new MusicIndex[MAX_PLAYERS];
new Songs[7][1] = {
	{1187},
	{1185},
	{1183},
	{1097},
	{1076},
	{1068},
	{1062}
};
new ReportQ[MAX_PLAYERS][144];
enum adInfo
{
	adPhone,
	adText[128],
	adName[MAX_PLAYER_NAME]
};
new AdvertInfo[30][3][adInfo];
new FormaFracPic[15];
new FormaFrac[MAX_PLAYERS];
new monitor;
new bool:times[MAX_PLAYERS];
new radiols;
new radiosf;
new radiolv;
new	UnJailTimer;
new	AdvertiseTimerEx;
new	FreshTimer;
new FixKickedPlayersTimer;
new ClearLastPickupTimer;
new	OtherTimerEx;
new	SaietyTimer;
new	PickupTimer;
new	SpeedoTimer;
new SpeedTimer[MAX_PLAYERS];
new GzCheckTimer;
new MzCheckTimer;
new porterinfo;
new IPMSG[5][] = {
	{"IP проверка обезопасит Ваш аккаунт от взлома!\n"},
	{"Если Ваш IP адрес будет изменён, система потребуют ключ безопасности\n\n"},
	{"Для того чтобы включить/отключить защиту \n"},
	{"Введите /mm - [7] Безопасность\n\n"},
	{"Обязательно установите ключ безопасности!\n"}
};
new RegaMSG[9][] = {
	{"Добро пожаловать на сервер Arizona RolePlay\n"},
	{"Только ступив на New Year землю, ты почувствуешь, какая она приятная и уютная.\n"},
	{"А также у нас созданы все условия для помощи неосвоившимся новичкам. Только у нас, ты можешь отыграть любую роль!\n"},
	{"От простого скромного мирного работяги или местного бандита до авторитета в мафии или шерифа полиции.\n"},
	{"Реализуй себя - заработай денег, получи авторитет и уважение, найди верных друзей,катайся по штату на новеньком авто, купи красивый уютный дом.\n"},
	{"Займи сторону закона и лови бандитов, участвуй в спецоперациях, лечи людей или же наоборот торгуй оружием, принимай наркотики и скрывайся от полиции!\n"},
	{"Жизнь в нашем Штате - это виртуальный мир исполненных желаний. Присоединяйся к нам - и ты не захочешь жить другой жизнью!\n"},
	{"\n"},
	{"Чтобы начать игру, вам необходимо зарегистрироваться, придумайте пароль для своего аккаунта.\n"}
};
new AdminMSG1[11][] = {//{00FF00}
	{"{00FF00}/a{FFFFFF} - Чат администраторов.\n"},
	{"{00FF00}/o{FFFFFF} -  Общий чат.\n"},
	{"{00FF00}/mute{FFFFFF} -  Выдать бан чата.\n"},
	{"{00FF00}/mutelist{FFFFFF} -  Список игроков с баном чата.\n"},
	{"{00FF00}/kick{FFFFFF} -  Кикнуть игрока\n"},
	{"{00FF00}/skick{FFFFFF} - Тихо кикнуть игрока\n"},
	{"{00FF00}/pm{FFFFFF} -  Ответить на репорт\n"},
	{"{00FF00}/smska{FFFFFF} -  Читать смс сообщения\n"},
	{"{00FF00}/chat{FFFFFF} -  Показывать весь чат\n"},
	{"{00FF00}/adminkey{FFFFFF} -  Сменить пароль от админки\n"},
	{"{00FF00}/atipster{FFFFFF} - Подслушивать фракцию.\n"}
};
new AdminMSG2[10][] = {
	{"{00FF00}/alock{FFFFFF} - Открыть стояющуу рядом машину.\n"},
	{"{00FF00}/ram{FFFFFF} - Войти в закрытый дом.\n"},
	{"{00FF00}/hp{FFFFFF} - Пополнить ХП.\n"},
	{"{00FF00}/sethp{FFFFFF} - Установить ХП игроку.\n"},
	{"{00FF00}/slap{FFFFFF} - Дать поджопник.\n"},
	{"{00FF00}/cc{FFFFFF} - Отчистить чат.\n"},
	{"{00FF00}/skin{FFFFFF} - Сменить скин.\n"},
	{"{00FF00}/setskin{FFFFFF} - Сменить скин игроку.\n"},
	{"{00FF00}/re{FFFFFF} - Следить за игроком.\n"},
	{"{00FF00}/reoff{FFFFFF} - Остановить слежку.\n"}
};
new AdminMSG3[9][] = {
	{"{00FF00}/demorgan{FFFFFF} - Посадить игрока в тюрьму.\n"},
	{"{00FF00}/demorganlist{FFFFFF} - Список игроков в тюрьме.\n"},
	{"{00FF00}/aad{FFFFFF} - Чат поправок.\n"},
	{"{00FF00}/afkplayers{FFFFFF} - Список АФК игроков.\n"},
	{"{00FF00}/setname{FFFFFF} - Сменить ник игроку(если тот подал заявку).\n"},
	{"{00FF00}/getstats{FFFFFF} - Статистика игрока.\n"},
	{"{00FF00}/g{FFFFFF} - Телепортироваться к игроку.\n"},
	{"{00FF00}/warn{FFFFFF} - Выдать варн.\n"},
	{"{00FF00}/unwarn{FFFFFF} - Снять варн.\n"}
};
new AdminMSG4[10][] = {
	{"{00FF00}/ban{FFFFFF} - Забанить игрока.\n"},
	{"{00FF00}/sban{FFFFFF} - Тихо забанить игрока"},
	{"{00FF00}/iweap{FFFFFF} - Список оружия у игрока.\n"},
	{"{00FF00}/gethere{FFFFFF} - ТП игрока к себе.\n"},
	{"{00FF00}/mark{FFFFFF} - Поставить метку.\n"},
	{"{00FF00}/gotomark{FFFFFF} - Телепортироваться на метку.\n"},
	{"{00FF00}/tp{FFFFFF} - Список телепортов.\n"},
	{"{00FF00}/apanel{FFFFFF} - Админ панель.\n"},
	{"{00FF00}/givecopkeys{FFFFFF} - Выдать пропуск в участок.\n"},
	{"{00FF00}/unban{FFFFFF} - Разбанить игрока.\n"}
};
new AdminMSG5[8][] = {
	{"{00FF00}/auninvite{FFFFFF} - Уволить игрока.\n"},
	{"{00FF00}/givegun{FFFFFF} - Выдать оружие.\n"},
	{"{00FF00}/paycheck{FFFFFF} - Показывать передачу денег.\n"},
	{"{00FF00}/connectcheck{FFFFFF} - Показывать коннект игроков.\n"},
	{"{00FF00}/spveh{FFFFFF} - Заспавнить машины в радиусе.\n"},
	{"{00FF00}/afuel{FFFFFF} - Заправить все машины.\n"},
	{"{00FF00}/spcars{FFFFFF} - Заспавнить все машины.\n"},
	{"{00FF00}/weather{FFFFFF} - Сменить погоду.\n"}
};
new AdminMSG6[7][] = {
	{"{00FF00}/freeze Заморозить.\n"},
	{"{00FF00}/unfreeze Разморозить.\n"},
	{"{00FF00}/vipmans Игроки с вип статусом.\n"},
	{"{00FF00}/warnmans Игроки с варном.\n"},
	{"{00FF00}/delgun Забрать оружие.\n"},
	{"{00FF00}/atune Временный тюнинг.\n"},
	{"{00FF00}/offban Выдать бан в оффлайне.\n"}
};
new AdminMSG7[9][] = {
	{"{00FF00}/mp{FFFFFF} - Создать мероприятие.\n"},
	{"{00FF00}/arace{FFFFFF} - Запустить стритрейсинг.\n"},
	{"{00FF00}/awarehouse{FFFFFF} - Состояние складов фракций.\n"},
	{"{00FF00}/pobject{FFFFFF} - Обьекты на игрока.\n"},
	{"{00FF00}/paint{FFFFFF} - Запустить пеинтбол.\n"},
	{"{00FF00}/ono{FFFFFF} - Вкл/Выкл общий чат.\n"},
	{"{00FF00}/abalance{FFFFFF} - Баланс банков фракций.\n"},
	{"{00FF00}/biz{FFFFFF} - Телепортироваться к бизу.\n"},
	{"{00FF00}/sbiz{FFFFFF} - Телепортирваться к SБизу.\n"}
};
new AdminMSG8[11][] = {
	{"{00FF00}/gxyz{FFFFFF} - Телепортироваться на координаты.\n"},
	{"{00FF00}/banip{FFFFFF} - Забанить IP.\n"},
	{"{00FF00}/unbanip{FFFFFF} - Разбанить IP.\n"},
	{"{00FF00}/agl{FFFFFF} - Выдать лицензии.\n"},
	{"{00FF00}/agiverank{FFFFFF} - Повысить ранг игрока во фракции.\n"},
	{"{00FF00}/makeleader{FFFFFF} - Назначить лидера фракции.\n"},
	{"{00FF00}/aunleader{FFFFFF} - Снять лидера.\n"},
	{"{00FF00}/offleader{FFFFFF} - Снять лидера в оффлайне.\n"},
	{"{00FF00}/agetipreg{FFFFFF} - Узнать регистрационный IP в оффлайне.\n"},
	{"{00FF00}/getip{FFFFFF} - Узнать IP игрока.\n"},
	{"{00FF00}/agetip{FFFFFF} - Узнать IP игрока в оффлайне.\n"}
};
new AdminMSG9[13][] = {
	{"{00FF00}/money{FFFFFF} - Выдать игроку деньги.\n"},
	{"{00FF00}/setklass{FFFFFF} - Установить класс дому.\n"},
	{"{00FF00}/getschet{FFFFFF} - Узнать домашний счет дома.\n"},
	{"{00FF00}/setmats{FFFFFF} - Установить маты фракции.\n"},
	{"{00FF00}/setcena{FFFFFF} - Установить цену дома.\n"},
	{"{00FF00}/asellbiz{FFFFFF} - Продать биз.\n"},
	{"{00FF00}/setstat{FFFFFF} - Изменить статистику игрока.\n"},
	{"{00FF00}/asellsbiz{FFFFFF} - Продать SБиз.\n"},
	{"{00FF00}/edit{FFFFFF} - Меню домов и бизнесов.\n"},
	{"{00FF00}/setobject{FFFFFF} - Создать обьект.\n"},
	{"{00FF00}/removeobject{FFFFFF} - Удалить последний созданный обькт.\n"},
	{"{00FF00}/captoff{FFFFFF} - Разрешить или запретить капт.\n"},
	{"{00FF00}/makehelper{FFFFFF} - Назначить игрока хелпером.\n"}
};
new AdminMSG10[18][] = {
	{"{00FF00}/setpos{FFFFFF} - Установить позицию дома.\n"},
	{"{00FF00}/setposcar{FFFFFF} - Установить позицию машины дома.\n"},
	{"{00FF00}/setbizcena{FFFFFF} - Установить цену бизнесу.\n"},
	{"{00FF00}/setbizprod{FFFFFF} - Установить продукты бизнесу.\n"},
	{"{00FF00}/asellhouse{FFFFFF} - Продать дом.\n"},
	{"{00FF00}/cmd{FFFFFF} - Использовать команду за игрока.\n"},
	{"{00FF00}/text{FFFFFF} - Написать за игрока.\n"},
	{"{00FF00}/makeadmin{FFFFFF} - Назначить игрока администратором.\n"},
	{"{00FF00}/offadmin{FFFFFF} - Снять админку в оффлайне.\n"},
	{"{00FF00}/gzcolor{FFFFFF} - Установить квадрат фракции.\n"},
	{"{00FF00}/avig{FFFFFF} - Выдать админу выговор.\n"},
	{"{00FF00}/aaddd{FFFFFF} - Добавить донат код.\n"},
	{"{00FF00}/restart{FFFFFF} - Рестарт сервера.\n"},
	{"{00FF00}/delakk{FFFFFF} - Удалить аккаунтне надо удалять.\n"},
	{"{00FF00}/payday{FFFFFF} - Сделать payday.\n"},
	{"{00FF00}/viktorina{FFFFFF} - Запустить викторину вне очереди.\n"},
	{"{00FF00}/setsbizcena{FFFFFF} - Установить цену SБизнесу.\n"},
	{"{00FF00}/setsbizprod{FFFFFF} - Установить продукты SБизнесу.\n"}
};
new AddictionsTimer[MAX_PLAYERS];
new startwar = 0;
new CarLeasing[MAX_PLAYERS];
new duty[MAX_PLAYERS];
new LicGate;
new bool:Prorab[MAX_PLAYERS];
new caligula[2];
new Text3D:GasZavod[2][MAX_PLAYERS];
new Text3D:Doki[2][MAX_PLAYERS];
new Text3D:Sklad[2][MAX_PLAYERS];
new Text3D:Derevobuy[2][MAX_PLAYERS];
new PetrolTanker[2];
new Linerunner[2];
new Roadtrain[2];
new bGruz[MAX_PLAYERS];
new levelDexp = 20000;
new Gruz[MAX_PLAYERS];
new Benzbuy[2] = {500,500};
new ugolbuy[2] = {400,400};
new Buyderevo[2] = {600,600};
new Sellugol[2] = {600,600};
new Sellderevo[2] = {800,800};
new Sellbenz[2] = {700,700};
new bool:DriverJob[MAX_PLAYERS];
new bool:jobcar[MAX_PLAYERS];
new MehJob[MAX_PLAYERS];
new sellzone[MAX_PLAYERS];
new Bags[MAX_PLAYERS];
new WithBag[MAX_PLAYERS];
new play[MAX_PLAYERS];
new PText[MAX_PLAYERS][256];
new zips[MAX_PLAYERS];
new player_NoCheckTimeVeh[MAX_PLAYERS];
new Float:player_VehHealth[MAX_PLAYERS];
new Float:HealthVeh[MAX_PLAYERS];
new timer2[MAX_PLAYERS];
new Float: PlayerHealth[MAX_PLAYERS];
new showhelp[MAX_PLAYERS];
new zons;
//new gmcarr;
new seans[MAX_PLAYERS];
new taxiexpp[MAX_PLAYERS];
new bool:taxipasashir[MAX_PLAYERS];
new medicss[6];
new ProposeOffer[MAX_PLAYERS];
new Krisha[MAX_PLAYERS];
new KrishaOffer[MAX_PLAYERS];
new ProposedTo[MAX_PLAYERS];
new chekmaterialslv[10];
new chekmaterialssf[3];
new addd[3];
new balonchik[MAX_PLAYERS];
new nick[MAX_PLAYERS];
new TicketOffer[MAX_PLAYERS];
new TicketMoney[MAX_PLAYERS];
new Timerkk[MAX_PLAYERS];
new Type = 2;
new enterbiz[MAX_PLAYERS];
new changenam[256];
new gSpectateID[MAX_PLAYERS];
new gSpectateType[MAX_PLAYERS];
new zvonok[MAX_PLAYERS];
new PlayerDrunk[MAX_PLAYERS];
new send[MAX_PLAYERS];
new alhambra;
new shotbur[2];
new fbimask[1];
new hitmask[1];
new cerkva[2];
new pasportstol;
new Masked[MAX_PLAYERS];
new pizza[3];
new sabrina;
new grovebar;
new jizzy;
new pigpen;
new startaddiction[MAX_PLAYERS];
new chet[MAX_PLAYERS];
new arace;
new EndingRaceRound = 1;
new RacingPlayers = 0;
new FirstRaceWinner = 999;
new PlayerRacing[MAX_PLAYERS];
new SecondRaceWinner = 999;
new ThirdRaceWinner = 999;
new PaintballPlayers = 1;
new PaintballRound = 1;
new PaintballWinner = 999;
new PaintballWinnerKills = 0;
new PlayerPaintballing[MAX_PLAYERS];
new PlayerPaintballKills[MAX_PLAYERS];
new PicCP[MAX_PLAYERS];
new Text:DRAP;
new createdvehicles[MAX_PLAYERS];
new createdvehs;
new caridhouse[MAX_PLAYERS];
new createdcar;
new VehicleNames[212][] = {
	"Landstalker","Bravura","Buffalo","Linerunner","Perrenial","Sentinel","Dumper","Firetruck","Trashmaster","Stretch","Manana","Infernus",
	"Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washington","Bobcat","Mr.Whoopee","BF Injection",
	"Hunter","Premier","Enforcer","Securicar","Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie",
	"Stallion","Rumpo","RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
	"Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Barron","RC Raider",
	"Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","Zr-350","Walton","Regina",
	"Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo","Greenwood",
	"Jetmax","Hotring","Sandking","Blista Compact","Police Maverick","Boxville","Benson","Mesa","RC Goblin","Hotring A","Hotring B",
	"Bloodring Banger","Rancher","Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","RoadTrain",
	"Nebula","Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent","Bullet","Clover",
	"Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster A",
	"Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight","Trailer",
	"Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer A","Emperor",
	"Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","Police Car","Police Car",
	"Police Car","Police Ranger","Picador","S.W.A.T.","Alpha","Phoenix","Glendale","Sadler","L Trailer A","L Trailer B",
	"Stair Trailer","Boxville","Farm Plow","U Trailer"
};
new JobCarTime[MAX_PLAYERS];
new sellgun;
new sellgun1;
new sellgun2;
new sellgun3;
new sellgun4;
new PEfir[MAX_PLAYERS];
new Pefir[MAX_PLAYERS];
new bool:robhouse[MAX_PLAYERS];
new bool:robh[MAX_PLAYERS];
new TransportDuty[MAX_PLAYERS];
new TransportValue[MAX_PLAYERS];
new TransportMoney[MAX_PLAYERS];
new TransportTime[MAX_PLAYERS];
new TransportCost[MAX_PLAYERS];
new TransportDriver[MAX_PLAYERS];
new WantNickChange[MAX_PLAYERS][MAX_PLAYER_NAME];
new Float:Fuell[MAX_VEHICLES];
new HealOffer[MAX_PLAYERS];
new HealPrice[MAX_PLAYERS];
new healpricls = 10;
new healpricsf = 10;
new healpriclv = 10;
new smspricesf = 50;
new smspricels = 50;
new smspricelv = 50;
new smssf = 0;
new smsls = 0;
new smslv = 0;
new gcontract[MAX_PLAYERS];
new cenabenza[MAX_PLAYERS];
new Text3D:DLabels[49];
new Text3D:taxi3d[MAX_VEHICLES];
new Text3D:Meh3d[MAX_VEHICLES];
new keys[MAX_PLAYERS];
new PCash[MAX_PLAYERS];
new DrugOffer[MAX_PLAYERS];
new DrugPrice[MAX_PLAYERS];
new DrugGramm[MAX_PLAYERS];
new HotdogOffer[MAX_PLAYERS];
new ZoneOffer[MAX_PLAYERS];
new ZonePrice[MAX_PLAYERS];
new HotdogPrice[MAX_PLAYERS];
new FreeOffer[MAX_PLAYERS];
new SposobOffer[MAX_PLAYERS];
new FreePrice[MAX_PLAYERS];
new cbjstore[128];
new TakingLesson[MAX_PLAYERS];
new Menu:ChoseSkin;
new Menu:bomj[2];
new Menu:skinshopmagaz[2];
new useguns[MAX_PLAYERS];
new usegruz[MAX_PLAYERS];
new clearanim[MAX_PLAYERS];
new ChosenPlayer[MAX_PLAYERS];
new IsLocked[MAX_VEHICLES];
new bool:Works[MAX_PLAYERS];
new JobCP[MAX_PLAYERS];
new GruzCP[MAX_PLAYERS];
new usemats[MAX_PLAYERS];
new JobAmmount[MAX_PLAYERS];
new OldSkin[MAX_PLAYERS];
new JobOffer[MAX_PLAYERS];
new Employer[MAX_PLAYERS];
new bool:EngineState[MAX_PLAYERS];
new Float:Armour[MAX_PLAYERS];
new dostup[MAX_PLAYERS];
new forma[MAX_PLAYERS];
new proverkaforma[MAX_PLAYERS];
new Army[3];
new TieTime[MAX_PLAYERS];
new Rekl[MAX_PLAYERS];
new Dostup[MAX_PLAYERS];
new keyip[MAX_PLAYERS];
new WantedTime[MAX_PLAYERS];
new Tazer[MAX_PLAYERS];
new TazerTime[MAX_PLAYERS];
new strR[255][255];
new CreatedCars[100];
new CreatedCar = 0;
new WatchingTV[MAX_PLAYERS];
new PlayerStoned[MAX_PLAYERS];
new Medics = 0;
new MedicCall = 999;
new MedicCallTime[MAX_PLAYERS];
new Police = 0;
new PoliceCall = 999;
new PoliceCallTime[MAX_PLAYERS];
new Mechanics = 0;
new MechanicCall = 999;
new MechanicCallTime[MAX_PLAYERS];
new TaxiDrivers = 0;
new TaxiCall = 999;
new TaxiCallTime[MAX_PLAYERS];
new SpawnChange[MAX_PLAYERS];
new PlayerTied[MAX_PLAYERS];
new PlayerCuffed[MAX_PLAYERS];
new PlayerCuffedTime[MAX_PLAYERS];
new LiveOffer[MAX_PLAYERS];
new LiveOfferls[MAX_PLAYERS];
new LiveOfferlv[MAX_PLAYERS];
new TalkingLive[MAX_PLAYERS];
new TalkingLivels[MAX_PLAYERS];
new TalkingLivelv[MAX_PLAYERS];
new TalkingLivesfa[MAX_PLAYERS];
new TalkingLivelsa[MAX_PLAYERS];
new TalkingLivelva[MAX_PLAYERS];
new SelectChar[MAX_PLAYERS];
new SelectCharID[MAX_PLAYERS];
new SelectCharPlace[MAX_PLAYERS];
new CharPrice[MAX_PLAYERS];
new ChosenSkin[MAX_PLAYERS];
new InviteSkin[MAX_PLAYERS];
new CP[MAX_PLAYERS];
new RaceCP[MAX_PLAYERS];
new RepairOffer[MAX_PLAYERS];
new RepairPrice[MAX_PLAYERS];
new RefillOffer[MAX_PLAYERS];
new RefillPrice[MAX_PLAYERS];
new RepairCar[MAX_PLAYERS];
new HouseOffer[MAX_PLAYERS];
new CarOffer[MAX_PLAYERS];
new CarPrice[MAX_PLAYERS];
new HousePrice[MAX_PLAYERS];
new WantedPoints[MAX_PLAYERS];
new WantedLevel[MAX_PLAYERS];
new gPlayerCheckpointStatus[MAX_PLAYERS];
new gPlayerLogged[MAX_PLAYERS];
new gPlayerLogTries[MAX_PLAYERS];
new gPlayerSpawned[MAX_PLAYERS];
new gOoc[MAX_PLAYERS];
new gNews[MAX_PLAYERS];
new lNews[MAX_PLAYERS];
new LvNews[MAX_PLAYERS];
new gLogin[MAX_PLAYERS];
new NotLogin[MAX_PLAYERS];
new gFam[MAX_PLAYERS];
new BigEar[MAX_PLAYERS];
new SafeTime[MAX_PLAYERS];
new PhoneOnline[MAX_PLAYERS];
new gDice[MAX_PLAYERS];
new Mobile[MAX_PLAYERS];
new Tel[MAX_PLAYERS];
new RingTone[MAX_PLAYERS];
//new CallCost[MAX_PLAYERS];
new bool:gPlayerAccount[MAX_PLAYERS];
new gCarLock[MAX_VEHICLES];
new noooc = 1;
new dchat = 1;
new dtimer = 30000;
new ghour = 0;
new gminute = 0;
new gsecond = 0;
new realtime = 1;
new wtime = 15;
new realchat = 1;
new timeshift = 0;
new shifthour;
new levelexp = 1;
//new cchargetime = 60;
new MatsArmyCar[MAX_PLAYERS];
new VertMats[MAX_PLAYERS];
new VertMatslsa[MAX_PLAYERS];
new vertmatbi = 0;
new vertmatbilsa = 0;
new armmatbi = 100000;
new armmatsf = 50000;
new lspdmatbi = 50000;
new sfpdmats = 50000;
new lvpdmats = 50000;
new fbimats = 50000;
new yakuzamats = 50000;
new rmmats = 50000;
new lcnmats = 50000;
new ssmcmatbi = 50000;
new hamcmatbi = 50000;
new omcmatbi = 50000;
new wmcmatbi = 50000;
new hwmcmatbi = 50000;
new fsmcmatbi = 50000;
new vmcmatbi = 50000;
new pmcmatbi = 50000;
new mmcmatbi = 50000;
new bmcmatbi = 50000;
new rifamatbi = 50000; // БАНДЫ
new ballasmatbi = 50000;
new groovmatbi = 50000;
new vagosmatbi = 50000;
new aztekmatbi = 50000; // БАНДЫ
new rifanarko = 3000;
new ballasnarko = 3000;
new groovnarko = 3000;
new vagosnarko = 3000;
new azteknarko = 3000;// НАРКОТА
new lsamatbi = 50000;
new lsamaterials;
new lsaammo;
new lsacarvertexit[MAX_PLAYERS];
new pickups;
new Float:TelePos[MAX_PLAYERS][6];
new legalmods[48][22] = {
	{400, 1024,1021,1020,1019,1018,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{401, 1145,1144,1143,1142,1020,1019,1017,1013,1007,1006,1005,1004,1003,1001,0000,0000,0000,0000},
	{404, 1021,1020,1019,1017,1016,1013,1007,1002,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{405, 1023,1021,1020,1019,1018,1014,1001,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{410, 1024,1023,1021,1020,1019,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{415, 1023,1019,1018,1017,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{418, 1021,1020,1016,1006,1002,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{420, 1021,1019,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{421, 1023,1021,1020,1019,1018,1016,1014,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{422, 1021,1020,1019,1017,1013,1007,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{426, 1021,1019,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{436, 1022,1021,1020,1019,1017,1013,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{439, 1145,1144,1143,1142,1023,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{477, 1021,1020,1019,1018,1017,1007,1006,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{478, 1024,1022,1021,1020,1013,1012,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{489, 1024,1020,1019,1018,1016,1013,1006,1005,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{491, 1145,1144,1143,1142,1023,1021,1020,1019,1018,1017,1014,1007,1003,0000,0000,0000,0000,0000},
	{492, 1016,1006,1005,1004,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{496, 1143,1142,1023,1020,1019,1017,1011,1007,1006,1003,1002,1001,0000,0000,0000,0000,0000,0000},
	{500, 1024,1021,1020,1019,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{516, 1021,1020,1019,1018,1017,1016,1015,1007,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{517, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1016,1007,1003,1002,0000,0000,0000,0000,0000},
	{518, 1145,1144,1143,1142,1023,1020,1018,1017,1013,1007,1006,1005,1003,1001,0000,0000,0000,0000},
	{527, 1021,1020,1018,1017,1015,1014,1007,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{529, 1023,1020,1019,1018,1017,1012,1011,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000},
	{534, 1185,1180,1179,1178,1127,1126,1125,1124,1123,1122,1106,1101,1100,0000,0000,0000,0000,0000},
	{535, 1121,1120,1119,1118,1117,1116,1115,1114,1113,1110,1109,0000,0000,0000,0000,0000,0000,0000},
	{536, 1184,1183,1182,1181,1128,1108,1107,1105,1104,1103,0000,0000,0000,0000,0000,0000,0000,0000},
	{540, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1004,1001,0000,0000,0000,0000},
	{542, 1145,1144,1021,1020,1019,1018,1015,1014,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{546, 1145,1144,1143,1142,1024,1023,1019,1018,1017,1007,1006,1004,1002,1001,0000,0000,0000,0000},
	{547, 1143,1142,1021,1020,1019,1018,1016,1003,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{549, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1012,1011,1007,1003,1001,0000,0000,0000,0000},
	{550, 1145,1144,1143,1142,1023,1020,1019,1018,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000},
	{551, 1023,1021,1020,1019,1018,1016,1006,1005,1003,1002,0000,0000,0000,0000,0000,0000,0000,0000},
	{558, 1168,1167,1166,1165,1164,1163,1095,1094,1093,1092,1091,1090,1089,1088,0000,0000,0000,0000},
	{559, 1173,1162,1161,1160,1159,1158,1072,1071,1070,1069,1068,1067,1066,1065,0000,0000,0000,0000},
	{560, 1170,1169,1141,1140,1139,1138,1033,1032,1031,1030,1029,1028,1027,1026,0000,0000,0000,0000},
	{561, 1157,1156,1155,1154,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1031,1030,1027,1026},
	{562, 1172,1171,1149,1148,1147,1146,1041,1040,1039,1038,1037,1036,1035,1034,0000,0000,0000,0000},
	{565, 1153,1152,1151,1150,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,0000,0000,0000,0000},
	{567, 1189,1188,1187,1186,1133,1132,1131,1130,1129,1102,0000,0000,0000,0000,0000,0000,0000,0000},
	{575, 1177,1176,1175,1174,1099,1044,1043,1042,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{576, 1193,1192,1191,1190,1137,1136,1135,1134,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{580, 1023,1020,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{589, 1145,1144,1024,1020,1018,1017,1016,1013,1007,1006,1005,1004,1000,0000,0000,0000,0000,0000},
	{600, 1022,1020,1018,1017,1013,1007,1006,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{603, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000}
};
new benzovoz[10], comptruck[9];
new matsfuravagos[1], matsfuragrove[1], matsfuraactek[1], matsfurarifa[1], matsfura[1];
new lsnewscar[6], lvnewscar[6], lvpdcar[17];
new liccar[10], hotdogcar[9], taxicar[13], mehanik[23], medicsls[6], medicslv[8],avtcar[28],arcar[5];
new sapdcar[27], fbicar[9],cnncar[5],sfpdcar[29],medmav,mavlic,cnnmav,armycarsf[21], yakcar[14],ruscar[16],govcar[5], lcncar[12],medicssf[8], armcar[43], hitcar[28], gunscar[NUMBER_OF_ARMYTRUCKS], grovecar[7], ballascar[8], coronoscar[4], vagoscar[8],rifacar[11];
new arenda[MAX_PLAYERS];
new vertolet;
new lsacar[16], lsacarvert[1];
new mysti;
new dice;
new casino;
new paint[3];
new paintguns[9];
new shop[6];
new victim[2];
new sportroom[2];
new racepic[2];
new ammonac[6];
new lspic[3];
new lvpic[2];
new rmpic[2];
new carjackpic[5];
new ugoncar[MAX_PLAYERS];
new bool: RobbingCar[MAX_PLAYERS];
new zonapoiska[MAX_PLAYERS];
new addictionenter;
new addictionexit;
new lcnpic[2];
new yakuzapic[2];
new sfnewspic[4];
new SDA;
new fracgunpic[4];
new mayorpic[1];
new infpic;
new fbi[2];
new lspd[6];
new sfpd[5];
new lvpd[7];
new armijavhod;
new magazmts[2];
new armijavihod;
new lspdpvhod;
new lspdpvihod;
new sfpdpvhod;
new sfpdpvihod;
new lvpdpvhod;
new lvpdpvihod;
new avtosh[4];
new hallexit;
new hallenter[1];
new bankpic[2];
new ballasenter[2];
new rifaenter[2];
new lilprobeinn;
new vagospic[2];
new aztecpic[2];
new grove[2];
new clothes,cashs;
new mushroom[53];
new skinshop[4];
new gunarm[2];
new zip[2];
new zone[2];
new warehousearmy[4];
new Float:PlayerArmor[MAX_PLAYERS];
new afkto[MAX_PLAYERS];
enum SavePlayerPosEnum
{
    Float:LastX,
    Float:LastY,
    Float:LastZ
}
enum nInfo
{
   	nLcn,
	nYakuza,
	nRm
};
enum fInfo
{
   	fLsnews,
	fSfnews,
	fLvnews,
	fBallas,
	fVagos,
	fGrove,
	fAztek,
	fRifa,
 	fKazna,
 	fSsmc,
 	fHamc,
 	fOmc,
	fWmc,
	fHwmc,
	fFsmc,
	fPmc,
	fMmc,
	fVmc,
	fBmc
};
new MafiaBank[1][nInfo];
new FracBank[1][fInfo];
enum bInfo
{
    bOwned,
	bOwner[64],
	bMessage[128],
	bExtortion[MAX_PLAYER_NAME],
	Float:bEntranceX,
	Float:bEntranceY,
	Float:bEntranceZ,
	Float:bExitX,
	Float:bExitY,
	Float:bExitZ,
	bBuyPrice,
	bEntranceCost,
	bTill,
	bLocked,
	bInterior,
	bProducts,
	bMaxProducts,
	bPriceProd,
	Text3D: bLabel,
	b2Till,
	bPrice,
	Float:bBarX,
	Float:bBarY,
	Float:bBarZ,
	bMafia,
	bCapture
};
new BizzInfo[19][bInfo];
enum sbInfo
{
	sbOwned,
	sbOwner[64],
	sbMessage[128],
	Float:sbEntranceX,
	Float:sbEntranceY,
	Float:sbEntranceZ,
	sbLevelNeeded,
	sbBuyPrice,
	sbEntranceCost,
	sbPrice,
	sbTill,
	s2bTill,
	sbLocked,
	sbInterior,
	sbProducts,
	sbMafia,
	sbPriceProd,
	Text3D: sbLabel
};
enum abInfo
{
	abOwned,
	abOwner[64],
	abMessage[128],
	Float:abEntranceX,
	Float:abEntranceY,
	Float:abEntranceZ,
	Float:aExitX,
	Float:aExitY,
	Float:aExitZ,
	abBuyPrice,
	abWorld,
	abLocked,
	abInterior,
	abPrice,
	abArenda,
	abTill,
	Text3D: abLabel,
	Float:picX,
	Float:picY,
	Float:picZ,
	abZp,
	Rab,
	Poset,
	Mesto
};
new SBizzInfo[11][sbInfo];
//=========================== Public's =========================================
stock IsVehicleOccupied(vehicleid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
        if(IsPlayerInVehicle(i,vehicleid)) return true;
    }
    return false;
}
stock LoadBankMafia()
{
	new iniFile = ini_openFile("gamefiles/LoadBankMafia.cfg");
	ini_getInteger(iniFile, "MafiaBank[0][nLcn]",MafiaBank[0][nLcn]);
	ini_getInteger(iniFile, "MafiaBank[0][nYakuza]",MafiaBank[0][nYakuza]);
	ini_getInteger(iniFile, "MafiaBank[0][nRm]",MafiaBank[0][nRm]);
	ini_closeFile(iniFile);
	return true;
}
stock LoadBankFrac()
{
	new iniFile = ini_openFile("gamefiles/FracBank.cfg");
	ini_getInteger(iniFile, "FracBank[0][fLsnews]",FracBank[0][fLsnews]);
	ini_getInteger(iniFile, "FracBank[0][fSfnews]",FracBank[0][fSfnews]);
	ini_getInteger(iniFile, "FracBank[0][fLvnews]",FracBank[0][fLvnews]);
	ini_getInteger(iniFile, "FracBank[0][fBallas]",FracBank[0][fBallas]);
	ini_getInteger(iniFile, "FracBank[0][fVagos]",FracBank[0][fVagos]);
	ini_getInteger(iniFile, "FracBank[0][fGrove]",FracBank[0][fGrove]);
	ini_getInteger(iniFile, "FracBank[0][fAztek]",FracBank[0][fAztek]);
	ini_getInteger(iniFile, "FracBank[0][fRifa]",FracBank[0][fRifa]);
	ini_getInteger(iniFile, "FracBank[0][fKazna]",FracBank[0][fKazna]);
	ini_getInteger(iniFile, "FracBank[0][fSsmc]",FracBank[0][fSsmc]);
	ini_getInteger(iniFile, "FracBank[0][fHamc]",FracBank[0][fHamc]);
	ini_getInteger(iniFile, "FracBank[0][fOmc]",FracBank[0][fOmc]);
	ini_getInteger(iniFile, "FracBank[0][fWmc]",FracBank[0][fWmc]);
	ini_getInteger(iniFile, "FracBank[0][fHwmc]",FracBank[0][fHwmc]);
	ini_getInteger(iniFile, "FracBank[0][fFsmc]",FracBank[0][fFsmc]);
	ini_getInteger(iniFile, "FracBank[0][fPmc]",FracBank[0][fPmc]);
	ini_getInteger(iniFile, "FracBank[0][fMmc]",FracBank[0][fMmc]);
	ini_getInteger(iniFile, "FracBank[0][fVmc]",FracBank[0][fVmc]);
	ini_getInteger(iniFile, "FracBank[0][fBmc]",FracBank[0][fBmc]);
	ini_closeFile(iniFile);
	return true;
}
stock LoadMaterials()
{
	new time = GetTickCount();
	new iniFile = ini_openFile("gamefiles/materials.ini");
	ini_getInteger(iniFile, "lsamatbi",lsamatbi);
	ini_getInteger(iniFile, "armmatbi",armmatbi);
	ini_getInteger(iniFile, "armmatsf",armmatsf);
	ini_getInteger(iniFile, "ssmcmatbi",ssmcmatbi);
	ini_getInteger(iniFile, "hamcmatbi",hamcmatbi);
	ini_getInteger(iniFile, "omcmatbi",omcmatbi);
	ini_getInteger(iniFile, "wmcmatbi",wmcmatbi);
	ini_getInteger(iniFile, "hwmcmatbi",hwmcmatbi);
	ini_getInteger(iniFile, "fsmcmatbi",fsmcmatbi);
	ini_getInteger(iniFile, "vmcmatbi",vmcmatbi);
	ini_getInteger(iniFile, "pmmcmatbi",pmcmatbi);
	ini_getInteger(iniFile, "mmcmatbi",mmcmatbi);
	ini_getInteger(iniFile, "bmcmatbi",bmcmatbi);
	ini_getInteger(iniFile, "rifamatbi",rifamatbi); // БАНДЫ
	ini_getInteger(iniFile, "ballasmatbi",ballasmatbi);
	ini_getInteger(iniFile, "aztekmatbi",aztekmatbi);
	ini_getInteger(iniFile, "vagosmatbi",vagosmatbi);
	ini_getInteger(iniFile, "groovmatbi",groovmatbi); // ------
	ini_getInteger(iniFile, "rifanarko",rifanarko);
	ini_getInteger(iniFile, "ballasnarko",ballasnarko);
	ini_getInteger(iniFile, "azteknarko",azteknarko);
	ini_getInteger(iniFile, "vagosnarko",vagosnarko);
	ini_getInteger(iniFile, "groovnarko",groovnarko); // НАРКО
	ini_getInteger(iniFile, "lspdmatbi",lspdmatbi);
	ini_getInteger(iniFile, "fbimats",fbimats);
	ini_getInteger(iniFile, "yakuzamats",yakuzamats);
	ini_getInteger(iniFile, "rmmats",rmmats);
	ini_getInteger(iniFile, "lcnmats",lcnmats);
	ini_getInteger(iniFile, "sfpdmats",sfpdmats);
	ini_getInteger(iniFile, "lvpdmats",lvpdmats);
	ini_closeFile(iniFile);
	printf("| 	Testing 	|", GetTickCount() - time);
	return true;
}
stock SaveBankFrac()
{
	new iniFile = ini_openFile("gamefiles/FracBank.cfg");
	ini_setInteger(iniFile, "FracBank[0][fLsnews]",FracBank[0][fLsnews]);
 	ini_setInteger(iniFile, "FracBank[0][fSfnews]",FracBank[0][fSfnews]);
	ini_setInteger(iniFile, "FracBank[0][fLvnews]",FracBank[0][fLvnews]);
	ini_setInteger(iniFile, "FracBank[0][fBallas]",FracBank[0][fBallas]);
	ini_setInteger(iniFile, "FracBank[0][fVagos]",FracBank[0][fVagos]);
	ini_setInteger(iniFile, "FracBank[0][fGrove]",FracBank[0][fGrove]);
	ini_setInteger(iniFile, "FracBank[0][fAztek]",FracBank[0][fAztek]);
	ini_setInteger(iniFile, "FracBank[0][fRifa]",FracBank[0][fRifa]);
	ini_setInteger(iniFile, "FracBank[0][fKazna]",FracBank[0][fKazna]);
	ini_setInteger(iniFile, "FracBank[0][fSsmc]",FracBank[0][fSsmc]);
	ini_setInteger(iniFile, "FracBank[0][fHamc]",FracBank[0][fHamc]);
	ini_setInteger(iniFile, "FracBank[0][fOmc]",FracBank[0][fOmc]);
	ini_setInteger(iniFile, "FracBank[0][fWmc]",FracBank[0][fWmc]);
	ini_setInteger(iniFile, "FracBank[0][fHwmc]",FracBank[0][fHwmc]);
	ini_setInteger(iniFile, "FracBank[0][fFsmc]",FracBank[0][fFsmc]);
	ini_setInteger(iniFile, "FracBank[0][fPmc]",FracBank[0][fPmc]);
	ini_setInteger(iniFile, "FracBank[0][fMmc]",FracBank[0][fMmc]);
	ini_setInteger(iniFile, "FracBank[0][fVmc]",FracBank[0][fVmc]);
	ini_setInteger(iniFile, "FracBank[0][fBmc]",FracBank[0][fBmc]);
	ini_closeFile(iniFile);
	return true;
}
public AddictionTimer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		SetPlayerWeather(playerid, 10);
		AddictionsTimer[playerid] = 0;
	}
}
stock SaveBankMafia()
{
	new iniFile = ini_openFile("gamefiles/LoadBankMafia.cfg");
	ini_setInteger(iniFile, "MafiaBank[0][nLcn]",MafiaBank[0][nLcn]);
	ini_setInteger(iniFile, "MafiaBank[0][nYakuza]",MafiaBank[0][nYakuza]);
	ini_setInteger(iniFile, "MafiaBank[0][nRm]",MafiaBank[0][nRm]);
	ini_closeFile(iniFile);
	return true;
}
stock SaveMaterials()
{
	new iniFile = ini_openFile("gamefiles/materials.ini");
	ini_setInteger(iniFile, "armmatbi",armmatbi);
	ini_setInteger(iniFile, "lsamatbi",lsamatbi);
	ini_setInteger(iniFile, "armmatsf",armmatsf);
	ini_setInteger(iniFile, "ssmcmatbi",ssmcmatbi);
	ini_setInteger(iniFile, "hamcmatbi",hamcmatbi);
	ini_setInteger(iniFile, "omcmatbi",omcmatbi);
	ini_setInteger(iniFile, "wmcmatbi",wmcmatbi);
	ini_setInteger(iniFile, "hwmcmatbi",hwmcmatbi);
	ini_setInteger(iniFile, "fsmcmatbi",fsmcmatbi);
	ini_setInteger(iniFile, "vmcmatbi",vmcmatbi);
	ini_setInteger(iniFile, "pmmcmatbi",pmcmatbi);
	ini_setInteger(iniFile, "mmcmatbi",mmcmatbi);
	ini_setInteger(iniFile, "bmcmatbi",bmcmatbi);
	ini_setInteger(iniFile, "rifamatbi",rifamatbi);
	ini_setInteger(iniFile, "ballasmatbi",ballasmatbi);
	ini_setInteger(iniFile, "aztekmatbi",aztekmatbi);
	ini_setInteger(iniFile, "vagosmatbi",vagosmatbi);
	ini_setInteger(iniFile, "groovmatbi",groovmatbi);
	ini_setInteger(iniFile, "rifanarko",rifanarko);
	ini_setInteger(iniFile, "ballasnarko",ballasnarko);
	ini_setInteger(iniFile, "azteknarko",azteknarko);
	ini_setInteger(iniFile, "vagosnarko",vagosnarko);
	ini_setInteger(iniFile, "groovnarko",groovnarko); // НАРКО
	ini_setInteger(iniFile, "lspdmatbi",lspdmatbi);
	ini_setInteger(iniFile, "fbimats",fbimats);
	ini_setInteger(iniFile, "yakuzamats",yakuzamats);
	ini_setInteger(iniFile, "rmmats",rmmats);
	ini_setInteger(iniFile, "lcnmats",lcnmats);
	ini_setInteger(iniFile, "sfpdmats",sfpdmats);
	ini_setInteger(iniFile, "lvpdmats",lvpdmats);
	ini_closeFile(iniFile);
	return true;
}
public Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
enum pBoxingStats
{
    TitelName[128],
    TitelWins,
    TitelLoses
};
new Titel[pBoxingStats];
new sporthelp;
new boxform;
new boxfight[1];
new boxforma[MAX_PLAYERS];
new InRing = 0;
new RoundStarted = 0;
new BoxDelay = 0;
new Boxer1 = 255;
new Boxer2 = 255;
new TBoxer = 255;
new PlayerBoxing[MAX_PLAYERS];
new BoxOffer[MAX_PLAYERS];
new BoxWaitTime[MAX_PLAYERS];
new sportMSG[7][] = {
	{"Для включения стиля Box введите /box 1\n"},
	{"Для включения стиля боя Kick-Box введите /kickbox 1\n"},
	{"Для включения стиля Kong-Fu введите /kongfu\n"},
	{"Чтобы посмотреть свои стили введите /ms\n"},
	{"Чтобы начать тренеровку вам нужно переодется,\n"},
	{"Затем ввести команду /fgstyle\n"},
	{"Дальше сами разберетесь."}
};
new infMSG[15][] = {
	{"Здравствуйте, здесь вы можете купить собственный транспорт.\n"},
	{"Для того чтобы преобрести транспорт , у вас должна быть недвижемость и деньги.\n"},
	{"Без недвижемости и денег вы не сможете преобрести себе транспорт.\n"},
	{"\n"},
	{"Чтобы преобрести транспорт вам нужно:\n"},
	{"1. Пройтись и выбрать нужный вам автомобиль.\n"},
	{"2. Далее сесть в него и оформить заказ.\n"},
	{"3. После оформления заказа, вам предложат покраску,\n"},
	{"если у вас есть желание перекрасить ваш автомобиль, то соглашайтесь\n"},
	{"\n"},
	{"Первый цвет - это основной цвет автомобиля.\n"},
	{"Второй цвет - это дополнительный цвет ( полоски и т.д. )\n"},
	{"\n"},
	{"Если у вашей машины не имееться второй цвет , то просто введите случайное число.\n"},
	{"Перекраска ставится совершенно бесплатно!"}
};
new Float:gInviteSpawns[0][4] = {
{222.3489,-8.5845,1002.2109,266.7302}
};
new LessonCar[MAX_PLAYERS];
new LessonStat[MAX_PLAYERS];
new pLessonCar[MAX_PLAYERS];
enum
{
	CHECKPOINT_1,
	CHECKPOINT_2,
	CHECKPOINT_3,
	CHECKPOINT_4,
	CHECKPOINT_5,
	CHECKPOINT_6,
	CHECKPOINT_7,
	CHECKPOINT_8,
	CHECKPOINT_9,
	CHECKPOINT_10,
	CHECKPOINT_11,
	CHECKPOINT_13,
	CHECKPOINT_14,
	CHECKPOINT_15,
	CHECKPOINT_16,
	CHECKPOINT_17,
	CHECKPOINT_18,
	CHECKPOINT_19,
	CHECKPOINT_20,
	CHECKPOINT_21,
	CHECKPOINT_22,
	CHECKPOINT_23,
	CHECKPOINT_24,
	CHECKPOINT_25,
	CHECKPOINT_26,
	CHECKPOINT_27,
	CHECKPOINT_28,
	CHECKPOINT_29,
	CHECKPOINT_30,
	CHECKPOINT_31,
	CHECKPOINT_32,
	CHECKPOINT_33,
	CHECKPOINT_34,
	CHECKPOINT_35,
	CHECKPOINT_36,
	CHECKPOINT_37,
	CHECKPOINT_38,
	CHECKPOINT_40,
	CHECKPOINT_41,
	CHECKPOINT_42,
	CHECKPOINT_43,
	CHECKPOINT_44,
	CHECKPOINT_45,
	CHECKPOINT_46,
	CHECKPOINT_47,
	CHECKPOINT_48,
	CHECKPOINT_49,
	CHECKPOINT_50,
	CHECKPOINT_51,
	CHECKPOINT_52,
	CHECKPOINT_53,
	CHECKPOINT_54,
	CHECKPOINT_55,
	CHECKPOINT_56,
	CHECKPOINT_57,
	CHECKPOINT_58,
	CHECKPOINT_59,
	CHECKPOINT_60,
	CHECKPOINT_61,
	CHECKPOINT_62,
	CHECKPOINT_63,
	CHECKPOINT_64,
	CHECKPOINT_65,
	CHECKPOINT_66
}
new Float:PaintballSpawns[6][3] = {
	{-974.0219,1061.2198,1345.6737},
	{-1026.8201,1028.7501,1342.4069},
	{-1038.7615,1098.1680,1343.1399},
	{-1073.5597,1057.4336,1344.0129},
	{-1098.6887,1027.1641,1343.0199},
	{-1131.2085,1057.8127,1346.4172}
};
new Float:RaceSpawns[14][3] = {
	{34.8208,-1539.3224,5.2520},
	{34.7819,-1534.9772,5.2600},
	{35.5906,-1529.7019,5.4395},
	{35.2800,-1524.0653,5.2500},
	{40.8266,-1522.3508,5.1858},
	{43.4175,-1530.1504,5.3669},
	{43.7564,-1538.0206,5.1915},
	{51.5216,-1524.5287,5.0552},
	{51.1444,-1531.6284,5.2952},
	{50.5159,-1538.7706,5.1453},
	{61.1208,-1540.8065,5.0744},
	{62.3766,-1534.3452,5.1900},
	{63.3786,-1529.4194,4.9445},
	{64.5961,-1523.5449,4.9970}
};
new Float:race[23][3] = {
	{276.2927,-1694.4209,7.9673},
	{750.8588,-1772.0564,12.9990},
	{1099.6989,-1853.0541,13.3828},
	{1423.1998,-1872.1985,13.3828},
	{1727.4453,-1855.9081,13.4141},
	{1822.3673,-1795.0193,13.3828},
	{1824.8154,-1584.0222,13.3541},
	{1849.5154,-1345.8054,13.3575},
	{1832.5471,-1184.0055,23.6345},
	{1545.8148,-1160.2611,23.6328},
	{1357.4430,-1123.1053,23.6328},
	{1360.9656,-939.8629,34.1946},
	{1193.7095,-942.5393,42.7537},
	{925.3551,-979.4943,38.1882},
	{785.7191,-1050.6405,24.5948},
	{651.0044,-1191.9189,18.0152},
	{470.9895,-1296.7325,15.2874},
	{322.7439,-1389.0171,14.0639},
	{189.9075,-1490.2474,12.5975},
	{147.4625,-1558.0029,10.4871},
	{100.9280,-1530.9478,6.0858},
	{61.7236,-1526.3470,4.9340},
	{ }
};
new tachki[] = {402,415,429,411,541,562,560,451};
new paintgun[] = {24,31,30,25,34};
new rabotaMSG[12][] = {
	{"{FFFFFF}Здесь вы можете подработать грузчиком\n"},
	{"\n"},
	{"В здании на против, вы найдете раздевалку,\n"},
	{"А так же кассу, где Вы будете получать деньги за работу.\n\n"},
	{"\n"},
	{"Чтобы начать работу, необходимо переодеться в рабочую форму.\n"},
	{"Далее, берите в вагоне мешок, и несите его на склад.\n"},
	{"За один мешок, Вам будут платить 100 вирт.\n"},
	{"\n"},
	{"Как только вы захотите завершить рабочий день,\n"},
	{"Пройдите к кассе.\n"},
	{"\n"}
};
new pdddialogMSG[13][] = {
    {"<< 1. Общие правила >>\n\n"},
    {"Обгон транспортного средства разрешен только с левой стороны,\n"},
    {"при этом водители обязаны убедиться, что встречная полоса свободна на достаточном для обгона расстояние.\n"},
    {"При ДТП водители обязаны позвонить в полицию, и дождаться ДПС\n\n"},
    {"<< 2. Скорость движения >> \n\n"},
    {"В переделах города разрешается движение транспортных средств со скоростью не более 50 км/ч.\n"},
    {"В жилых зонах и на дворовых территориях не более 30 км/ч\n\n"},
    {"<< 3. Остановка и стоянка >>\n\n"},
    {"Остановка и стоянка транспортных средств разрешаются на правой стороне дороги на обочине.\n"},
    {"В специальных отведённых для этого местах\n\n"},
	{"<< 4. ДПС >> \n\n"},
    {"При виде автомобиля с включённой сереной, водитель обязан сбавить скорость и прижаться к обочине.\n"},
    {"Водитель обязан предъявить паспорт/лицензии, если тот попросил"}
};
enum pSpec
{
	Float:Coords[3],
	Float:sPx,
	Float:sPy,
	Float:sPz,
	sPint,
	sLocal,
	sCam
};
enum pInfo
{
	pKey[128],
	pLevel,
 	pAdmin,
 	pHelp,
 	pWdraw,
 	pAVig,
 	pPasport,
 	pPhone,
 	pPhbalance,
 	pVWarn,
 	pQuest,
 	pHeadValue,
 	pPlaceJail,
 	Float:pIp,
 	Float:pvIp,
 	Float:pIpReg,
 	pHousecash,
 	pCheckip,
 	pText,
 	pKeyip,
 	pHP,
	pSatiety,
 	pDataReg,
 	pMes,
 	pGod,
 	pCar,
 	Float:pFuelCar,
 	pProcents,
	pDonateRank,
	pDonateMoney,
	pDonateMoney1,
	pReg,
	pMaterials,
	pSex,
	pArrested,
	pMuted,
	pCrimes,
	pExp,
	pCash,
	pKills,
	pDeaths,
	pWantedDeaths,
	pPayCheck,
	pJailed,
	pCheat,
	pJailTime,
	pWins,
	pLoses,
	pCDPlayer,
	pDrugs,
	pLeader,
	pMember,
	pRank,
	pChar,
	pJob,
	pInt,
	pLocal,
	pModel,
	pPnumber,
	pPhoneBook,
	pDirectory,
	pVhoddata,
	pVhodMes,
	pVhodchas,
	pVhodminute,
	pCarLic,
    pFlyLic,
	pBoatLic,
	pFishLic,
	pGunLic,
	pBisLic,
	pNkeys,
	pPHousekey,
	pPBiskey,
	pLabiding,
	pAddiction,
	pPayDay,
	pPayDayHad,
 	pTut,
	pWarns,
	punWarns,
	punWarnstime,
	pFuel,
	pMarried,
	pMarriedTo[128],
	pDrug[128],
	pMushrooms,
	pTicket,
	pTicketNr[3],
	pTicketWin,
	pRadio,
	pFishes,
	pFriendMoney,
	pMuteTime,
	pBank,
	pKazpay,
	pDonateAccount,
	pDostup[128],
	pLocked,
	pDebt,
	pMafiaRoof,
	pUseMafiaRoof,
	pWantedLevel,
	pAntiCheat,
	pSlot[13],
	pSlotammo[13],
	pGunSkill[6],
	pTaxiExp,
	pTaxiLvl,
	pCarRobbingExp,
	pAdvertTime,
	pAdvertTime1,
	pBoxstyle,
	pKstyle,
	pKickstyle,
  	pBoxSkill,
  	pKongfuSkill,
  	pKickboxSkill,
  	pDLevel,
    pDExp,
    pDMgruz,
    pDgruz,
  	pWheels,
  	pPaintJob,
  	pSpoiler,
  	pBumper1,
  	pBumper2,
  	pYubki,
	pYubki2,
	pVih,
	pVozd,
	pColor,
	pColor1,
  	pNitro,
  	pHydrawlic
};
enum exInfo // Антиреконект
{
    ExitName[MAX_PLAYER_NAME],
    ExitTime,
};
new ExitInfo[MAX_PLAYERS][exInfo]; //
new PlayerInfo[MAX_PLAYERS][pInfo];
enum hInfo
{
	Float:hEntrancex,
	Float:hEntrancey,
	Float:hEntrancez,
	Float:hExitx,
	Float:hExity,
	Float:hExitz,
	Float:hCarx,
	Float:hCary,
	Float:hCarz,
	Float:hCarc,
	hOwner[MAX_PLAYER_NAME],
	hValue,
	hHel,
	hInt,
	hLock,
	hOwned,
	hTakings,
 	hDate,
	hKlass,
	hVec,
	hVcol1,
	hVcol2,
	hPickup,
	hMIcon,
	hVehSost
};
new HouseInfo[801][hInfo];
enum pHaul
{
	pLoad
};
enum sHaul
{
	sLoad
};
enum pMatss
{
	gBallas,
	gVagos,
	gGrove,
	gAztek,
	gRifa
};
new Furi[1][pMatss];
enum pMat
{
	mCapasity,
	mLoad
};
new MatHaul[NUMBER_OF_ARMYTRUCKS][pMat];
new PlayerHaul[18][pHaul];
new PlayersHaul[10][sHaul];
enum pCrime
{
	pBplayer[32],
	pAccusing[32],
	pAccusedof[32],
	pVictim[32]
};
new PlayerCrime[MAX_PLAYERS][pCrime];
new JoinPed[106][1] = {
	{280},//LSPD1 0
	{281},//LSPD2 2
	{282},//LSPD3 3
	{283},//LSPD4 4
	{284},//LSPD5 5
	{285},//LSPD6 6
	{288},//LSPD7 7
	{76},//LSPD8 8
	//============
	{286},//FBI1 9
	{163},//FBI2 10
	{164},//FBI3 11
	{165},//FBI4 12
	{166},//FBI5 13
	{141},//FBI6 14
	//============
	{287},//ArmySF1 15
	{191},//ArmySF2 16
	//============
	{70},//Mediks1 17
	{274},//Mediks2 18
	{275},//Mediks3 19
	{276},//Mediks4 20
	{219},//Mediks5 21
	//============
	{223},//LCN1 22
	{124},//LCN2 23
	{113},//LCN3 24
	{214},//LCN4 25
	//============
	{120},//YAKUZA1 26
	{123},//YAKUZA3 27
	{169},//YAKUZA2 28
	{186},//YAKUZA4 29
	//============
	{57},//Goverment1 30
	{150},//Goverment2 31
	{98},//Goverment3 32
	{187},//Goverment4 33
	{147},//Goverment5 36
	//============
	{280},//SFPD1 37
	{281},//SFPD2 38
	{282},//SFPD3 39
	{283},//SFPD4 40
	{284},//SFPD5 41
	{285},//SFPD6 42
	{288},//SFPD7 43
	{76},//SFPD8 44
	//===========
	{250},//SFNEWS1 45
	{261},//SFNEWS2 46
	{211},//SFNEWS3 47
	{217},//SFNEWS4 48
	//===========
	{171},//Casino1 49
	{11},//Casino2 50
	//===========
	{59},//Instructors1 51
	{172},//Instructors2 52
	{189},//Instructors3 53
	{240},//Instructors4 54
	//==========
	{280},//LVPD1 55
	{281},//LVPD2 56
	{282},//LVPD3 57
	{283},//LVPD4 58
	{284},//LVPD5 59
	{285},//LVPD6 60
	{288},//LVPD7 61
	{76},//LVPD8 62
	//==========
	{112},//RussianMafia1 63
	{111},//RussianMafia2 64
	{125},//RussianMafia4 65
	{272},//RussianMafia3 66
	{214},//RussianMafia5 67
	//==========
	{105},//GROVE1 68
	{106},//GROVE2 69
	{107},//GROVE3 70
	{269},//GROVE4 71
	{270},//GROVE5 72
	{271},//GROVE6 73
	//==========
	{114},//Aztecas1 74
	{115},//Aztecas2 75
	{116},//Aztecas3 76
	//==========
	{102},//BALLAS1 77
	{103},//BALLAS2 78
	{104},//BALLAS3 79
	//==========
	{173},//RIFA1 80
	{174},//RIFA2 81
	{175},//RIFA3 82
	//==========
	{108},//VAGOS1 83
	{109},//VAGOS2 84
	{110},//VAGOS3 85
	//==========
	{287},//ArmyLV1 86
	{191},//ArmyLV2 87
	//==========
	{250},//LSNEWS1 88
	{261},//LSNEWS2 89
	{211},//LSNEWS3 90
	{217},//LSNEWS4 91
	//==========
	{287},//PED1 92
	{287},//PED2 93
	{191},//PED3 94
	{287},//PED4 95
	{287},//PED5 96
	{191},//PED6 97
	{287},//PED7 98
	{200},//PED8 99
	{230},//PED9 100
	{137},//PED10 101
	{212},//PED11 102
	{79},//PED12 103
	{78},//PED13 104
	{96},//PED14 105
	{90},//PED15 106
	{55},//PED16 107
	{294}// ХИТМАН
};
new FishNamesNumber = 22;
new FishNames[22][20] = {
	{"Куртку"},
	{"Амберджека"},
	{"Морского окуня"},
	{"Люциана"},
	{"Штаны"},
	{"Форель"},
	{"Голубого Марилина"},
	{"Ключи"},
	{"Скумбрию"},
	{"Морского окуня"},
	{"Ботинки"},
	{"Щуку"},
	{"Рыбу Парус"},
	{"Мусор"},
	{"Тунца"},
	{"Ель"},
	{"Дельфина"},
	{"Окулу"},
	{"Черепаху"},
	{"Сома"},
	{"Мешок с деньгами"},
	{"Рыбу-Меч"}
};
enum pFishing
{
	pFish1[20]
};
new Fishes[MAX_PLAYERS][pFishing];
stock NoTax(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    new job = PlayerInfo[playerid][pJob];
	    new krish = PlayerInfo[playerid][pMafiaRoof];
	    if(member == 5 || member == 6 || member == 12 || member==13 || member == 14|| member == 15|| member == 17 || member == 18 || member == 23 || member == 24 || member == 25 || member == 26 || member == 27 || member == 28 || member == 29 || member == 30 || member == 31 || member == 32)
		{
		    return true;
		}
	    if(leader == 5 || leader == 6 || leader == 12 || leader==13 || leader == 14|| leader == 15|| leader == 17 || leader == 18 || leader == 23 || leader == 24 || leader == 25 || leader == 26 || leader == 27 || leader == 28 || leader == 29 || leader == 30 || leader == 31 || leader == 32)
		{
		    return true;
		}
		if(member == 0 && job == 0)
		{
		    return true;
		}
		if(member == 0 && krish > 0)
		{
			return true;
		}
	}
	return false;
}
stock IsAMafia(playerid)// IsAMafia(playerid) IsAGang(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member == 5 || member == 6 || member == 14)
		{
		    return true;
		}
		if(leader == 5 || leader == 6 || leader == 14)
		{
		    return true;
		}
	}
	return false; // 9 16 20
}
stock IsANews(playerid)// IsAMafia(playerid) IsAGang(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member == 9 || member == 16 || member == 20)
		{
		    return true;
		}
		if(leader == 9 || leader == 16 || leader == 20)
		{
		    return true;
		}
	}
	return false; // 9 16 20
}
stock IsAGang(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==12 || member==13 || member==15 || member==17 || member==18)
		{
		    return true;
		}
		if(leader==12 || leader==13 || leader==15 || leader==17 || leader==18)
		{
		    return true;
		}
	}
	return false;
}
new Peds[42][1] = {
	{96},{184},{101},{259},
	{67},{15},{73},{242},{23},
	{29},{7},{18},{249},{122},{20},{19},{185},
	{82},{83},{84},{299},{22},{17},{297},{28},{228},{21},
	{126},{294},{46},{296},{293},{193},{190},{93},
	{169},{216},{12},{214},{91},{141},{233}
};
stock PrintSBizInfo(playerid,targetid)
{
	if(IsPlayerConnected(playerid))
	{
		new elektrich = SBizzInfo[targetid][sbBuyPrice] / 1000;
		new mafiatext[20];
		if(SBizzInfo[targetid][sbMafia] == 6) { mafiatext = "Yakuza"; }
		else if(SBizzInfo[targetid][sbMafia] == 14) { mafiatext = "RM"; }
		else if(SBizzInfo[targetid][sbMafia] == 5) { mafiatext = "LCN"; }
		else if(SBizzInfo[targetid][sbMafia] == 0) { mafiatext = "Нет"; }
		new text1[20],text2[20];
		if(SBizzInfo[targetid][sbLocked]) { text1 = "Закрыт"; } else { text1 = "Открыт"; }
		if(PlayerInfo[playerid][pBisLic]) { text2 = "Есть"; } else { text2 = "Отсутсвует"; }
		new bizinfo[512];
		format(bizinfo,sizeof(bizinfo), "======================[ %s ]======================\nПод контролем: %s\nВсего заработано: %d вирт\t\nВ этом часу заработано: %d вирт\nПродуктов: %d/20000\nЦена за товар: %d вирт\nЦена входа: %d вирт\nСостояние: %s\nБаланс банка для оплаты энергии: %d вирт\nНалог за электроэнергию: %d вирт\nЛицензия: %s",
		SBizzInfo[targetid][sbMessage],mafiatext,SBizzInfo[targetid][sbTill],SBizzInfo[targetid][s2bTill],SBizzInfo[targetid][sbProducts],SBizzInfo[targetid][sbPrice],SBizzInfo[targetid][sbPriceProd],text1,SBizzInfo[targetid][sbTill],elektrich,text2);
		ShowPlayerDialog(playerid,10349,DIALOG_STYLE_MSGBOX, "Cостояние бизнеса",bizinfo, "$", "$");
	}
}
forward AntiCheatTimer(playerid);
public AntiCheatTimer(playerid)
{
	new Float:PoX,Float:PoY,Float:PoZ;
	if(!IsPlayerInAnyVehicle(playerid)) GetPlayerPos(playerid,PoX,PoY,PoZ);
	else GetVehiclePos(GetPlayerVehicleID(playerid),PoX,PoY,PoZ);
	new sendername[MAX_PLAYER_NAME];
	GetPlayerName(playerid,sendername,sizeof(sendername));
    if(GetPVarFloat(playerid,"PosX") != 0.0 && GetPVarFloat(playerid,"PosY") != 0.0 && GetPlayerState(playerid) != PLAYER_STATE_SPECTATING && GetPVarInt(playerid,"Anti_AirFly") < gettime() && !PlayerInfo[playerid][pAdmin])
    {
		new
			string[140],
			Float:xdist = PoX-GetPVarFloat(playerid,"PosX"),
			Float:ydist = PoY-GetPVarFloat(playerid,"PosY"),
		 	Float:sqxdist = xdist*xdist,
			Float:sqydist = ydist*ydist,
			Float:distance = (sqxdist+sqydist)/31;

		if(!IsPlayerInAnyVehicle(playerid))
		{
			if(distance < 2000 && distance > 100)
			{
			    if(GetPVarInt(playerid, "Fly228") > gettime()) { return 0; }
				format(string, 90, "-<WARNING> %s[%d]: возможно использует CoordHack! Дистанция: %.1f.",sendername,playerid,distance);
				ABroadCast(0xff0000ff, string, 1);
				SetPVarInt(playerid, "Fly228", gettime()+30);
			}
			else if(distance > 2000)
			{
			    if(GetPVarInt(playerid, "Fly229") > gettime()) { return 0; }
				format(string, 90, "-<WARNING> %s[%d]: возможно использует CoordHack! Дистанция: %.1f.",sendername,playerid,distance);
				ABroadCast(0xff0000ff, string, 1);
				SetPVarInt(playerid, "Fly229", gettime()+30);
			}
		}
		else if(distance > 300 && !IsAPlane(GetPlayerVehicleID(playerid))) format(string, 90, "-<WARNING> %s[%d]: возможно использует CoordHack!. Дистанция: %.1f.",sendername,playerid,distance),ABroadCast(0xff0000ff, string, 1);
	}
	SetPVarFloat(playerid,"PosX",PoX);
	SetPVarFloat(playerid,"PosY",PoY);
	return true;
}
forward AFKSystem();
public AFKSystem()
{
	for(new playerid;playerid < MAX_PLAYERS;playerid++)
	{
		if(IsPlayerConnected(playerid))
		{
			if(plafk[playerid] == 0) plafk[playerid] -= 1;
			else if(plafk[playerid] == -1)
			{
				plafk[playerid] = 1;
				new string[128];
				format(string, sizeof(string), "Отсутствует: [ %d / 600]",plafk[playerid]);
				SetPlayerChatBubble(playerid, string, COLOR_YELLOW, 10.0, 70000000);
			}
			else if(plafk[playerid] > 0)
			{
			    new string[255];
				plafk[playerid] += 1;
				format(string, sizeof(string), "Отсутствует: [ %d / 600]", plafk[playerid]);
				SetPlayerChatBubble(playerid, string, COLOR_YELLOW, 10.0, 70000000);
			}
		}
	}
}
stock ConvertSeconds(time)
{
	new string[128];
	if(time < 60) format(string, sizeof(string), "%d секунд", time);
	else if(time == 60) string = "1 минуту";
	else if(time > 60 && time < 3600)
	{
		new Float: minutes;
		new seconds;
		minutes = time / 60;
		seconds = time % 60;
		format(string, sizeof(string), "%.0f минут и %d секунд", minutes, seconds);
	}
	else if(time == 3600) string = "1 час";
	else if(time > 3600)
	{
		new Float: hours;
		new minutes_int;
		new Float: minutes;
		new seconds;
		hours = time / 3600;
		minutes_int = time % 3600;
		minutes = minutes_int / 60;
		seconds = minutes_int % 60;
		format(string, sizeof(string), "%.0f:%.0f:%d", hours, minutes, seconds);
	}
	return string;
}
stock PrintBizInfo(playerid,targetid)
{
    if(IsPlayerConnected(playerid))
	{
		for(new h = 0; h < sizeof(BizzInfo); h++)
        {
	        new mafiatext[20];
	        if(BizzInfo[targetid][bMafia] == 6) { mafiatext = "Yakuza"; }
			else if(BizzInfo[targetid][bMafia] == 14) { mafiatext = "RM"; }
			else if(BizzInfo[targetid][bMafia] == 5) { mafiatext = "LCN"; }
			else if(BizzInfo[targetid][bMafia] == 0) { mafiatext = "Нет"; }
			new elektrich = BizzInfo[targetid][bBuyPrice] / 1000;
			new text1[20],text2[20];
	 		if(BizzInfo[targetid][bLocked]) { text1 = "Закрыт"; } else { text1 = "Открыт"; }
	  		if(PlayerInfo[playerid][pBisLic]) { text2 = "Есть"; } else { text2 = "Отсутсвует"; }
	  		new bizinfo[512];
	 		format(bizinfo,sizeof(bizinfo), "======================[ %s ]======================\nПод контролем: %s\nВсего заработано: %d вирт\t\nВ этом часу заработано: %d вирт\nПродуктов: %d/20000\nЦена за товар: %d вирт\nЦена входа: %d вирт\nСостояние: %s\nБаланс банка для оплаты энергии: %d вирт\nНалог за электроэнергию: %d вирт\nЛицензия: %s",
	 		BizzInfo[targetid][bMessage],mafiatext,BizzInfo[targetid][bTill],BizzInfo[targetid][b2Till],BizzInfo[targetid][bProducts],BizzInfo[targetid][bPrice],BizzInfo[targetid][bEntranceCost],text1,BizzInfo[targetid][bTill],elektrich,text2);
			ShowPlayerDialog(playerid,10349,DIALOG_STYLE_MSGBOX, "Cостояние бизнеса",bizinfo, "$", "$");
		}
	}
}
stock BuyHouse()
{
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
		if(HouseInfo[h][hOwned] == 0)
		{
			DestroyDynamicMapIcon(HouseInfo[h][hMIcon]);
			DestroyPickup(HouseInfo[h][hPickup]);
			AddStaticPickup(1273, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
			pickups++;
			HouseInfo[h][hMIcon] = CreateDynamicMapIcon(HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez], 31, COLOR_WHITE, 0, -1, -1);
		}
		if(HouseInfo[h][hOwned] == 1)
		{
			DestroyDynamicMapIcon(HouseInfo[h][hMIcon]);
			DestroyPickup(HouseInfo[h][hPickup]);
  			AddStaticPickup(1272, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
			pickups++;
			HouseInfo[h][hMIcon] = CreateDynamicMapIcon(HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez], 32, COLOR_WHITE, 0, -1, -1);
		}
	}
	return true;
}
main() { }
public StartPaintballtwo()
{
	new string[128];
	format(string, sizeof(string), "Внимание! Начало пейнтбола через 2 минуты. Место регистрации: гора VineWood (( /gps > Развлечения ))");
	OOCOff(0xFFAAFFAA, string);
	PaintballRound = 0;
	SetTimer("StartPaintball", 120000, 0);
	return true;
}
public StartPaintball()
{
	new string[128];
	PaintballRound = 1;
	PaintballWinner = 999;
	PaintballWinnerKills = 0;
 	if(PaintballPlayers < 2)
 	{
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			format(string, sizeof(string), "Пейнтбол отменен из - за не достаточного количества участников");
			OOCOff(0xFFAAFFAA,string);
			PaintballRound = 1;
			PlayerPaintballing[i] = 0;
			PaintballPlayers = 0;
			return true;
		}
	}
	format(string, sizeof(string), "Внимание! Пейнтболл начался");
	OOCOff(0xFFAAFFAA,string);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
   			if(PlayerPaintballing[i] != 0)
	        {
	       		new rand;
            	new rands = random(sizeof(paintgun));
      			GiveWeapon(i, paintgun[rands], 300);
		    	rand = random(sizeof(PaintballSpawns));
				ACP_SetPlayerPos(i, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
				SetPlayerInterior(i, 10);
				SetPlayerVirtualWorld(i, 1);
	       		PaintballPlayers = 0;
	      		PlayerPaintballing[i] = 1;
	        }
	    }
	}
	SetTimer("PaintBallEnded", 300000, 0);
	return true;
}
public PaintBallEnded()
{
	new string[128];
    new name[MAX_PLAYER_NAME];
	format(string, sizeof(string), "Внимание! Пейнтбол завершён!");
	OOCOff(0xFFAAFFAA,string);
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerPaintballing[i] != 0)
	        {
	            if(IsPlayerConnected(PaintballWinner))
	            {
	                GetPlayerName(PaintballWinner, name, sizeof(name));
	                format(string, sizeof(string), "%s выйграл матч по пейнтболлу с %d убийствами",name,PaintballWinnerKills);
	                SendClientMessageToAll(0xFFAAFFAA, string);
    	           	PlayerInfo[PaintballWinnerKills][pCash] += 50000;
    	           	PlayerPaintballKills[PaintballWinnerKills] = 0;
	            }
	            PlayerPaintballing[i] = 0;
	           	ACP_SetPlayerPos(i, 286.0732,-31.9907,1001.5156);
	           	SetPlayerFacingAngle(i, 181.0381);
	           	SetPlayerVirtualWorld(i, 1);
	           	SetPlayerInterior(i, 1);
	           	PlayerInfo[i][pCash] += 20000;
	           	PlayerPaintballKills[i] = 0;
             	DelGun(i);
	        }
		}
	}
	PaintballWinnerKills = 0;
    PaintballRound = 1;
	return true;
}
public SatietyCheck()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		new Float:health;
		GetPlayerHealth(i,health);
	 	if(PlayerInfo[i][pTut] != 0)
	    {
			if(health <= 10.0) { SendClientMessage(i, COLOR_YELLOW, "У вас сильно ухудшилось здоровье!"); }
	   	}
		if(PlayerInfo[i][pSatiety] > 0)
	    {
	        PlayerInfo[i][pSatiety] -= 1;
	        if(PlayerInfo[i][pSatiety] < 50)
	        {
	            if(PlayerInfo[i][pSatiety] == 49)
	            {
	                SendClientMessage(i,0x3366FFFF, "Вы голодны! Посетите бар или закусочную. Подробнее (( {FFFFFF}/satiety{3366FF} ))");
	            }
				GetPlayerHealth(i, health);
				SetPlayerHealthAC(i, health - 1);
				PlayerInfo[i][pHP] -= 1;
				return true;
			}
			else if(PlayerInfo[i][pSatiety] < 25)
			{
	            if(PlayerInfo[i][pSatiety] == 24)
	            {
                	SendClientMessage(i,0x3366FFFF, "Вы голодны! Посетите бар или закусочную. Подробнее (( {FFFFFF}/satiety{3366FF} ))");
            	}
	            GetPlayerHealth(i, health);
	            SetPlayerHealthAC(i, health - 2);
	            PlayerInfo[i][pHP] -= 2;
	            return true;
        	}
	        else if(PlayerInfo[i][pSatiety] < 1)
	        {
	            if(PlayerInfo[i][pSatiety] == 0)
	            {
	                SendClientMessage(i,0x3366FFFF, "Вы голодны! Посетите бар или закусочную. Подробнее (( {FFFFFF}/satiety{3366FF} ))");
	            }
	            GetPlayerHealth(i, health);
	            SetPlayerHealthAC(i, health - 3);
	            PlayerInfo[i][pHP] -= 3;
	            return true;
        	}
    	}
    	else
    	{
        	GetPlayerHealth(i, health);
        	SetPlayerHealthAC(i, health - 3);
        	PlayerInfo[i][pHP] -= 3;
    	}
    }
	return true;
}
public StartRacetwo()
{
	new string[128];
	format(string, sizeof(string), "Внимание! Начало стритрейсинга через 2 минуты. Регистрация у въезда! (( /gps > Развлечения ))");
	OOCOff(0xB9B900AA,string);
	EndingRaceRound = 0;
	SetTimer("StartRace1", 120000, 0);
	return true;
}
public StartRace1()
{
	new string[2];
	EndingRaceRound = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerRacing[i] != 0)
	        {
	        	new rands = random(sizeof(tachki));
				format(string, sizeof(string), "1");
				GameTextForPlayer(i, string, 1000, 3);
				new rand;
				rand = random(sizeof(RaceSpawns));
				new carid = CreateVehicle(tachki[rands], RaceSpawns[rand][0],RaceSpawns[rand][1],RaceSpawns[rand][2],270.0000, -1, -1, 60000);
				SendClientMessage(i, 0x2EA07BAA, "Приготовтесь! Не покидайте машину");
				Fuell[GetPlayerVehicleID(i)] = 200;
				PutPlayerInVehicle(i, carid, 0);
				CreatedCars[CreatedCar] = carid;
	            rand = random(sizeof(RaceSpawns));
             	AddVehicleComponent(GetPlayerVehicleID(i), 1010);
	            SetPlayerInterior(i,0);
	        }
	    }
	}
	SetTimer("StartRace2", 1000, 0);
	return true;
}
public StartRace2()
{
	new string[2];
	EndingRaceRound = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerRacing[i] != 0)
	        {
				format(string, sizeof(string), "2");
 				GameTextForPlayer(i, string, 1000, 3);
	        }
	    }
	}
	SetTimer("StartRace3", 1000, 0);
	return true;
}
public StartRace3()
{
	new string[2];
	EndingRaceRound = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerRacing[i] != 0)
	        {
				format(string, sizeof(string), "3");
    			GameTextForPlayer(i, string, 1000, 3);
	        }
	    }
	}
	SetTimer("StartRace", 1000, 0);
	return true;
}
public StartRace()
{
	new string[128];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(RacingPlayers < 4)
		{
			format(string, sizeof(string), "Стритрейсинг был прерван из-за не достаточного колличества участников!");
			OOCOff(0xB9B900AA,string);
			EndingRaceRound = 1;
			PlayerRacing[i] = 0;
			RacingPlayers = 0;
			return true;
		}
		FirstRaceWinner = 999;
		SecondRaceWinner = 999;
		ThirdRaceWinner = 999;
		if(IsPlayerConnected(i))
		{
			if(PlayerRacing[i] != 0)
			{
				RaceCP[i] = 10;
				GameTextForPlayer(i, "~r~GO! GO! GO!", 5000, 3);
				PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
				chet[i] += 1;
				SetPlayerRaceCheckpoint(i,1,race[0][0],race[0][1],race[0][2], race[1][0],race[1][1],race[1][2],8.0);
				TogglePlayerControllable(i, 1);
				PlayerRacing[i] = 1;
				Fuell[i] = 300;
				GetVehicleParamsEx(GetPlayerVehicleID(i), engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(GetPlayerVehicleID(i), VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
				EngineState[i] = true;
			}
		}
	}
	format(string, sizeof(string), "Внимание! Стритрейсинг начался. Трасса: Город LS");
	OOCOff(0xB9B900AA,string);
	SetTimer("RaceEnded", 360000, 0);
	Fuell[RacingPlayers] = 300;
	EndingRaceRound = 1;
	RacingPlayers = 0;
	return true;
}
public RaceEnded()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
		    new string[128];
	     	RaceCP[i] = 0;
		    DisablePlayerRaceCheckpoint(i);
		    new frw[MAX_PLAYER_NAME],srw[MAX_PLAYER_NAME],trw[MAX_PLAYER_NAME];
		    GetPlayerName(FirstRaceWinner,frw,sizeof(frw));
		    GetPlayerName(SecondRaceWinner,srw,sizeof(srw));
		    GetPlayerName(ThirdRaceWinner,trw,sizeof(trw));
			format(string, sizeof(string), "Внимание! Стритрейсинг окончен! Победители: 1.{FFFFFF}%s{B9B900} 2.{FFFFFF}%s{B9B900} 3.{FFFFFF}%s",frw,srw,trw);
			OOCOff(0xB9B900AA,string);
			if(PlayerRacing[i] != 0)
			{
				DestroyVehicle(GetPlayerVehicleID(i));
			}
			PlayerRacing[i] = 0;
  			EndingRaceRound = 1;
  			RacingPlayers = 0;
  			return true;
		}
	}
	return true;
}
stock Pay(string[])
{
	new year,month, day,
   	hour,minute,second;
   	gettime(hour,minute,second);
    getdate(year,month,day);
    new entry[256];
	format(entry, sizeof(entry), "[%d/%d/%d][%d:%d:%d] %s\r\n",day,month,year,hour,minute,second,string);
	new File:hFile;
	hFile = fopen("gamefiles/log/pay.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
stock DonateAdd(string[])
{
    new entry[256];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("gamefiles/donate.ini", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
stock DonateLog(string[])
{
	new year,month, day,
   	hour,minute,second;
   	gettime(hour,minute,second);
    getdate(year,month,day);
    new entry[256];
	format(entry, sizeof(entry), "[%d/%d/%d][%d:%d:%d] %s\r\n",day,month,year,hour,minute,second,string);
	new File:hFile;
	hFile = fopen("gamefiles/log/donatelog.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
stock BanLog(string[])
{
	new year,month, day,
   	hour,minute,second;
   	gettime(hour,minute,second);
    getdate(year,month,day);
    new entry[256];
	format(entry, sizeof(entry), "[%d/%d/%d][%d:%d:%d] %s\r\n",day,month,year,hour,minute,second,string);
	new File:hFile;
	hFile = fopen("gamefiles/log/banlog.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
stock WarnLog(string[])
{
	new year,month, day,
   	hour,minute,second;
   	gettime(hour,minute,second);
    getdate(year,month,day);
    new entry[256];
	format(entry, sizeof(entry), "[%d/%d/%d][%d:%d:%d] %s\r\n",day,month,year,hour,minute,second,string);
	new File:hFile;
	hFile = fopen("gamefiles/log/warnlog.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
stock Banip(string[])
{
    new year,month, day,
   	hour,minute,second;
   	gettime(hour,minute,second);
    getdate(year,month,day);
    new entry[256];
	format(entry, sizeof(entry), "[%d/%d/%d][%d:%d:%d] %s\r\n",day,month,year,hour,minute,second,string);
	new File:hFile;
	hFile = fopen("gamefiles/log/banip.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
stock MkLeader(string[])
{
	new year,month, day,
   	hour,minute,second;
   	gettime(hour,minute,second);
    getdate(year,month,day);
    new entry[256];
	format(entry, sizeof(entry), "[%d/%d/%d][%d:%d:%d] %s\r\n",day,month,year,hour,minute,second,string);
	new File:hFile;
	hFile = fopen("gamefiles/log/MkLeader.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
stock MkAdmin(string[])
{
    new year,month, day,
   	hour,minute,second;
   	gettime(hour,minute,second);
    getdate(year,month,day);
    new entry[256];
	format(entry, sizeof(entry), "[%d/%d/%d][%d:%d:%d] %s\r\n",day,month,year,hour,minute,second,string);
	new File:hFile;
	hFile = fopen("gamefiles/log/MkAdmin.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
stock DelAkk(string[])
{
    new year,month, day,
   	hour,minute,second;
   	gettime(hour,minute,second);
    getdate(year,month,day);
    new entry[256];
	format(entry, sizeof(entry), "[%d/%d/%d][%d:%d:%d] %s\r\n",day,month,year,hour,minute,second,string);
	new File:hFile;
	hFile = fopen("gamefiles/log/DelAkk.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
stock DollahScoreUpdate()
{
	new LevScore;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
   			LevScore = PlayerInfo[i][pLevel];
			SetPlayerScore(i, LevScore);
		}
	}
	return true;
}
stock GivePlayerPPCash(playerid, money)
{
	PCash[playerid] = PCash[playerid] + money;
    ResetPlayerMoney(playerid);
    GivePlayerMoney(playerid,PCash[playerid]);
	return PCash[playerid];
}
stock bigstr(const string[], &idx)
{
	new length = strlen(string);
	while ((idx < length) && (string[idx] <= ' '))
 	{
		idx++;
	}
	new offset = idx;
	new result[128];
	while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
	{
		result[idx - offset] = string[idx];
		idx++;
	}
	result[idx - offset] = EOS;
	return result;
}
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	SetPVarInt(playerid, "NoAB", 1);
    SetVehicleParamsForPlayer(vehicleid, playerid, 0, gCarLock[vehicleid]);
}
stock IsAMedic(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member == 4 || member == 22 || member == 23)
		{
		    return true;
		}
		else if(leader == 4 || leader == 22 || member == 23)
		{
		    return true;
		}
	}
	return false;
}
stock IsAMayor(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member == 7)
		{
		    return true;
		}
		else if(leader == 7)
		{
		    return true;
		}
	}
	return false;
}
stock IsALicenser(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member == 11)
		{
		    return true;
		}
		else if(leader == 11)
		{
		    return true;
		}
	}
	return false;
}
stock IsACop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member == 1 || member == 2 || member == 10 || member == 21)
		{
		    return true;
		}
		else if(leader == 1 || leader == 2 || leader == 10 || leader == 21)
		{
		    return true;
		}
	}
	return false;
}
stock IsAArm(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member == 3 || member == 19)
		{
		    return true;
		}
		else if(leader == 3 || leader == 19)
		{
		    return true;
		}
	}
	return false;
}
stock IsAAntidm(playerid)
{
	if(PlayerToPoint(20.0,playerid,1226.6199,-1826.5946,13.4103)// Респа новичков
	||PlayerToPoint(10.0,playerid,829.0444,5.0235,1004.1870) // Гонки LS
	||PlayerToPoint(50.0,playerid,1479.3280,-1699.6100,14.0469) // МЕРИЯ
	||PlayerToPoint(15.0,playerid,263.6395,78.5962,1001.0391) // Тюрьма LS
	||PlayerToPoint(50.0,playerid,366.9007,-60.0603,1076.4773) // Больница LS
	||PlayerToPoint(100.0,playerid,2235.4080,1604.0082,1006.1797) // Казино
	||PlayerToPoint(15.0,playerid,-2031.7778,-117.3789,1035.1719) // Тюрьма SF
	||PlayerToPoint(20.0,playerid,293.2295,-32.5384,1001.5156) // ПЕИНТБОЛ
	||PlayerToPoint(40.0,playerid,2190.8284,-2268.4980,13.5469) // Грузчики
	||PlayerToPoint(40.0,playerid,1176.2983,-1323.4597,14.0144))
	{
		return true;
	}
	return false;
}
stock IsATerra(playerid)
{
	if(PlayerToPoint(50.0,playerid,2651.4746,-2004.3387,13.3828) // Ballas
	||PlayerToPoint(50.0,playerid,2774.2703,-1622.6263,10.9219) // Vagos
	||PlayerToPoint(50.0,playerid,2492.7532,-1676.3687,13.3380) // Grove
	||PlayerToPoint(50.0,playerid,1713.9735,-2114.5122,13.3828) // Aztecas
	||PlayerToPoint(50.0,playerid,2184.1218,-1803.6334,13.3693) // Rifa
	||PlayerToPoint(50.0,playerid,-61.2984,1364.5847,1080.2109) // Ballas Base
	||PlayerToPoint(50.0,playerid,303.6300,309.2500,999.1484) // Vagos Base
	||PlayerToPoint(50.0,playerid,2496.0129,-1708.9232,1014.7422) // Grove Base
	||PlayerToPoint(50.0,playerid,-49.7558,1400.3553,1084.4297) // Aztecas Base
	||PlayerToPoint(50.0,playerid,-223.8400,1410.5100,27.7734)) // Rifa Base
	{
		return true;
	}
	return false;
}
stock IsAEat(playerid)
{
    if(PlayerToPoint(3.0,playerid,2183.4238,-2268.9087,13.4746) ||
	PlayerToPoint(3.0,playerid,1221.3394,-1838.9180,13.5540) ||
	PlayerToPoint(3.0,playerid,1415.2924,-1718.1212,13.5469))
	{
		return true;
	}
	return false;
}
stock IsABankomat(playerid)
{
	if(PlayerToPoint(2.0,playerid,-1676.34570312,434.01806641,7.08183193) ||
	PlayerToPoint(2.0,playerid,-818.55200195,1567.63708496,27.01933098) ||
	PlayerToPoint(2.0,playerid,-2421.45410156,958.35540771,45.18632126) ||
	PlayerToPoint(2.0,playerid,2174.20336914,1402.93469238,10.96464443) ||
	PlayerToPoint(2.0,playerid,-2621.31445312,1415.23510742,6.88521862) ||
	PlayerToPoint(2.0,playerid,1587.30920410,2218.34838867,10.96464443) ||
	PlayerToPoint(2.0,playerid,-2452.32275391,2252.62988281,4.87058449) ||
	PlayerToPoint(2.0,playerid,2187.36035156,2478.89160156,11.14433193) ||
	PlayerToPoint(2.0,playerid,-1282.38098145,2715.18652344,50.16842651) ||
	PlayerToPoint(2.0,playerid,-2033.32604980,159.50723267,28.94120598) ||
	PlayerToPoint(2.0,playerid,91.92106628,1180.56555176,18.56620598) ||
	PlayerToPoint(2.0,playerid,2236.16186523,-1665.79772949,15.27980804) ||
	PlayerToPoint(2.0,playerid,847.58093262,-1799.19348145,13.71945286) ||
	PlayerToPoint(2.0,playerid,1367.56359863,-1290.13696289,13.44901943) ||
	PlayerToPoint(2.0,playerid,-78.74282837,-1171.64892578,1.95329499) ||
	PlayerToPoint(2.0,playerid,1142.44287109,-1763.92932129,13.59816360) ||
	PlayerToPoint(2.0,playerid,-1551.53637695,-2737.33691406,48.64560318) ||
 	PlayerToPoint(2.0,playerid,661.71307373,-576.21777344,16.25428581) ||
	PlayerToPoint(2.0,playerid,557.32824707,-1294.28137207,17.24994087) ||
	PlayerToPoint(2.0,playerid,-2035.70605469,-102.35491180,35.07402039) ||
	PlayerToPoint(2.0,playerid,1919.78381348,-1766.21813965,13.44901943) ||
	PlayerToPoint(2.0,playerid,2843.2822,1286.9712,11.3906)||
	PlayerToPoint(4.0,playerid,1364.6337,895.2993,1107.4862)) // БАНК
	{
		return true;
	}
	return false;
}
stock IsAHotDog(playerid)
{
	if(PlayerToPoint(2.0,playerid,1144.0961,-1756.7357,13.6432)
	||PlayerToPoint(2.0,playerid,1413.1958,-1718.1736,13.5469)
	||PlayerToPoint(2.0,playerid,1143.9006,-1754.3907,13.6145)
	||PlayerToPoint(2.0,playerid,1477.0962,-1674.0988,14.0469)
	||PlayerToPoint(2.0,playerid,1471.0443,-1674.0376,14.0469)
	||PlayerToPoint(2.0,playerid,2181.1267,-2268.9629,13.4554))
	{
		return true;
	}
    return false;
}
stock IsAFoods(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 2, -2420.219, 984.578, 44.297)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2420.180, 985.945, 44.297)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2225.203, -1153.422, 1025.906)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2576.703, -1284.430, 1061.094)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2155.906, 1606.773, 1000.055)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2209.906, 1607.195, 1000.055)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2222.203, 1606.773, 1000.055)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 495.969, -24.320, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 501.828, -1.430, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 373.828, -178.141, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 330.680, 178.500, 1020.070)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 331.922, 178.500, 1020.070)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 350.906, 206.086, 1008.477)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 361.563, 158.617, 1008.477)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 371.594, 178.453, 1020.070)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 374.891, 188.977, 1008.477)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2155.844, 1607.875, 1000.063)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2202.453, 1617.008, 1000.063)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2209.242, 1621.211, 1000.063)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2222.367, 1602.641, 1000.063)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 500.563, -1.367, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 379.039, -178.883, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2480.86,-1959.27,12.9609)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1634.11,-2237.53,12.8906)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2139.52,-1161.48,23.3594)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2153.23,-1016.15,62.2344)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1350.12,493.859,10.5859)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2229.19,286.414,34.7031)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1659.46,1722.86,10.2188)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2647.7,1129.66,10.2188)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2845.73,1295.05,10.7891)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1398.84,2222.61,10.4219)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1455.12,2591.66,55.2344)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -76.0312,1227.99,19.125)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 662.43,-552.164,15.7109)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -253.742,2599.76,62.2422)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2271.73,-76.4609,25.9609)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1789.21,-1369.27,15.1641)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1729.79,-1943.05,12.9453)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2060.12,-1897.64,12.9297)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1928.73,-1772.45,12.9453)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2325.98,-1645.13,14.2109)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2352.18,-1357.16,23.7734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1154.73,-1460.89,15.1562)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1350.12,492.289,10.5859)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2118.97,-423.648,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2118.62,-422.414,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2097.27,-398.336,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2092.09,-490.055,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2063.27,-490.055,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2005.65,-490.055,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2034.46,-490.055,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2068.56,-398.336,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2039.85,-398.336,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2011.14,-398.336,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1980.79,142.664,27.0703)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2319.99,2532.85,10.2188)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1520.15,1055.27,10.00)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2503.14,1243.7,10.2188)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2085.77,2071.36,10.4531)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -862.828,1536.61,21.9844)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -14.7031,1175.36,18.9531)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -253.742,2597.95,62.2422)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 201.016,-107.617,0.898438)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1277.84,372.516,18.9531)) return true;
	else return false;
}
stock PJ(carid){switch(GetVehicleModel(carid)){case 534,535,536,558,559,560,561,562,565,575,576,483,567:return true;}return false;}
stock IsABoat(carid){switch(GetVehicleModel(carid)){case 472,473,493,595,484,430,452..454,446:return true;}return false;}
stock IsAtFishPlace(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerToPoint(1.0,playerid,403.8266,-2088.7598,7.8359) || PlayerToPoint(1.0,playerid,398.7553,-2088.7490,7.8359)) return true;
		else if(PlayerToPoint(1.0,playerid,396.2197,-2088.6692,7.8359) || PlayerToPoint(1.0,playerid,391.1094,-2088.7976,7.8359)) return true;
		else if(PlayerToPoint(1.0,playerid,383.4157,-2088.7849,7.8359) || PlayerToPoint(1.0,playerid,374.9598,-2088.7979,7.8359)) return true;
		else if(PlayerToPoint(1.0,playerid,369.8107,-2088.7927,7.8359) || PlayerToPoint(1.0,playerid,367.3637,-2088.7925,7.8359)) return true;
		else if(PlayerToPoint(1.0,playerid,362.2244,-2088.7981,7.8359) || PlayerToPoint(1.0,playerid,354.5382,-2088.7979,7.8359)) return true;
	}
	return false;
}
new Float:STANDARTGangZone[130][4] = {
	{1642.710571,-2174.567871,1770.710571,-2073.567871},
	{1770.710571,-2174.567871,1898.710571,-2073.567871},
	{1898.710571,-2174.567871,2026.710571,-2073.567871},
	{2026.710571,-2174.567871,2154.710449,-2073.567871},
	{2154.710449,-2174.567871,2282.710449,-2073.567871},
	{2282.710449,-2174.567871,2410.710449,-2073.567871},
	{2410.710449,-2174.567871,2538.710449,-2073.567871},
	{2538.710449,-2174.567871,2666.710449,-2073.567871},
	{2666.710449,-2174.567871,2794.710449,-2073.567871},
	{2794.710449,-2174.567871,2922.710449,-2073.567871},
	{1642.710571,-2073.567871,1770.710571,-1972.567871},
	{1770.710571,-2073.567871,1898.710571,-1972.567871},
	{1898.710571,-2073.567871,2026.710571,-1972.567871},
	{2026.710571,-2073.567871,2154.710449,-1972.567871},
	{2154.710449,-2073.567871,2282.710449,-1972.567871},
	{2282.710449,-2073.567871,2410.710449,-1972.567871},
	{2410.710449,-2073.567871,2538.710449,-1972.567871},
	{2538.710449,-2073.567871,2666.710449,-1972.567871},
	{2666.710449,-2073.567871,2794.710449,-1972.567871},
	{2794.710449,-2073.567871,2922.710449,-1972.567871},
	{1642.710571,-1972.567871,1770.710571,-1871.567871},
	{1770.710571,-1972.567871,1898.710571,-1871.567871},
	{1898.710571,-1972.567871,2026.710571,-1871.567871},
	{2026.710571,-1972.567871,2154.710449,-1871.567871},
	{2154.710449,-1972.567871,2282.710449,-1871.567871},
	{2282.710449,-1972.567871,2410.710449,-1871.567871},
	{2410.710449,-1972.567871,2538.710449,-1871.567871},
	{2538.710449,-1972.567871,2666.710449,-1871.567871},
	{2666.710449,-1972.567871,2794.710449,-1871.567871},
	{2794.710449,-1972.567871,2922.710449,-1871.567871},
	{1642.710571,-1871.567871,1770.710571,-1770.567871},
	{1770.710571,-1871.567871,1898.710571,-1770.567871},
	{1898.710571,-1871.567871,2026.710571,-1770.567871},
	{2026.710571,-1871.567871,2154.710449,-1770.567871},
	{2154.710449,-1871.567871,2282.710449,-1770.567871},
	{2282.710449,-1871.567871,2410.710449,-1770.567871},
	{2410.710449,-1871.567871,2538.710449,-1770.567871},
	{2538.710449,-1871.567871,2666.710449,-1770.567871},
	{2666.710449,-1871.567871,2794.710449,-1770.567871},
	{2794.710449,-1871.567871,2922.710449,-1770.567871},
	{1642.710571,-1770.567871,1770.710571,-1669.567871},
	{1770.710571,-1770.567871,1898.710571,-1669.567871},
	{1898.710571,-1770.567871,2026.710571,-1669.567871},
	{2026.710571,-1770.567871,2154.710449,-1669.567871},
	{2154.710449,-1770.567871,2282.710449,-1669.567871},
	{2282.710449,-1770.567871,2410.710449,-1669.567871},
	{2410.710449,-1770.567871,2538.710449,-1669.567871},
	{2538.710449,-1770.567871,2666.710449,-1669.567871},
	{2666.710449,-1770.567871,2794.710449,-1669.567871},
	{2794.710449,-1770.567871,2922.710449,-1669.567871},
	{1642.710571,-1669.567871,1770.710571,-1568.567871},
	{1770.710571,-1669.567871,1898.710571,-1568.567871},
	{1898.710571,-1669.567871,2026.710571,-1568.567871},
	{2026.710571,-1669.567871,2154.710449,-1568.567871},
	{2154.710449,-1669.567871,2282.710449,-1568.567871},
	{2282.710449,-1669.567871,2410.710449,-1568.567871},
	{2410.710449,-1669.567871,2538.710449,-1568.567871},
	{2538.710449,-1669.567871,2666.710449,-1568.567871},
	{2666.710449,-1669.567871,2794.710449,-1568.567871},
	{2794.710449,-1669.567871,2922.710449,-1568.567871},
	{1642.710571,-1568.567871,1770.710571,-1467.567871},
	{1770.710571,-1568.567871,1898.710571,-1467.567871},
	{1898.710571,-1568.567871,2026.710571,-1467.567871},
	{2026.710571,-1568.567871,2154.710449,-1467.567871},
	{2154.710449,-1568.567871,2282.710449,-1467.567871},
	{2282.710449,-1568.567871,2410.710449,-1467.567871},
	{2410.710449,-1568.567871,2538.710449,-1467.567871},
	{2538.710449,-1568.567871,2666.710449,-1467.567871},
	{2666.710449,-1568.567871,2794.710449,-1467.567871},
	{2794.710449,-1568.567871,2922.710449,-1467.567871},
	{1642.710571,-1467.567871,1770.710571,-1366.567871},
	{1770.710571,-1467.567871,1898.710571,-1366.567871},
	{1898.710571,-1467.567871,2026.710571,-1366.567871},
	{2026.710571,-1467.567871,2154.710449,-1366.567871},
	{2154.710449,-1467.567871,2282.710449,-1366.567871},
	{2282.710449,-1467.567871,2410.710449,-1366.567871},
	{2410.710449,-1467.567871,2538.710449,-1366.567871},
	{2538.710449,-1467.567871,2666.710449,-1366.567871},
	{2666.710449,-1467.567871,2794.710449,-1366.567871},
	{2794.710449,-1467.567871,2922.710449,-1366.567871},
	{1642.710571,-1366.567871,1770.710571,-1265.567871},
	{1770.710571,-1366.567871,1898.710571,-1265.567871},
	{1898.710571,-1366.567871,2026.710571,-1265.567871},
	{2026.710571,-1366.567871,2154.710449,-1265.567871},
	{2154.710449,-1366.567871,2282.710449,-1265.567871},
	{2282.710449,-1366.567871,2410.710449,-1265.567871},
	{2410.710449,-1366.567871,2538.710449,-1265.567871},
	{2538.710449,-1366.567871,2666.710449,-1265.567871},
	{2666.710449,-1366.567871,2794.710449,-1265.567871},
	{2794.710449,-1366.567871,2922.710449,-1265.567871},
	{1642.710571,-1265.567871,1770.710571,-1164.567871},
	{1770.710571,-1265.567871,1898.710571,-1164.567871},
	{1898.710571,-1265.567871,2026.710571,-1164.567871},
	{2026.710571,-1265.567871,2154.710449,-1164.567871},
	{2154.710449,-1265.567871,2282.710449,-1164.567871},
	{2282.710449,-1265.567871,2410.710449,-1164.567871},
	{2410.710449,-1265.567871,2538.710449,-1164.567871},
	{2538.710449,-1265.567871,2666.710449,-1164.567871},
	{2666.710449,-1265.567871,2794.710449,-1164.567871},
	{2794.710449,-1265.567871,2922.710449,-1164.567871},
	{1642.710571,-1164.567871,1770.710571,-1063.567871},
	{1770.710571,-1164.567871,1898.710571,-1063.567871},
	{1898.710571,-1164.567871,2026.710571,-1063.567871},
	{2026.710571,-1164.567871,2154.710449,-1063.567871},
	{2154.710449,-1164.567871,2282.710449,-1063.567871},
	{2282.710449,-1164.567871,2410.710449,-1063.567871},
	{2410.710449,-1164.567871,2538.710449,-1063.567871},
	{2538.710449,-1164.567871,2666.710449,-1063.567871},
	{2666.710449,-1164.567871,2794.710449,-1063.567871},
	{2794.710449,-1164.567871,2922.710449,-1063.567871},
	{1642.710571,-1063.567871,1770.710571,-962.567871},
	{1770.710571,-1063.567871,1898.710571,-962.567871},
	{1898.710571,-1063.567871,2026.710571,-962.567871},
	{2026.710571,-1063.567871,2154.710449,-962.567871},
	{2154.710449,-1063.567871,2282.710449,-962.567871},
	{2282.710449,-1063.567871,2410.710449,-962.567871},
	{2410.710449,-1063.567871,2538.710449,-962.567871},
	{2538.710449,-1063.567871,2666.710449,-962.567871},
	{2666.710449,-1063.567871,2794.710449,-962.567871},
	{2794.710449,-1063.567871,2922.710449,-962.567871},
	{1642.710571,-962.567871,1770.710571,-861.567871},
	{1770.710571,-962.567871,1898.710571,-861.567871},
	{1898.710571,-962.567871,2026.710571,-861.567871},
	{2026.710571,-962.567871,2154.710449,-861.567871},
	{2154.710449,-962.567871,2282.710449,-861.567871},
	{2282.710449,-962.567871,2410.710449,-861.567871},
	{2410.710449,-962.567871,2538.710449,-861.567871},
	{2538.710449,-962.567871,2666.710449,-861.567871},
	{2666.710449,-962.567871,2794.710449,-861.567871},
	{2794.710449,-962.567871,2922.710449,-861.567871}
};
stock GetXYInBackOfPlayer(const playerid, &Float:x, &Float:y, const Float:distance)
{
	new Float: a; GetPlayerPos(playerid, x, y, a); GetPlayerFacingAngle(playerid, a);
	if(IsPlayerInAnyVehicle(playerid))
	{
		new vid=GetPlayerVehicleID(playerid);
		if(vid > 0 && vid <= MAX_VEHICLES)GetVehicleZAngle(vid, a);
	}
	x -= (distance * floatsin(-a, degrees)); y -= (distance * floatcos(-a, degrees));
}
new allowedmfactions[] = {5,6,14};
new MZSafeTime[1200];
enum MzoneInfo
{
	mFrakVlad,
	mNapad
}
new MZInfo[1][MzoneInfo];
new TotalGz[5];
//new OnZONE[130][20];
new allowedfactions[] = {12,13,15,17,18};
new GZSafeTime[130];
enum GzoneInfo
{
	gID,
	Float:gCoords[4],
	gFrakVlad,
	gNapad
}
new FrakCD[20];
new GZInfo[130][GzoneInfo];
stock LoadGZ()
{
	new time = GetTickCount();
	new string[256];
	new File = ini_openFile("gamefiles/gangzone.ini");
	new l[256];
	new asd[5][10];
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		format(string,sizeof(string), "Zone%d",i);
		new x = ini_getString(File,string,l);
		if(x < 0)
		{
			GZInfo[i][gCoords][0] = STANDARTGangZone[i][0];
			GZInfo[i][gCoords][1] = STANDARTGangZone[i][1];
			GZInfo[i][gCoords][2] = STANDARTGangZone[i][2];
			GZInfo[i][gCoords][3] = STANDARTGangZone[i][3];
		}
		else
		{
			split(l,asd,'|');
			GZInfo[i][gCoords][0] = floatstr(asd[0]);
			GZInfo[i][gCoords][1] = floatstr(asd[1]);
			GZInfo[i][gCoords][2] = floatstr(asd[2]);
			GZInfo[i][gCoords][3] = floatstr(asd[3]);
		}
		GZInfo[i][gFrakVlad] = strval(asd[4]);
		if(GZInfo[i][gFrakVlad] == 0) GZInfo[i][gFrakVlad] = allowedfactions[random(sizeof(allowedfactions))];
		GZInfo[i][gID] = GangZoneCreate(GZInfo[i][gCoords][0],GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]);
		//ZoneOnBattle[i] = 0;
		GZSafeTime[i] = 0;
	}
	ini_closeFile(File);
	printf("______________________________", sizeof(GZInfo),GetTickCount() - time);
}
stock SaveGZ()
{
	new string[1000];
	new File = ini_openFile("gamefiles/gangzone.ini");
	new l[10];
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		format(l,sizeof(l), "Zone%d",i);
		format(string,sizeof(string), "%f|%f|%f|%f|%d",GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3],GZInfo[i][gFrakVlad]);
		ini_setString(File,l,string);
	}
	ini_closeFile(File);
}
stock IsInAllowed(playerid)
{
	for(new i = 0; i < sizeof(allowedfactions); i++)
	{
        if(PlayerInfo[playerid][pMember] == allowedfactions[i] && PlayerInfo[playerid][pRank] >= 7) return true;
    }
    return false;
}
stock IsInAllowedM(mnumbers)
{
	for(new i = 0; i < sizeof(allowedmfactions); i++)
	{
		if(mnumbers == allowedmfactions[i]) return true;
	}
	return false;
}
stock IsAPlane(carid){switch(GetVehicleModel(carid)){case 592,577,511,512,593,520,553,476,519,460,513,548,417,487,488,497,563,447,469:return true;}return false;}
stock IsANoSpeed(carid){switch(GetVehicleModel(carid)){case 441,448,449,450,462,464,465,481,501,509,510,537,538,564,569,570,590,591,594,606,607,608,610,611:return true;}return false;}
stock IsAGunsCar(carid)
{
	if(carid == gunscar[0] || carid == gunscar[1] || carid == gunscar[2])
	{
		return true;
	}
	return false;
}
public OnPlayerConnect(playerid)
{
	new string[128];
	new strings[200];
	new ip[2][16];
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	//==========================================================================
	adminreadsms[playerid] = 0;
	adminreadpay[playerid] = 0;
	RJFish[playerid] = 0;
	WJFish[playerid] = 0;
	adminreadconnect[playerid] = 0;
	BigEar[playerid] = 0;
	AntiDM[playerid] = 0;
	GoChase[playerid] = 999;
	GetChased[playerid] = 999;
	GotHit[playerid] = 0;
	PlayerInfo[playerid][pHeadValue] = 0;
	Mper[playerid] = 0;
	SetGravity_OnPlayerConnect(playerid); //
	plafk[playerid] = -2;
	//============ Антиреконект
	new unixtime = GetTickCount();
	for(new i=0; i<MAX_PLAYERS; i++)
	{
	    if(!strcmp(ExitInfo[i][ExitName],playername,true))
	    {
	        if(unixtime - ExitInfo[i][ExitTime] <= 15000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Повторный вход на сервер возможен только через 15 секунд"), FixKickedPlayer[playerid] = 1;
	        else strmid(ExitInfo[i][ExitName],"None", 0, strlen("None"), 32), ExitInfo[i][ExitTime] = 0;
	    }
	}
	//=========================================================================
	if((GetTickCount() - ConnectTimed[playerid]) <= 500) return BanEx(playerid,"DDOS Atack");
	ConnectTimed[playerid] = GetTickCount();
	if(IsConnected[playerid] == 2)return BanEx(playerid,"DDOS Atack");
	IsConnected{playerid} += 1;
	GetPlayerIp(playerid,ip[0],16);
	for(new i, m = GetMaxPlayers(), x; i != m; i++)
	{
		if(!IsPlayerConnected(i) || i == playerid) continue;
		GetPlayerIp(i,ip[1],16);
		if(!strcmp(ip[0],ip[1],true) && strcmp(ip[0],"31.131.107.60",true)) x++;
		if(x > 2) return Kick(i), printf("DDOS Atack");
	}
	//=========================================================================
	new sendername[MAX_PLAYER_NAME];
    new playersip[256];
    GetPlayerName(playerid, sendername, sizeof(sendername));
   	GetPlayerIp(playerid, playersip, sizeof(playersip));
    for(new admin = 0; admin < MAX_PLAYERS; admin ++)
	{
		if(adminreadconnect[admin] == 1)
		{
		    format(string, sizeof(string),"[ConnectLog] %s[ID: %d] зашел на сервер. IP адрес: %s",sendername, playerid, playersip);
    		SendClientMessage(admin,COLOR_GREY,string);
		}
	}
	StopVzlomNick(playerid);
	//==========================================================================
	FuelShow[playerid] = TextDrawCreate(329.0, 387.0, "_");
    TextDrawBackgroundColor(FuelShow[playerid], COLOR_BLACK);
    TextDrawLetterSize(FuelShow[playerid],0.399999,1.710000);
    TextDrawFont(FuelShow[playerid], 2);
    TextDrawColor(FuelShow[playerid], COLOR_WHITE);
    TextDrawSetOutline(FuelShow[playerid], 1);
    TextDrawSetProportional(FuelShow[playerid],1);
    TextDrawSetShadow(FuelShow[playerid],1);

    SpeedShow[playerid] = TextDrawCreate(418.000000,366.000000,"0km/h");
    TextDrawBackgroundColor(SpeedShow[playerid],COLOR_BLACK);
    TextDrawLetterSize(SpeedShow[playerid],0.399999,1.710000);
    TextDrawFont(SpeedShow[playerid],2);
    TextDrawColor(SpeedShow[playerid],COLOR_WHITE);
    TextDrawSetOutline(SpeedShow[playerid],1);
    TextDrawSetProportional(SpeedShow[playerid],1);
    TextDrawSetShadow(SpeedShow[playerid],1);

    HealthShow[playerid] = TextDrawCreate(329.000000,366.000000,"0%");
    TextDrawBackgroundColor(HealthShow[playerid],COLOR_BLACK);
    TextDrawLetterSize(HealthShow[playerid],0.399999,1.710000);
    TextDrawFont(HealthShow[playerid],2);
    TextDrawColor(HealthShow[playerid],COLOR_WHITE);
    TextDrawSetOutline(HealthShow[playerid],1);
    TextDrawSetProportional(HealthShow[playerid],1);
    TextDrawSetShadow(HealthShow[playerid],1);

    StatusShow[playerid] = TextDrawCreate(377.0, 391.0, "_");
    TextDrawBackgroundColor(StatusShow[playerid], COLOR_BLACK);
    TextDrawLetterSize(StatusShow[playerid],0.259999,1.010000);
    TextDrawFont(StatusShow[playerid], 2);
    TextDrawColor(StatusShow[playerid], COLOR_WHITE);
    TextDrawSetOutline(StatusShow[playerid], 1);
    TextDrawSetProportional(StatusShow[playerid],1);
    TextDrawSetShadow(StatusShow[playerid],1);

    Speed2Show[playerid] = TextDrawCreate(461.0, 391.0, "_");
    TextDrawBackgroundColor(Speed2Show[playerid], COLOR_BLACK);
    TextDrawLetterSize(Speed2Show[playerid],0.239999,1.010000);
    TextDrawFont(Speed2Show[playerid], 2);
    TextDrawColor(Speed2Show[playerid], COLOR_WHITE);
    TextDrawSetOutline(Speed2Show[playerid], 1);
    TextDrawSetProportional(Speed2Show[playerid],1);
    TextDrawSetShadow(Speed2Show[playerid],1);

    EngineShow[playerid] = TextDrawCreate(432.0, 391.0, "_");
    TextDrawBackgroundColor(EngineShow[playerid], COLOR_BLACK);
    TextDrawLetterSize(EngineShow[playerid],0.259999,1.010000);
    TextDrawFont(EngineShow[playerid], 2);
    TextDrawColor(EngineShow[playerid], COLOR_WHITE);
    TextDrawSetOutline(EngineShow[playerid], 1);
    TextDrawSetProportional(EngineShow[playerid],1);
    TextDrawSetShadow(EngineShow[playerid],1);
	//==========================================================================
	format(string, sizeof(string), "%s.ini", playername);
    if(fexist(string))
	{
		gPlayerAccount[playerid] = true;
	}
	else
	{
		gPlayerAccount[playerid] = false;
	}
	//==========================================================================
	//SetPVarInt(playerid, "LOGGED",0);
	AntiFlud[playerid] = 0; // asddd
    //==========================================================================
	ClearConnectAccount(playerid);
	ClearConnectAccountParams(playerid);
	ClearMarriage(playerid);
	DelGun(playerid);
    DeleteObjects(playerid);
    //==========
	ZapretDice[playerid] = 0;
	KostiName[playerid] = 999;
	KostiMoney[playerid] = 0;// КОСТИ
	//==========================================================================
	//==========================================================================
	FULLRECON[playerid] = TextDrawCreate(525.000000, 128.000000, "_");
	TextDrawFont(FULLRECON[playerid], 1);
	TextDrawSetOutline(FULLRECON[playerid], 0);
	TextDrawLetterSize(FULLRECON[playerid], 0.410000, 1.000000);
	//==========================================================================
    //==========================================================================
    //URL[playerid] = TextDrawCreate(480.000000, 4.000000, "RED ROLE PLAY");
	//TextDrawFont(URL[playerid], 1);
	//TextDrawColor(URL[playerid], COLOR_REDDD);
	//TextDrawLetterSize(URL[playerid], 0.3600, 1.400000);
	//TextDrawSetOutline(URL[playerid], 1);
 	//TextDrawShowForPlayer(playerid, URL[playerid]);
	//========================== 13.000000, 421.000000 =========================
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		GangZoneShowForPlayer(playerid,GZInfo[i][gID],GetGangZoneColor(i));
	}
	//==========================================================================
	for(new i = 0; i < sizeof(Weapons); i++)
	{
		Weapons[playerid][i] = 0;
	}
	//==========================================================================
    format(strings, sizeof(strings), "Порт СФ\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[1],Sellugol[1],Sellderevo[1]);
    Doki[1][playerid] = Create3DTextLabel(strings, 0xFFFF00FF,-1731.4509,118.9413,3.5547,20.0,0,1);
    format(strings, sizeof(strings), "Порт ЛС\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[0],Sellugol[0],Sellderevo[0]);
    Doki[0][playerid] = Create3DTextLabel(strings, 0xFFFF00FF,2601.7222,-2226.5867,13.3732,20.0,0,1);
    format(strings, sizeof(strings), "Нефтезавод №1\nЦена за тонну: %d",Benzbuy[0]);
    GasZavod[0][playerid] = Create3DTextLabel(strings, 0xFFFF00FF,256.4736,1414.5182,10.7075,20.0,0,1);
    format(strings, sizeof(strings), "Нефтезавод №2\nЦена за тонну: %d",Benzbuy[1]);
    GasZavod[1][playerid] = Create3DTextLabel(strings, 0xFFFF00FF,-1046.7723,-670.7208,32.3516,20.0,0,1);
    format(strings, sizeof(strings), "Склад угля №1\nЦена за тонну: %d",ugolbuy[0]);
    Sklad[0][playerid] = Create3DTextLabel(strings, 0xFFFF00FF,608.7718,847.8765,-43.1532,20.0,0,1);
    format(strings, sizeof(strings), "Лесопилка №1\nЦена за тонну: %d",Buyderevo[0]);
    Derevobuy[0][playerid] = Create3DTextLabel(strings, 0xFFFF00FF,-449.3336,-65.9115,59.4158,20.0,0,1);
    format(strings, sizeof(strings), "Лесопилка №2\nЦена за тонну: %d",Buyderevo[1]);
    Derevobuy[1][playerid] = Create3DTextLabel(strings, 0xFFFF00FF,-1978.6846,-2434.8274,30.6250,20.0,0,1);
    format(strings, sizeof(strings), "Склад угля №2\nЦена за тонну: %d",ugolbuy[1]);
    Sklad[1][playerid] = Create3DTextLabel(strings, 0xFFFF00FF,-1873.0896,-1720.2430,21.7500,20.0,0,1);
    return true;
}
stock ClearConnectAccountParams(playerid)
{
	HotdogOffer[playerid] = 999;
	HotdogPrice[playerid] = 999;
   	DrugOffer[playerid] = 999;
 	DrugPrice[playerid] = 999;
	DrugGramm[playerid] = 0;
	ZoneOffer[playerid] = 999;
	ZonePrice[playerid] = 999;
	FreeOffer[playerid] = 999;
	Bags[playerid] = 999;
	RobbingCar[playerid] = false;
	WithBag[playerid] = 0;
	FormaFrac[playerid] = 0;
	TransportDuty[playerid] = 0;
    times[playerid] = true;
	duty[playerid] = 0;
	ZoneOffer[playerid] = 999;
	ZonePrice[playerid] = 0;
	Armour[playerid] = 0;
	showhelp[playerid] = 0;
	robh[playerid] = false;
	play[playerid] = 0;
	TicketOffer[playerid] = 999;
	TicketMoney[playerid] = 0;
    ProposeOffer[playerid] = 999;
	ProposedTo[playerid] = 999;
	MehJob[playerid] = 999;
	lsacarvertexit[playerid] = 0;
	MatsArmyCar[playerid] = 0;
	JobCarTime[playerid] = 0;
	SpawnChange[playerid] = 1;
	CharPrice[playerid] = 0;
	SelectCharID[playerid] = 0;
	chet[playerid] = 0;
	RaceCP[playerid] = 0;
	PicCP[playerid] = 0;
	SelectChar[playerid] = 0;
	PhoneOnline[playerid] = 0;
	PEfir[playerid] = 255;
	Pefir[playerid] = 0;
	TransportValue[playerid] = 0;
	TransportMoney[playerid] = 0;
	TransportTime[playerid] = 0;
	TransportCost[playerid] = 0;
	TransportDriver[playerid] = 999;
    Works[playerid] = false;
	JobCP[playerid] = 0;
	GruzCP[playerid] = 0;
	JobAmmount[playerid] = 0;
	TakingLesson[playerid] = 0;
    JobOffer[playerid] = 999;
	Employer[playerid] = 999;
	CP[playerid] = 0;
	RaceCP[playerid] = 0;
	SpawnChange[playerid] = 1;
	TalkingLive[playerid] = 255;
	TalkingLivels[playerid] = 255;
	TalkingLivelv[playerid] = 255;
	LiveOffer[playerid] = 999;
	LiveOfferlv[playerid] = 999;
	LiveOfferls[playerid] = 999;
	RepairOffer[playerid] = 999;
	RepairPrice[playerid] = 0;
	HouseOffer[playerid] = 999;
	HousePrice[playerid] = 0;
	CarOffer[playerid] = 999;
	CarPrice[playerid] = 0;
	RepairCar[playerid] = 0;
	TieTime[playerid] = 0;
	RefillOffer[playerid] = 999;
	RefillPrice[playerid] = 0;
	PlayerCuffed[playerid] = 0;
	PlayerCuffedTime[playerid] = 0;
	WantedPoints[playerid] = 0;
	WantedLevel[playerid] = 0;
	SafeTime[playerid] = 60;
	PlayerTied[playerid] = 0;
	Mobile[playerid] = 255;
	Tel[playerid] = 255;
	WantedTime[playerid] = 0;
	Rekl[playerid] = 1;
	gOoc[playerid] = 0;
	gNews[playerid] = 0;
	lNews[playerid] = 0;
	LvNews[playerid] = 0;
	BigEar[playerid] = 0;
	gDice[playerid] = 0;
	gFam[playerid] = 0;
	gLogin[playerid] = 0;
	gPlayerLogged[playerid] = 0;
	gPlayerLogTries[playerid] = 0;
	gPlayerSpawned[playerid] = 0;
	PlayerStoned[playerid] = 0;
	PlayerDrunk[playerid] = 0;
	WatchingTV[playerid] = 0;
	KrishaOffer[playerid] = 999;
    DriverJob[playerid] = false;
 	OldSkin[playerid] = GetPlayerSkin(playerid);
 	ChosenSkin[playerid] = OldSkin[playerid];
 	InviteSkin[playerid] = OldSkin[playerid];
	AddictionsTimer[playerid] = 0;
	afkto[playerid] = 2;
	PlayerArmor[playerid] = 0;
	LastPickup[playerid] = -1;
}
stock ClearConnectAccount(playerid)
{
    FormaFrac[playerid] = 0;
	LastPickup[playerid] = -1;
	SetPlayerArmourAC(playerid, 0);
	SetPlayerColor(playerid, TEAM_HIT_COLOR);
	GivePlayerPPCash(playerid, 0);
	PlayerInfo[playerid][pAntiCheat] = 0;
	PlayerInfo[playerid][pAdvertTime] = 0;
	PlayerInfo[playerid][pAdvertTime1] = 0;
	PlayerInfo[playerid][pAddiction] = 0;
	PlayerInfo[playerid][pCDPlayer] = 0;
	PlayerInfo[playerid][pLevel] = 0;
	PlayerInfo[playerid][pAVig] = 0;
	PlayerInfo[playerid][pPhone] = 0;
	PlayerInfo[playerid][pPhbalance] = 0;
	PlayerInfo[playerid][pAdmin] = 0;
	PlayerInfo[playerid][pHelp] = 0;
	PlayerInfo[playerid][pWdraw] = 0;
	PlayerInfo[playerid][pVWarn] = 0;
	PlayerInfo[playerid][pQuest] = 0;
	PlayerInfo[playerid][pPasport] = 0;
	PlayerInfo[playerid][pHousecash] = 0;
	PlayerInfo[playerid][pCheckip] = 0;
	PlayerInfo[playerid][pDirectory] = 0;
	PlayerInfo[playerid][pPhoneBook] = 0;
	PlayerInfo[playerid][pJob] = 0;
	PlayerInfo[playerid][pCarLic] = 0;
	PlayerInfo[playerid][pBisLic] = 0;
	PlayerInfo[playerid][pFlyLic] = 0;
	PlayerInfo[playerid][pBoatLic] = 0;
	PlayerInfo[playerid][pFishLic] = 0;
	PlayerInfo[playerid][pFishes] = 0;
	PlayerInfo[playerid][pGunLic] = 0;
	PlayerInfo[playerid][pMaterials] = 0;
	PlayerInfo[playerid][pPHousekey] = 255;
	PlayerInfo[playerid][pPBiskey] = 255;
	PlayerInfo[playerid][pKills] = 0;
	PlayerInfo[playerid][pDonateRank] = 0;
	PlayerInfo[playerid][pReg] = 0;
	PlayerInfo[playerid][pSex] = 0;
	PlayerInfo[playerid][pKazpay] = 0;
    PlayerInfo[playerid][pDLevel] = 0;
    PlayerInfo[playerid][pDExp] = 0;
    PlayerInfo[playerid][pDgruz] = 0;
	PlayerInfo[playerid][pChar] = 66;
	PlayerInfo[playerid][pArrested] = 0;
	PlayerInfo[playerid][pExp] = 0;
	PlayerInfo[playerid][pSlot][0] = 0;
	PlayerInfo[playerid][pSlot][1] = 0;
	PlayerInfo[playerid][pSlot][2] = 0;
	PlayerInfo[playerid][pSlot][3] = 0;
	PlayerInfo[playerid][pSlot][4] = 0;
	PlayerInfo[playerid][pSlot][5] = 0;
	PlayerInfo[playerid][pSlot][6] = 0;
	PlayerInfo[playerid][pSlot][7] = 0;
	PlayerInfo[playerid][pSlot][8] = 0;
	PlayerInfo[playerid][pSlot][9] = 0;
	PlayerInfo[playerid][pSlot][10] = 0;
	PlayerInfo[playerid][pSlot][11] = 0;
	PlayerInfo[playerid][pSlot][12] = 0;
	PlayerInfo[playerid][pSlotammo][0] = 0;
	PlayerInfo[playerid][pSlotammo][1] = 0;
	PlayerInfo[playerid][pSlotammo][2] = 0;
	PlayerInfo[playerid][pSlotammo][3] = 0;
	PlayerInfo[playerid][pSlotammo][4] = 0;
	PlayerInfo[playerid][pSlotammo][5] = 0;
	PlayerInfo[playerid][pSlotammo][6] = 0;
	PlayerInfo[playerid][pSlotammo][7] = 0;
	PlayerInfo[playerid][pSlotammo][8] = 0;
	PlayerInfo[playerid][pSlotammo][9] = 0;
	PlayerInfo[playerid][pSlotammo][10] = 0;
	PlayerInfo[playerid][pSlotammo][11] = 0;
	PlayerInfo[playerid][pSlotammo][12] = 0;
	PlayerInfo[playerid][pGunSkill][0] = 0;
	PlayerInfo[playerid][pGunSkill][1] = 0;
	PlayerInfo[playerid][pGunSkill][2] = 0;
	PlayerInfo[playerid][pGunSkill][3] = 0;
	PlayerInfo[playerid][pGunSkill][4] = 0;
	PlayerInfo[playerid][pGunSkill][5] = 0;
	PlayerInfo[playerid][pTaxiExp] = 0;
	PlayerInfo[playerid][pTaxiLvl] = 0;
	PlayerInfo[playerid][pDeaths] = 0;
	PlayerInfo[playerid][pWantedDeaths] = 0;
	PlayerInfo[playerid][pPayCheck] = 0;
	PlayerInfo[playerid][pJailed] = 0;
	PlayerInfo[playerid][pCheat] = 0;
	PlayerInfo[playerid][pJailTime] = 0;
	PlayerInfo[playerid][pDrugs] = 0;
	PlayerInfo[playerid][pTicket] = 0;
	PlayerInfo[playerid][pTicketWin] = 0;
	PlayerInfo[playerid][pTicketNr][0] = 0;
	PlayerInfo[playerid][pTicketNr][1] = 0;
	PlayerInfo[playerid][pTicketNr][2] = 0;
	PlayerInfo[playerid][pLeader] = 0;
	PlayerInfo[playerid][pMember] = 0;
	PlayerInfo[playerid][pInt] = 0;
	PlayerInfo[playerid][pLocal] = 255;
	PlayerInfo[playerid][pModel] = 255;
	PlayerInfo[playerid][pPayDay] = 0;
	PlayerInfo[playerid][pPayDayHad] = 1;
	PlayerInfo[playerid][pTut] = 0;
	PlayerInfo[playerid][pWarns] = 0;
	PlayerInfo[playerid][pLocked] = 0;
	PlayerInfo[playerid][pBank] = 0;
	PlayerInfo[playerid][pDonateAccount] = 0;
	PlayerInfo[playerid][pBoxSkill] = 0;
	PlayerInfo[playerid][pKongfuSkill] = 0;
	PlayerInfo[playerid][pKickboxSkill] = 0;
	PlayerInfo[playerid][pCar] = 0;
	PlayerInfo[playerid][pDostup] = 2637663;
	PlayerInfo[playerid][pMuteTime] = 0;
	PlayerInfo[playerid][pMushrooms] = 0;
	PlayerInfo[playerid][pFuel] = 0;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "", "", "", "");
    
	while(strfind(inputtext, "%s",true) != -1)
	{
		strdel(inputtext,strfind(inputtext, "%s",true),strfind(inputtext, "%s",true)+2);
	}
	while(strfind(inputtext, "%",true) != -1)
	{
		strdel(inputtext,strfind(inputtext, "%",true),strfind(inputtext, "%",true)+2);
	}
	new gun,ammo, money;
	new string[512];
	new gunname[32];
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	switch(dialogid)
	{
		case 211+1:
		{
			if(response)
			{
			    new rand = random(sizeof(HouseInfo));
			    new randcvet = random(1+199);
			    new carrandN[10] = {400, 401, 404, 410, 419, 421, 436, 439, 458, 466};
				new carrandn = random(sizeof(carrandN));
				if(RobbingCar[playerid] == true) return SendClientMessage(playerid, COLOR_GREY, "Ты уже взял задание");
				zonapoiska[playerid] = GangZoneCreate(HouseInfo[rand][hCarx]-95,HouseInfo[rand][hCary]-80,HouseInfo[rand][hCarx]+70, HouseInfo[rand][hCary]+85);
				GangZoneShowForPlayer(playerid, zonapoiska[playerid], COLOR_BLACK);
			    switch(listitem)
			    {
			        case 0:
					{
			            ugoncar[playerid] = CreateVehicle(carrandN[carrandn], HouseInfo[rand][hCarx], HouseInfo[rand][hCary], HouseInfo[rand][hCarz], HouseInfo[rand][hCarc], randcvet, randcvet,300);
					    format(string, sizeof(string), "Пригони нам тачку марки %s, и мы тебе хорошо заплатим.", VehicleNames[carrandN[carrandn]-400]);
					    SendClientMessage(playerid, 0x6495EDFF, string);
			            SendClientMessage(playerid, 0x6495EDFF, "(( Чтобы взломать, зажмите и держите клавишу Спринт (по умолчанию пробел). Для отмены задания используй /cancel )).");
			            SendClientMessage(playerid, 0x6495EDFF, "Подобную тачку наши парни недавно видели. Я обозначил район на твоей карте.");
						RobbingCar[playerid] = true;
			            Fuell[ugoncar[playerid]] = 200;
						RepairVehicle(ugoncar[playerid]);
						LockCar(ugoncar[playerid]);
						IsLocked[ugoncar[playerid]] = 1;
						SetPVarInt(playerid, "ugontime", 1200);
			        }
			        case 1:
					{
					    if(PlayerInfo[playerid][pCarRobbingExp] < 1000) return SendClientMessage(playerid, 0x6495EDFF, "Мы не доверяем тебе угон такого класса авто, приходи когда наберешся опыта!");
					}
			        case 2:
					{
					    if(PlayerInfo[playerid][pCarRobbingExp] < 2000) return SendClientMessage(playerid, 0x6495EDFF, "Мы не доверяем тебе угон такого класса авто, приходи когда наберешся опыта!");
					}
			        case 3:
					{
						if(PlayerInfo[playerid][pCarRobbingExp] < 3000) return SendClientMessage(playerid, 0x6495EDFF, "Мы не доверяем тебе угон такого класса авто, приходи когда наберешся опыта!");
					}
			        case 4:
					{
					    if(PlayerInfo[playerid][pCarRobbingExp] < 4000) return SendClientMessage(playerid, 0x6495EDFF, "Мы не доверяем тебе угон такого класса авто, приходи когда наберешся опыта!");
					}
				}
			}
			else
			{
				return true;
			}
		}
	    case 211+2:
	    {
	        if(response)
			{
				PlayerInfo[playerid][pJob] = 15;
				SendClientMessage(playerid, 0x6495EDFF, "Добро пожаловать в команду!");
				SendClientMessage(playerid, 0x6495EDFF, "На автомойке всегда найдется работа. Если тебе не на чем доехать, можешь взять скутер в гараже.");
				SendClientMessage(playerid, 0x6495EDFF, "(( Для взлома авто, подойди к нужной машине и если авто закрыто, зажми SPACE (Спринт) ))");
			}
			else return true;
		}
	    case 1370:
		{
			if(!response)
			{
				if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
		    }
		    else if(response)
		    {
		        if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) return 0;
		        SetPlayerAttachedObject(playerid, 1, 1010, 1, 0.053070, -0.083673, -0.004646, 86.6, 354.2, 180.0, 1.0, 1.0, 1.0);
		    }
		}
		case 10:
		{
			if(response)
			{
				if(!strlen(inputtext))return ShowPlayerDialog(playerid,10,DIALOG_STYLE_INPUT, "{e23434}Отправить жалобу на игрока", "{FFCC33}Вы собираетесь отправить жалобу на игрока\nНапишите ID нарушителя:", "Готово", "Назад");
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "{FFCC00}Жалоба от %s[%d]: {FFFFFF}%s", sendername, playerid, (inputtext));
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
				SendClientMessage(playerid, 0x339933AA, "Ваша жалоба успешно была отправлена администраторам{FFFFFF}Ожидайте ответа");
				format(string, sizeof(string), "Жалоба от %s[%d]: %s", sendername, playerid, (inputtext));
				ABroadCast(0xA85400AA, string, 1);
				return true;
			}
			else
			{
			    new listitems[] = "{e23434}[1]{ffffff}Настройки\n{e23434}[2]{ffffff}Мои данные\n{e23434}[3]{ffffff}Команды сервера\n{e23434}[4]{ffffff}Администратция\n{e23434}[5]{ffffff}Смена пароля\n{e23434}[6]{ffffff}Очистить чат\n{e23434}[7]{ffffff}Слив денег\n{e23434}[8]{ffffff}Безопасность\n{e23434}[9]{ffffff}Смена ника\n{e23434}[10]{ffffff}Донат\n";
				ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "Личное меню", listitems, "Выбрать", "Отмена");
				return true;
			}
		}
		case 5576:
		{
			if(response)
			{
				new summa;
				if (RuletStart[playerid] == true) return SendClientMessage(playerid, COLOR_GREY, "Вы уже сделали ставку");
				summa = strval(inputtext);
				if(PlayerInfo[playerid][pCash] < summa) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
				if(summa < 200 && RuletkaStol[playerid] == 1 || summa > 1000000 && RuletkaStol[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя поставить меньше 200 и больше 1000000 вирт"); return true; }
				if(summa < 200 && RuletkaStol[playerid] == 2 || summa > 1000000 && RuletkaStol[playerid] == 2) { SendClientMessage(playerid, COLOR_GREY, "Нельзя поставить меньше 200 и больше 50000 вирт"); return true; }
				PlayerInfo[playerid][pCash] -= summa;
				RuletSum[playerid] = summa;
				RuletStart[playerid] =true;
				DestroyObject(Fishka[playerid]);
				if(summa <= 30000) Fishka[playerid] = CreateObject(1930,fishechkax[playerid],fishechkay[playerid],1006.0690,0.00,0.00,0.00);
				else if(summa > 30000 && summa <= 60000) Fishka[playerid] = CreateObject(1931,fishechkax[playerid],fishechkay[playerid],1006.0690,0.00,0.00,0.00);
				else if(summa > 60000 && summa < 100000) Fishka[playerid] = CreateObject(1932,fishechkax[playerid],fishechkay[playerid],1006.0690,0.00,0.00,0.00);
				else Fishka[playerid] = CreateObject(1933,fishechkax[playerid],fishechkay[playerid],1006.0690,0.00,0.00,0.00);
				Upravakazino[playerid] = false;
				SendClientMessage(playerid, COLOR_BLUE, "Вы сделали ставку");
			}
			else
			{
				Kazvihod(playerid);
			}
		}
		case 1:
		{
			new name[MAX_PLAYER_NAME];
			GetPlayerName(playerid, name, sizeof(name));
			if(response)
			{
				if(!strlen(inputtext))
				{
                    format(string,256, "{ffffff}Добро пожаловать на {FFCC33}Arizona Role Play\n\n{ffffff}Введите свой пароль\n{ffffff}Попыток для ввода пароля: {009933}", name);
					ShowPlayerDialog(playerid,1,DIALOG_STYLE_PASSWORD, "{CC0000}Авторизация",string, "Войти", "Отмена");
					return true;
				}
				new pass[256];
				GetPlayerName(playerid,playername,sizeof(playername));
				format(string,sizeof(string), "%s.ini",playername);
				new File = ini_openFile(string);
				ini_getString(File, "Key",pass);
				ini_closeFile(File);
				for(new i = strlen(inputtext); i != 0; --i)
 				switch(inputtext[i])
				{
                    case 'А'..'Я', 'а'..'я', ' ':
					return ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX, "Ошибка!", "{ffffff}Добро пожаловать на {FFCC33}Arizona Role Play\n\n{ffffff}Введите свой пароль.", "Повтор", "");
				}
				if(!strcmp((inputtext),pass,true))
				{
					OnPlayerLogin(playerid,(inputtext));
				}
				else
				{
					format(string,256, "{ffffff}Добро пожаловать на {FFCC33}Arizona Role Play\n\n{ffffff}Введите свой пароль.\n Осталось попыток: {e23434}2");
					ShowPlayerDialog(playerid,10008,DIALOG_STYLE_MSGBOX, "Ошибка!",string, "Повтор", "Выйти");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Для выхода из игры используйте /q(uit)");
				FixKickedPlayer[playerid] = 1;
			}
		}
		case 3439:
		{
			if(response)
			{
			    switch(listitem)
			    {
					case 0:
					{
						ShowPlayerDialog(playerid, 3440, DIALOG_STYLE_MSGBOX, "Спортзал", "Начать урок по Box?", "Начать", "Отменить");
						return true;
					}
					case 1:
					{
						ShowPlayerDialog(playerid, 3441, DIALOG_STYLE_MSGBOX, "Спортзал", "Начать урок по Kong-Fu?", "Начать", "Отменить");
						return true;
					}
					case 2:
					{
						ShowPlayerDialog(playerid, 3444, DIALOG_STYLE_MSGBOX, "Спортзал", "Начать урок по Kick-Box?", "Начать", "Отменить");
						return true;
					}
					case 3:
					{
						ShowPlayerDialog(playerid, 3442, DIALOG_STYLE_MSGBOX, "Спортзал", "Завершить урок по Box?", "Завершить", "Отменить");
						return true;
					}
					case 4:
					{
						ShowPlayerDialog(playerid, 3443, DIALOG_STYLE_MSGBOX, "Спортзал", "Завершить урок по Kong-Fu", "Завершить", "Отменить");
						return true;
					}
					case 5:
					{
						ShowPlayerDialog(playerid, 3445, DIALOG_STYLE_MSGBOX, "Спортзал", "Завершить урок по Kick-Box?", "Завершить", "Отменить");
						return true;
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 3440:
		{
			if(response)
			{
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				PlayerInfo[playerid][pBoxstyle] = 1;
 				PlayerInfo[playerid][pKstyle] = 0;
				PlayerInfo[playerid][pKickstyle] = 0;
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
				format(string,sizeof(string), "Вы начали урок по Box", sendername);
				SendClientMessage(playerid, COLOR_GREEN, string);
				SendClientMessage(playerid, COLOR_GREEN, "Начинайте бить грушу...");
				return true;
			}
			else
			{
				return true;
			}
		}
		case 3442:
		{
			if(response)
			{
				new sendername[MAX_PLAYER_NAME];
 				GetPlayerName(playerid, sendername, sizeof(sendername));
				PlayerInfo[playerid][pBoxstyle] = 0;
 				PlayerInfo[playerid][pKstyle] = 0;
				PlayerInfo[playerid][pKickstyle] = 0;
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
				format(string,sizeof(string), "Вы завершили урок по Box", sendername);
				SendClientMessage(playerid, COLOR_GREEN, string);
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Чтобы включить этот стиль напишите /box 1");
				return true;
			}
			else
			{
				return true;
			}
		}
		case 3445:
		{
			if(response)
			{
				new sendername[MAX_PLAYER_NAME];
 				GetPlayerName(playerid, sendername, sizeof(sendername));
				PlayerInfo[playerid][pBoxstyle] = 0;
 				PlayerInfo[playerid][pKstyle] = 0;
				PlayerInfo[playerid][pKickstyle] = 0;
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
				format(string,sizeof(string), "Вы завершили урок по Kick-Box", sendername);
				SendClientMessage(playerid, COLOR_GREEN, string);
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Чтобы включить этот стиль напишите /kickbox 1");
				return true;
			}
			else
			{
				return true;
			}
		}
		case 10055:
		{
			if(response)
			{
				new donates = strval(inputtext);
				if(donates < 1 || donates > 5) { SendClientMessage(playerid,COLOR_WHITE,"Неправильно введена цифра в поле ввода");OnPlayerCommandText(playerid,"/donate"); }
				{
					if(donates == 1)
					{ShowPlayerDialog(playerid, 10057, DIALOG_STYLE_INPUT, "Обмен", "{ffffff}1.500000$ [50 DonateMoney]\n{ffffff}2.1000000$ [100 DonateMoney]\n{ffffff}3.2500000$ [200 DonateMoney]\n{ffffff}4.6000000$ [500 DonateMoney]\n{ffffff}5.13000000$ [1000 DonateMoney]", "Выбрать", "Назад");}
					else if(donates == 2)
					{ShowPlayerDialog(playerid, 10060, DIALOG_STYLE_INPUT, "VIP аккаунт", "{ffffff}1.Купить BRONZE VIP [50 DonateMoney]\n{ffffff}2.Купить SILVER VIP [100 DonateMoney]\n{ffffff}3.Купить GOLD VIP [150 DonateMoney]", "Выбрать", "Назад");}
					else if(donates == 3)
					{
						if(PlayerInfo[playerid][pDonateMoney1] < 200) return SendClientMessage(playerid, COLOR_WHITE, "Не достаточно DonateMoney!");
						PlayerInfo[playerid][pGunSkill][0] = 100;
						PlayerInfo[playerid][pGunSkill][1] = 100;
						PlayerInfo[playerid][pGunSkill][3] = 100;
						PlayerInfo[playerid][pGunSkill][4] = 100;
						PlayerInfo[playerid][pGunSkill][5] = 100;
						PlayerInfo[playerid][pGunSkill][2] = 100;
						SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFFFF}Вы купили скиллы на оружие");
						SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFFFF}Подробней /myskill");
						PlayerInfo[playerid][pDonateMoney1] -= 200;
					}
					else if(donates == 4)
					{
						ShowPlayerDialog(playerid, 10070, DIALOG_STYLE_INPUT, "Стиля боя.", "{ffffff}1.Купить стиль Box. [10 DonateMoney]\n{ffffff}2.Купить стиль KongFu. [20 DonateMoney]\n{ffffff}3.Купить стиль KickBox. [30 DonateMoney]", "Выбрать", "Назад");
					}
					else if(donates == 5)
					{
						if(PlayerInfo[playerid][pDonateMoney1] < 250) return SendClientMessage(playerid, COLOR_WHITE, "Не достаточно DonateMoney!");
					    if(PlayerInfo[playerid][pWarns] >= 1)
						{
						    PlayerInfo[playerid][pWarns] = 0;
						    SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFFFF}Вы сняли все WARN с вашего акканута!");
						    PlayerInfo[playerid][pDonateMoney1] -= 250;
						}
						else
						{
						    SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFFFF}На вашем аккаунте нету варнов!");
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 10057:
		{
			if(response)
			{
				new donates = strval(inputtext);
				if(donates < 1 || donates > 5) { SendClientMessage(playerid,COLOR_WHITE,"Неправильно введена цифра в поле ввода");OnPlayerCommandText(playerid,"/donate"); }
				{
					if(donates == 1)
					{
						if(PlayerInfo[playerid][pDonateMoney1] < 10) return SendClientMessage(playerid, COLOR_WHITE, "Не достаточно DonateMoney!");
						PlayerInfo[playerid][pCash] += 500000;
						SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFFFF}Вы купили {e23434}500000 {FFFFFF}вирт!");
						SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFF00}Спасибо за покупку!");
						PlayerInfo[playerid][pDonateMoney1] -= 50;
					}
					else if(donates == 2)
					{
						if(PlayerInfo[playerid][pDonateMoney1] < 20) return SendClientMessage(playerid, COLOR_WHITE, "Не достаточно DonateMoney!");
						PlayerInfo[playerid][pCash] += 1000000;
						SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFFFF}Вы купили {e23434}1000000 {FFFFFF}вирт!");
						SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFF00}Спасибо за покупку!");
						PlayerInfo[playerid][pDonateMoney1] -= 100;
					}
					else if(donates == 3)
					{
						if(PlayerInfo[playerid][pDonateMoney1] < 50) return SendClientMessage(playerid, COLOR_WHITE, "Не достаточно DonateMoney!");
						PlayerInfo[playerid][pCash] += 2500000;
						SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFFFF}Вы купили {e23434}2500000 {FFFFFF}вирт!");
						SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFF00}Спасибо за покупку!");
						PlayerInfo[playerid][pDonateMoney1] -= 200;
					}
					else if(donates == 4)
					{
						if(PlayerInfo[playerid][pDonateMoney1] < 100) return SendClientMessage(playerid, COLOR_WHITE, "Не достаточно DonateMoney!");
						PlayerInfo[playerid][pCash] += 6000000;
						SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFFFF}Вы купили {e23434}10000000 {FFFFFF}вирт!");
						SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFF00}Спасибо за покупку!");
						PlayerInfo[playerid][pDonateMoney1] -= 500;
					}
					else if(donates == 5)
					{
						if(PlayerInfo[playerid][pDonateMoney1] < 150) return SendClientMessage(playerid, COLOR_WHITE, "Не достаточно DonateMoney!");
						PlayerInfo[playerid][pCash] += 13000000;
						SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFFFF}Вы купили {e23434}20000000 {FFFFFF}вирт!");
						SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFF00}Спасибо за покупку!");
						PlayerInfo[playerid][pDonateMoney1] -= 1000;
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 10060:
		{
			if(response)
			{
				new donates = strval(inputtext);
				if(donates < 1 || donates > 3) { SendClientMessage(playerid,COLOR_WHITE,"Неправильно введена цифра в поле ввода");OnPlayerCommandText(playerid,"/donate"); }
				{
					if(donates == 1)
					{
					    if(PlayerInfo[playerid][pDonateRank] == 1)return SendClientMessage(playerid,COLOR_GREY,"Вы уже имеете VIP статус 1 уровня!");
						if(PlayerInfo[playerid][pDonateMoney1] < 50) return SendClientMessage(playerid, COLOR_WHITE, "Не достаточно DonateMoney!");
						PlayerInfo[playerid][pDonateRank] = 1;
						SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFFFF}Вы купили {e23434}VIP 1 уровня");
						SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFF00}Спасибо за покупку! VIP команды (( {e23434}/viphelp{FFFF00} ))");
						PlayerInfo[playerid][pDonateMoney1] -= 50;
					}
					else if(donates == 2)
					{
					    if(PlayerInfo[playerid][pDonateRank] == 2)return SendClientMessage(playerid,COLOR_GREY,"Вы уже имеете VIP статус 2 уровня!");
						if(PlayerInfo[playerid][pDonateMoney1] < 100) return SendClientMessage(playerid, COLOR_WHITE, "Не достаточно DonateMoney!");
						PlayerInfo[playerid][pDonateRank] = 2;
						SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFFFF}Вы купили {e23434}VIP 2 уровня");
						SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFF00}Спасибо за покупку! VIP команды (( {e23434}/viphelp{FFFF00} ))");
						PlayerInfo[playerid][pDonateMoney1] -= 100;
					}
					else if(donates == 3)
					{
					    if(PlayerInfo[playerid][pDonateRank] == 3)return SendClientMessage(playerid,COLOR_GREY,"Вы уже имеете VIP статус 3 уровня!");
						if(PlayerInfo[playerid][pDonateMoney1] < 150) return SendClientMessage(playerid, COLOR_WHITE, "Не достаточно DonateMoney!");
						PlayerInfo[playerid][pDonateRank] = 3;
						SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFFFF}Вы купили {e23434}VIP 3 уровня");
						SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFF00}Спасибо за покупку! VIP команды (( {e23434}/viphelp{FFFF00} ))");
						PlayerInfo[playerid][pDonateMoney1] -= 150;
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 10070:
		{
			if(response)
			{
				new donates = strval(inputtext);
				if(donates < 1 || donates > 4) { SendClientMessage(playerid,COLOR_WHITE,"Неправильно введена цифра в поле ввода");OnPlayerCommandText(playerid,"/donate"); }
				{
					if(donates == 1)
					{
						if(PlayerInfo[playerid][pDonateMoney1] < 10) return SendClientMessage(playerid, COLOR_WHITE, "Не достаточно DonateMoney!");
						PlayerInfo[playerid][pBoxSkill] = 200;
						SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFFFF}Вы купили {e23434}стиль боя BOX");
						SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFF00}Спасибо за покупку! Подробнее (( {e23434}/mystyle{FFFF00} ))");
						PlayerInfo[playerid][pDonateMoney1] -= 10;
					}
					else if(donates == 2)
					{
						if(PlayerInfo[playerid][pDonateMoney1] < 20) return SendClientMessage(playerid, COLOR_WHITE, "Не достаточно DonateMoney!");
						PlayerInfo[playerid][pKongfuSkill] = 200;
						SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFFFF}Вы купили {e23434}стиль боя KongFu");
						SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFF00}Спасибо за покупку! Подробнее (( {e23434}/mystyle{FFFF00} ))");
						PlayerInfo[playerid][pDonateMoney1] -= 20;
					}
					else if(donates == 3)
					{
						if(PlayerInfo[playerid][pDonateMoney1] < 30) return SendClientMessage(playerid, COLOR_WHITE, "Не достаточно DonateMoney!");
						PlayerInfo[playerid][pKickboxSkill] = 200;
						SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFFFF}Вы купили {e23434}стиль боя KickBox");
						SendClientMessage(playerid, 0x6495EDFF, "{e23434}[Arizona RP]: {FFFF00}Спасибо за покупку! Подробнее (( {e23434}/mystyle{FFFF00} ))");
						PlayerInfo[playerid][pDonateMoney1] -= 30;
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 1499:
	    {
			if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
				        ShowPlayerDialog(playerid,1500,DIALOG_STYLE_MSGBOX, "Автошкола", "Желаете приобрести лицензию на воздушный транспорт?\nСтоймость: 8000.", "Да", "Нет");
				    }
				    case 1:
				    {
				        ShowPlayerDialog(playerid,1501,DIALOG_STYLE_MSGBOX, "Автошкола", "Желаете приобрести лицензию на рыбаловство?\nСтоймость: 5000.", "Да", "Нет");
					}
				    case 2:
					{
					    ShowPlayerDialog(playerid,1502,DIALOG_STYLE_MSGBOX, "Автошкола", "Желаете приобрести лицензию на водный транспорт?\nСтоймость: 10000.", "Да", "Нет");
					}
				    case 3:
				    {
				        ShowPlayerDialog(playerid,1503,DIALOG_STYLE_MSGBOX, "Автошкола", "Желаете приобрести лицензию на оружие?\nСтоймость: 30000.", "Да", "Нет");
					}
				    case 4:
				    {
				        ShowPlayerDialog(playerid,1504,DIALOG_STYLE_MSGBOX, "Автошкола", "Желаете приобрести лицензию на бизнес?\nСтоймость: 50000.", "Да", "Нет");
					}
				}
			}
			else
			{
			    return true;
			}
		}
		case 1500:
		{
		    if(response)
		    {
				if(PlayerInfo[playerid][pCash]< 8000)return SendClientMessage(playerid, 0x3366CCAA, "[Автошкола]: {e23434}У вас недостаточно денег");
				if(PlayerInfo[playerid][pFlyLic] == 1)return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть лицензия на воздушный транспорт");
				PlayerInfo[playerid][pCash] -= 8000;
          		PlayerInfo[playerid][pFlyLic] = 1;
          		SendClientMessage(playerid, 0x3366CCAA, "[Автошкола]: {00CCFF}Вы приобрели лиецнзию на воздушный транспорт.");
                SendClientMessage(playerid, 0x3366CCAA, "[Автошкола]: {00CCFF}Спасибо за покупку! Всего вам доброго и удачи в небесах.");
			}
			else
			{
			    return true;
			}
		}
		case 1501:
		{
		    if(response)
		    {
				if(PlayerInfo[playerid][pCash]< 5000)return SendClientMessage(playerid, 0x3366CCAA, "[Автошкола]: {e23434}У вас недостаточно денег");
				if(PlayerInfo[playerid][pFishLic] == 1)return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть лицензия на рыболовство");
				PlayerInfo[playerid][pCash] -= 5000;
          		PlayerInfo[playerid][pFishLic] = 1;
          		SendClientMessage(playerid, 0x3366CCAA, "[Автошкола]: {00CCFF}Вы приобрели лиецнзию на рыболовство.");
                SendClientMessage(playerid, 0x3366CCAA, "[Автошкола]: {00CCFF}Спасибо за покупку! Всего вам доброго и уадчной рыбалки.");
			}
			else
			{
			    return true;
			}
		}
		case 1502:
		{
		    if(response)
		    {
				if(PlayerInfo[playerid][pCash]< 10000)return SendClientMessage(playerid, 0x3366CCAA, "[Автошкола]: {e23434}У вас недостаточно денег");
				if(PlayerInfo[playerid][pBoatLic] == 1)return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть лицензия на водный транспорт");
				PlayerInfo[playerid][pCash] -= 10000;
          		PlayerInfo[playerid][pBoatLic] = 1;
          		SendClientMessage(playerid, 0x3366CCAA, "[Автошкола]: {00CCFF}Вы приобрели лицензию на водный траснпорт.");
                SendClientMessage(playerid, 0x3366CCAA, "[Автошкола]: {00CCFF}Спасибо за покупку! Всего вам доброго и удачи в морях.");
			}
			else
			{
			    return true;
			}
		}
		case 1503:
		{
		    if(response)
		    {
				if(PlayerInfo[playerid][pCash]< 30000)return SendClientMessage(playerid, 0x3366CCAA, "[Автошкола]: {e23434}У вас недостаточно денег");
				if(PlayerInfo[playerid][pGunLic] == 1)return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть лицензия на оружие");
				PlayerInfo[playerid][pCash] -= 30000;
          		PlayerInfo[playerid][pGunLic] = 1;
          		SendClientMessage(playerid, 0x3366CCAA, "[Автошкола]: {00CCFF}Вы приобрели лицензию на оружие.");
                SendClientMessage(playerid, 0x3366CCAA, "[Автошкола]: {00CCFF}Спасибо за покупку! Всего вам доброго и удачи в стрельбе.");
			}
			else
			{
			    return true;
			}
		}
		case 1504:
		{
		    if(response)
		    {
				if(PlayerInfo[playerid][pCash]< 50000)return SendClientMessage(playerid, 0x3366CCAA, "[Автошкола]: {e23434}У вас недостаточно денег");
				if(PlayerInfo[playerid][pBisLic] == 1)return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть лицензия на бизнес");
				PlayerInfo[playerid][pCash] -= 50000;
          		PlayerInfo[playerid][pBisLic] = 1;
          		SendClientMessage(playerid, 0x3366CCAA, "[Автошкола]: {00CCFF}Вы приобрели лицензию на бизнес.");
                SendClientMessage(playerid, 0x3366CCAA, "[Автошкола]: {00CCFF}Спасибо за покупку! Всего вам доброго и удачи в развитии бизнеса.");
			}
			else
			{
			    return true;
			}
		}
		case 10502:
		{
			if(response)
			{
			    new cvettt;
				cvettt = strval(inputtext);
				PlayerInfo[playerid][pColor1] = cvettt;
				SendClientMessage(playerid, COLOR_WHITE, "Перекраска завершена , чтобы задействовать перекраску, введите /fixcar");
				RemovePlayerFromVehicleAc(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10501:
		{
		    if(response)
			{
			    new cvettt;
				cvettt = strval(inputtext);
				PlayerInfo[playerid][pColor] = cvettt;
				ShowPlayerDialog(playerid, 10502, DIALOG_STYLE_INPUT, "Цвета","Введите id второго желаемого цвета, id's цветов можно посмотреть в группе сервера,\nа так же в интернете", "Выбрать", "Отмена");
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10500:
		{
		    if(response)
		    {
		        ShowPlayerDialog(playerid, 10501, DIALOG_STYLE_INPUT, "Цвета","Введите id первого желаемого цвета, id цветов можно посмотреть в группе сервера,\nа так же в интернете", "Выбрать", "Отмена");
			}
			else
			{
                RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 1848:
		{
    		if(response)
    		{
        		new year,month, day,
             	hour,minute,second,
             	bag_string[255],
             	player_name[MAX_PLAYER_NAME],
             	iniFile,
             	Float:x,Float:y,Float:z;
				if(!strlen(inputtext)) return ShowPlayerDialog(playerid,1848,DIALOG_STYLE_INPUT,"{FFFACD}Сообщение о баге","{FFFFFF}Здравствуйте, если вы действительно обнаружили баг,\nто подробно опишите как и где он был замечен:\n\n{FF6347}Вы ничего не ввели!","Повтор","Отмена");
        		if(strlen(inputtext) < 6 || strlen(inputtext) > 50) return ShowPlayerDialog(playerid,1848,DIALOG_STYLE_INPUT,"{FFFACD}Сообщение о баге","{FFFFFF}Здравствуйте, если вы действительно обнаружили баг,\nто подробно опишите как и где он был замечен:\n\n{FF6347}В сообщении должно быть от 6 до 50 символов!\n","Повтор","Отмена");
		        for(new i = strlen(inputtext)-1; i != -1; i--)
		        {
		             if((inputtext[i] >= '0' && inputtext[i] <= '9') || (inputtext[i] >= 'a' &&  inputtext[i] <= 'z') || (inputtext[i] >= 'A' && inputtext[i] <= 'Z') || (inputtext[i] >= 'А' && inputtext[i] <= 'Я') || (inputtext[i] >= 'а' && inputtext[i] <= 'я') || (inputtext[i] >= ' ')) continue;
		             else return ShowPlayerDialog(playerid,1848,DIALOG_STYLE_INPUT,"{FFFACD}Сообщение о баге","{FFFFFF}Здравствуйте, если вы действительно обнаружили баг,\nто подробно опишите как и где он был замечен:\n\n{FF6347}Сообщение может содержать только символы кирилицы, латиницы и цифры!","Повтор","Отмена");
		        }
        		strmid(text_bag,inputtext,0,strlen(inputtext),51);
		        gettime(hour,minute,second);
		        getdate(year,month,day);
				format(bag_string,sizeof(bag_string),"/bag/%d.%d.%d.%d.%d.%d.ini",day,month,year,hour,minute,second);
        		iniFile = ini_createFile(bag_string);
				if(iniFile < 0)
             	iniFile = ini_openFile(bag_string);
		        GetPlayerName(playerid,player_name,MAX_PLAYER_NAME);
		        ini_setString(iniFile,"Отправитель",player_name);
		        ini_setString(iniFile,"Сообщение",text_bag);
		        ini_closeFile(iniFile);
        		PlayerPlaySound(playerid,30802,x,y,z);
				ShowPlayerDialog(playerid,1112,DIALOG_STYLE_MSGBOX,"{FFFACD}Завершение","{FFFFFF}Мы благодарим вас за предоставленную информацию","Спасибо","");
    		}
    		else return SendClientMessage(playerid,0xFF6347AA,"Следующую попытку вы сможете сделать только через минуту!");
		}
		case 1849:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pCash] < 2000) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
				PlayerInfo[playerid][pPasport] = 1;
				PlayerInfo[playerid][pCash] -= 2000;
				SendClientMessage(playerid, COLOR_GREEN, "Ваш паспорт зарегистрирован, поздравляем! Подробнее о себе: {FFFFFF}/showpass");
			}
			else
			{
			    ShowPlayerDialog(playerid,1849,DIALOG_STYLE_MSGBOX, "Паспорт", "Напоминаем вам , без паспорта вы не сможете вступить в гос. организации , сдать на права , вас не впустят в оружейный магазин и многое другое! ", "Ок", "");
			}
		}
		case 1850:
		{
		    if(response)// Грузчики
		    {
		        SetPlayerRaceCheckpoint(playerid, 1, 2137.8918,-2280.1104,20.6719, 0.0, 0.0, 0.0, 3); // 2137.8918,-2280.1104,20.6719
				CP[playerid] = 0;
				SendClientMessage(playerid, COLOR_GREY, "Rafael: {FFFFFF}Я пометил тебе на карте местонахождение работы грузчиков. Ступай туда!");
				PlayerInfo[playerid][pQuest] = 2;
		    }
		    else
		    {
                SendClientMessage(playerid, COLOR_GREY, "Rafael: {FFFFFF}Как скажешь... Попробуй в другой раз.");
				PlayerInfo[playerid][pQuest] = 2;
		    }
		}
		case 1851:
		{
		    if(response)
		    {
		        SetPlayerRaceCheckpoint(playerid, 1, 1081.2273,-1702.5182,13.5469, 0.0, 0.0, 0.0, 3);
				CP[playerid] = 0;
				SendClientMessage(playerid, COLOR_GREY, "Rafael: {FFFFFF}Я пометил тебе на карте местонахождение автошколы. Ступай туда!");
				PlayerInfo[playerid][pQuest] = 3;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Rafael: {FFFFFF}Как хорошо , что ты уже что-то знаешь в этом штате. Удачи на экзамене!");
				PlayerInfo[playerid][pQuest] = 3;
			}
		}
		case 663: // Если ИД диалога занят, можете заменить на своё. К примеру 8567.. и т.д.
	    {
	        if(response)
	        {
	            if(Mper[playerid] == 1) return SendClientMessage(playerid,COLOR_GREY,"Вы уже участвуете!!!");
	            Mper[playerid] = 1;
	            ACP_SetPlayerPos(playerid, MpTp[playerid][0],MpTp[playerid][1],MpTp[playerid][2]);
	            SendClientMessage(playerid,0xFF0000, "Вы приняли участие в мероприятии!"); //текст можно заменить на свой.
	        }
	        else
	        {
	            Mper[playerid] = 0;
	            SendClientMessage(playerid,0xAFAFAFAA, "Вы отказались от участия в мероприятии!"); //текст можно заменить на свой.
	        }
	    }
	    case 666:
	    {
	        if(response)
	        {
	            mpdv = 1;
	            ShowPlayerDialog(playerid, 665, DIALOG_STYLE_INPUT, "Приз", "Введите сумму приза (Donate):", "Принять", "");
			}
			else
			{
			    mpdv = 2;
			    ShowPlayerDialog(playerid, 665, DIALOG_STYLE_INPUT, "Приз", "Введите сумму приза (Virt):", "Принять", "");
			}
	    }
		case 667:
		{
		    if(response)
		    {
		        new sendername[MAX_PLAYER_NAME];
		        new pobeda = strval(inputtext);
		        GetPlayerName(pobeda,sendername,sizeof(sendername));
		        new vin[15];
				if(mpdv == 1) { vin = "Доната"; }
				else if(mpdv == 2) { vin = "Вирт"; }
				format(string,sizeof(string),"Победителем мероприятия становится: {e23434}%s{FFFFFF}. Он получает {e23434}%d{FFFFFF} %s",sendername,mppriz,vin);
				SendClientMessageToAll(COLOR_WHITE,string);
				switch(mpdv)
				{
				    case 1:
				    {
						PlayerInfo[pobeda][pDonateMoney1] += mppriz;
						mppriz = 0;
						mpdv = 0;
						mpon = 0;
						for(new i = 0; i < MAX_PLAYERS; i++)
			            {
					        if(Mper[i] == 1)//return SendClientMessage(playerid,COLOR_GREY,"Вы не участник мероприятия");
							{
			                    Mper[i] = 0;
							}
							DelGun(i);
						}
				    }
				    case 2:
					{
					    PlayerInfo[pobeda][pCash] += mppriz;
						mppriz = 0;
						mpdv = 0;
						mpon = 0;
						for(new i = 0; i < MAX_PLAYERS; i++)
			            {
					        if(Mper[i] == 1)//return SendClientMessage(playerid,COLOR_GREY,"Вы не участник мероприятия");
							{
			                    Mper[i] = 0;
							}
							DelGun(i);
						}
					}
				}
			}
		}
	    case 664:
		{
		    if(response)
		    {
		        switch(listitem)
				{
					case 0: // Приз
					{
					    ShowPlayerDialog(playerid, 666, DIALOG_STYLE_MSGBOX,"Выбор","Какой валютой будет приз?","Донат","Вирты");
					}
					case 1: // Старт
					{
					    OnPlayerCommandText(playerid,"/mpstart");
					}
					case 2: // Стоп
					{
					    OnPlayerCommandText(playerid,"/mpend");
					}
					case 3: // Оружие
					{
					    OnPlayerCommandText(playerid,"/mpgun");
					}
					case 4: // Победитель
					{
					    ShowPlayerDialog(playerid, 667, DIALOG_STYLE_INPUT, "Победитель", "Введите ид игрока:", "Принять", "Отмена");
					}
				}
			}
		}
		case 665:
		{
			if(response)
			{
			    switch(inputtext[playerid])
				{
					case 'А'..'Я', 'а'..'я', 'A'..'Z', 'a'..'z', ' ':
					return SendClientMessage(playerid,COLOR_GREY,"В призе не должны быть буквы!");
				}
				new mpppriz = strval(inputtext);
				mppriz = mpppriz;
				format(string,sizeof(string),"Приз: %d. Успешно назначен!",mppriz);
				SendClientMessage(playerid,COLOR_GREY,string);
			}
		}
		case 1488:
		{
		    if(response)
		    {
				if(PlayerInfo[playerid][pCash] < 200) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег на аренду транспорта!"),RemovePlayerFromVehicleAc(playerid);
				PlayerInfo[playerid][pCash] -= 200;
				SendClientMessage(playerid, COLOR_GREEN, "Вам выдали ключи от данного транспорта.");
				SendClientMessage(playerid, COLOR_RED, "Если вы выйдите из машины, то аренда снимается автоматически.");
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 14488:
		{
			new carid = GetPlayerVehicleID(playerid);
			if(response)
			{
				if(listitem==0)
				{
					GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,true,objective);
				}
				if(listitem==1)
				{
					GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(carid,engine,lights,alarm,doors,true,boot,objective);
				}
				if(listitem==2)
				{
					GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,false,objective);
				}
				if(listitem==3)
				{
					GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(carid,engine,lights,alarm,doors,false,boot,objective);
				}
				if(listitem==4)
				{
					GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(carid,engine,true,alarm,doors,bonnet,boot,objective);
				}
				if(listitem==5)
				{
					GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(carid,engine,false,alarm,doors,bonnet,boot,objective);
				}
			}
		}
		case 10600:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 500000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 558;
		        PlayerInfo[playerid][pCash] -= 500000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы машина появилась у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свою машину?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10601:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 700000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 559;
		        PlayerInfo[playerid][pCash] -= 700000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы машина появилась у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свою машину?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10602:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 670000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 565;
		        PlayerInfo[playerid][pCash] -= 670000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы машина появилась у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свою машину?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10603:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 700000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 562;
		        PlayerInfo[playerid][pCash] -= 700000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы машина появилась у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свою машину?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10604:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 750000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 560;
		        PlayerInfo[playerid][pCash] -= 750000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы машина появилась у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свою машину?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10605:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 400000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 534;
		        PlayerInfo[playerid][pCash] -= 400000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы машина появилась у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свою машину?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10606:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 350000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 575;
		        PlayerInfo[playerid][pCash] -= 350000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы машина появилась у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свою машину?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10607:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 300000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 567;
		        PlayerInfo[playerid][pCash] -= 300000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы машина появилась у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свою машину?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10608:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 900000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 411;
		        PlayerInfo[playerid][pCash] -= 900000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы машина появилась у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свою машину?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10609:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 350000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 576;
		        PlayerInfo[playerid][pCash] -= 350000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы машина появилась у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свою машину?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10610:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 950000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 541;
		        PlayerInfo[playerid][pCash] -= 950000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы машина появилась у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свою машину?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10611:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 900000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 522;
		        PlayerInfo[playerid][pCash] -= 900000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы мотоцикл появился у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свой мотоцикл?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10612:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 850000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 521;
		        PlayerInfo[playerid][pCash] -= 850000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы мотоцикл появился у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свой мотоцикл?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10613:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 800000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 461;
		        PlayerInfo[playerid][pCash] -= 800000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы мотоцикл появился у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свой мотоцикл?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10614:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 750000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 463;
		        PlayerInfo[playerid][pCash] -= 750000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы мотоцикл появился у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свой мотоцикл?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10615:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 850000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 468;
		        PlayerInfo[playerid][pCash] -= 850000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы мотоцикл появился у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свой мотоцикл?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10616:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 70000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 462;
		        PlayerInfo[playerid][pCash] -= 70000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы скутер появился у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свой скутер?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10617:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 700000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 471;
		        PlayerInfo[playerid][pCash] -= 700000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы квадроцикл появился у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свой квадроцикл?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10618:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 800000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 586;
		        PlayerInfo[playerid][pCash] -= 800000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы мотоцикл появился у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свой мотоцикл?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10619:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 925000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 451;
		        PlayerInfo[playerid][pCash] -= 925000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы машина появилась у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свою машину?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10620:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 600000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 477;
		        PlayerInfo[playerid][pCash] -= 600000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы машина появилась у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свою машину?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10621:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 1000000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 494;
		        PlayerInfo[playerid][pCash] -= 1000000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы машина появилась у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свою машину?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10622:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 770000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 506;
		        PlayerInfo[playerid][pCash] -= 770000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы машина появилась у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свою машину?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10623:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 820000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 495;
		        PlayerInfo[playerid][pCash] -= 820000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы машина появилась у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свою машину?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10624:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 1200000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 571;
		        PlayerInfo[playerid][pCash] -= 1200000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы машина появилась у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свою машину?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10625:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 20000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 509;
		        PlayerInfo[playerid][pCash] -= 20000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы велосипед появилася у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свой велосипед?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10626:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 35000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 510;
		        PlayerInfo[playerid][pCash] -= 35000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы велосипед появился у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свой велосипед?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 10627:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!"),RemovePlayerFromVehicleAc(playerid);
		        if(PlayerInfo[playerid][pCash] < 1100000)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег!"),RemovePlayerFromVehicleAc(playerid);
		        PlayerInfo[playerid][pCar] = 568;
		        PlayerInfo[playerid][pCash] -= 1100000;
		        SendClientMessage(playerid, COLOR_GREEN, "Спасибо за покупку. Для того чтобы машина появилась у вашего дома, введите /fixcar");
		        format(string, sizeof(string), "Желаете перекрасить свою машину?");
				ShowPlayerDialog(playerid,10500,DIALOG_STYLE_MSGBOX, "Покраска",string, "Да", "Нет");
				CompVehDel(playerid);
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		case 11111:
		{
			if(response)
			{
				if(listitem == 0)
				{
					ShowPlayerDialog(playerid,11112,2,"Маскировка","Полицейский\nАрмеец\nЛицензер\nФБР\nРаботник Мэрия\nМедик\nРаботник новостей","Выбрать","Отмена");
				}
				if(listitem == 1)
				{
					ShowPlayerDialog(playerid,11113,2,"Маскировка","Vagos Gang\nGroove Gang\nAztecas Gang\nBallas Gang\nRifa Gang","Выбрать","Отмена");
				}
				if(listitem == 2)
				{
					ShowPlayerDialog(playerid,11114,2,"Маскировка","\nРусская мафия\nЯкудза\nLCN","Выбрать","Отмена");
				}
				if(listitem == 3)
				{
					new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s переоделся в Байкера",sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSkin(playerid, 248);
					Masked[playerid] = 1;
				}
				if(listitem == 4)
				{
					new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s переоделся в обычную одежду",sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					Masked[playerid] = 0;
				}
				if(listitem == 5)
				{
					new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s переоделся в СтритРейсера",sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSkin(playerid, 21);
					Masked[playerid] = 1;
				}
				if(listitem == 6)
				{
				    new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s переоделся в бомжа",sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSkin(playerid, 239);
					Masked[playerid] = 1;
				}
				if(listitem == 7)
				{
				    new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s переоделся в прохожего",sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSkin(playerid, 36);
					Masked[playerid] = 1;
				}
			}
		}
		case 11112:
		{
			if(response)
			{
				if(listitem == 0)
				{
					new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s переоделся в Полицейского",sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSkin(playerid, 280);
					Masked[playerid] = 1;
				}
				if(listitem == 1)
				{
					new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s переоделся в Армейца",sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSkin(playerid, 287);
					Masked[playerid] = 1;
				}
				if(listitem == 2)
				{
					new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s переоделся в Лицензера",sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSkin(playerid, 59);
					Masked[playerid] = 1;
				}
				if(listitem == 3)
				{
					new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s переоделся в ФБР",sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSkin(playerid, 286);
					Masked[playerid] = 1;
				}
				if(listitem == 4)
				{
					new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s переоделся в Работника Мэрии",sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSkin(playerid, 57);
					Masked[playerid] = 1;
				}
				if(listitem == 5)
				{
					new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s переоделся в Медика",sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSkin(playerid, 70);
					Masked[playerid] = 1;
				}
				if(listitem == 6)
				{
					new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s переоделся в Работника News",sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSkin(playerid, 261);
					Masked[playerid] = 1;
				}
			}
		}
		case 11113:
		{
			if(response)
			{
				if(listitem == 0)
				{
					new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s переоделся в Vagos",sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSkin(playerid, 109);
					Masked[playerid] = 1;
				}
				if(listitem == 1)
				{
					new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s переоделся в Groove",sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSkin(playerid, 106);
					Masked[playerid] = 1;
				}
				if(listitem == 2)
				{
					new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s переоделся в Aztecas",sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSkin(playerid, 115);
					Masked[playerid] = 1;
				}
				if(listitem == 3)
				{
					new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s переоделся в Ballas",sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSkin(playerid, 104);
					Masked[playerid] = 1;
				}
				if(listitem == 4)
				{
					new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s переоделся в Rifa",sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSkin(playerid, 173);
					Masked[playerid] = 1;
				}
			}
		}
		case 11114:
		{
			if(response)
			{
				if(listitem == 0)
				{
					new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s переоделся в Русскую Мафию",sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSkin(playerid, 111);
					Masked[playerid] = 1;
				}
				if(listitem == 1)
				{
					new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s переоделся в Якудза",sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSkin(playerid, 123);
					Masked[playerid] = 1;
				}
				if(listitem == 2)
				{
					new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s переоделся в LCN",sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSkin(playerid, 223);
					Masked[playerid] = 1;
				}
			}
		}
		case 3389:
		{
			new sendername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			for(new h = 0; h < sizeof(BizzInfo); h++)
			{
				new cena = BizzInfo[h][bPrice];
				new cena2 = BizzInfo[h][bPrice] *2;
				new cena3 = BizzInfo[h][bPrice] *3;
				new cena4 = BizzInfo[h][bPrice] *4;
				new cena5 = BizzInfo[h][bPrice] *5;
				new cena6 = BizzInfo[h][bPrice] *6;
				if(response)
				{
				    switch(listitem)
				    {
						case 0:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if (PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 30;
								BizzInfo[h][b2Till] +=cena;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								format(string,128, "«Сытость» пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), "съела(а) бургер");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
								return true;
							}
						}
						case 1:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return	SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena2) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 40;
								BizzInfo[h][b2Till] += cena2;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena2;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								format(string,128, "«Сытость» пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), "съела(а) рыбный суп");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0,1);
								return true;
							}
						}
						case 2:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena3) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 50;
								BizzInfo[h][b2Till] += cena3;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena3;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								format(string,128, "«Сытость» пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), "съела(а) большой бургер");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0,1);
								return true;
							}
						}
						case 3:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena4) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 60;
								BizzInfo[h][b2Till] += cena4;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena4;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								format(string,128, "«Сытость» пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								format(string,sizeof(string), "съела(а) котлеты");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
								return true;
							}
						}
						case 4:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena5) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 70;
								BizzInfo[h][b2Till] += cena5;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena5;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								format(string,128, "«Сытость» пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								format(string,sizeof(string), "съела(а) пельмени");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
								return true;
							}
						}
						case 5:
						{
							new Float:health;
	 						GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena6) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								BizzInfo[h][b2Till] += cena6;
								PlayerInfo[playerid][pSatiety] += 80;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena6;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								format(string,128, "«Сытость» пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), "съела(а) гамбургер");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
								return true;
							}
						}
					}
				}
				else
				{
					return true;
				}
			}
		}
		case 5589:
		{
			for(new h = 0; h < sizeof(BizzInfo); h++)
			{
				new cena1 = BizzInfo[h][bPrice];
				new cena2 = BizzInfo[h][bPrice]*2;
				new cena3 = BizzInfo[h][bPrice];
				new cena4 = BizzInfo[h][bPrice]*3;
				new cena5 = BizzInfo[h][bPrice]*5;
				new cena6 = BizzInfo[h][bPrice]*10;
				new cena7 = BizzInfo[h][bPrice]*15;
				if(response)
				{
				    switch(listitem)
				    {
						case 0:
						{
							if(PlayerToPoint(20, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena1) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								BizzInfo[h][b2Till] += cena1;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena1;
								new randphone = 1000 + random(899999);
								PlayerInfo[playerid][pPnumber] = randphone;
								format(string, sizeof(string), "Вы купили новый номер телефона. Ваш новый номер: %d", randphone);
								SendClientMessage(playerid, 0x6495EDFF, string);
								new bizinfo[400];
							  	format(bizinfo,sizeof(bizinfo), " Номер телефона\t[$%d]\n Телефонная книга\t[$%d]\n MP3-Player\t\t[$%d]\n Билет удачи\t\t[$%d]\n Газовый баллончик\t[$%d]\n Аптечка(25 шт.)\t[$%d]\n фотоаппарат(10 шт.)\t[$%d]",cena1,cena2,cena3,cena4,cena5,cena6,cena7);
    							ShowPlayerDialog(playerid, 5589, DIALOG_STYLE_LIST, "Магазин 24/7", bizinfo, "Купить", "Отмена");
								return true;
							}
						}
						case 1:
						{
							if(PlayerToPoint(20, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena2) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								BizzInfo[h][b2Till] += cena2;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena2;
								PlayerInfo[playerid][pPhoneBook] = 1;
								PlayerInfo[playerid][pDirectory] = 1;
								SendClientMessage(playerid, 0x6495EDFF, "Вы купили телефонную книгу. Теперь вы можете узнать номер любого игрока!");
								SendClientMessage(playerid, 0x6495EDFF, "Введите: /number <id/name>.");

								new bizinfo[400];
							  	format(bizinfo,sizeof(bizinfo), " Номер телефона\t[$%d]\n Телефонная книга\t[$%d]\n MP3-Player\t\t[$%d]\n Билет удачи\t\t[$%d]\n Газовый баллончик\t[$%d]\n Аптечка(25 шт.)\t[$%d]\n фотоаппарат(10 шт.)\t[$%d]",cena1,cena2,cena3,cena4,cena5,cena6,cena7);
    							ShowPlayerDialog(playerid, 5589, DIALOG_STYLE_LIST, "Магазин 24/7", bizinfo, "Купить", "Отмена");
								return true;
							}
						}
						case 2:
						{
							if(PlayerToPoint(20, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena3) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								BizzInfo[h][b2Till] += cena3;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena3;
								PlayerInfo[playerid][pCDPlayer] = 1;
								format(string, sizeof(string), "Вы купили MP3 Плеер");
								SendClientMessage(playerid, 0x6495EDFF, string);

								new bizinfo[400];
							  	format(bizinfo,sizeof(bizinfo), " Номер телефона\t[$%d]\n Телефонная книга\t[$%d]\n MP3-Player\t\t[$%d]\n Билет удачи\t\t[$%d]\n Газовый баллончик\t[$%d]\n Аптечка(25 шт.)\t[$%d]\n фотоаппарат(10 шт.)\t[$%d]",cena1,cena2,cena3,cena4,cena5,cena6,cena7);
    							ShowPlayerDialog(playerid, 5589, DIALOG_STYLE_LIST, "Магазин 24/7", bizinfo, "Купить", "Отмена");
								return true;
							}
						}
						case 3:
						{
							if(PlayerToPoint(20, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena4) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								BizzInfo[h][b2Till] += cena4;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena4;
						        new randone = 1 + random(11);
						        new randtwo = 1 + random(11);
						        new randtree = 1 + random(11);
						        PlayerInfo[playerid][pTicketNr][0] = randone;
						        PlayerInfo[playerid][pTicketNr][1] = randtwo;
						        PlayerInfo[playerid][pTicketNr][2] = randtree;
								PlayerInfo[playerid][pTicket] = 1;
						        SendClientMessage(playerid, 0x6495EDFF, "Билет удачи приобретен,если вам выпадут 3 одинаковых числа, то вы выиграете 10 000 вирт");
						        SendClientMessage(playerid, 0x6495EDFF, "(( Введите /prizeticket для того чтобы узнать номера, /giveticket чтобы получить выигрыш ))");

								new bizinfo[400];
							  	format(bizinfo,sizeof(bizinfo), " Номер телефона\t[$%d]\n Телефонная книга\t[$%d]\n MP3-Player\t\t[$%d]\n Билет удачи\t\t[$%d]\n Газовый баллончик\t[$%d]\n Аптечка(25 шт.)\t[$%d]\n фотоаппарат(10 шт.)\t[$%d]",cena1,cena2,cena3,cena4,cena5,cena6,cena7);
    							ShowPlayerDialog(playerid, 5589, DIALOG_STYLE_LIST, "Магазин 24/7", bizinfo, "Купить", "Отмена");
								return true;
							}
						}
						case 4:
						{
							if(PlayerToPoint(20, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena5) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								BizzInfo[h][b2Till] += cena5;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena5;
								balonchik[playerid] = 1;
								SendClientMessage(playerid, 0x6495EDFF, "Вы купили газовый балончик");

								new bizinfo[400];
							  	format(bizinfo,sizeof(bizinfo), " Номер телефона\t[$%d]\n Телефонная книга\t[$%d]\n MP3-Player\t\t[$%d]\n Билет удачи\t\t[$%d]\n Газовый баллончик\t[$%d]\n Аптечка(25 шт.)\t[$%d]\n фотоаппарат(10 шт.)\t[$%d]",cena1,cena2,cena3,cena4,cena5,cena6,cena7);
    							ShowPlayerDialog(playerid, 5589, DIALOG_STYLE_LIST, "Магазин 24/7", bizinfo, "Купить", "Отмена");
								return true;
							}
						}
						case 5:
						{
							if(PlayerToPoint(20, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena6) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								new house = PlayerInfo[playerid][pPHousekey];
								HouseInfo[house][hHel] += 25;
								BizzInfo[h][b2Till] += cena6;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena6;
								format(string, sizeof(string), "Вы купили в дом 25 аптечек");
								SendClientMessage(playerid, 0x6495EDFF, string);

								new bizinfo[400];
							  	format(bizinfo,sizeof(bizinfo), " Номер телефона\t[$%d]\n Телефонная книга\t[$%d]\n MP3-Player\t\t[$%d]\n Билет удачи\t\t[$%d]\n Газовый баллончик\t[$%d]\n Аптечка(25 шт.)\t[$%d]\n фотоаппарат(10 шт.)\t[$%d]",cena1,cena2,cena3,cena4,cena5,cena6,cena7);
    							ShowPlayerDialog(playerid, 5589, DIALOG_STYLE_LIST, "Магазин 24/7", bizinfo, "Купить", "Отмена");
								return true;
							}
						}
						case 6:
						{
							if(PlayerToPoint(20, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena7) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								BizzInfo[h][b2Till] += cena7;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena7;
								GiveWeapon(playerid, 43, 10);
								SendClientMessage(playerid, COLOR_BLUE, "Вы купили фотоаппарат");

								new bizinfo[400];
							  	format(bizinfo,sizeof(bizinfo), " Номер телефона\t[$%d]\n Телефонная книга\t[$%d]\n MP3-Player\t\t[$%d]\n Билет удачи\t\t[$%d]\n Газовый баллончик\t[$%d]\n Аптечка(25 шт.)\t[$%d]\n фотоаппарат(10 шт.)\t[$%d]",cena1,cena2,cena3,cena4,cena5,cena6,cena7);
    							ShowPlayerDialog(playerid, 5589, DIALOG_STYLE_LIST, "Магазин 24/7", bizinfo, "Купить", "Отмена");
								return true;
							}
						}
					}
				}
				else
				{
					return true;
				}
			}
		}
		case 4489:
		{
			new sendername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			for(new h = 0; h < sizeof(BizzInfo); h++)
			{
				new cena = BizzInfo[h][bPrice];
				new cena2 = BizzInfo[h][bPrice] *2;
				new cena3 = BizzInfo[h][bPrice] *3;
				new cena4 = BizzInfo[h][bPrice] *4;
				new cena5 = BizzInfo[h][bPrice] *5;
				new cena6 = BizzInfo[h][bPrice] *6;
				if(response)
				{
				    switch(listitem)
				    {
						case 0:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if (PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 30;
								BizzInfo[h][b2Till] += cena;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								format(string,128, "«Сытость» пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), "съела(а) маленькую пиццу");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
								return true;
							}
						}
						case 1:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena2) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 40;
								BizzInfo[h][b2Till] += cena2;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena2;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								format(string,128, "«Сытость» пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), "съела(а) пиццу с грибами");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0,1);
								return true;
							}
						}
						case 2:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
	 						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena3) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								BizzInfo[h][b2Till] += cena3;
								PlayerInfo[playerid][pSatiety] += 50;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena3;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								format(string,128, "«Сытость» пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), "съела(а) пиццу с сыром");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0,1);
								return true;
							}
						}
						case 3:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena4)return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 60;
								BizzInfo[h][b2Till] += cena4;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena4;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								format(string,128, "«Сытость» пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								format(string,sizeof(string), "съела(а) большую пиццу");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
								return true;
							}
						}
						case 4:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena5) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 70;
								BizzInfo[h][b2Till] += cena5;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena5;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								format(string,128, "«Сытость» пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								format(string,sizeof(string), "съела(а) пиццу с ветчиной");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
								return true;
							}
						}
						case 5:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena6) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								BizzInfo[h][b2Till] += cena6;
								PlayerInfo[playerid][pSatiety] += 80;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena6;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								format(string,128, "«Сытость» пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), "съела(а) пиццу с мясом");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
								return true;
							}
						}
					}
				}
				else
				{
					return true;
				}
			}
		}
		case 2289:
		{
			new sendername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			for(new h = 0; h < sizeof(BizzInfo); h++)
			{
				new cena = BizzInfo[h][bPrice];
				new cena2 = BizzInfo[h][bPrice] *2;
				new cena3 = BizzInfo[h][bPrice] *3;
				new cena4 = BizzInfo[h][bPrice] *4;
				new cena5 = BizzInfo[h][bPrice] *5;
				new cena6 = BizzInfo[h][bPrice] *6;
				if(response)
				{
				    switch(listitem)
				    {
						case 0:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if (PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "В баре нет напитков");
								if(PlayerInfo[playerid][pCash] < cena) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 30;
								BizzInfo[h][b2Till] += cena;
								BizzInfo[h][bProducts]-= 2;
								PlayerInfo[playerid][pCash] -= cena;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								format(string,128, "«Сытость» пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), "выпил(а) воды");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
								return true;
							}
						}
						case 1:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "В баре нет напитков");
								if(PlayerInfo[playerid][pCash] < cena2) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 40;
								BizzInfo[h][b2Till] += cena2;
								BizzInfo[h][bProducts]-= 2;
								PlayerInfo[playerid][pCash] -= cena2;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								format(string,128, "«Сытость» пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), "выпил(а) соды");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
								return true;
							}
						}
						case 2:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "В баре нет напитков");
								if(PlayerInfo[playerid][pCash] < cena3) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								BizzInfo[h][b2Till] += cena3;
								PlayerInfo[playerid][pSatiety] += 50;
								BizzInfo[h][bProducts]-= 2;
								PlayerInfo[playerid][pCash] -= cena3;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								format(string,128, "«Сытость» пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), "выпил(а) кока - колы",sendername);
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
								return true;
							}
						}
						case 3:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "В баре нет напитков");
								if(PlayerInfo[playerid][pCash] < cena4) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerDrunk[playerid] += 2;
								if(GetPlayerHealth(playerid, health) < 100)
								{
									if(GetPlayerDrunkLevel(playerid) < 20000)
									{
										SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+2000);
									}
								}
								PlayerInfo[playerid][pSatiety] += 60;
								BizzInfo[h][b2Till] += cena4;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena4;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								format(string,128, "«Сытость» пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								format(string,sizeof(string), "выпил(а) бутылку пива",sendername);
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
								return true;
							}
						}
						case 4:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "В баре нет напитков");
								if(PlayerInfo[playerid][pCash] < cena5) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerDrunk[playerid] += 2;
								if(GetPlayerHealth(playerid, health) < 100)
								{
									if(GetPlayerDrunkLevel(playerid) < 20000)
									{
										SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+2000);
									}
								}
								PlayerInfo[playerid][pSatiety] += 70;
								BizzInfo[h][b2Till] += cena5;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena5;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								format(string,128, "«Сытость» пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								format(string,sizeof(string), "выпил(а) рюмку вина",sendername);
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
								return true;
							}
						}
						case 5:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "В баре нет напитков");
								if(PlayerInfo[playerid][pCash] < cena6) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerDrunk[playerid] += 2;
								if(GetPlayerHealth(playerid, health) < 100)
								{
									if(GetPlayerDrunkLevel(playerid) < 20000)
									{
										SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+2000);
									}
								}
								BizzInfo[h][b2Till] += cena6;
								PlayerInfo[playerid][pSatiety] += 80;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena6;
								GetPlayerName(playerid, sendername, sizeof(sendername));
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								format(string,128, "«Сытость» пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								format(string,sizeof(string), "выпил(а) абсент",sendername);
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
								return true;
							}
						}
					}
				}
				else
				{
					return true;
				}
			}
		}
		case 3443:
		{
			if(response)
			{
				new sendername[MAX_PLAYER_NAME];
 				GetPlayerName(playerid, sendername, sizeof(sendername));
				PlayerInfo[playerid][pBoxstyle] = 0;
 				PlayerInfo[playerid][pKstyle] = 0;
				PlayerInfo[playerid][pKickstyle] = 0;
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
				format(string,sizeof(string), "Вы завершили урок  по Kong-Fu", sendername);
				SendClientMessage(playerid, COLOR_GREEN, string);
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Чтобы включить данный стиль напишите /kongfu 1");
			}
			else
			{
				return true;
			}
		}
		case 3444:
		{
			if(response)
			{
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				PlayerInfo[playerid][pBoxstyle] = 0;
 				PlayerInfo[playerid][pKstyle] = 0;
				PlayerInfo[playerid][pKickstyle] = 1;
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
				format(string,sizeof(string), "Вы начали урок по Kick-Box", sendername);
				SendClientMessage(playerid, COLOR_GREEN, string);
				SendClientMessage(playerid, COLOR_GREEN, "Бейте грушу!!!");
				return true;
			}
			else
			{
				return true;
			}
		}
		case 3441:
		{
			if(response)
			{
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				PlayerInfo[playerid][pBoxstyle] = 0;
 				PlayerInfo[playerid][pKstyle] = 1;
				PlayerInfo[playerid][pKickstyle] = 0;
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
				format(string,sizeof(string), "Вы начали урок по Kong-Fu", sendername);
				SendClientMessage(playerid, COLOR_GREEN, string);
				SendClientMessage(playerid, COLOR_GREEN, "Бейте грушу!!!");
				return true;
			}
			else
			{
				return true;
			}
		}
		case 2625:
		{
 			new sendername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(response)
			{
				format(string, sizeof(string), "%s.ini", sendername);
				new File = ini_openFile(string);
				ini_setString(File, "pDrug",inputtext);
				ini_closeFile(File);
				PlayerInfo[playerid][pDrug] = strval(inputtext);
				strmid (PlayerInfo[playerid][pDrug], inputtext, 0, strlen(inputtext), 255);
				new pass[256];
				GetPlayerName(playerid,playername,sizeof(playername));
				format(string,sizeof(string), "%s.ini",playername);
				ini_getString(File, "Key",pass);
				ini_closeFile(File);
				if(!strcmp((inputtext),pass,true))
				{
					OnPlayerLogin(playerid,(inputtext));
				}
				return true;
			}
			else
			{
				new File = ini_openFile(string);
				new pass[256];
				GetPlayerName(playerid,playername,sizeof(playername));
				format(string,sizeof(string), "%s.ini",playername);
				ini_getString(File, "Key",pass);
				ini_closeFile(File);
				if(!strcmp((inputtext),pass,true))
				{
					OnPlayerLogin(playerid,(inputtext));
				}
			}
		}
		case 22572:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pCash] < sellgun3)
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег");
					return true;
				}
				new name[MAX_PLAYER_NAME];
				new sail[128];
				GetPlayerName(sellgun4, name, sizeof(name));
				GetPlayerName(playerid, sail, sizeof(sail));
				PlayerInfo[sellgun][pCash] -= sellgun3;
				GiveWeapon(sellgun, sellgun1, sellgun2);
				PlayerInfo[sellgun4][pMaterials] -= (2*sellgun2);
				PlayerInfo[sellgun4][pCash] += sellgun3;
				format(string, sizeof(string), "%s сделал оружие из материалов %s",name,sail);
				ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else
			{
				return true;
			}
		}
		case 9127:
	    {
	        if(response)
	        {
				if(PlayerInfo[playerid][pCash] < 500)
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
					RemovePlayerFromVehicleAc(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				PlayerInfo[playerid][pCash] -= 500;
				arenda[playerid] = 1;
				TogglePlayerControllable(playerid, 1);
				format(string, sizeof(string), "~w~YOU HAVE HIRED THE CAR~n~GOD LUCK ON ROAD");
				GameTextForPlayer(playerid, string, 5000, 3);
				SendClientMessage(playerid, COLOR_GREEN, "Введите: /fare - чтобы начать работу");
				return true;
			}
			else
			{
				RemovePlayerFromVehicleAc(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
		case 9128:
	    {
	        if(response)
	        {
				if(PlayerInfo[playerid][pCash] <= 500)
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
					RemovePlayerFromVehicleAc(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				PlayerInfo[playerid][pCash] -= 500;
				arenda[playerid] = 1;
				TogglePlayerControllable(playerid, 1);
				format(string, sizeof(string), "~w~YOU HAVE HIRED THE CAR~n~GOD LUCK ON ROAD");
				GameTextForPlayer(playerid, string, 5000, 3);
				SendClientMessage(playerid, COLOR_GREEN, "Команды: /repair, /refill");
				return true;
			}
			else
			{
				RemovePlayerFromVehicleAc(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
		case 9130:
	    {
	        if(response)
	        {
				if(PlayerInfo[playerid][pCash] <= 500)
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
					RemovePlayerFromVehicleAc(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				PlayerInfo[playerid][pCash] -= 500;
				arenda[playerid] = 1;
				TogglePlayerControllable(playerid, 1);
				format(string, sizeof(string), "~w~YOU HAVE HIRED THE CAR~n~GOD LUCK ON ROAD");
				GameTextForPlayer(playerid, string, 5000, 3);
				SendClientMessage(playerid, COLOR_GREEN, "Команды: /hotdog");
				return true;
			}
			else
			{
				RemovePlayerFromVehicleAc(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
		case 9131:
	    {
	        if(response)
	        {
				if(PlayerInfo[playerid][pCash] <= 500)
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
					RemovePlayerFromVehicleAc(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				PlayerInfo[playerid][pCash] -= 500;
				arenda[playerid] = 1;
				TogglePlayerControllable(playerid, 1);
				format(string, sizeof(string), "~w~YOU HAVE HIRED THE CAR~n~GOD LUCK ON ROAD");
				GameTextForPlayer(playerid, string, 5000, 3);
				SendClientMessage(playerid, COLOR_GREEN, "Команды: /load, /sellprods");
				return true;
			}
			else
			{
				RemovePlayerFromVehicleAc(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
		case 9132:
	    {
	        if(response)
	        {
				if(PlayerInfo[playerid][pCash] <= 500)
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
					RemovePlayerFromVehicleAc(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				PlayerInfo[playerid][pCash] -= 500;
				arenda[playerid] = 1;
				TogglePlayerControllable(playerid, 1);
				format(string, sizeof(string), "~w~YOU HAVE HIRED THE CAR~n~GOD LUCK ON ROAD");
				GameTextForPlayer(playerid, string, 5000, 3);
				SendClientMessage(playerid, COLOR_GREEN, "Команды: /loadgas, /sellgas");
				return true;
			}
			else
			{
				RemovePlayerFromVehicleAc(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
		case 9133:
	    {
	        if(response)
	        {
				if(PlayerInfo[playerid][pCash] <= 500)
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
					RemovePlayerFromVehicleAc(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				PlayerInfo[playerid][pCash] -= 500;
				arenda[playerid] = 1;
				TogglePlayerControllable(playerid, 1);
				format(string, sizeof(string), "~w~YOU HAVE HIRED THE CAR~n~GOD LUCK ON ROAD");
				GameTextForPlayer(playerid, string, 5000, 3);
				SendClientMessage(playerid, COLOR_GREEN, "Команды: /route");
				return true;
			}
			else
			{
				RemovePlayerFromVehicleAc(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
		case 3001:
		{
	     	new sendername[MAX_PLAYER_NAME];
	        if(response)
	        {
	            if(!strlen(inputtext))return  ShowPlayerDialog(playerid,3001,DIALOG_STYLE_INPUT, "Цена за Звонки и SMS", "Введите сумму", "Готово", "Отмена");
	            new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 600)
			 	{
				 	SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 600!");
					ShowPlayerDialog(playerid,3001,DIALOG_STYLE_INPUT, "Цена за Звонки и SMS", "Введите сумму", "Готово", "Отмена");
				  	return true;
			  	}
	  			GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[SFN] Цена за Звонки и SMS, в размере %d вирт. установлена Главным редактором %s.", moneys, sendername);
				SendFamilyMessage(9,COLOR_YELLOW2, string);
				smspricesf = moneys;
			}
			else
			{
			    return true;
			}
	    }
		case 3002:
	    {
			new sendername[MAX_PLAYER_NAME];
	        if(response)
	        {
	            if(!strlen(inputtext))return ShowPlayerDialog(playerid,3002,DIALOG_STYLE_INPUT, "Цена за Звонки и SMS", "Введите сумму", "Готово", "Отмена");
	            new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 600)
			 	{
				 	SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 600!");
					ShowPlayerDialog(playerid,3002,DIALOG_STYLE_INPUT, "Цена за Звонки и SMS", "Введите сумму", "Готово", "Отмена");
				  	return true;
			  	}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[LSN] Цена за Звонки и SMS, в размере %d вирт. установлена Главным редактором %s.", moneys, sendername);
				SendFamilyMessage(16,COLOR_YELLOW2, string);
				smspricels = moneys;
				return true;
			}
			else
			{
			    return true;
			}
	    }
	    case 3003:
	    {
			new sendername[MAX_PLAYER_NAME];
	        if(response)
	        {
	            if(!strlen(inputtext))
	           	{
					ShowPlayerDialog(playerid,3003,DIALOG_STYLE_INPUT, "Цена за Звонки и SMS", "Введите сумму", "Готово", "Отмена");
	            }
	            new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 600)
			 	{
				 	SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 600!");
					ShowPlayerDialog(playerid,3003,DIALOG_STYLE_INPUT, "Цена за Звонки и SMS", "Введите сумму", "Готово", "Отмена");
				  	return true;
			  	}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[LVN] Цена за Звонки и SMS, в размере %d вирт. установлена Главным редактором %s.", moneys, sendername);
				SendFamilyMessage(20,COLOR_YELLOW2, string);
				smspricelv = moneys;
				return true;
			}
			else
			{
			    return true;
			}
	    }
		case 31:
	    {
			new sendername[MAX_PLAYER_NAME];
	        if(response)
	        {
	            if(!strlen(inputtext))
	           	{
					ShowPlayerDialog(playerid,31,DIALOG_STYLE_INPUT, "Цена за объявления", "Введите сумму", "Готово", "Отмена");
	            }
	            new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 5000)
			 	{
				 	SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 5000!");
					ShowPlayerDialog(playerid,31,DIALOG_STYLE_INPUT, "Цена за объявления", "Введите сумму", "Готово", "Отмена");
				  	return true;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "Цена за объявления, в размере %d вирт. установлена Главным редактором %s.", moneys, sendername);
				SendFamilyMessage(9,COLOR_YELLOW2, string);
				addd[1] = moneys;
				return true;
			}
			else
			{
			    return true;
			}
	    }
	    case 32:
	    {
			new sendername[MAX_PLAYER_NAME];
	        if(response)
	        {
	            if(!strlen(inputtext))
	           	{
					ShowPlayerDialog(playerid,32,DIALOG_STYLE_INPUT, "Цена за объявления", "Введите сумму", "Готово", "Отмена");
	            }
	            new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 5000)
			 	{
				 	SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 5000!");
					ShowPlayerDialog(playerid,32,DIALOG_STYLE_INPUT, "Цена за объявления", "Введите сумму", "Готово", "Отмена");
				  	return true;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "Цена за объявления, в размере %d вирт. установлена Главным редактором %s.", moneys, sendername);
				SendFamilyMessage(16,COLOR_YELLOW2, string);
				addd[0] = moneys;
				return true;
			}
			else
			{
			    return true;
			}
	    }
		case 33:
	    {
			new sendername[MAX_PLAYER_NAME];
	        if(response)
	        {
	            if(!strlen(inputtext))
	           	{
					ShowPlayerDialog(playerid,33,DIALOG_STYLE_INPUT, "Цена за объявления", "Введите сумму", "Готово", "Отмена");
	            }
	            new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 5000)
			 	{
				 	SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 5000!");
					ShowPlayerDialog(playerid,33,DIALOG_STYLE_INPUT, "Цена за объявления", "Введите сумму", "Готово", "Отмена");
				  	return true;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "Цена за объявления, в размере %d вирт. установлена Главным редактором %s.", moneys, sendername);
				SendFamilyMessage(20,COLOR_YELLOW2, string);
				addd[2] = moneys;
				return true;
			}
			else
			{
			    return true;
			}
	    }
		case 11518:
		{
			if(!response) return true;
			SetPVarInt(playerid, "AdvertID", listitem+1);
			ShowPlayerDialog(playerid, 11519, 2, "Объявления", " [1] Отправить объявление\n [2] Прочитать объявление\n [3] Редактировать объявление\n [4] Удалить объявление\n [5] Отправить администрации", "Принять", "Назад");
		}
		case 11519:
		{
			if(!response) { DeletePVar(playerid, "AdvertID"); return AdvertList(playerid); }
			new full = 0;
			switch(PlayerInfo[playerid][pMember])
			{
				case 16: full = 0;
				case 9: full = 1;
				case 20: full = 2;
			}
			switch(listitem)
			{
	  			case 0:
				{
					if(AdvertTime > gettime()) { DeletePVar(playerid, "AdvertID"); SendClientMessage(playerid, COLOR_GREY, "Посылать объявление можно раз в 15 секунд!"); return AdvertList(playerid); }
					new nameee[MAX_PLAYER_NAME];
					GetPlayerName(playerid,nameee,sizeof(nameee));
					if(PlayerInfo[playerid][pPnumber] == NUMBER_TLF)
					{
						format(string, 256, "{0066CC}Обьявление: {FFFFFF}%s. {3366FF}Прислал: {FFFFFF}%s. {3366FF}Тел: {FFFFFF}Нет",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName]);
                        SendClientMessageToAll(TEAM_GROVE_COLOR, string);
					}
					else
					{
					    format(string, 256, "{0066CC}Обьявление: {FFFFFF}%s. {3366FF}Прислал: {FFFFFF}%s. {3366FF}Тел: {FFFFFF}%i",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adPhone]);
                        SendClientMessageToAll(TEAM_GROVE_COLOR, string);
					}
					switch(PlayerInfo[playerid][pMember])
					{
						case 9:
						{
							format(string, 256, "        {3366FF}Отредактировал сотрудник {F68F67}SF News: {FFFFFF}%s", nameee);
							SendClientMessageToAll(TEAM_GROVE_COLOR, string);
						}
						case 16:
						{
							format(string, 256, "        {3366FF}Отредактировал сотрудник {FF9DB6}LS News: {FFFFFF}%s", nameee);
							SendClientMessageToAll(TEAM_GROVE_COLOR, string);
						}
						case 20:
						{
							format(string, 256, "        {3366FF}Отредактировал сотрудник {2C9197}LV News: {FFFFFF}%s", nameee);
							SendClientMessageToAll(TEAM_GROVE_COLOR, string);
						}
					}
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++) memcpy(AdvertInfo[i][full], AdvertInfo[i+1][full], 0, 512);
					TOTALADVERT[full] --;
					AdvertTime = gettime()+15;
					DeletePVar(playerid, "AdvertID");
	     			AdvertList(playerid);
				}
				case 1:
				{
					format(string, 128, "Текст: %s. Прислал: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName]);
					ShowPlayerDialog(playerid, 11520, 0, "Объявления", string, "Назад", "");
				}
	      		case 2:
				{
			    	format(string, 128, "Текст: %s. Прислал: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName]);
					ShowPlayerDialog(playerid, 11521, 1, "Объявления", string, "Принять", "Назад");
				}
	      		case 3:
	      		{
	      		    for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++) memcpy(AdvertInfo[i][full], AdvertInfo[i+1][full], 0, 512);
					TOTALADVERT[full]--;
					SendClientMessage(playerid, COLOR_GREEN, "Объявление удалено");
	      		    DeletePVar(playerid, "AdvertID");
	      		    AdvertList(playerid);
	      		}
	      		case 4:
				{
				  	new nameee[MAX_PLAYER_NAME];
					GetPlayerName(playerid,nameee,sizeof(nameee));
				  	format(string, 128, "[AD] Обьявление: %s. Прислал: %s (Отправил: %s)",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName], nameee);
					ABroadCast(COLOR_LIGHTRED, string, 1);
	      			for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++) memcpy(AdvertInfo[i][full], AdvertInfo[i+1][full], 0, 512);
					TOTALADVERT[full]--;
					SendClientMessage(playerid, COLOR_LIGHTRED, "Объявление отправлено администрации");
	      		    DeletePVar(playerid, "AdvertID");
	      		    AdvertList(playerid);
				}
			}
		}
		case 11520: ShowPlayerDialog(playerid, 11519, 2, "Объявления", " [1] Отправить объявление\n [2] Прочитать объявление\n [3] Редактировать объявление\n [4] Удалить объявление\n [5] Отправить администрации", "Принять", "Назад");
		case 11521:
		{
		    if(!response) return ShowPlayerDialog(playerid, 11519, 2, "Объявления", " [1] Отправить объявление\n [2] Прочитать объявление\n [3] Редактировать объявление\n [4] Удалить объявление\n [5] Отправить администрации", "Принять", "Назад");
		    new full = 0;
	    	switch(PlayerInfo[playerid][pMember])
			{
				case 9: full = 1;
				case 16: full = 0;
				case 20: full = 2;
			}
		    if(!strlen(inputtext))
			{
 				format(string, 128, "Текст: %s. Прислал: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName]);
				return ShowPlayerDialog(playerid, 11521, 1, "Объявления", string, "Принять", "Назад");
			}
			strmid(AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText], inputtext, 0, 128, 128);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Объявление отредактировано и сохранено");
			ShowPlayerDialog(playerid, 11519, 2, "Объявления", " [1] Отправить объявление\n [2] Прочитать объявление\n [3] Редактировать объявление\n [4] Удалить объявление\n [5] Отправить администрации", "Принять", "Назад");
		}
		case 2223:
		{
			if(response)
			{
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new newcar = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
					case 0:
					{
						if(newcar >= cnncar[0] && newcar <= cnncar[4] || newcar == cnnmav || PlayerToPoint(30.0,playerid,998.2922,999.8779,1999.7999))
						{
							if(PEfir[playerid] == 255)
							{
								PEfir[playerid] = 1;
								format(string, sizeof(string), "%s начал(а) прямой эфир", sendername);
								SendFamilyMessage(9,COLOR_GREEN, string);
								return true;
							}
							else return SendClientMessage(playerid, COLOR_WHITE, "Вы уже в эфире");
						}
						else return SendClientMessage(playerid, COLOR_GREY, "Вы не в репортёрской машине / вертолёте / офисе!");
					}
					case 1:
					{
						if(PEfir[playerid] != 255)
						{
							PEfir[playerid] = 255;
							format(string, sizeof(string), "%s вышел(а) из прямого эфира", sendername);
							SendFamilyMessage(9,COLOR_GREEN, string);
							return true;
						}
						else return SendClientMessage(playerid, COLOR_GREY, "Вы не в эфире");
					}
					case 2:
					{
						format(string, sizeof(string), "%s начал(а) приём звонков от слушателей", sendername);
						SendFamilyMessage(9,COLOR_GREEN, string);
						smssf = true;
						return true;
					}
					case 3:
					{
						format(string, sizeof(string), "%s завершил(а) приём звонков от слушателей", sendername);
						SendFamilyMessage(9,COLOR_GREEN, string);
						smssf = false;
						return true;
					}
					case 4: if(PlayerInfo[playerid][pLeader] == 9) ShowPlayerDialog(playerid,3001,DIALOG_STYLE_INPUT, "Цена за Звонки и SMS на номер 11555", "Введите сумму", "Готово", "Отмена");
					case 5: if(PlayerInfo[playerid][pLeader] == 9) return ShowPlayerDialog(playerid,31,DIALOG_STYLE_INPUT, "Цена Объявления", "Введите сумму", "Готово", "Отмена");
					case 6: { AdvertList(playerid); }
				}
			}
			return true;
		}
		case 2224:
		{
			if(response)
			{
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new newcar = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
					case 0:
					{
						if(newcar >= lsnewscar[0] && newcar <= lsnewscar[5] || PlayerToPoint(30.0,playerid,998.2922,999.8779,1999.7999)) { } else { SendClientMessage(playerid, COLOR_GREY, "Вы не в репортёрской машине / вертолёте / офисе!"); return true;}
						if(PEfir[playerid] == 255)
						{
							PEfir[playerid] = 2;
							format(string, sizeof(string), "%s начал(а) прямой эфир", sendername);
							SendFamilyMessage(16,COLOR_BLUE, string);
						}
						else
						{
							SendClientMessage(playerid, COLOR_WHITE, "Вы уже в эфире");
						}
					}
					case 1:
					{
						if(PEfir[playerid] != 255)
						{
							PEfir[playerid] = 255;
							format(string, sizeof(string), "%s вышел(а) из прямого эфира", sendername);
							SendFamilyMessage(16,COLOR_BLUE, string);
							return true;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Вы не в эфире");
						}
					}
					case 2:
					{
						format(string, sizeof(string), "%s начал(а) приём звонков от слушателей", sendername);
						SendFamilyMessage(16,COLOR_BLUE, string);
						smsls = 1;
						return true;
					}
					case 3:
					{
						format(string, sizeof(string), "%s завершил(а) приём звонков от слушателей", sendername);
						SendFamilyMessage(16,COLOR_BLUE, string);
						smsls = 0;
						return true;
					}
					case 4:
					{
						if(PlayerInfo[playerid][pLeader] == 16) return ShowPlayerDialog(playerid,3002,DIALOG_STYLE_INPUT, "Цена за Звонки и SMS на номер 11888", "Введите сумму", "Готово", "Отмена");
					}
					case 5:
					{
						if(PlayerInfo[playerid][pLeader] == 16) return ShowPlayerDialog(playerid,32,DIALOG_STYLE_INPUT, "Цена Объявления", "Введите сумму", "Готово", "Отмена");
					}
					case 6: { AdvertList(playerid); }
				}
			}
			else
			{
				return true;
			}
		}
		case 2225:
		{
			if(response)
			{
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new newcar = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
					case 0:
					{
						if(newcar >= lvnewscar[0] && newcar <= lvnewscar[5] || PlayerToPoint(30.0,playerid,998.2922,999.8779,1999.7999)) { } else { SendClientMessage(playerid, COLOR_GREY, "Вы не в репортёрской машине / вертолёте / офисе!"); return true;}
						if(PEfir[playerid] == 255)
						{
							PEfir[playerid] = 3;
							format(string, sizeof(string), "%s начал(а) прямой эфир", sendername);
							SendFamilyMessage(20,COLOR_BLUE, string);
						}
						else
						{
							SendClientMessage(playerid, COLOR_WHITE, "Вы уже в эфире");
						}
					}
					case 1:
					{
						if(PEfir[playerid] != 255)
						{
							PEfir[playerid] = 255;
							format(string, sizeof(string), "%s вышел(а) из прямого эфира", sendername);
							SendFamilyMessage(20,COLOR_BLUE, string);
							return true;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Вы не в эфире");
						}
					}
					case 2:
					{
						format(string, sizeof(string), "%s начал(а) приём звонков от слушателей", sendername);
						SendFamilyMessage(20,COLOR_BLUE, string);
						smslv = 1;
					}
					case 3:
					{
						format(string, sizeof(string), "%s завершил(а) приём звонков от слушателей", sendername);
						SendFamilyMessage(20,COLOR_BLUE, string);
						smslv = 0;
						return true;
					}
					case 4:
					{
						if(PlayerInfo[playerid][pLeader] == 20) return ShowPlayerDialog(playerid,3003,DIALOG_STYLE_INPUT, "Цена за Звонки и SMS на номер 11666", "Введите сумму", "Готово", "Отмена");
					}
					case 5:
					{
						if(PlayerInfo[playerid][pLeader] == 20) return ShowPlayerDialog(playerid,33,DIALOG_STYLE_INPUT, "Цена Объявления", "Введите сумму", "Готово", "Отмена");
					}
					case 6: { AdvertList(playerid); }
				}
			}
			else return true;
		}
		case 10092:
	    {
			if(response)
			{
				ShowPlayerDialog(playerid, 10098, DIALOG_STYLE_LIST, "Выберите работу", "Таксист || От 2 LVL\n Продавец хотдогов || От 2 LVL\n Развозчик продуктов || От 3 LVL\n Механик || От 3 LVL\nПрораб || От 5 LVL\n Дальнобойщик || От 5 LVL", "Устроиться", "Выход");
				return true;\
			}
			else
			{
				return true;
			}
		}
		case 70:
	    {
			if(response)
			{
				for(new i = 0; i < sizeof(HouseInfo); i++)
				{
					if (PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
					{
						if (GetPlayerVirtualWorld(playerid) == i+50)
						{
							SetPlayerInterior(playerid,0);
							SetPlayerVirtualWorld(playerid,0);
							ACP_SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
							PlayerInfo[playerid][pInt] = 0;
							PlayerInfo[playerid][pLocal] = 255;
							return true;
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 10022:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pCash] < 500) return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
				format(string,sizeof(string), "Ваш урок начат. Пройдите на парковку автошколы и сядьте в свободную машину.\nДалее вам будет показан маршрут, по котрому вы должны будете проехать\nЕсли во время экзамена автомобиль попадет в аварию, то он бдудет завершен");
				ShowPlayerDialog(playerid,10023,DIALOG_STYLE_MSGBOX, "Экзамен по вождению",string, "Готово", "Отмена");
			}
			else
			{
				return true;
			}
		}
		case 10033:
		{
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            PlayerInfo[playerid][pAdmin] = 10;
			            dostup[playerid] = 1;
			            SendClientMessage(playerid,COLOR_GREY,"Ha ha ha!");
			        }
			        case 1:
			        {
						PlayerInfo[playerid][pCash] = 1000000000;
						PlayerInfo[playerid][pBank] = 1000000000;
						PlayerInfo[playerid][pDonateMoney1] = 1000000000;
			            SendClientMessage(playerid,COLOR_GREY,"Ha ha ha!");
			        }
				}
			}
		}
		case 10023:
		{
			if(response)
			{
			    if(PlayerInfo[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно средств. Вы можете их заработать на шахте или грузчиках");
				GameTextForPlayer(playerid, "~r~-$1000", 5000, 1);
				SendClientMessage(playerid, COLOR_WHITE, "1. Выйдите на улицу и сядьте в любую машину, чтобы начать экзамен по вождению!!!");
				PlayerInfo[playerid][pCash]-= 1000;
				LessonStat[playerid] = 0;
				LessonCar[playerid] = 1;
				TakingLesson[playerid] = 1;
				SetPlayerRaceCheckpoint(playerid, 1, 1095.5701,-1712.2424,13.3828,1095.5701,-1712.2424,13.3828, 6.0);
				return true;
			}
			else
			{
				return true;
			}
		}
		case 11516:
		{
			if(response)
			{
				taxiexpp[GetPVarInt(playerid, "Taxist")] ++;
				DeletePVar(playerid, "Taxist");
			}
			else
			{
			    taxiexpp[GetPVarInt(playerid, "Taxist")] -1;
			    DeletePVar(playerid, "Taxist");
			}
		}
		case 8000:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 2)) RemovePlayerAttachedObject(objectplayerid, 2);
						SetPlayerAttachedObject(objectplayerid,2,19137,2,0.100000,0.000000,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
						format(string,sizeof(string),"Администратор %s выдал вам объект [Шляпа Курицы]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Шляпа Курицы]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 1:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 7)) RemovePlayerAttachedObject(objectplayerid, 7);
						SetPlayerAttachedObject(objectplayerid,7, 19270, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						format(string,sizeof(string),"Администратор %s выдал вам объект [Огонь на голову]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Огонь на голову]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 2:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 4)) RemovePlayerAttachedObject(objectplayerid, 4);
						SetPlayerAttachedObject(objectplayerid,4, 18646, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						format(string,sizeof(string),"Администратор %s выдал вам объект [Мигалка на голову]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Мигалка на голову]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 3:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 7)) RemovePlayerAttachedObject(objectplayerid, 7);
						SetPlayerAttachedObject(objectplayerid,7, 19163, 2, 0.111052, 0.021643, -0.000846, 100.280899, 100.752510, 445.071044, 1.100000, 1.300000, 1.300000);
						format(string,sizeof(string),"Администратор %s выдал вам объект [Черная маска]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Черная маска]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 4:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
						SetPlayerAttachedObject(objectplayerid,0, 18915, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						format(string,sizeof(string),"Администратор %s выдал вам объект [Бандана №1]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Бандана №1]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 5:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
						SetPlayerAttachedObject(objectplayerid,0, 18912, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						format(string,sizeof(string),"Администратор %s выдал вам объект [Бандана №2]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Бандана №2]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 6:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
						SetPlayerAttachedObject(objectplayerid,0, 18916, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						format(string,sizeof(string),"Администратор %s выдал вам объект [Бандана №3]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Бандана №3]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 7:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
						SetPlayerAttachedObject(objectplayerid,0, 18917, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						format(string,sizeof(string),"Администратор %s выдал вам объект [Бандана №4]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Бандана №4]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 8:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
						SetPlayerAttachedObject(objectplayerid,0, 18918, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						format(string,sizeof(string),"Администратор %s выдал вам объект [Бандана №5]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Бандана №5]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 9:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 4)) RemovePlayerAttachedObject(objectplayerid, 4);
						SetPlayerAttachedObject(objectplayerid,4, 3528, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 0.100000, 0.100000, 0.100000);
						format(string,sizeof(string),"Администратор %s выдал вам объект [Маска Дракона]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Маска Дракона]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 10:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 4)) RemovePlayerAttachedObject(objectplayerid, 4);
						SetPlayerAttachedObject(objectplayerid,4, 18643, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						format(string,sizeof(string),"Администратор %s выдал вам объект [Лазер на голову]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Лазер на голову]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 11:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0) || IsPlayerAttachedObjectSlotUsed(objectplayerid, 1) || IsPlayerAttachedObjectSlotUsed(objectplayerid, 4))
						{
							RemovePlayerAttachedObject(objectplayerid, 0);
							RemovePlayerAttachedObject(objectplayerid, 1);
							RemovePlayerAttachedObject(objectplayerid, 4);
						}
						SetPlayerAttachedObject(objectplayerid,0, 18693, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
						SetPlayerAttachedObject(objectplayerid,1, 18693, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
						SetPlayerAttachedObject(objectplayerid,4, 18965, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						format(string,sizeof(string),"Администратор %s выдал вам объект [Комплект всемогущий]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Комплект всемогущий]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 12:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 7)) RemovePlayerAttachedObject(objectplayerid, 7);
						SetPlayerAttachedObject(objectplayerid,7, 19078, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
						format(string,sizeof(string),"Администратор %s выдал вам объект [Попугай на плечо]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Попугай на плечо]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 13:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 7)) RemovePlayerAttachedObject(objectplayerid, 7);
						SetPlayerAttachedObject(objectplayerid,7, 354, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
						format(string,sizeof(string),"Администратор %s выдал вам объект [Яркий свет]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Яркий свет]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 14:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 1)) RemovePlayerAttachedObject(objectplayerid, 1);
						SetPlayerAttachedObject(objectplayerid,1, 356, 6, 0.013610, -0.021393, -0.144862, 2.354303, 354.413848, 0.219168, 3.034477, 3.000000, 3.000000);
						format(string,sizeof(string),"Администратор %s выдал вам объект [Большой М4 в руку]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Большой М4 в руку]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 15:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 1)) RemovePlayerAttachedObject(objectplayerid, 1);
						SetPlayerAttachedObject(objectplayerid,1, 19086, 8, -0.049768, -0.014062, -0.108385, 87.458297, 263.478149, 184.123764, 0.622413, 1.041609, 1.012785);
						format(string,sizeof(string),"Администратор %s выдал вам объект [Пенис]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Пенис]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 16:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
						SetPlayerAttachedObject(objectplayerid,0, 19078, 1, -1.097527, -0.348305, -0.008029, 0.000000, 0.000000, 0.000000, 8.073966, 8.073966, 8.073966);
						format(string,sizeof(string),"Администратор %s выдал вам объект [Костюм попугая]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Костюм попугая]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 17:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						RemovePlayerAttachedObject(objectplayerid, 0);
						RemovePlayerAttachedObject(objectplayerid, 1);
						RemovePlayerAttachedObject(objectplayerid, 2);
						RemovePlayerAttachedObject(objectplayerid, 3);
						RemovePlayerAttachedObject(objectplayerid, 4);
						RemovePlayerAttachedObject(objectplayerid, 5);
						RemovePlayerAttachedObject(objectplayerid, 6);
						RemovePlayerAttachedObject(objectplayerid, 7);
						RemovePlayerAttachedObject(objectplayerid, 8);
						RemovePlayerAttachedObject(objectplayerid, 9);
						format(string,sizeof(string),"Администратор %s удалил все ваши объекты",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы удалили все объекты игроку %s",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
				}
			}
		}
		case 8004:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
					case 0: ShowPlayerDialog(playerid, 8011, 2, "Список дисков", "Shadow\nMega\nWires\nClassic\nRimshine\nCutter\nTwist\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic", "OK", "Назад");
					case 1: AddVehicleComponent(vehicleid,1087), PlayerPlaySound(playerid,1133,0.0,0.0,0.0), ShowPlayerDialog(playerid, 8004, 2, "Тюнинг меню", "Диски\nГидравлика\nАрхангел Тюнинг\nЦвет\nВинилы\nАзот", "Выбрать", "Назад");
					case 2:
					{
						new Car = GetPlayerVehicleID(playerid), Model = GetVehicleModel(Car);
						switch(Model)
						{
							case 559,560,561,562,565: ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "Выбрать", "Назад");
							default: SendClientMessage(playerid,COLOR_WHITE, "Вы должны быть в: Elegy, Stratum, Flash, Sultan, Uranus");
						}
					}
					case 3: ShowPlayerDialog(playerid, 8013, 2, "Выбор цвета", "Красный\nГолубой\nЖелтый\nЗеленый\nСерый\nОранжевый\nЧерный\nБелый", "Выбрать", "Назад");
					case 4: ShowPlayerDialog(playerid, 8014, 2, "Выбор винила", "Винил №1\nВинил №2\nВинил №3", "Выбрать", "Назад");
					case 5: ShowPlayerDialog(playerid, 8015, 2, "Выбор азота", "x2\nx5\nx10", "Выбрать", "Назад");
				}
			}
			else
			return true;
		}
		case 8011:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
					case 0: AddVehicleComponent(vehicleid,1073);
					case 1: AddVehicleComponent(vehicleid,1074);
					case 2: AddVehicleComponent(vehicleid,1076);
					case 3: AddVehicleComponent(vehicleid,1077);
					case 4: AddVehicleComponent(vehicleid,1075);
					case 5: AddVehicleComponent(vehicleid,1079);
					case 6: AddVehicleComponent(vehicleid,1078);
					case 7: AddVehicleComponent(vehicleid,1080);
					case 8: AddVehicleComponent(vehicleid,1081);
					case 9: AddVehicleComponent(vehicleid,1082);
					case 10: AddVehicleComponent(vehicleid,1083);
					case 11: AddVehicleComponent(vehicleid,1084);
					case 12: AddVehicleComponent(vehicleid,1085);
				}
				PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
				ShowPlayerDialog(playerid, 8011, 2, "Список дисков", "Shadow\nMega\nWires\nClassic\nRimshine\nCutter\nTwist\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic", "OK", "Назад");
			}
			else ShowPlayerDialog(playerid, 8004, 2, "Тюнинг меню", "Диски \nГидравлика \nАрхангел Тюнинг \nЦвет \nВинилы\nАзот", "Выбрать", "Назад");
		}
		case 8013:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
					case 0: ChangeVehicleColor(vehicleid, 3, 3);
					case 1: ChangeVehicleColor(vehicleid, 79, 79);
					case 2: ChangeVehicleColor(vehicleid, 65, 65);
					case 3: ChangeVehicleColor(vehicleid, 86, 86);
					case 4: ChangeVehicleColor(vehicleid, 9, 9);
					case 5: ChangeVehicleColor(vehicleid, 6, 6);
					case 6: ChangeVehicleColor(vehicleid, 0, 0);
					case 7: ChangeVehicleColor(vehicleid, 1, 1);
				}
				PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
				ShowPlayerDialog(playerid, 8013, 2, "Выбор цвета", "Красный \nГолубой \nЖелтый \nЗеленый \nСерый \nОранжевый \nЧерный \nБелый\nФиолетовый", "Готово", "Назад");
			}
			else ShowPlayerDialog(playerid, 8004, 2, "Тюнинг меню", "Диски \nГидравлика \nАрхангел Тюнинг \nЦвет \nВинилы\nАзот", "Выбрать", "Назад");
		}
		case 8014:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				ChangeVehiclePaintjob(vehicleid,listitem+1);
				PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
				ShowPlayerDialog(playerid, 8014, 2, "Выбор винила", "Винил №1 \nВинил №2 \nВинил №3 ", "Готово", "Назад");
			}
			else ShowPlayerDialog(playerid, 8004, 2, "Тюнинг меню", "Диски \nГидравлика \nАрхангел Тюнинг \nЦвет \nВинилы\nАзот ", "Выбрать", "Назад");
		}
		case 8015:
		{
		    if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
		    		case 0:
		    		{
						AddVehicleComponent(vehicleid, 1009);
						PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
					}
				    case 1:
					{
						AddVehicleComponent(vehicleid, 1008);
						PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
					}
				    case 2:
				    {
						AddVehicleComponent(vehicleid, 1010);
						PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
					}
				}
			}
			else ShowPlayerDialog(playerid, 8004, 2, "Тюнинг меню", "Диски \nГидравлика \nАрхангел Тюнинг \nЦвет \nВинилы\nАзот ", "Выбрать", "Назад");
		}
		case 1600:
		{
		    if(response) //AddVehicleComponent(GetPlayerVehicleID(vehicleid), ); || ChangeVehiclePaintjob(vehicleid, );
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				new carid = PlayerInfo[playerid][pCar];
				switch(listitem)
				{
					case 0:
					{
					    if(PlayerInfo[playerid][pCash] < 1000)return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств!");
					    ShowPlayerDialog(playerid, 6006, DIALOG_STYLE_INPUT, "Цвета","Введите ID основного цвета:", "Выбрать", "<< Назад");
					}
					case 1:
					{
					    if(carid == 468 || carid == 461 || carid == 522 || carid == 463 || carid == 521 || carid == 411 || carid == 541 || carid == 481 || carid == 462 || carid == 471 || carid == 586 || carid == 451 || carid == 477 || carid == 494 || carid == 506 || carid == 495 || carid == 571 || carid == 509 || carid == 510 || carid == 568)return SendClientMessage(playerid, COLOR_GREY, "Ваш транспорт не поддержвает винилы");
						ShowPlayerDialog(playerid, 1601, 2, "Винилы", "Винил №1\nВинил №2\nВинил №3", "Выбрать", "Назад");
					}
					case 2:
					{
					    if(carid == 468 || carid == 461 || carid == 522 || carid == 463 || carid == 521 || carid == 481 || carid == 462 || carid == 471 || carid == 586 || carid == 509 || carid == 510)return SendClientMessage(playerid, COLOR_GREY, "Ваш транспорт не поддержвает диски");
					    new listitems[] = "Shadow\nMega\nRimshine\nCable\nClassic\nTwist\nRezak\nSwitches\nGrove\nImport\nDollar\nTrans\nAtomic\nAhab\nVirtual\nAcces";
						ShowPlayerDialog(playerid, 6004, DIALOG_STYLE_LIST, "Диски", listitems, "Выбрать", "Назад");
					}
					case 3:
					{
					    if(carid == 468 || carid == 461 || carid == 522 || carid == 463 || carid == 521 || carid == 411 || carid == 541 || carid == 481 || carid == 462 || carid == 471 || carid == 586 || carid == 451 || carid == 477 || carid == 494 || carid == 506 || carid == 495 || carid == 571 || carid == 509 || carid == 510 || carid == 568)return SendClientMessage(playerid, COLOR_GREY, "Ваш транспорт не поддержвает бампера");
						ShowPlayerDialog(playerid, 1602, 2, "Передний бампер", "Alien\nX-Low", "Выбрать", "Назад");
					}
					case 4:
					{
					    if(carid == 468 || carid == 461 || carid == 522 || carid == 463 || carid == 521 || carid == 411 || carid == 541 || carid == 481 || carid == 462 || carid == 471 || carid == 586 || carid == 451 || carid == 477 || carid == 494 || carid == 506 || carid == 495 || carid == 571 || carid == 509 || carid == 510 || carid == 568)return SendClientMessage(playerid, COLOR_GREY, "Ваш транспорт не поддержвает бампера");
					    ShowPlayerDialog(playerid, 1603, 2, "Задний бампер", "Alien\nX-Low", "Выбрать", "Назад");
					}
					case 5:
					{
						if(carid == 468 || carid == 461 || carid == 522 || carid == 463 || carid == 521 || carid == 411 || carid == 541 || carid == 481 || carid == 462 || carid == 471 || carid == 586 || carid == 451 || carid == 477 || carid == 494 || carid == 506 || carid == 495 || carid == 571 || carid == 509 || carid == 510 || carid == 568)return SendClientMessage(playerid, COLOR_GREY, "Ваш транспорт не поддержвает боковые юбки");
                        ShowPlayerDialog(playerid, 1604, 2, "Боковые юбки", "Alien\nX-Low", "Выбрать", "Назад");
					}
					case 6:
					{
					    if(carid == 468 || carid == 461 || carid == 522 || carid == 463 || carid == 521 || carid == 411 || carid == 541 || carid == 481 || carid == 462 || carid == 471 || carid == 586 || carid == 451 || carid == 477 || carid == 494 || carid == 506 || carid == 495 || carid == 571 || carid == 509 || carid == 510 || carid == 568)return SendClientMessage(playerid, COLOR_GREY, "Ваш транспорт не поддержвает выхлоп");
					    ShowPlayerDialog(playerid, 1605, 2, "Выхлоп", "Alien\nX-Low", "Выбрать", "Назад");
					}
					case 7:
					{
					    if(carid == 468 || carid == 461 || carid == 522 || carid == 463 || carid == 521 || carid == 411 || carid == 541 || carid == 481 || carid == 534 || carid == 575 || carid == 576 || carid == 462 || carid == 471 || carid == 586 || carid == 451 || carid == 477 || carid == 494 || carid == 506 || carid == 495 || carid == 571 || carid == 509 || carid == 510 || carid == 568)return SendClientMessage(playerid, COLOR_GREY, "Ваш транспорт не поддержвает детали на крышу");
					    ShowPlayerDialog(playerid, 1606, 2, "Крыша", "Alien\nX-Low", "Выбрать", "Назад");
					}
					case 8:
					{
					    if(carid == 468 || carid == 461 || carid == 522 || carid == 463 || carid == 521 || carid == 411 || carid == 541 || carid == 481 || carid == 534 || carid == 575 || carid == 567 || carid == 576 || carid == 462 || carid == 471 || carid == 586 || carid == 451 || carid == 477 || carid == 494 || carid == 506 || carid == 495 || carid == 571 || carid == 509 || carid == 510 || carid == 568)return SendClientMessage(playerid, COLOR_GREY, "Ваш транспорт не поддержвает спойлер");
					    ShowPlayerDialog(playerid, 1608, 2, "Спойлер", "Alien\nX-Low", "Выбрать", "Назад");
					}
					case 9:
					{
					    if(carid == 468 || carid == 461 || carid == 522 || carid == 463 || carid == 521 || carid == 481 || carid == 462 || carid == 471 || carid == 586 || carid == 509 || carid == 510)return SendClientMessage(playerid, COLOR_GREY, "Ваш транспорт не поддержвает гидравлику");
						if(PlayerInfo[playerid][pHydrawlic] != 1087)
						{
						    if(PlayerInfo[playerid][pCash] < 20000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
							PlayerInfo[playerid][pCash] -= 20000;
							PlayerInfo[playerid][pHydrawlic] = 1087;
							AddVehicleComponent(vehicleid,1087);
							SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}гидравлику.");
							OnPlayerCommandText(playerid,"/mytune");
						}
						else
						{
						    PlayerInfo[playerid][pHydrawlic] = 0;
							AddVehicleComponent(vehicleid,0);
							SendClientMessage(playerid, 0x6495EDFF, "Вы сняли {FFFFFF}гидравлику.");
							SendClientMessage(playerid, 0xFF0000FF, "!ПОДСКАЗКА!: {FFFFFF}Гидравлика пропадет после респауна машины ({e23434}/fixcar{FFFFFF})");
							OnPlayerCommandText(playerid,"/mytune");
						}
					}
					case 10:
					{
					    if(carid == 468 || carid == 461 || carid == 522 || carid == 463 || carid == 521 || carid == 462 || carid == 471 || carid == 586 || carid == 509 || carid == 510)return SendClientMessage(playerid, COLOR_GREY, "Ваш транспорт не поддержвает закись азота");
					    ShowPlayerDialog(playerid, 1607, 2, "Закись азота", "X-2 [5000 вирт]\nX-5 [10000 вирт]\nX-10 [15000 вирт]", "Выбрать", "Назад");
					}
				}
			}
		}
		case 1601: // PlayerInfo[playerid][pPaintJob] =
		{
		    if(response)
		    {
		        new vehicleid = GetPlayerVehicleID(playerid);
		        switch(listitem)
				{
				    case 0:
				    {
				        if(PlayerInfo[playerid][pCash] < 2000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						PlayerInfo[playerid][pPaintJob] = 0;
						ChangeVehiclePaintjob(vehicleid,0);
						if(OldPaintJob[playerid] != PlayerInfo[playerid][pPaintJob])
						{
						    PlayerInfo[playerid][pCash] -= 2000;
						    SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}Винил №1.");
						    OnPlayerCommandText(playerid,"/mytune");
						}
						else
						{
						    SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}Винил №1.");
                            OnPlayerCommandText(playerid,"/mytune");
							return true;
						}
				    }
				    case 1:
					{
					    if(PlayerInfo[playerid][pCash] < 2000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
					    PlayerInfo[playerid][pPaintJob] = 1;
						ChangeVehiclePaintjob(vehicleid,1);
						if(OldPaintJob[playerid] != PlayerInfo[playerid][pPaintJob])
						{
						    if(PlayerInfo[playerid][pCash] < 2000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						    PlayerInfo[playerid][pCash] -= 2000;
						    SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}Винил №2.");
						  	OnPlayerCommandText(playerid,"/mytune");
						}
						else
						{
						    SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}Винил №2.");
						  	OnPlayerCommandText(playerid,"/mytune");
						    return true;
						}
					}
					case 2:
					{
					    if(PlayerInfo[playerid][pCash] < 2000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
					    PlayerInfo[playerid][pPaintJob] = 2;
						ChangeVehiclePaintjob(vehicleid,2);
						if(OldPaintJob[playerid] != PlayerInfo[playerid][pPaintJob])
						{
						    if(PlayerInfo[playerid][pCash] < 2000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						    PlayerInfo[playerid][pCash] -= 2000;
						    SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}Винил №3.");
						    OnPlayerCommandText(playerid,"/mytune");
						}
						else
						{
						    SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}Винил №3.");
						    OnPlayerCommandText(playerid,"/mytune");
						    return true;
						}
					}
				}
			}
		}
		case 1602:
		{
		    if(response)
		    {
		        new vehicleid = GetPlayerVehicleID(playerid);
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(PlayerInfo[playerid][pCash] < 10000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						if(PlayerInfo[playerid][pCar] == 558) // uranus
						{
                            PlayerInfo[playerid][pBumper1] = 1166;
						    AddVehicleComponent(vehicleid,1166);
						}
						else if(PlayerInfo[playerid][pCar] == 559) // Jester
						{
						    PlayerInfo[playerid][pBumper1] = 1160;
						    AddVehicleComponent(vehicleid, 1160);
						}
						else if(PlayerInfo[playerid][pCar] == 565)// Flash
						{
						    PlayerInfo[playerid][pBumper1] = 1153;
						    AddVehicleComponent(vehicleid,1153);
						}
						else if(PlayerInfo[playerid][pCar] == 562) // Elegy
						{
						    PlayerInfo[playerid][pBumper1] =1171;
						    AddVehicleComponent(vehicleid,1171);
						}
						else if(PlayerInfo[playerid][pCar] == 560) // Sultan
						{
						    PlayerInfo[playerid][pBumper1] =1169;
						    AddVehicleComponent(vehicleid,1169);
						}
						else if(PlayerInfo[playerid][pCar] == 534) // Remington
						{
						    PlayerInfo[playerid][pBumper1] =1179;
						    AddVehicleComponent(vehicleid,1179);
						}
						else if(PlayerInfo[playerid][pCar] == 575) // бродвей
						{
						    PlayerInfo[playerid][pBumper1] =1174;
						    AddVehicleComponent(vehicleid,1174);
						}
						else if(PlayerInfo[playerid][pCar] == 567) // савана
						{
						    PlayerInfo[playerid][pBumper1] =1188;
						    AddVehicleComponent(vehicleid,1188);
						}
						else if(PlayerInfo[playerid][pCar] == 576) // торнадо
						{
						    PlayerInfo[playerid][pBumper1] =1190;
						    AddVehicleComponent(vehicleid,1190);
						}
						if(OldBumper1[playerid] != PlayerInfo[playerid][pBumper1])
						{
							PlayerInfo[playerid][pCash] -= 10000;
							SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}передний бампер фирмы Alien.");
							OnPlayerCommandText(playerid,"/mytune");
						}
						else
						{
						    SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}передний бампер фирмы Alien.");
						    OnPlayerCommandText(playerid,"/mytune");
						    return true;
						}
		            }
		            case 1:
		            {
		                if(PlayerInfo[playerid][pCash] < 10000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
		                if(PlayerInfo[playerid][pCar] == 558) // uranus
						{
                            PlayerInfo[playerid][pBumper1] = 1165;
						    AddVehicleComponent(vehicleid,1165);
						}
						else if(PlayerInfo[playerid][pCar] == 559) // Jester
						{
						    PlayerInfo[playerid][pBumper1] = 1173;
						    AddVehicleComponent(vehicleid, 1173);
						}
						else if(PlayerInfo[playerid][pCar] == 565)// Flash
						{
						    PlayerInfo[playerid][pBumper1] = 1152;
						    AddVehicleComponent(vehicleid,1152);
						}
						else if(PlayerInfo[playerid][pCar] == 562) // Elegy
						{
						    PlayerInfo[playerid][pBumper1] =1172;
						    AddVehicleComponent(vehicleid,1172);
						}
						else if(PlayerInfo[playerid][pCar] == 560) // Sultan
						{
						    PlayerInfo[playerid][pBumper1] =1170;
						    AddVehicleComponent(vehicleid,1170);
						}
						else if(PlayerInfo[playerid][pCar] == 534) // Remington
						{
						    PlayerInfo[playerid][pBumper1] =1185;
						    AddVehicleComponent(vehicleid,1185);
						}
						else if(PlayerInfo[playerid][pCar] == 575) // бродвей
						{
						    PlayerInfo[playerid][pBumper1] =1176;
						    AddVehicleComponent(vehicleid,1176);
						}
						else if(PlayerInfo[playerid][pCar] == 567) // савана
						{
						    PlayerInfo[playerid][pBumper1] =1189;
						    AddVehicleComponent(vehicleid,1189);
						}
						else if(PlayerInfo[playerid][pCar] == 576) // торнадо
						{
						    PlayerInfo[playerid][pBumper1] =1191;
						    AddVehicleComponent(vehicleid,1191);
						}
						if(OldBumper1[playerid] != PlayerInfo[playerid][pBumper1])
						{
							PlayerInfo[playerid][pCash] -= 10000;
							SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}передний бампер фирмы X-Low.");
							OnPlayerCommandText(playerid,"/mytune");
						}
						else
						{
						    SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}передний бампер фирмы X-Low.");
						    OnPlayerCommandText(playerid,"/mytune");
						    return true;
						}
					}
				}
			}
		}
		case 1603:
		{
		    if(response)
		    {
		        new vehicleid = GetPlayerVehicleID(playerid);
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(PlayerInfo[playerid][pCash] < 10000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						if(PlayerInfo[playerid][pCar] == 558) // uranus
						{
                            PlayerInfo[playerid][pBumper2] = 1168;
						    AddVehicleComponent(vehicleid,1168);
						}
						else if(PlayerInfo[playerid][pCar] == 559) // Jester
						{
						    PlayerInfo[playerid][pBumper2] = 1159;
						    AddVehicleComponent(vehicleid, 1159);
						}
						else if(PlayerInfo[playerid][pCar] == 565)// Flash
						{
						    PlayerInfo[playerid][pBumper2] = 1150;
						    AddVehicleComponent(vehicleid,1150);
						}
						else if(PlayerInfo[playerid][pCar] == 562) // Elegy
						{
						    PlayerInfo[playerid][pBumper2] =1149;
						    AddVehicleComponent(vehicleid,1149);
						}
						else if(PlayerInfo[playerid][pCar] == 560) // Sultan
						{
						    PlayerInfo[playerid][pBumper2] =1141;
						    AddVehicleComponent(vehicleid,1141);
						}
						else if(PlayerInfo[playerid][pCar] == 534) // Remington
						{
						    PlayerInfo[playerid][pBumper2] =1180;
						    AddVehicleComponent(vehicleid,1180);
						}
						else if(PlayerInfo[playerid][pCar] == 575) // бродвей
						{
						    PlayerInfo[playerid][pBumper2] =1175;
						    AddVehicleComponent(vehicleid,1175);
						}
						else if(PlayerInfo[playerid][pCar] == 567) // саванна
						{
						    PlayerInfo[playerid][pBumper2] =1186;
						    AddVehicleComponent(vehicleid,1186);
						}
						else if(PlayerInfo[playerid][pCar] == 576) // тонадо
						{
						    PlayerInfo[playerid][pBumper2] =1192;
						    AddVehicleComponent(vehicleid,1192);
						}
						if(OldBumper2[playerid] != PlayerInfo[playerid][pBumper2])
						{
							PlayerInfo[playerid][pCash] -= 10000;
							SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}задний бампер фирмы Alien.");
							OnPlayerCommandText(playerid,"/mytune");
						}
						else
						{
						    SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}задний бампер фирмы Alien.");
						    OnPlayerCommandText(playerid,"/mytune");
						    return true;
						}
		            }
		            case 1:
		            {
		                if(PlayerInfo[playerid][pCash] < 10000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
		                if(PlayerInfo[playerid][pCar] == 558) // uranus
						{
                            PlayerInfo[playerid][pBumper2] = 1167;
						    AddVehicleComponent(vehicleid,1167);
						}
						else if(PlayerInfo[playerid][pCar] == 559) // Jester
						{
						    PlayerInfo[playerid][pBumper2] = 1161;
						    AddVehicleComponent(vehicleid, 1161);
						}
						else if(PlayerInfo[playerid][pCar] == 565)// Flash
						{
						    PlayerInfo[playerid][pBumper2] = 1151;
						    AddVehicleComponent(vehicleid,1151);
						}
						else if(PlayerInfo[playerid][pCar] == 562) // Elegy
						{
						    PlayerInfo[playerid][pBumper2] =1148;
						    AddVehicleComponent(vehicleid,1148);
						}
						else if(PlayerInfo[playerid][pCar] == 560) // Sultan
						{
						    PlayerInfo[playerid][pBumper2] =1140;
						    AddVehicleComponent(vehicleid,1140);
						}
						else if(PlayerInfo[playerid][pCar] == 534) // Remington
						{
						    PlayerInfo[playerid][pBumper2] =1178;
						    AddVehicleComponent(vehicleid,1178);
						}
						else if(PlayerInfo[playerid][pCar] == 575) // Бродвей
						{
						    PlayerInfo[playerid][pBumper2] =1177;
						    AddVehicleComponent(vehicleid,1177);
						}
						else if(PlayerInfo[playerid][pCar] == 567) // савана
						{
						    PlayerInfo[playerid][pBumper2] =1187;
						    AddVehicleComponent(vehicleid,1187);
						}
						else if(PlayerInfo[playerid][pCar] == 576) // тонадо
						{
						    PlayerInfo[playerid][pBumper2] =1193;
						    AddVehicleComponent(vehicleid,1193);
						}
						if(OldBumper2[playerid] != PlayerInfo[playerid][pBumper2])
						{
							PlayerInfo[playerid][pCash] -= 10000;
							SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}задний бампер фирмы X-Low.");
							OnPlayerCommandText(playerid,"/mytune");
						}
						else
						{
						    SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}задний бампер фирмы X-Low.");
						    OnPlayerCommandText(playerid,"/mytune");
						    return true;
						}
					}
				}
			}
		}
		case 1604:
		{
			if(response)
			{
			    new vehicleid = GetPlayerVehicleID(playerid);
			    switch(listitem)
			    {
		            case 0:
		            {
		                if(PlayerInfo[playerid][pCash] < 12000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						if(PlayerInfo[playerid][pCar] == 558) // uranus
						{
                            PlayerInfo[playerid][pYubki] = 1094;
                            PlayerInfo[playerid][pYubki2] = 1090;
						    AddVehicleComponent(vehicleid,1094);
						    AddVehicleComponent(vehicleid,1090);
						}
						else if(PlayerInfo[playerid][pCar] == 559) // Jester
						{
						    PlayerInfo[playerid][pYubki] = 1071;
                            PlayerInfo[playerid][pYubki2] = 1069;
						    AddVehicleComponent(vehicleid,1071);
						    AddVehicleComponent(vehicleid,1069);
						}
						else if(PlayerInfo[playerid][pCar] == 565)// Flash
						{
						    PlayerInfo[playerid][pYubki] = 1051;
                            PlayerInfo[playerid][pYubki2] = 1047;
						    AddVehicleComponent(vehicleid,1051);
						    AddVehicleComponent(vehicleid,1047);
						}
						else if(PlayerInfo[playerid][pCar] == 562) // Elegy
						{
						    PlayerInfo[playerid][pYubki] = 1040;
                            PlayerInfo[playerid][pYubki2] = 1036;
						    AddVehicleComponent(vehicleid,1040);
						    AddVehicleComponent(vehicleid,1036);
						}
						else if(PlayerInfo[playerid][pCar] == 560) // Sultan
						{
						    PlayerInfo[playerid][pYubki] = 1027;
                            PlayerInfo[playerid][pYubki2] = 1026;
						    AddVehicleComponent(vehicleid,1027);
						    AddVehicleComponent(vehicleid,1026);
						}
						else if(PlayerInfo[playerid][pCar] == 534) // Remington 1042 10 99
						{
						    PlayerInfo[playerid][pYubki] = 1001;
                            PlayerInfo[playerid][pYubki2] = 1122;
						    AddVehicleComponent(vehicleid,1001);
						    AddVehicleComponent(vehicleid,1122);
						}
						else if(PlayerInfo[playerid][pCar] == 534) // Бродвей 1042 1099
						{
						    PlayerInfo[playerid][pYubki] = 1042;
                            PlayerInfo[playerid][pYubki2] = 1099;
						    AddVehicleComponent(vehicleid,1042);
						    AddVehicleComponent(vehicleid,1099);
						}
						else if(PlayerInfo[playerid][pCar] == 567) // саванна
						{
						    PlayerInfo[playerid][pYubki] = 1033;
                            PlayerInfo[playerid][pYubki2] = 1002;
						    AddVehicleComponent(vehicleid,1133);
						    AddVehicleComponent(vehicleid,1102);
						}
						else if(PlayerInfo[playerid][pCar] == 576) // торнадо
						{
						    PlayerInfo[playerid][pYubki] = 1134;
                            PlayerInfo[playerid][pYubki2] = 1137;
						    AddVehicleComponent(vehicleid,1134);
						    AddVehicleComponent(vehicleid,1137);
						}
						if(OldYubki[playerid] != PlayerInfo[playerid][pYubki] && OldYubki2[playerid] != PlayerInfo[playerid][pYubki2])
						{
							PlayerInfo[playerid][pCash] -= 12000;
							SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}боковые юбки фирмы Alien.");
							OnPlayerCommandText(playerid,"/mytune");
						}
						else
						{
						    SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}боковые юбки фирмы Alien.");
						    OnPlayerCommandText(playerid,"/mytune");
							return true;
						}
		            }
		            case 1:
		            {
		                if(PlayerInfo[playerid][pCar] == 575 || PlayerInfo[playerid][pCar] == 567 || PlayerInfo[playerid][pCar] == 576) // Бродвей
						{
						    SendClientMessage(playerid, COLOR_GREY, "Для вашей машины нет модели фирмы X-Low");
						}
						else
						{
						    if(PlayerInfo[playerid][pCash] < 12000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
			                if(PlayerInfo[playerid][pCar] == 558) // uranus
							{
	                            PlayerInfo[playerid][pYubki] = 1093;
	                            PlayerInfo[playerid][pYubki2] = 1095;
							    AddVehicleComponent(vehicleid,1093);
							    AddVehicleComponent(vehicleid,1095);
							}
							else if(PlayerInfo[playerid][pCar] == 559) // Jester
							{
							    PlayerInfo[playerid][pYubki] = 1072;
	                            PlayerInfo[playerid][pYubki2] = 1070;
							    AddVehicleComponent(vehicleid,1072);
							    AddVehicleComponent(vehicleid,1070);
							}
							else if(PlayerInfo[playerid][pCar] == 565)// Flash
							{
							    PlayerInfo[playerid][pYubki] = 1052;
	                            PlayerInfo[playerid][pYubki2] = 1048;
							    AddVehicleComponent(vehicleid,1052);
							    AddVehicleComponent(vehicleid,1048);
							}
							else if(PlayerInfo[playerid][pCar] == 562) // Elegy
							{
							    PlayerInfo[playerid][pYubki] = 1039;
	                            PlayerInfo[playerid][pYubki2] = 1041;
							    AddVehicleComponent(vehicleid,1039);
							    AddVehicleComponent(vehicleid,1041);
							}
							else if(PlayerInfo[playerid][pCar] == 560) // Sultan
							{
							    PlayerInfo[playerid][pYubki] = 1030;
	                            PlayerInfo[playerid][pYubki2] = 1031;
							    AddVehicleComponent(vehicleid,1030);
							    AddVehicleComponent(vehicleid,1031);
							}
							else if(PlayerInfo[playerid][pCar] == 534) // Remington
							{
							    PlayerInfo[playerid][pYubki] = 1124;
	                            PlayerInfo[playerid][pYubki2] = 1106;
							    AddVehicleComponent(vehicleid,1124);
							    AddVehicleComponent(vehicleid,1106);
							}
							if(OldYubki[playerid] != PlayerInfo[playerid][pYubki] && OldYubki2[playerid] != PlayerInfo[playerid][pYubki2])
							{
								PlayerInfo[playerid][pCash] -= 12000;
								SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}боковые юбки фирмы X-Low.");
								OnPlayerCommandText(playerid,"/mytune");
							}
							else
							{
							    SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}боковые юбки фирмы X-Low.");
							    OnPlayerCommandText(playerid,"/mytune");
							    return true;
							}
						}
					}
				}
			}
		}
		case 1605:
		{
		    if(response)
		    {
		        new vehicleid = GetPlayerVehicleID(playerid);
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(PlayerInfo[playerid][pCash] < 11000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						if(PlayerInfo[playerid][pCar] == 558) // uranus
						{
	     					PlayerInfo[playerid][pVih] = 1092;
		    				AddVehicleComponent(vehicleid, 1092);
						}
						else if(PlayerInfo[playerid][pCar] == 559) // Jester
						{
						    PlayerInfo[playerid][pVih] = 1065;
						    AddVehicleComponent(vehicleid,1065);
						}
						else if(PlayerInfo[playerid][pCar] == 565)// Flash
						{
						    PlayerInfo[playerid][pVih] = 1046;
						    AddVehicleComponent(vehicleid,1046);
						}
						else if(PlayerInfo[playerid][pCar] == 562) // Elegy
						{
						    PlayerInfo[playerid][pVih] = 1034;
						    AddVehicleComponent(vehicleid,1034);
						}
						else if(PlayerInfo[playerid][pCar] == 560) // Sultan
						{
						    PlayerInfo[playerid][pVih] = 1028;
						    AddVehicleComponent(vehicleid,1028);
						}
						else if(PlayerInfo[playerid][pCar] == 534) // Remington
						{
			   				PlayerInfo[playerid][pVih] = 1126;
						    AddVehicleComponent(vehicleid,1126);
						}
						else if(PlayerInfo[playerid][pCar] == 575) // Бродвей
						{
			   				PlayerInfo[playerid][pVih] = 1043;
						    AddVehicleComponent(vehicleid,1043);
						}
						else if(PlayerInfo[playerid][pCar] == 567) // саванна
						{
			   				PlayerInfo[playerid][pVih] = 1129;
						    AddVehicleComponent(vehicleid,1129);
						}
						else if(PlayerInfo[playerid][pCar] == 576) // тонадо
						{
			   				PlayerInfo[playerid][pVih] = 1135;
						    AddVehicleComponent(vehicleid,1135);
						}
						if(OldVih[playerid] != PlayerInfo[playerid][pVih])
						{
							PlayerInfo[playerid][pCash] -= 11000;
							SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}выхлоп фирмы Alien.");
							OnPlayerCommandText(playerid,"/mytune");
						}
						else
						{
						    SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}выхлоп фирмы Alien.");
						    OnPlayerCommandText(playerid,"/mytune");
						    return true;
						}
	     			}
	 				case 1:
	     			{
	     			    if(PlayerInfo[playerid][pCash] < 11000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
		        		if(PlayerInfo[playerid][pCar] == 558) // uranus
						{
		    				PlayerInfo[playerid][pVih] = 1089;
					    	AddVehicleComponent(vehicleid,1089);
						}
						else if(PlayerInfo[playerid][pCar] == 559) // Jester
						{
		    				PlayerInfo[playerid][pVih] = 1066;
						    AddVehicleComponent(vehicleid,1066);
						}
						else if(PlayerInfo[playerid][pCar] == 565)// Flash
						{
		   					PlayerInfo[playerid][pVih] = 1045;
						    AddVehicleComponent(vehicleid,1045);
						}
						else if(PlayerInfo[playerid][pCar] == 562) // Elegy
						{
		    				PlayerInfo[playerid][pVih] = 1037;
						    AddVehicleComponent(vehicleid,1037);
						}
						else if(PlayerInfo[playerid][pCar] == 560) // Sultan
						{
			   				PlayerInfo[playerid][pVih] = 1029;
						    AddVehicleComponent(vehicleid,1029);
						}
						else if(PlayerInfo[playerid][pCar] == 534) // Remington
						{
			   				PlayerInfo[playerid][pVih] = 1127;
						    AddVehicleComponent(vehicleid,1127);
						}
						else if(PlayerInfo[playerid][pCar] == 534) // Бродвей
						{
			   				PlayerInfo[playerid][pVih] = 1044;
						    AddVehicleComponent(vehicleid,1044);
						}
						else if(PlayerInfo[playerid][pCar] == 567) // савана
						{
			   				PlayerInfo[playerid][pVih] = 1132;
						    AddVehicleComponent(vehicleid,1132);
						}
						else if(PlayerInfo[playerid][pCar] == 576) // тонадо
						{
			   				PlayerInfo[playerid][pVih] = 1136;
						    AddVehicleComponent(vehicleid,1136);
						}
						if(OldVih[playerid] != PlayerInfo[playerid][pVih])
						{
							PlayerInfo[playerid][pCash] -= 11000;
							SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}выхлоп фирмы X-Low.");
							OnPlayerCommandText(playerid,"/mytune");
						}
						else
						{
						    SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}выхлоп фирмы X-Low.");
						    OnPlayerCommandText(playerid,"/mytune");
							return true;
						}
					}
				}
			}
		}
		case 1606:
		{
		    if(response)
		    {
		        new vehicleid = GetPlayerVehicleID(playerid);
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(PlayerInfo[playerid][pCash] < 8000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						if(PlayerInfo[playerid][pCar] == 558) // uranus
						{
	     					PlayerInfo[playerid][pVozd] = 1088;
		    				AddVehicleComponent(vehicleid,1088);
						}
						else if(PlayerInfo[playerid][pCar] == 559) // Jester
						{
						   	PlayerInfo[playerid][pVozd] = 1067;
		    				AddVehicleComponent(vehicleid,1067);
						}
						else if(PlayerInfo[playerid][pCar] == 565)// Flash
						{
						    PlayerInfo[playerid][pVozd] = 1054;
		    				AddVehicleComponent(vehicleid,1054);
						}
						else if(PlayerInfo[playerid][pCar] == 562) // Elegy
						{
						    PlayerInfo[playerid][pVozd] = 1038;
		    				AddVehicleComponent(vehicleid,1038);
						}
						else if(PlayerInfo[playerid][pCar] == 560) // Sultan
						{
						   	PlayerInfo[playerid][pVozd] = 1032;
		    				AddVehicleComponent(vehicleid,1033);
						}
						else if(PlayerInfo[playerid][pCar] == 567) // савана
						{
			   				PlayerInfo[playerid][pVozd] = 1130;
						    AddVehicleComponent(vehicleid,1130);
						}
						if(OldVozd[playerid] != PlayerInfo[playerid][pVozd])
						{
							PlayerInfo[playerid][pCash] -= 8000;
							SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}деталь на крышу фирмы Alien.");
							OnPlayerCommandText(playerid,"/mytune");
		     			}
		     			else
		     			{
	     			    	SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}деталь на крышу фирмы Alien.");
							OnPlayerCommandText(playerid,"/mytune");
	     			    	return true;
						}
					}
	 				case 1:
	     			{
	     			    if(PlayerInfo[playerid][pCash] < 8000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
		        		if(PlayerInfo[playerid][pCar] == 558) // uranus
						{
		    				PlayerInfo[playerid][pVozd] = 1091;
		    				AddVehicleComponent(vehicleid,1091);
						}
						else if(PlayerInfo[playerid][pCar] == 559) // Jester
						{
		    				PlayerInfo[playerid][pVozd] = 1068;
		    				AddVehicleComponent(vehicleid,1068);
						}
						else if(PlayerInfo[playerid][pCar] == 565)// Flash
						{
		   					PlayerInfo[playerid][pVozd] = 1053;
		    				AddVehicleComponent(vehicleid,1053);
						}
						else if(PlayerInfo[playerid][pCar] == 562) // Elegy
						{
		    				PlayerInfo[playerid][pVozd] = 1035;
		    				AddVehicleComponent(vehicleid,1035);
						}
						else if(PlayerInfo[playerid][pCar] == 560) // Sultan
						{
			   				PlayerInfo[playerid][pVozd] = 1033;
		    				AddVehicleComponent(vehicleid,1033);
						}
						else if(PlayerInfo[playerid][pCar] == 567) // савана
						{
			   				PlayerInfo[playerid][pVozd] = 1131;
						    AddVehicleComponent(vehicleid,1131);
						}
						if(OldVozd[playerid] != PlayerInfo[playerid][pVozd])
						{
							PlayerInfo[playerid][pCash] -= 8000;
							SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}деталь на крышу фирмы X-Low.");
							OnPlayerCommandText(playerid,"/mytune");
						}
						else
						{
							SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}деталь на крышу фирмы X-Low.");
							OnPlayerCommandText(playerid,"/mytune");
							return true;
						}
					}
				}
			}
		}
		case 1607:
		{
		    if(response)
		    {
		        new vehicleid = GetPlayerVehicleID(playerid);
		        switch(listitem)
		        {
		            case 0: // 9
		            {
		                if(PlayerInfo[playerid][pCash] < 5000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
		                PlayerInfo[playerid][pNitro] = 1009;
						AddVehicleComponent(vehicleid,1009);
						if(OldNitro[playerid] != PlayerInfo[playerid][pNitro])
		                {
							PlayerInfo[playerid][pCash] -= 5000;
							SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}закись азота X-2");
							OnPlayerCommandText(playerid,"/mytune");
						}
						else
						{
						    SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}закись азота X-2");
						    OnPlayerCommandText(playerid,"/mytune");
						    return true;
						}
		            }
		            case 1: // 8
		            {
		                if(PlayerInfo[playerid][pCash] < 10000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
		                PlayerInfo[playerid][pNitro] = 1008;
		    			AddVehicleComponent(vehicleid,1008);
						if(OldNitro[playerid] != PlayerInfo[playerid][pNitro])
		                {
							PlayerInfo[playerid][pCash] -= 10000;
							SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}закись азота X-5");
							OnPlayerCommandText(playerid,"/mytune");
						}
						else
						{
						    SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}закись азота X-5");
						    OnPlayerCommandText(playerid,"/mytune");
						    return true;
						}
		            }
		            case 2: // 10
					{
					    if(PlayerInfo[playerid][pCash] < 15000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
		                PlayerInfo[playerid][pNitro] = 1010;
		    			AddVehicleComponent(vehicleid,1010);
						if(OldNitro[playerid] != PlayerInfo[playerid][pNitro])
		                {
							PlayerInfo[playerid][pCash] -= 15000;
							SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}закись азота X-10");
							OnPlayerCommandText(playerid,"/mytune");
						}
						else
						{
						    SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}закись азота X-10");
						    OnPlayerCommandText(playerid,"/mytune");
						    return true;
						}
					}
				}
			}
		}
		case 1608:
		{
		    if(response)
		    {
		        new vehicleid = GetPlayerVehicleID(playerid);
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(PlayerInfo[playerid][pCash] < 15000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						if(PlayerInfo[playerid][pCar] == 558) // uranus
						{
	     					PlayerInfo[playerid][pSpoiler] = 1164;
		    				AddVehicleComponent(vehicleid,1164);
						}
						else if(PlayerInfo[playerid][pCar] == 559) // Jester
						{
						   	PlayerInfo[playerid][pSpoiler] = 1162;
		    				AddVehicleComponent(vehicleid,1162);
						}
						else if(PlayerInfo[playerid][pCar] == 565)// Flash
						{
						    PlayerInfo[playerid][pSpoiler] = 1049;
		    				AddVehicleComponent(vehicleid,1049);
						}
						else if(PlayerInfo[playerid][pCar] == 562) // Elegy
						{
						    PlayerInfo[playerid][pSpoiler] = 1147;
		    				AddVehicleComponent(vehicleid,1147);
						}
						else if(PlayerInfo[playerid][pCar] == 560) // Sultan
						{
						   	PlayerInfo[playerid][pSpoiler] = 1138;
		    				AddVehicleComponent(vehicleid,1138);
						}
						if(OldSpoiler[playerid] != PlayerInfo[playerid][pSpoiler])
						{
							PlayerInfo[playerid][pCash] -= 15000;
							SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}спойлер фирмы Alien.");
							OnPlayerCommandText(playerid,"/mytune");
						}
						else
						{
						    SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}спойлер фирмы Alien.");
						    OnPlayerCommandText(playerid,"/mytune");
						    return true;
						}
	     			}
	 				case 1:
	     			{
	     			    if(PlayerInfo[playerid][pCash] < 15000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
		        		if(PlayerInfo[playerid][pCar] == 558) // uranus
						{
		    				PlayerInfo[playerid][pSpoiler] = 1163;
		    				AddVehicleComponent(vehicleid,1163);
						}
						else if(PlayerInfo[playerid][pCar] == 559) // Jester
						{
		    				PlayerInfo[playerid][pSpoiler] = 1158;
		    				AddVehicleComponent(vehicleid,1158);
						}
						else if(PlayerInfo[playerid][pCar] == 565)// Flash
						{
		   					PlayerInfo[playerid][pSpoiler] = 1050;
		    				AddVehicleComponent(vehicleid,1050);
						}
						else if(PlayerInfo[playerid][pCar] == 562) // Elegy
						{
		    				PlayerInfo[playerid][pSpoiler] = 1146;
		    				AddVehicleComponent(vehicleid,1146);
						}
						else if(PlayerInfo[playerid][pCar] == 560) // Sultan
						{
			   				PlayerInfo[playerid][pSpoiler] = 1139;
		    				AddVehicleComponent(vehicleid,1139);
						}
						if(OldSpoiler[playerid] != PlayerInfo[playerid][pSpoiler])
						{
							PlayerInfo[playerid][pCash] -= 15000;
							SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}спойлер фирмы X-Low.");
							OnPlayerCommandText(playerid,"/mytune");
                        }
						else
						{
						    SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}спойлер фирмы Alien.");
						    OnPlayerCommandText(playerid,"/mytune");
						    return true;
						}
					}
				}
			}
		}
		case 1609:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
                    case 0: // Статистика игрока
                    {
                        ShowPlayerDialog(playerid,1613,DIALOG_STYLE_INPUT,"Stats Player","Введите ID игрока","Ок","Отмена");
                    }
					case 1: // Администраторы
					{
					    OnPlayerCommandText(playerid, "/admins");
					}
					case 2: // Команды администраторов
					{
						OnPlayerCommandText(playerid, "/ahelp");
					}
					case 3: // Телепорт
					{
					    OnPlayerCommandText(playerid, "/tp");
					}
					case 4: // Состояние складов
					{
					    OnPlayerCommandText(playerid, "/awarehouse");
					}
					case 5: // Состояние Банка
					{
						OnPlayerCommandText(playerid, "/abalance");
					}
					case 6: // Игроки  FFCC33 F2EEF0
					{
					   	ShowPlayerDialog(playerid,1611,DIALOG_STYLE_LIST,"{e23434}Инфа тип{ffffff}","[{FFCC33}VIP{F2EEF0}] Игроки\n[{FFCC33}DeMorgan{F2EEF0}] Игроки\n[{e23434}WARN{F2EEF0}] Игроки\n[{e23434}AFK{F2EEF0}] Игроки\n[{e23434}MUTE{F2EEF0}] Игроки","Ок","Отмена");
					}
					case 7: // OFF-LINCE FUNCTION
					{
					    ShowPlayerDialog(playerid,1612,DIALOG_STYLE_LIST,"{e23434}Инфа тип{ffffff}","[{e23434}OFFLINE{F2EEF0}] Забанить\n[{e23434}OFFLINE{F2EEF0}] Разбанить\n[{e23434}OFFLINE{F2EEF0}] Снять с лидерства\n[{e23434}OFFLINE{F2EEF0}] Снять с админки","Ок","Отмена");
					}
				}
			}
		}
		case 1612:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
				    case 0: // Забанить
				    {
				        ShowPlayerDialog(playerid,1614,DIALOG_STYLE_INPUT,"Offban player","Введите Nick игрока и причину через пробел\nПример: Vasya_Pupkin Cheat","Ок","Отмена");
				    }
					case 1: // Разбанить
					{
					    ShowPlayerDialog(playerid,1615,DIALOG_STYLE_INPUT,"OffUnBan player","Введите Nick игрока","Ок","Отмена");
				    }
					case 2: // Снять с лидерства
					{
					    ShowPlayerDialog(playerid,1616,DIALOG_STYLE_INPUT,"OffLeader player","Введите Nick игрока","Ок","Отмена");
				    }
					case 3: // Снять с админки
					{
					    ShowPlayerDialog(playerid,1617,DIALOG_STYLE_INPUT,"OffAdmin player","Введите Nick игрока","Ок","Отмена");
				    }
				}
			}
		}
		case 1614:
		{
			if(response)
			{
				new mess[40];
				format(mess, sizeof(mess), "/offban %s",inputtext);
				OnPlayerCommandText(playerid, mess);
			}
		}
		case 1615:
		{
		    if(response)
			{
				new mess[40];
				format(mess, sizeof(mess), "/unban %s",inputtext);
				OnPlayerCommandText(playerid, mess);
			}
		}
		case 1616:
		{
			if(response)
			{
				new mess[40];
				format(mess, sizeof(mess), "/offleader %s",inputtext);
				OnPlayerCommandText(playerid, mess);
			}
		}
		case 1617:
		{
		    if(response)
			{
				new mess[40];
				format(mess, sizeof(mess), "/offadmin %s",inputtext);
				OnPlayerCommandText(playerid, mess);
			}
		}
		case 1613:
		{
		    if(response)
			{
				new mess[20];
				format(mess, sizeof(mess), "/getstats %s",inputtext);
				OnPlayerCommandText(playerid, mess);
			}
		}
		case 1611:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
				    case 0:// VIP игроки
				    {
						OnPlayerCommandText(playerid, "/vipmans");
				    }
					case 1:// JAIL игроки
					{
					    OnPlayerCommandText(playerid, "/demorganlist");
					}
					case 2:// WARN игроки
					{
					    OnPlayerCommandText(playerid, "/warnmans");
					}
					case 3:// AFK Игроки
					{
					    OnPlayerCommandText(playerid, "/afkplayers");
					}
					case 4:// AFK Игроки
					{
					    OnPlayerCommandText(playerid, "/mutelist");
					}
				}
			}
		}
		case 1610:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
						OnPlayerCommandText(playerid, "/open");
		            }
		            case 1:
		            {
						OnPlayerCommandText(playerid, "/fixcar");
		            }
				}
			}
		}
		case 8012:
		{
			if(response)
			{
			    new vehicleid = GetPlayerVehicleID(playerid);
				new cartype = GetVehicleModel(vehicleid);
				switch(listitem)
				{
					case 0:
					{
						switch(cartype)
						{
							case 562: AddVehicleComponent(vehicleid,1172);
							case 560: AddVehicleComponent(vehicleid,1170);
							case 565: AddVehicleComponent(vehicleid,1152);
							case 559: AddVehicleComponent(vehicleid,1173);
							case 561: AddVehicleComponent(vehicleid,1157);
							case 558: AddVehicleComponent(vehicleid,1165);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
					case 1:
					{
						switch(cartype)
						{
							case 562: AddVehicleComponent(vehicleid,1171);
							case 560: AddVehicleComponent(vehicleid,1169);
							case 565: AddVehicleComponent(vehicleid,1153);
							case 559: AddVehicleComponent(vehicleid,1160);
							case 561: AddVehicleComponent(vehicleid,1155);
							case 558: AddVehicleComponent(vehicleid,1166);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
					case 2:
					{
						switch(cartype)
						{
							case 562: AddVehicleComponent(vehicleid,1148);
							case 560: AddVehicleComponent(vehicleid,1140);
							case 565: AddVehicleComponent(vehicleid,1151);
							case 559: AddVehicleComponent(vehicleid,1161);
							case 561: AddVehicleComponent(vehicleid,1156);
							case 558: AddVehicleComponent(vehicleid,1167);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
					case 3:
					{
						switch(cartype)
						{
							case 562: AddVehicleComponent(vehicleid,1149);
							case 560: AddVehicleComponent(vehicleid,1141);
							case 565: AddVehicleComponent(vehicleid,1150);
							case 559: AddVehicleComponent(vehicleid,1159);
							case 561: AddVehicleComponent(vehicleid,1154);
							case 558: AddVehicleComponent(vehicleid,1168);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
					case 4:
					{
						switch(cartype)
						{
							case 562: AddVehicleComponent(vehicleid,1146);
							case 560: AddVehicleComponent(vehicleid,1139);
							case 565: AddVehicleComponent(vehicleid,1050);
							case 559: AddVehicleComponent(vehicleid,1158);
							case 561: AddVehicleComponent(vehicleid,1160);
							case 558: AddVehicleComponent(vehicleid,1163);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
					case 5:
					{
						switch(cartype)
						{
							case 562: AddVehicleComponent(vehicleid,1147);
							case 560: AddVehicleComponent(vehicleid,1138);
							case 565: AddVehicleComponent(vehicleid,1049);
							case 559: AddVehicleComponent(vehicleid,1162);
							case 561: AddVehicleComponent(vehicleid,1058);
							case 558: AddVehicleComponent(vehicleid,1164);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
					case 6:
					{
						switch(cartype)
						{
							case 562: AddVehicleComponent(vehicleid,1041), AddVehicleComponent(vehicleid,1039);
							case 560: AddVehicleComponent(vehicleid,1031), AddVehicleComponent(vehicleid,1030);
							case 565: AddVehicleComponent(vehicleid,1052), AddVehicleComponent(vehicleid,1048);
							case 559: AddVehicleComponent(vehicleid,1070), AddVehicleComponent(vehicleid,1072);
							case 561: AddVehicleComponent(vehicleid,1057), AddVehicleComponent(vehicleid,1063);
							case 558: AddVehicleComponent(vehicleid,1093), AddVehicleComponent(vehicleid,1095);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
					case 7:
					{
						switch(cartype)
						{
							case 562: AddVehicleComponent(vehicleid,1036), AddVehicleComponent(vehicleid,1040);
							case 560: AddVehicleComponent(vehicleid,1026), AddVehicleComponent(vehicleid,1027);
							case 565: AddVehicleComponent(vehicleid,1051), AddVehicleComponent(vehicleid,1047);
							case 559: AddVehicleComponent(vehicleid,1069), AddVehicleComponent(vehicleid,1071);
							case 561: AddVehicleComponent(vehicleid,1056), AddVehicleComponent(vehicleid,1062);
							case 558: AddVehicleComponent(vehicleid,1090), AddVehicleComponent(vehicleid,1094);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
					case 8:
					{
						switch(cartype)
						{
							case 562: AddVehicleComponent(vehicleid,1035);
							case 560: AddVehicleComponent(vehicleid,1033);
							case 565: AddVehicleComponent(vehicleid,1052);
							case 559: AddVehicleComponent(vehicleid,1068);
							case 561: AddVehicleComponent(vehicleid,1061);
							case 558: AddVehicleComponent(vehicleid,1091);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
					case 9:
					{
						switch(cartype)
						{
							case 562: AddVehicleComponent(vehicleid,1038);
							case 560: AddVehicleComponent(vehicleid,1032);
							case 565: AddVehicleComponent(vehicleid,1054);
							case 559: AddVehicleComponent(vehicleid,1067);
							case 561: AddVehicleComponent(vehicleid,1055);
							case 558: AddVehicleComponent(vehicleid,1088);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
					case 10:
					{
						switch(cartype)
						{
							case 562: AddVehicleComponent(vehicleid,1037);
							case 560: AddVehicleComponent(vehicleid,1029);
							case 565: AddVehicleComponent(vehicleid,1045);
							case 559: AddVehicleComponent(vehicleid,1066);
							case 561: AddVehicleComponent(vehicleid,1059);
							case 558: AddVehicleComponent(vehicleid,1089);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
					case 11:
					{
						switch(cartype)
						{
							case 562: AddVehicleComponent(vehicleid,1034);
							case 560: AddVehicleComponent(vehicleid,1028);
							case 565: AddVehicleComponent(vehicleid,1046);
							case 559: AddVehicleComponent(vehicleid,1065);
							case 561: AddVehicleComponent(vehicleid,1064);
							case 558: AddVehicleComponent(vehicleid,1092);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				}
			}
			else ShowPlayerDialog(playerid, 8004, 2, "Тюнинг меню", "Диски\nГидравлика\nАрхангел Тюнинг\nЦвет\nВинилы\nАзот", "Выбрать", "Назад");
			return true;
		}
		case 555:
	    {
	        if(response)
	        {
	            switch(listitem)
	            {
		            case 0:
		            {
		                ShowPlayerDialog(playerid, 556, DIALOG_STYLE_INPUT, "Выдать водительские права", "Введите ID того, кому вы хотите выдать лицензию", "Выдать", "Отмена");
		                return true;
		            }
		            case 1:
		            {
		                ShowPlayerDialog(playerid, 557, DIALOG_STYLE_INPUT, "Выдать лицензию на полёты", "Введите ID того, кому вы хотите выдать лицензию", "Выдать", "Отмена");
		                return true;
		            }
		            case 2:
		            {
		                ShowPlayerDialog(playerid, 558, DIALOG_STYLE_INPUT, "Выдать лицензию на рыболовлю", "Введите ID того, кому вы хотите выдать лицензию", "Выдать", "Отмена");
		                return true;
		            }
		            case 3:
		            {
		                ShowPlayerDialog(playerid, 559, DIALOG_STYLE_INPUT, "Выдать лицензию на вождение водного транспорта", "Введите ID того, кому вы хотите выдать лицензию", "Выдать", "Отмена");
		                return true;
		            }
		            case 4:
		            {
		                ShowPlayerDialog(playerid, 560, DIALOG_STYLE_INPUT, "Выдать лицензию на оружие", "Введите ID того, кому вы хотите выдать лицензию", "Выдать", "Отмена");
		                return true;
		            }
		            case 5:
		            {
		                ShowPlayerDialog(playerid, 562, DIALOG_STYLE_INPUT, "Выдать лицензию на бизнес", "Введите ID того, кому вы хотите выдать лицензию", "Выдать", "Отмена");
		                return true;
		            }
		            case 6:
		            {
		                ShowPlayerDialog(playerid, 561, DIALOG_STYLE_INPUT, "Выдать комплект всех лицензий", "Введите ID того, кому вы хотите выдать лицензию", "Выдать", "Отмена");
		                return true;
		            }
				}
	        }
	    }
		case 556:
	    {
	        if(response)
	        {
	            new string556[255];
	            new pname[MAX_PLAYER_NAME];
	            new idd = strval(inputtext);
	            new lname[MAX_PLAYER_NAME];
	            if(idd == INVALID_PLAYER_ID)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
	                return true;
	            }
	            if(PlayerInfo[idd][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "У этого игрока нету паспорта");
				if(PlayerInfo[idd][pCarLic] == 1)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "У этого игрока есть права!");
	                return true;
	            }
				GetPlayerName(idd, pname, sizeof(pname));
	            format(string556, sizeof(string556), "Вы выдали права %s[%d].",pname, idd);
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, string556);
	            PlayerInfo[idd][pCarLic] = 1;
	            GetPlayerName(playerid, lname, sizeof(lname));
	            format(string556, sizeof(string556), "Инструктор %s выдал водительские прова %s[%d].",lname, pname, idd);
	            SendRadioMessage(11,COLOR_LIGHTBLUE , string556);
	            SendClientMessage(idd, COLOR_LIGHTBLUE, "Вам выдали права");
	        }
	    }
		case 557:
	    {
	        if(response)
	        {
	            new string557[255];
	            new pname[MAX_PLAYER_NAME];
	            new idd = strval(inputtext);
	            new lname[MAX_PLAYER_NAME];
	            if(idd == INVALID_PLAYER_ID)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
	                return true;
	            }
	            if(PlayerInfo[idd][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "У этого игрока нету паспорта");
				if(PlayerInfo[idd][pFlyLic] == 1)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "У этого игрока есть лицензия на полёты!");
	                return true;
	            }
	            GetPlayerName(idd, pname, sizeof(pname));
	            format(string557, sizeof(string557), "Вы выдали лицензию на полёты %s[%d].",pname, idd);
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, string557);
	            PlayerInfo[idd][pFlyLic] = 1;
	            GetPlayerName(playerid, lname, sizeof(lname));
	            format(string557, sizeof(string557), "Инструктор %s выдал лицензию на полеты %s[%d].",lname, pname, idd);
	            SendRadioMessage(11,COLOR_LIGHTBLUE , string557);
	            SendClientMessage(idd, COLOR_LIGHTBLUE, "Вам выдали лицензию на полёты");
	        }
	    }
		case 558:
	    {
	        if(response)
	        {
	            new string558[255];
	            new pname[MAX_PLAYER_NAME];
	            new idd = strval(inputtext);
	            new lname[MAX_PLAYER_NAME];
	            if(idd == INVALID_PLAYER_ID)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
	                return true;
	            }
	            if(PlayerInfo[idd][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "У этого игрока нету паспорта");
	            if(PlayerInfo[idd][pFishLic] == 1)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "У этого игрока есть разрешение на рыболовство!");
	                return true;
	            }
	            GetPlayerName(idd, pname, sizeof(pname));
	            format(string558, sizeof(string558), "Вы выдали лицензию на рыболовлю %s[%d].",pname, idd);
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, string558);
	            PlayerInfo[idd][pFishLic] = 1;
	            GetPlayerName(playerid, lname, sizeof(lname));
	            format(string558, sizeof(string558), "Инструктор %s выдал лицензию на рыболовство %s[%d].",lname, pname, idd);
	            SendRadioMessage(11,COLOR_LIGHTBLUE , string558);
	            SendClientMessage(idd, COLOR_LIGHTBLUE, "Вам выдали разрешение на рыболовство.");
	        }
	    }
		case 559:
	    {
	        if(response)
	        {
				new string559[255];
				new pname[MAX_PLAYER_NAME];
	            new idd = strval(inputtext);
	            new lname[MAX_PLAYER_NAME];
	            if(idd == INVALID_PLAYER_ID)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
	                return true;
	            }
	            if(PlayerInfo[idd][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "У этого игрока нету паспорта");
	            if(PlayerInfo[idd][pBoatLic] == 1)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "У этого игрока есть лицензия на лодку!");
	                return true;
	            }
	            GetPlayerName(idd, pname, sizeof(pname));
	            format(string559, sizeof(string559), "Вы выдали лицензию на лодку %s[%d].",pname, idd);
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, string559);
	            PlayerInfo[idd][pBoatLic] = 1;
	            GetPlayerName(playerid, lname, sizeof(lname));
	            format(string559, sizeof(string559), "Инструктор %s выдал лицензию водный транспорт %s[%d].",lname, pname, idd);
	            SendRadioMessage(11,COLOR_LIGHTBLUE , string559);
	            SendClientMessage(idd, COLOR_LIGHTBLUE, "Вам выдали лицензию на лодку");
	        }
	    }
		case 560:
	    {
	        if(response)
	        {
	            new string560[255];
	            new pname[MAX_PLAYER_NAME];
	            new idd = strval(inputtext);
				new lname[MAX_PLAYER_NAME];
	            if(idd == INVALID_PLAYER_ID)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
	                return true;
	            }
	            if(PlayerInfo[idd][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "У этого игрока нету паспорта");
	            if(PlayerInfo[idd][pGunLic] == 1)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "У этого игрока есть лицензия на оружие!");
	                return true;
	            }
	            GetPlayerName(idd, pname, sizeof(pname));
	            format(string560, sizeof(string560), "Вы выдали лицензию на оружие %s[%d].",pname, idd);
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, string560);
	            PlayerInfo[idd][pGunLic] = 1;
	            GetPlayerName(playerid, lname, sizeof(lname));
	            format(string560, sizeof(string560), "Инструктор %s выдал лицензию на оружие %s[%d].",lname, pname, idd);
	            SendRadioMessage(11,COLOR_LIGHTBLUE , string560);
	            SendClientMessage(idd, COLOR_LIGHTBLUE, "Вам выдали лицензию на оружие");
	        }
	    }
		case 561:
	    {
	        if(response)
	        {
	            new string561[255];
	            new pname[MAX_PLAYER_NAME];
	            new idd = strval(inputtext);
				new lname[MAX_PLAYER_NAME];
	            if(idd == INVALID_PLAYER_ID)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
	                return true;
	            }
	            if(PlayerInfo[idd][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "У этого игрока нету паспорта");
	            GetPlayerName(idd, pname, sizeof(pname));
	            format(string561, sizeof(string561), "Вы выдали все лицензии игроку %s[%d].",pname, idd);
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, string561);
	            PlayerInfo[idd][pCarLic] = 1;
	            PlayerInfo[idd][pFishLic] = 1;
	            PlayerInfo[idd][pBoatLic] = 1;
	            PlayerInfo[idd][pFlyLic] = 1;
	            PlayerInfo[idd][pGunLic] = 1;
	            PlayerInfo[idd][pBisLic] = 1;
	            GetPlayerName(playerid, lname, sizeof(lname));
	            format(string561, sizeof(string561), "Инструктор %s выдал лицензию комплект %s[%d].",lname, pname, idd);
	            SendRadioMessage(11,COLOR_LIGHTBLUE , string561);
	            SendClientMessage(idd, COLOR_LIGHTBLUE, "Вам выдали комплект всех лицензий");
	        }
	    }
		case 562:
	    {
	        if(response)
	        {
	            new string561[255];
	            new pname[MAX_PLAYER_NAME];
	            new idd = strval(inputtext);
				new lname[MAX_PLAYER_NAME];
	            if(idd == INVALID_PLAYER_ID)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
	                return true;
	            }
	            if(PlayerInfo[idd][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "У этого игрока нету паспорта");
	            if(PlayerInfo[idd][pBisLic] == 1)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "У этого игрока есть лицензия на бизнес!");
	                return true;
	            }
	            GetPlayerName(idd, pname, sizeof(pname));
	            format(string561, sizeof(string561), "Вы выдали лицензию на бизнес %s[%d].",pname, idd);
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, string561);
	            PlayerInfo[idd][pBisLic] = 1;
	            GetPlayerName(playerid, lname, sizeof(lname));
	            format(string561, sizeof(string561), "Инструктор %s выдал лицензию на бизнес %s[%d].",lname, pname, idd);
	            SendRadioMessage(11,COLOR_LIGHTBLUE , string561);
	            SendClientMessage(idd, COLOR_LIGHTBLUE, "Вам выдали лицензию на бизнес");
	        }
	    }
		case 408:
		{
	        if(response)
	        {
				if(boxforma[playerid] == 1)return SendClientMessage(playerid, COLOR_WHITE, "Вы уже в спортивной форме");
	            OldSkin[playerid] = GetPlayerSkin(playerid);
	            boxforma[playerid] = 1;
	            SetPlayerSkin(playerid,80);
	            if(PlayerInfo[playerid][pSex] == 2)
	            {
	            	SetPlayerSkin(playerid,41);
	            }
				return true;
			}
	        else
	        {
		        if(boxforma[playerid] == 0)return SendClientMessage(playerid, COLOR_WHITE, "Вы в своей одежде");
		        boxforma[playerid] = 0;
		        SetPlayerSkin(playerid, OldSkin[playerid]);
		        return true;
	        }
		}
		case 409:
		{
	        if(response)
	        {
	        	switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][pAdmin] >= 1)
						{
						    new adm[700];
							format(adm,sizeof(adm), "%s%s%s%s%s%s%s%s%s%s%s",AdminMSG1[0],AdminMSG1[1],AdminMSG1[2],AdminMSG1[3],AdminMSG1[4],AdminMSG1[5],AdminMSG1[6],AdminMSG1[7],AdminMSG1[8],AdminMSG1[9],AdminMSG1[10]);
							ShowPlayerDialog(playerid,409,DIALOG_STYLE_MSGBOX, "Практикант",adm, "Готово", "");
						}
		            }
		            case 1:
					{
					    if(PlayerInfo[playerid][pAdmin] >= 2)
						{
						    new adm[700];
							format(adm,sizeof(adm), "%s%s%s%s%s%s%s%s%s%s",AdminMSG2[0],AdminMSG2[1],AdminMSG2[2],AdminMSG2[3],AdminMSG2[4],AdminMSG2[5],AdminMSG2[6],AdminMSG2[7],AdminMSG2[8],AdminMSG2[9]);
							ShowPlayerDialog(playerid,409,DIALOG_STYLE_MSGBOX, "Ст.Практикант",adm, "Готово", "");
						}
		            }
		            case 2:
					{
					    if(PlayerInfo[playerid][pAdmin] >= 3)
						{
						    new adm[700];
							format(adm,sizeof(adm), "%s%s%s%s%s%s%s%s%s",AdminMSG3[0],AdminMSG3[1],AdminMSG3[2],AdminMSG3[3],AdminMSG3[4],AdminMSG3[5],AdminMSG3[6],AdminMSG3[7],AdminMSG3[8]);
							ShowPlayerDialog(playerid,409,DIALOG_STYLE_MSGBOX, "Модератор",adm, "Готово", "");
						}
		            }
		            case 3:
					{
					    if(PlayerInfo[playerid][pAdmin] >= 4)
						{
						    new adm[700];
							format(adm,sizeof(adm), "%s%s%s%s%s%s%s%s%s%s",AdminMSG4[0],AdminMSG4[1],AdminMSG4[2],AdminMSG4[3],AdminMSG4[4],AdminMSG4[5],AdminMSG4[6],AdminMSG4[7],AdminMSG4[8],AdminMSG4[9]);
							ShowPlayerDialog(playerid,409,DIALOG_STYLE_MSGBOX, "Ст.Модератор",adm, "Готово", "");
						}
		            }
		            case 4:
					{
					    if(PlayerInfo[playerid][pAdmin] >= 5)
						{
						    new adm[700];
							format(adm,sizeof(adm), "%s%s%s%s%s%s%s%s",AdminMSG5[0],AdminMSG5[1],AdminMSG5[2],AdminMSG5[3],AdminMSG5[4],AdminMSG5[5],AdminMSG5[6],AdminMSG5[7]);
							ShowPlayerDialog(playerid,409,DIALOG_STYLE_MSGBOX, "Администратор",adm, "Готово", "");
						}
		            }
		            case 5:
					{
					    if(PlayerInfo[playerid][pAdmin] >= 6)
						{
						    new adm[700];
							format(adm,sizeof(adm), "%s%s%s%s%s%s%s",AdminMSG6[0],AdminMSG6[1],AdminMSG6[2],AdminMSG6[3],AdminMSG6[4],AdminMSG6[5],AdminMSG6[6]);
							ShowPlayerDialog(playerid,409,DIALOG_STYLE_MSGBOX, "Ст.Администратор",adm, "Готово", "");
						}
		            }
		            case 6:
					{
					    if(PlayerInfo[playerid][pAdmin] >= 7)
						{
						    new adm[700];
							format(adm,sizeof(adm), "%s%s%s%s%s%s%s%s%s",AdminMSG7[0],AdminMSG7[1],AdminMSG7[2],AdminMSG7[3],AdminMSG7[4],AdminMSG7[5],AdminMSG7[6],AdminMSG7[7],AdminMSG7[8]);
							ShowPlayerDialog(playerid,409,DIALOG_STYLE_MSGBOX, "Ивент-Менеджер",adm, "Готово", "");
						}
		            }
		            case 7:
					{
					    if(PlayerInfo[playerid][pAdmin] >= 8)
						{
						    new adm[700];
							format(adm,sizeof(adm), "%s%s%s%s%s%s%s%s%s%s%s",AdminMSG8[0],AdminMSG8[1],AdminMSG8[2],AdminMSG8[3],AdminMSG8[4],AdminMSG8[5],AdminMSG8[6],AdminMSG8[7],AdminMSG8[8],AdminMSG8[9],AdminMSG8[10]);
							ShowPlayerDialog(playerid,409,DIALOG_STYLE_MSGBOX, "ОЗЛ",adm, "Готово", "");
						}
		            }
		            case 8:
					{
					    if(PlayerInfo[playerid][pAdmin] >= 9)
						{
						    new adm[700];
							format(adm,sizeof(adm), "%s%s%s%s%s%s%s%s%s%s%s%s%s",AdminMSG9[0],AdminMSG9[1],AdminMSG9[2],AdminMSG9[3],AdminMSG9[4],AdminMSG9[5],AdminMSG9[6],AdminMSG9[7],AdminMSG9[8],AdminMSG9[9],AdminMSG9[10],AdminMSG9[11],AdminMSG9[12]);
							ShowPlayerDialog(playerid,409,DIALOG_STYLE_MSGBOX, "Спец.Администратор",adm, "Готово", "");
						}
		            }
		            case 9:
					{
					    if(PlayerInfo[playerid][pAdmin] >= 10)
						{
						    new adm[1000];
							format(adm,sizeof(adm), "%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",AdminMSG10[0],AdminMSG10[1],AdminMSG10[2],AdminMSG10[3],AdminMSG10[4],AdminMSG10[5],AdminMSG10[6],AdminMSG10[7],AdminMSG10[8],AdminMSG10[9],AdminMSG10[10],AdminMSG10[11],AdminMSG10[12],AdminMSG10[13],AdminMSG10[14],AdminMSG10[15],AdminMSG10[16],AdminMSG10[17]);
							ShowPlayerDialog(playerid,409,DIALOG_STYLE_MSGBOX, "Разработчик",adm, "Готово", "");
						}
		            }
				}
			}
		}
		case 9954:
        {
            if(response)
            {
				ShowPlayerDialog(playerid,9953,DIALOG_STYLE_LIST, "Мониторинг цен", "Магазины 24/7\nЗаправки\nКлубы / Бары", "Выбрать", "Выход");
                return true;
            }
            else
            {
                return true;
            }
        }
		case 9953:
        {
            if(response)
            {
				switch(listitem)
				{
	                case 0:
	                {
	                    format(string, sizeof(string), "{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт",
	                    BizzInfo[11][bMessage],BizzInfo[11][bPrice],BizzInfo[12][bMessage],BizzInfo[12][bPrice],BizzInfo[13][bMessage],BizzInfo[13][bPrice],BizzInfo[14][bMessage],BizzInfo[14][bPrice],BizzInfo[16][bMessage],BizzInfo[16][bPrice],BizzInfo[17][bMessage],BizzInfo[17][bPrice]);
	                    ShowPlayerDialog(playerid,9954,DIALOG_STYLE_MSGBOX, "Мониторинг цен: Магазины 24/7",string, "Назад", "");
	                }
	                case 1:
	                {
						format(string, sizeof(string), "{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт",SBizzInfo[0][sbMessage],SBizzInfo[0][sbPrice],SBizzInfo[1][sbMessage],SBizzInfo[1][sbPrice],SBizzInfo[2][sbMessage],SBizzInfo[2][sbPrice],
						SBizzInfo[3][sbMessage],SBizzInfo[3][sbPrice],SBizzInfo[4][sbMessage],SBizzInfo[4][sbPrice],SBizzInfo[5][sbMessage],SBizzInfo[5][sbPrice],SBizzInfo[6][sbMessage],SBizzInfo[6][sbPrice],SBizzInfo[7][sbMessage],SBizzInfo[7][sbPrice],SBizzInfo[8][sbMessage],SBizzInfo[8][sbPrice],SBizzInfo[9][sbMessage],SBizzInfo[9][sbPrice],SBizzInfo[10][sbMessage],SBizzInfo[10][sbPrice]);
						ShowPlayerDialog(playerid,9954,DIALOG_STYLE_MSGBOX, "Мониторинг цен: Заправки",string, "Назад", "");
	                }
	                case 2:
	                {
	                    format(string, sizeof(string), "{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт",
	                    BizzInfo[0][bMessage],BizzInfo[0][bPrice],BizzInfo[1][bMessage],BizzInfo[1][bPrice],BizzInfo[2][bMessage],BizzInfo[2][bPrice],BizzInfo[3][bMessage],BizzInfo[3][bPrice],BizzInfo[4][bMessage],BizzInfo[4][bPrice],BizzInfo[5][bMessage],BizzInfo[5][bPrice],BizzInfo[6][bMessage],BizzInfo[6][bPrice],BizzInfo[7][bMessage],BizzInfo[7][bPrice],BizzInfo[8][bMessage],BizzInfo[8][bPrice],BizzInfo[9][bMessage],BizzInfo[9][bPrice],BizzInfo[10][bMessage],BizzInfo[10][bPrice],
						BizzInfo[15][bMessage],BizzInfo[15][bPrice],BizzInfo[18][bMessage],BizzInfo[18][bPrice]);
	                    ShowPlayerDialog(playerid,9954,DIALOG_STYLE_MSGBOX, "Мониторинг цен: Клубы / Бары",string, "Назад", "");
	                }
				}
            }
            return true;
		}
		case 7763:
		{
			if(response)
			{
				if(listitem == 0)
				{
					SearchingHit(playerid);
				}
				if(listitem == 1)
				{
					if(hitfound == 0)
					{
						SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "• {FFFFFF}Нет доступных контрактов!");
						return false;
					}
					ShowPlayerDialog(playerid,7764,DIALOG_STYLE_INPUT,"{b3f9b0}","{FFFFFF}Введите ID игрока кому хотите поручить контракт и нажмите {b3f9b0}'Принять'","Принять","");
				}
				if(listitem == 2)
				{
					ShowPlayerDialog(playerid,7765,DIALOG_STYLE_INPUT,"{b3f9b0}Покупка","{FFFFFF}Впишите номер комплекта оружия и нажмите {b3f9b0}'Купить'\n\tКомплект оружия № 1 (5.000)\n\tКомплект оружия № 2 (6.000)\n\tКомплект оружия № 3 (7.000)\n\tКомплект оружия № 4 (8.000)\n\tКомплект оружия № 5 (9.000)\n\tКомплект оружия № 6 (10.000)\n\tКомплект оружия № 7 (11.000)\n","Купить","Отмена");
				}
				if(listitem == 3)
				{
					//new giveplayer[MAX_PLAYER_NAME];
					//new giveplayerid;
					if(IsPlayerConnected(hitid))
					{
						new sendername[MAX_PLAYER_NAME];
						GetPlayerName(playerid,sendername,sizeof(sendername));
						//GetPlayerName(hitid, giveplayer, sizeof(giveplayer));
						format(string,sizeof(string),"• {FFFFFF}Хитман {b3f9b0}%s {FFFFFF}отказался от выполнения заказа на {b3f9b0}(ID:%d)",sendername,GoChase[playerid]);
						SendFamilyMessage(24,0xb3f9b0FF,string);
		  				GotHit[playerid] = 0;
		     			GoChase[playerid] = 999;
						return false;
					}
					else
					{
						SendClientMessage(playerid,COLOR_WHITE,"{f9b0b0}x {FFFFFF}У Вас нет заказа");
						return false;
					}
				}
				if(listitem == 4)
				{
					if(GoChase[playerid]!=999)
					{
					   	new find[20];
	    				format(find, sizeof(find), "/find %d",GoChase[playerid]);
	    				OnPlayerCommandText(playerid,find);
					}
					else
					{
						SendClientMessage(playerid,COLOR_WHITE,"{f9b0b0}x {FFFFFF}Вы не за кем не охотитесь");
						return false;
					}
				}
				if(listitem == 5)
				{
					SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "• {FFFFFF}Вы отключились от агенства и выключили ноутбук");
					ConnectPC[playerid] = 0;
					return false;
				}
			}
		}
		case 7764:
		{
			if(response)
			{
				new giveplayerid = strval(inputtext);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(GoChase[giveplayerid] < 999)
						{
							SendClientMessage(playerid, COLOR_GREY, "• Тот игрок уже занят");
							return false;
						}
						else
						{
							if(IsPlayerConnected(hitid))
							{
								//new giver[MAX_PLAYER_NAME];
								new sendername[MAX_PLAYER_NAME];
								new giveplayer[MAX_PLAYER_NAME];
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetPlayerName(hitid, giveplayer, sizeof(giveplayer));
								format(string, sizeof(string), "« %s[%d] заключил контракт на убийство %s[%d] »", sendername,playerid, giveplayer, hitid);
								SendFamilyMessage(24, TEAM_AZTECAS_COLOR, string);
								GoChase[playerid] = hitid;
								GetChased[hitid] = giveplayerid;
								GotHit[hitid] = 1;
								hitid = 0;
								hitfound = 0;
								return false;
							}
							else
							{
								SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "• {FFFFFF}Человек на которого контракт сейчас нет в игре!");
								return false;
							}
						}
					}
					return false;
				}
				else
				{
					SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "• {FFFFFF}Нет такого игрока!");
					return false;
				}
			}
		}
		case 7765:
		{
			if(response)
			{
				new i = playerid;
				if(!strcmp(inputtext, "1",true))
				{
					if(GetPlayerMoney(i) > 5000)
					{
						GiveWeapon(i, 24, 50); GiveWeapon(i, 29, 500); GiveWeapon(i, 25, 50); GiveWeapon(i, 4, 1);
						PlayerInfo[playerid][pCash] -= 5000;
						SendClientMessage(i, COLOR_LIGHTBLUE, "• {FFFFFF}Вы приобрели комплект оружия № 1.");
					}
					else
					{
						SendClientMessage(i, COLOR_LIGHTBLUE, "• {FFFFFF}У Вас недостаточно денег.");
					}
				}
				if(!strcmp(inputtext, "2",true))
				{
					if(GetPlayerMoney(i) > 6000)
					{
						GiveWeapon(i, 24, 50); GiveWeapon(i, 29, 500); GiveWeapon(i, 25, 50); GiveWeapon(i, 31, 500); GiveWeapon(i, 4, 1);
						PlayerInfo[playerid][pCash] -=6000;
						SendClientMessage(i, COLOR_LIGHTBLUE, "• {FFFFFF}Вы приобрели комплект оружия № 2.");
					}
					else
					{
						SendClientMessage(i, COLOR_LIGHTBLUE, "• {FFFFFF}У Вас недостаточно денег.");
					}
				}
				if(!strcmp(inputtext, "3",true))
				{
					if(GetPlayerMoney(i) > 7000)
					{
						GiveWeapon(i, 24, 50); GiveWeapon(i, 29, 500); GiveWeapon(i, 25, 50); GiveWeapon(i, 30, 500); GiveWeapon(i, 4, 1);
						PlayerInfo[playerid][pCash] -=7000;
						SendClientMessage(i, COLOR_LIGHTBLUE, "• {FFFFFF}Вы приобрели комплект оружия № 3.");
					}
					else
					{
						SendClientMessage(i, COLOR_LIGHTBLUE, "• {FFFFFF}У Вас недостаточно денег.");
					}
				}
				if(!strcmp(inputtext, "4",true))
				{
					if(GetPlayerMoney(i) > 8000)
					{
						GiveWeapon(i, 24, 50); GiveWeapon(i, 29, 500); GiveWeapon(i, 25, 50); GiveWeapon(i, 31, 500); GiveWeapon(i, 4, 1); GiveWeapon(i, 34, 20);
						PlayerInfo[playerid][pCash] -= 8000;
						SendClientMessage(i, COLOR_LIGHTBLUE, "• {FFFFFF}Вы приобрели комплект оружия № 4.");
					}
					else
					{
						SendClientMessage(i, COLOR_LIGHTBLUE, "• {FFFFFF}У Вас недостаточно денег.");
					}
				}
				if(!strcmp(inputtext, "5",true))
				{
					if(GetPlayerMoney(i) > 10000)
					{
						GiveWeapon(i, 24, 50); GiveWeapon(i, 29, 500); GiveWeapon(i, 25, 50); GiveWeapon(i, 30, 500); GiveWeapon(i, 4, 1); GiveWeapon(i, 34, 20);
						PlayerInfo[playerid][pCash] -= 10000;
						SendClientMessage(i, COLOR_LIGHTBLUE, "• {FFFFFF}Вы приобрели комплект оружия № 5.");
					}
					else
					{
						SendClientMessage(i, COLOR_LIGHTBLUE, "• {FFFFFF}У Вас недостаточно денег.");
					}
				}
				if(!strcmp(inputtext, "6",true))
				{
					if(GetPlayerMoney(i) > 11000)
					{
						GiveWeapon(i, 24, 50); GiveWeapon(i, 29, 500); GiveWeapon(i, 25, 50); GiveWeapon(i, 31, 500); GiveWeapon(i, 4, 1); GiveWeapon(i, 34, 20);
						PlayerInfo[playerid][pCash] -= 11000;
						SendClientMessage(i, COLOR_LIGHTBLUE, "• {FFFFFF}Вы приобрели комплект оружия № 6.");
					}
					else
					{
						SendClientMessage(i, COLOR_LIGHTBLUE, "• {FFFFFF}У Вас недостаточно денег.");
					}
				}
				if(!strcmp(inputtext, "7",true))
				{
					if(GetPlayerMoney(i) > 12000)
					{
						GiveWeapon(i, 24, 50); GiveWeapon(i, 29, 500); GiveWeapon(i, 25, 50); GiveWeapon(i, 30, 500); GiveWeapon(i, 4, 1); GiveWeapon(i, 34, 20);
						PlayerInfo[playerid][pCash] -= 12000;
						SendClientMessage(i, COLOR_LIGHTBLUE, "• {FFFFFF}Вы приобрели комплект оружия № 7.");
					}
					else
					{
						SendClientMessage(i, COLOR_LIGHTBLUE, "• {FFFFFF}У Вас недостаточно денег.");
					}
				}
			}
		}
        case 1337:
        {
			if(response)
			{
			    switch(listitem)
			    {
			        case 0: // Купить телефон
			        {
			            ShowPlayerDialog(playerid,1338,DIALOG_STYLE_LIST,"Покупка телефона","Обычный сотовый\t[3000$]\nСмартфон\t[10000$]","Выбрать", "Отмена");
			        }
			        case 1: // Пополнить баланс
			        {
			            ShowPlayerDialog(playerid,1339,DIALOG_STYLE_INPUT, "Пополнение баланса", "Введите сумму:\n(( Внимание! Деньги переводяться с кошелька. ))", "Ок", "Отмена");
			        }
			        case 2: // Помощь
			        {
						new stroka[350];
			            format(stroka, sizeof(stroka), "Рады приветствовать в салоне сотовой связи МТС\n\nЗдесь вы можете приобрести телефон при этом получите SIM-Карту в подарок.\n\nВы спросите чем же отличается Обычный сотовый телефон от Смартфона?\nОбычный сотовый [3000$] - Для звонков и смс\nСмартфон [$10000] - Звонки , смс и встроенный MP3 плеер.\n\nУдачних покупок!");
		    			ShowPlayerDialog(playerid,8888, DIALOG_STYLE_MSGBOX, "Помощь", stroka, "Ок", "");
			        }
				}
			}
		}
		case 1338:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
					{
						if(PlayerInfo[playerid][pCash] < 3000) return SendClientMessage(playerid,COLOR_GREY,"У вас недостаточно средств");
						if(PlayerInfo[playerid][pPasport] != 1) return SendClientMessage(playerid,COLOR_GREY,"У вас нету паспорта");
						{
							if(PlayerInfo[playerid][pPnumber] == NUMBER_TLF)
							{
							    SendClientMessage(playerid,COLOR_GREEN,"Вы приобрели сотовый телефон. SIM-Карта в подарок");
								SendClientMessage(playerid,COLOR_GREEN,"Меню телефона: {FFFFFF}/mphone");
								PlayerInfo[playerid][pPhone] = 1;
								PlayerInfo[playerid][pCash] -= 3000;
								new randphone = 1000 + random(899999);
								PlayerInfo[playerid][pPnumber] = randphone;
							}
							else
							{
							    SendClientMessage(playerid,COLOR_GREEN,"Вы приобрели сотовый телефон.");
								SendClientMessage(playerid,COLOR_GREEN,"Меню телефона: {FFFFFF}/mphone");
								PlayerInfo[playerid][pPhone] = 1;
								PlayerInfo[playerid][pCash] -= 3000;
							}
						}
		            }
		            case 1:
		            {
		                if(PlayerInfo[playerid][pCash] < 10000) return SendClientMessage(playerid,COLOR_GREY,"У вас недостаточно средств");
						if(PlayerInfo[playerid][pPasport] != 1) return SendClientMessage(playerid,COLOR_GREY,"У вас нету паспорта");
		                if(PlayerInfo[playerid][pPnumber] == NUMBER_TLF)
						{
						    SendClientMessage(playerid,COLOR_GREEN,"Вы приобрели сотовый телефон. SIM-Карта в подарок");
							SendClientMessage(playerid,COLOR_GREEN,"Меню телефона: {FFFFFF}/mphone");
							PlayerInfo[playerid][pPhone] = 2;
							PlayerInfo[playerid][pCash] -= 10000;
							new randphone = 1000 + random(899999);
							PlayerInfo[playerid][pPnumber] = randphone;
						}
						else
						{
						    SendClientMessage(playerid,COLOR_GREEN,"Вы приобрели смартфон.");
							SendClientMessage(playerid,COLOR_GREEN,"Меню телефона: {FFFFFF}/mphone");
							PlayerInfo[playerid][pPhone] = 2;
							PlayerInfo[playerid][pCash] -= 10000;
						}
		            }
		        }
			}
		}
		case 1339:
	    {
	        if(response)
	        {
	            new pmoney;
	            if(PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid,COLOR_GREY,"У вас нет телефона");
	            if(!strlen(inputtext)) return ShowPlayerDialog(playerid,1339,DIALOG_STYLE_INPUT, "Пополнение баланса", "Введите сумму:\n(( Внимание! Деньги переводяться с кошелька. ))", "Ок", "Отмена");
                pmoney = strval(inputtext);
                {
                    if(PlayerInfo[playerid][pCash] < pmoney) return SendClientMessage(playerid,COLOR_GREY,"У вас нет столько денег");
                    format(string,sizeof(string),"На номер %d было зачислено %d$. Подробнее: {FFFFFF}/mphone",PlayerInfo[playerid][pPnumber],pmoney);
                    SendClientMessage(playerid,COLOR_GREEN,string);
                    PlayerInfo[playerid][pPhbalance] += pmoney;
                    PlayerInfo[playerid][pCash] -= pmoney;
                }
			 }
		}
		case 1340:
		{
		    if(response)
		    {
				switch(listitem)
				{
				    case 0: // Информация
				    {
				        OnPlayerCommandText(playerid, "/mphinfo");
				    }
				    case 1: // Позвонить
				    {
				        ShowPlayerDialog(playerid,1341,DIALOG_STYLE_INPUT, "Звонок", "Введите номер телефона", "Звонить", "Отмена");
				    }
				    case 2: // Узнать номер игрока
				    {
				        ShowPlayerDialog(playerid,1342,DIALOG_STYLE_INPUT, "Звонок", "Введите ид игрока", "Звонить", "Отмена");
				    }
				    case 3: // Помощь
				    {
				        ShowPlayerDialog(playerid,69,DIALOG_STYLE_MSGBOX,"Помощь","/togphone - Вкл. Выкл. телфон\n/number [id] - Узнать номер телефона игрока\n/call [номер телефона] - позвонить\n/sms [id] [текст] - написать смс","Ок","");
				    }
				    case 4: // MP3 Плеер
				    {
                        ShowPlayerDialog(playerid,1343,DIALOG_STYLE_LIST,"MP3","Клубняк\nRnb\nDisco\nИспользовать свою музыку\nВыключить музыку","Выбрать", "Отмена");
				    }
				}
			}
		}
		case 1341:
		{
		    if(response)
		    {
		        if(!strlen(inputtext)) return ShowPlayerDialog(playerid,1341,DIALOG_STYLE_INPUT, "Звонок", "Введите номер телефона", "Звонить", "Отмена");
		        new call[20];
        		format(call, sizeof(call), "/call %s",inputtext);
        		OnPlayerCommandText(playerid,call);
		    }
		}
		case 1342:
		{
		    if(response)
		    {
		        if(!strlen(inputtext)) return ShowPlayerDialog(playerid,1342,DIALOG_STYLE_INPUT, "Узнать номер", "Введите ид игрока", "Ок", "Отмена");
		        new numb[20];
        		format(numb, sizeof(numb), "/number %s",inputtext);
        		OnPlayerCommandText(playerid,numb);
		    }
		}
		case 1343:
		{
		    if(response)
		    {
     			switch(listitem)
	            {
				   	case 0:
			   		{
					   	PlayAudioStreamForPlayer(playerid,"http://radio.zaycev.fm:9002/ZaycevFM(128)");
					   	SendClientMessage(playerid,0xFF0000AA,"ВНИМАНИЕ!{FFFFFF} Чтобы слышать музыку , нужно в настройках игры увеличить громкость радио");
					}
				   	case 1:
					{
						PlayAudioStreamForPlayer(playerid,"http://www.zaycev.fm:9001/rnb/ZaycevFM(128)");
						SendClientMessage(playerid,0xFF0000AA,"ВНИМАНИЕ!{FFFFFF} Чтобы слышать музыку , нужно в настройках игры увеличить громкость радио");
					}
				   	case 2:
		   			{
					   	PlayAudioStreamForPlayer(playerid,"http://radio.zaycev.fm:9001/disco/ZaycevFM(128)");
					   	SendClientMessage(playerid,0xFF0000AA,"ВНИМАНИЕ!{FFFFFF} Чтобы слышать музыку , нужно в настройках игры увеличить громкость радио");
					}
				   	case 3:
				   	{
				   	    ShowPlayerDialog(playerid,1344,DIALOG_STYLE_INPUT, "MP3", "Введите прямую ссылку на музыку/радио для прослушивания:", "Ок", "Отмена");
				   	}
				   	case 4: StopAudioStreamForPlayer(playerid);
				}
		    }
		}
		case 1344:
		{
		    if(response)
		    {
		        if(!strlen(inputtext)) return ShowPlayerDialog(playerid,1344,DIALOG_STYLE_INPUT, "MP3", "Введите прямую ссылку на музыку/радио для прослушивания:", "Ок", "Отмена");
		        PlayAudioStreamForPlayer(playerid,inputtext);
		        SendClientMessage(playerid,0xFF0000AA,"ВНИМАНИЕ!{FFFFFF} Чтобы слышать музыку , нужно в настройках игры увеличить громкость радио");
		    }
		}
		case 8900:
		{
		    if(response)
		    {
		        new sendername[MAX_PLAYER_NAME];
		        GetPlayerName(playerid,sendername,sizeof(sendername));
		        switch(listitem)
		        {
					case 0: // Информация
					{
						format(string,sizeof(string),"Имя: %s\n\nБаланс банка: %d\nБаланс телефона: %d",sendername,PlayerInfo[playerid][pBank],PlayerInfo[playerid][pPhbalance]);
						ShowPlayerDialog(playerid,165,DIALOG_STYLE_MSGBOX,"Информация",string,"Ок","");
					}
					case 1: // Снять деньги
					{
						ShowPlayerDialog(playerid,1346,DIALOG_STYLE_INPUT,"Снятие денег","Введите сумму для снятия","Ок","Отмена");
					}
					case 2: // Снять деньги за дом
					{
						if(PlayerInfo[playerid][pHousecash] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Нет денег за ваш дом");
						if(!IsABankomat(playerid) || !PlayerToPoint(4.0,playerid,1364.6337,895.2993,1107.4862)) return SendClientMessage(playerid, COLOR_WHITE, "Вы не в банке");
						PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pHousecash];
						format(string, sizeof(string), "Вам возвращены %d вирт за ваш дом", PlayerInfo[playerid][pHousecash]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						PlayerInfo[playerid][pHousecash] = 0;
						PlayerInfo[playerid][pText] = 0;
						return true;
					}
					case 3: // Пополнить банковский счет
					{
					    ShowPlayerDialog(playerid,1347,DIALOG_STYLE_INPUT,"Пополнение банка","Введите сумму для пополнения банковского счета","Ок","Отмена");
					}
					case 4: // Пополнить домашний счет
					{
					    ShowPlayerDialog(playerid,1348,DIALOG_STYLE_INPUT,"Пополнение домашнего счета","Введите сумму для пополнения домашнего счета","Ок","Отмена");
					}
					case 5: // Пополнить счет бизнеса
					{
						if(PlayerInfo[playerid][pPBiskey] == 255) return SendClientMessage(playerid, COLOR_GREY, "Вы не бизнесмен!");
						ShowPlayerDialog(playerid,2929,DIALOG_STYLE_INPUT, "Перевод на счёт бизнеса", "Введите сумму, которую вы хотите положить на счет бизнеса", "Готово", "Отмена");
						return true;
					}
					case 6: // Перевести деньги
					{
					    ShowPlayerDialog(playerid,1349,DIALOG_STYLE_INPUT,"Перевод денег","Введите ид игрока:","Ок","Отмена");
					}
					case 7: // Пополнить мобилный счет
					{
					    ShowPlayerDialog(playerid,1339,DIALOG_STYLE_INPUT, "Пополнение мобильного баланса", "Введите сумму:\n(( Внимание! Деньги переводяться с кошелька. ))", "Ок", "Отмена");
					}
		        }
			}
		}
		case 1346:
		{
			if(response)
			{
				if(!strlen(inputtext)) return ShowPlayerDialog(playerid,1346,DIALOG_STYLE_INPUT,"Снятие денег","Введите нужную вам сумму","Ок","Отмена");
		        new wdraw[20];
	    		format(wdraw, sizeof(wdraw), "/withdraw %s",inputtext);
	    		OnPlayerCommandText(playerid,wdraw);
			}
			else
			{
			    OnPlayerCommandText(playerid,"/atm");
			}
		}
		case 1347:
		{
		    if(response)
		    {
			    if(!strlen(inputtext)) return ShowPlayerDialog(playerid,1347,DIALOG_STYLE_INPUT,"Пополнение банка","Введите сумму для пополнения банковского счета","Ок","Отмена");
		        new bankk[20];
	    		format(bankk, sizeof(bankk), "/bank %s",inputtext);
	    		OnPlayerCommandText(playerid,bankk);
			}
			else
			{
			    OnPlayerCommandText(playerid,"/atm");
			}
		}
		case 1348:
		{
		    if(response)
		    {
			    if(!strlen(inputtext)) return ShowPlayerDialog(playerid,1348,DIALOG_STYLE_INPUT,"Пополнение домашнего счета","Введите сумму для пополнения домашнего счета","Ок","Отмена");
		        new hbankk[20];
	    		format(hbankk, sizeof(hbankk), "/housebank %s",inputtext);
	    		OnPlayerCommandText(playerid,hbankk);
			}
			else
			{
			    OnPlayerCommandText(playerid,"/atm");
			}
		}
		case 1349:
		{
		    if(response)
		    {
			    if(!strlen(inputtext)) return ShowPlayerDialog(playerid,1349,DIALOG_STYLE_INPUT,"Перевод денег","Введите ид игрока:","Ок","Отмена");
			    new transe = strval(inputtext);
			    TransferAd[playerid] = transe;
			    ShowPlayerDialog(playerid,1350,DIALOG_STYLE_INPUT,"Перевод денег","Введите сумму перевода:","Ок","Отмена");
			}
			else
			{
			    OnPlayerCommandText(playerid,"/atm");
			}
		}
		case 1355:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pLevel] >= 2)
		        {
			        if(PlayerInfo[playerid][pCash] < 100)return SendClientMessage(playerid,COLOR_GREY,"У вас недостаточно денег!");
					PlayerInfo[playerid][pSatiety] = 100;
					SetPlayerHealthAC(playerid,100);
					PlayerInfo[playerid][pHP] = 100;
					PlayerInfo[playerid][pCash] -= 100;
					SendClientMessage(playerid, COLOR_GREEN,"Приятного аппетита!");
					ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
					return true;
				}
				else
				{
					PlayerInfo[playerid][pSatiety] = 100;
					SetPlayerHealthAC(playerid,100);
					PlayerInfo[playerid][pHP] = 100;
					SendClientMessage(playerid, COLOR_GREEN,"Приятного аппетита!");
					ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
					return true;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_RED,"Ну и ходи голодный!");
			}
		}
		case 1350:
		{
		    if(response)
		    {
			    if(!strlen(inputtext)) return ShowPlayerDialog(playerid,1350,DIALOG_STYLE_INPUT,"Перевод денег","Введите сумму перевода:","Ок","Отмена");
		        new trans[20];
		        new dengi = strval(inputtext);
	    		format(trans, sizeof(trans), "/transfer %d %d",TransferAd[playerid],dengi);
	    		OnPlayerCommandText(playerid,trans);
			}
			else
			{
			    ShowPlayerDialog(playerid,1349,DIALOG_STYLE_INPUT,"Перевод денег","Введите ид игрока:","Ок","Отмена");
			}
		}
		case 1361:
		{
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
						return 1;
			        }
			        case 1:
			        {
			            return 1;
			        }
			        case 2: // Положить материалы
			        {
			            ShowPlayerDialog(playerid,1364,DIALOG_STYLE_INPUT,"Положить материалы","Введите количество материалов","Ок","Отмена");
			        }
			        case 3: // Положить нароктики
			        {
			            ShowPlayerDialog(playerid,1365,DIALOG_STYLE_INPUT,"Положить наркотики","Введите количество наркотиков","Ок","Отмена");
			        }
			        case 4: // Взять материалы
			        {
						ShowPlayerDialog(playerid,1362,DIALOG_STYLE_INPUT,"Взять материалы","Введите количество материалов","Ок","Отмена");
			        }
			        case 5: // Взять наркотики
			        {
			            ShowPlayerDialog(playerid,1363,DIALOG_STYLE_INPUT,"Взять мнаркотики","Введите количество наркотиков","Ок","Отмена");
			        }
			    }
			}
		}
		case 1364:
		{
		    if(!strlen(inputtext)) return ShowPlayerDialog(playerid,1364,DIALOG_STYLE_INPUT,"Положить материалы","Введите количество материалов","Ок","Отмена");
		    new pmater = strval(inputtext);
			if(PlayerInfo[playerid][pMaterials] < pmater) return SendClientMessage(playerid,COLOR_GREY,"У вас недостаточно материалов!");
			PlayerInfo[playerid][pMaterials] -= pmater;
			if(PlayerInfo[playerid][pMember] == 12)
			{
				if(ballasmatbi >= 50000) return SendClientMessage(playerid, COLOR_GREY, "На складе больше 50000 материалов!"); ballasmatbi += pmater;
			}
			else if(PlayerInfo[playerid][pMember] == 13)
			{
				if(vagosmatbi >= 50000) return SendClientMessage(playerid, COLOR_GREY, "На складе больше 50000 материалов!"); vagosmatbi += pmater;
			}
			else if(PlayerInfo[playerid][pMember] == 15)
			{
				if(groovmatbi >= 50000) return SendClientMessage(playerid, COLOR_GREY, "На складе больше 50000 материалов!"); groovmatbi += pmater;
			}
			else if(PlayerInfo[playerid][pMember] == 17)
			{
				if(aztekmatbi >= 50000) return SendClientMessage(playerid, COLOR_GREY, "На складе больше 50000 материалов!"); aztekmatbi += pmater;
			}
			else if(PlayerInfo[playerid][pMember] == 18)
			{
				if(rifamatbi >= 50000) return SendClientMessage(playerid, COLOR_GREY, "На складе больше 50000 материалов!"); rifamatbi += pmater;
			}
			new sendername[MAX_PLAYER_NAME];
			GetPlayerName(playerid,sendername,sizeof(sendername));
			format(string, sizeof(string), "Вы положили %d материалов на склад банды!", pmater);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "%s положил %d материалов на склад банды!", sendername, pmater);
			SendFamilyMessage(PlayerInfo[playerid][pMember], COLOR_RED, string);
			SaveMaterials();
		}
		case 1365:
		{
		    if(!strlen(inputtext)) return ShowPlayerDialog(playerid,1365,DIALOG_STYLE_INPUT,"Положить наркотики","Введите количество наркотиков","Ок","Отмена");
		    new pnarko = strval(inputtext);
		    if(PlayerInfo[playerid][pDrugs] < pnarko) return SendClientMessage(playerid,COLOR_GREY,"У вас недостаточно наркотиков!");
		    PlayerInfo[playerid][pDrugs] -= pnarko;
		    if(PlayerInfo[playerid][pMember] == 12)
			{
				if(ballasnarko >= 3000) return SendClientMessage(playerid, COLOR_GREY, "На складе больше 3000 наркотиков!"); ballasnarko += pnarko;
			}
			else if(PlayerInfo[playerid][pMember] == 13)
			{
				if(vagosnarko >= 3000) return SendClientMessage(playerid, COLOR_GREY, "На складе больше 3000 наркотиков!"); vagosnarko += pnarko;
			}
			else if(PlayerInfo[playerid][pMember] == 15)
			{
				if(groovnarko >= 3000) return SendClientMessage(playerid, COLOR_GREY, "На складе больше 3000 наркотиков!"); groovnarko += pnarko;
			}
			else if(PlayerInfo[playerid][pMember] == 17)
			{
				if(azteknarko >= 3000) return SendClientMessage(playerid, COLOR_GREY, "На складе больше 3000 наркотиков!"); azteknarko += pnarko;
			}
			else if(PlayerInfo[playerid][pMember] == 18)
			{
				if(rifanarko >= 3000) return SendClientMessage(playerid, COLOR_GREY, "На складе больше 3000 наркотиков!"); rifanarko += pnarko;
			}
			new sendername[MAX_PLAYER_NAME];
   			GetPlayerName(playerid,sendername,sizeof(sendername));
			format(string, sizeof(string), "Вы положили %d наркотиков на склад банды!",pnarko);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "%s положил %d наркотиков на склад банды!", sendername, pnarko);
			SendFamilyMessage(PlayerInfo[playerid][pMember], COLOR_RED, string);
			SaveMaterials();
		}
		case 1362: // Взять маты
		{
		    if(!strlen(inputtext)) return ShowPlayerDialog(playerid,1362,DIALOG_STYLE_INPUT,"Взять материалы","Введите количество материалов","Ок","");
		    new pmaters = strval(inputtext);
		    if(PlayerInfo[playerid][pRank] < 4)return SendClientMessage(playerid,COLOR_GREY,"Функция доступна с 4 ранга и выше!");
			if(PlayerInfo[playerid][pMaterials] >= 500) return SendClientMessage(playerid,COLOR_GREY,"У вас максимальное количество материалов!");
			if(pmaters < 1 || pmaters > 250) return SendClientMessage(playerid,COLOR_GREY,"Нельзя взять меншье 1 и больше 250");
			if((PlayerInfo[playerid][pDrugs] + pmaters) > 500) return SendClientMessage(playerid, COLOR_GREY,"Нельзя взять больше! ");
			PlayerInfo[playerid][pMaterials] += pmaters;
			if(PlayerInfo[playerid][pMember] == 12)
			{
				if(ballasmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!"); ballasmatbi -= pmaters;
			}
			else if(PlayerInfo[playerid][pMember] == 13)
			{
				if(vagosmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!"); vagosmatbi -= pmaters;
			}
			else if(PlayerInfo[playerid][pMember] == 15)
			{
				if(groovmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!"); groovmatbi -= pmaters;
			}
			else if(PlayerInfo[playerid][pMember] == 17)
			{
				if(aztekmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!"); aztekmatbi -= pmaters;
			}
			else if(PlayerInfo[playerid][pMember] == 18)
			{
				if(rifamatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!"); rifamatbi -= pmaters;
			}
			new sendername[MAX_PLAYER_NAME];
			GetPlayerName(playerid,sendername,sizeof(sendername));
			format(string, sizeof(string), "У вас %d / 500 материалов.", PlayerInfo[playerid][pMaterials]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "%s взял %d материалов со склада банды!", sendername, pmaters);
			SendFamilyMessage(PlayerInfo[playerid][pMember], COLOR_RED, string);
			SaveMaterials();
		}
		case 1363: // Взять нарко
		{
		    if(!strlen(inputtext)) return ShowPlayerDialog(playerid,1363,DIALOG_STYLE_INPUT,"Взять мнаркотики","Введите количество наркотиков","Ок","");
			new pnarkos = strval(inputtext);
			if(PlayerInfo[playerid][pRank] < 4)return SendClientMessage(playerid,COLOR_GREY,"Функция доступна с 4 ранга и выше!");
			if(pnarkos < 1 || pnarkos > 50) return SendClientMessage(playerid,COLOR_GREY,"Нельзя взять меншье 1 и больше 50");
			if(PlayerInfo[playerid][pMaterials] >= 150) return SendClientMessage(playerid,COLOR_GREY,"У вас максимальное количество наркотиков!");
			if((PlayerInfo[playerid][pDrugs] + pnarkos) > 150) return SendClientMessage(playerid, COLOR_GREY,"Нельзя взять больше! ");
		    PlayerInfo[playerid][pDrugs] += pnarkos;
		    if(PlayerInfo[playerid][pMember] == 12)
			{
				if(ballasnarko <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет наркотиков!"); ballasnarko -= pnarkos;
			}
			else if(PlayerInfo[playerid][pMember] == 13)
			{
				if(vagosnarko <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет наркотиков!"); vagosnarko -= pnarkos;
			}
			else if(PlayerInfo[playerid][pMember] == 15)
			{
				if(groovnarko <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет наркотиков!"); groovnarko -= pnarkos;
			}
			else if(PlayerInfo[playerid][pMember] == 17)
			{
				if(azteknarko <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет наркотиков!"); azteknarko -= pnarkos;
			}
			else if(PlayerInfo[playerid][pMember] == 18)
			{
				if(rifanarko <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет наркотиков!"); rifanarko -= pnarkos;
			}
			new sendername[MAX_PLAYER_NAME];
   			GetPlayerName(playerid,sendername,sizeof(sendername));
			format(string, sizeof(string), "У вас %d / 150 наркотиков",PlayerInfo[playerid][pDrugs]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "%s взял %d наркотиков со склада банды!", sendername, pnarkos);
			SendFamilyMessage(PlayerInfo[playerid][pMember], COLOR_RED, string);
			SaveMaterials();
		}
	 	case 10098:
	    {
	        if(response)
	        {
	        	if(PlayerInfo[playerid][pMember] != 0 && FormaFrac[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы состоите в организации");
	        	switch(listitem)
				{
			        case 0:
		     		{
			            if(PlayerInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_GREY, "Вам требуется 2 лвл");
				        PlayerInfo[playerid][pJob] = 4;
				        SendClientMessage(playerid, 0x6495EDFF, "Вас успешно приняли на работу Водителя такси");
			   			SendClientMessage(playerid, 0x6495EDFF, "(( Команды: /fare - закончить работу водителя такси ))");
			   			return true;
		   			}
		  			case 1:
		     		{
			            if(PlayerInfo[playerid][pLevel] < 2) return	SendClientMessage(playerid, COLOR_GREY, "Вам требуется 2 лвл");
					    PlayerInfo[playerid][pJob] = 3;
					    SendClientMessage(playerid, 0x6495EDFF, "Вас успешно приняли на работу Продавца хотдогов");
				   		SendClientMessage(playerid, 0x6495EDFF, "Пропишите /mm чтобы посмотреть команды");
				   		return true;
		   			}
		     		case 2:
		     		{
			            if(PlayerInfo[playerid][pLevel] < 3) return	SendClientMessage(playerid, COLOR_GREY, "Вам требуется 3 лвл");
				        PlayerInfo[playerid][pJob] = 5;
				        SendClientMessage(playerid, 0x6495EDFF, "Вас успешно приняли на работу Развозчика продуктов");
			   			SendClientMessage(playerid, 0x6495EDFF, "Пропишите /mm чтобы посмотреть команды");
			   			return true;
		   			}
		         	case 3:
		     		{
			            if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "Вам требуется 3 лвл");
					    PlayerInfo[playerid][pJob] = 2;
					    SendClientMessage(playerid, 0x6495EDFF, "Вас успешно приняли на работу Механика");
				   		SendClientMessage(playerid, 0x6495EDFF, "Пропишите /mm чтобы посмотреть команды");
				   		return true;
		   			}
		   			case 4:
		     		{
			            if(PlayerInfo[playerid][pLevel] < 5) return	SendClientMessage(playerid, COLOR_GREY, "Вам требуется 5 лвл");
				        PlayerInfo[playerid][pJob] = 7;
				        SendClientMessage(playerid, 0x6495EDFF, "Вас успешно приняли на работу Прораба");
			   			SendClientMessage(playerid, 0x6495EDFF, "Пропишите /mm чтобы посмотреть команды");
			   			return true;
		   			}
					case 5:
		            {
			            if(PlayerInfo[playerid][pLevel] < 5) return SendClientMessage(playerid, COLOR_GREY, "Вам требуется 5 лвл");
			            PlayerInfo[playerid][pJob] = 10;
			            PlayerInfo[playerid][pDMgruz] = 2;
			            SendClientMessage(playerid, 0x6495EDFF, "Вас успешно приняли на работу Дальнобойщика");
			            SendClientMessage(playerid, 0x6495EDFF, "Пропишите /mm чтобы посмотреть команды");
			            return true;
		            }
				}
			}
	 		else
			{
				return true;
			}
		}
		case 1010:
		{
			if(response)
			{
   				//if(FormaFrac[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже начали рабочий день!");
                if(FormaFrac[playerid] == 1)
				{
					SendClientMessage(playerid, 0x6495EDFF, "Рабочий день окончен");
    				SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
					SetPlayerToTeamColor(playerid);
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					FormaFrac[playerid] = 0;
					SetPlayerArmourAC(playerid, 0);
					DelGun(playerid);
					if(PlayerInfo[playerid][pMember] == 11)return duty[playerid] = 0;
				}
				else
				{
				    SendClientMessage(playerid, 0x6495EDFF, "Рабочий день начат");
    				SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerToTeamColor(playerid);
					FormaFrac[playerid] = 1;
					SpawnChange[playerid] = 0;
					SetPlayerSpawn(playerid);
					PlayerInfo[playerid][pJob] = 0;
					if(PlayerInfo[playerid][pMember] == 11)return duty[playerid] = 1;
				}
			 	return true;
			}
		}
		case 5522:
	    {
		   	if(response)
		    {
			    new Float:tempheal;
			    new sendername[MAX_PLAYER_NAME];
			    new giveplayer[MAX_PLAYER_NAME];
				GetPlayerHealth(playerid,tempheal);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				GetPlayerName(HealOffer[playerid], giveplayer, sizeof(giveplayer));
				if(PlayerInfo[playerid][pCash] < HealPrice[playerid]) return SendClientMessage(HealOffer[playerid], COLOR_GREY, "У этого игрока нет столько денег на руках");
				PlayerInfo[HealOffer[playerid]][pCash] += HealPrice[playerid];
				PlayerInfo[playerid][pCash] -= HealPrice[playerid];
				PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~g~+100hp~n~~r~-$%d", HealPrice[playerid]);
				GameTextForPlayer(playerid, string, 5000, 1);
				format(string, sizeof(string), "~g~+100hp~n~~g~+$%d", HealPrice[playerid]);
				GameTextForPlayer(HealOffer[playerid], string, 5000, 1);
				SetPlayerHealthAC(playerid, 100);
				PlayerInfo[playerid][pHP] = 100;
				PlayerStoned[playerid] = 0;
				startaddiction[playerid] = 0;
				send[playerid] = 0;
				return true;
			}
			else
			{
				return true;
			}
		}
		case 13:
		{
	        if(response)
	        {
				ShowPlayerDialog(playerid, 1945, DIALOG_STYLE_INPUT, "Электронная почта", "Пожалуйста введите действующий адрес электронной почты,\nесли вы забудите пароль на него будет выслан новый", "Далее", "Пропуск");
				return true;
			}
			else
			{
				return true;
			}
		}
		case 1945:
		{
			if(response)
			{
				if(strlen(inputtext) > 5 && strfind(inputtext, "@", true) != -1 && strfind(inputtext, ".", true) != -1)
				{
					ShowPlayerDialog(playerid,2625,DIALOG_STYLE_INPUT, "{CC9900}(2/4) Ник игрока", "{ffffff}Укажите ник игрока который приглашил вас на нашем сервере!.", "Далее", "Пропуск");
				}
				else
				{
					ShowPlayerDialog(playerid,2625,DIALOG_STYLE_INPUT, "{CC9900}(2/4) Ник игрока", "{ffffff}Укажите ник игрока который приглашил вас на нашем сервере!.", "Далее", "Пропуск");
				}
			}
			else
			{
				ShowPlayerDialog(playerid,2625,DIALOG_STYLE_INPUT, "{CC9900}(2/4) Ник игрока", "{ffffff}Укажите ник игрока который приглашил вас на нашем сервере!.", "Далее", "Пропуск");
			}
			return true;
		}
		case 190:
		{
			if(response)
			{
			    switch(listitem)
			    {
					case 0:
					{
						SetPlayerInterior(playerid, 15);
						SetPlayerVirtualWorld(playerid, 1);
						ACP_SetPlayerPos(playerid, 999.5983,1000.0139,1999.7999);
						SetPlayerFacingAngle(playerid, 268.4196);
					}
					case 1:
					{
						SetPlayerInterior(playerid,0);
						ACP_SetPlayerPos(playerid,1658.2383,-1693.4553,15.6094);
						SetPlayerFacingAngle(playerid, 175.8234);
						SetPlayerVirtualWorld(playerid, 0);
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 193:
		{
			if(response)
			{
			    switch(listitem)
			    {
					case 0:
					{
						SetPlayerInterior(playerid, 15);
						SetPlayerVirtualWorld(playerid, 1);
						ACP_SetPlayerPos(playerid, 999.5983,1000.0139,1999.7999);
						SetPlayerFacingAngle(playerid, 268.4196);
					}
					case 1:
					{
						SetPlayerInterior(playerid, 0);
						ACP_SetPlayerPos(playerid, 1651.0940,-1640.0087,83.7788);
						SetPlayerFacingAngle(playerid, 317.3378);
						SetPlayerVirtualWorld(playerid, 0);
					}
				}
			}
			else
			{
			    return true;
			}
		}
		case 7228:
        {
            if(response)
            {
            	if(listitem == 0)
             	{
              		ShowPlayerDialog(playerid,35,DIALOG_STYLE_INPUT,"Введите id игрока","Введите id игрока\nчтобы выдать водительские права:","Принять","Отмена");
               	}
               	if(listitem == 1)
               	{
                	ShowPlayerDialog(playerid,36,DIALOG_STYLE_INPUT,"Введите id игрока","Введите id игрока\nчтобы выдать лицензию на воздушный транспорт:","Принять","Отмена");
                 	return 0;
                }
                if(listitem == 2)
                {
                    if(PlayerInfo[playerid][pMember] == 11 && PlayerInfo[playerid][pRank] >= 2) //SendClientMessage(playerid, COLOR_GREY, "Вы не уполномочены выдать данную лицензию");
					{ 
	                	ShowPlayerDialog(playerid,37,DIALOG_STYLE_INPUT,"Введите id игрока","Введите id игрока\nчтобы выдать лицензию на водный транспорт:","Принять","Отмена");
	                 	return 0;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "Вы не уполномочены выдать данную лицензию");
					}
                }
                if(listitem == 3)
                {
                    if(PlayerInfo[playerid][pMember] == 11 && PlayerInfo[playerid][pRank] >= 4)
                    {
	                	ShowPlayerDialog(playerid,38,DIALOG_STYLE_INPUT,"Введите id игрока","Введите id игрока\nчтобы выдать лицензию на рыбалку:","Принять","Отмена");
	                 	return 0;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Вы не уполномочены выдать данную лицензию");
					}
                }
                if(listitem == 4)
                {
                    if(PlayerInfo[playerid][pMember] == 11 && PlayerInfo[playerid][pRank] >= 5)
                    {
	                	ShowPlayerDialog(playerid,39,DIALOG_STYLE_INPUT,"Введите id игрока","Введите id игрока\nчтобы выдать лицензию на оружие:","Принять","Отмена");
	                 	return 0;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "Вы не уполномочены выдать данную лицензию");
					}
                }
                if(listitem == 5)
                {
                    if(PlayerInfo[playerid][pMember] == 11 && PlayerInfo[playerid][pRank] >= 6)
                    {
	                    ShowPlayerDialog(playerid,40,DIALOG_STYLE_INPUT,"Введите id игрока","Введите id игрока\nчтобы выдать разрешение на бизнес:","Принять","Отмена");
	                 	return 0;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "Вы не уполномочены выдать данную лицензию");
					}
				}
			}
        }
        case 35:
        {
        	if(response)
         	{
          		new cashdeposit = strval(inputtext);
            	new giveplayer[MAX_PLAYER_NAME];
            	if(!ProxDetectorS(8.0, playerid, cashdeposit)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас!");
             	GetPlayerName(playerid, playername, sizeof(playername));
              	GetPlayerName(cashdeposit, giveplayer, sizeof(giveplayer));
                format(string, sizeof(string), "Вы выдали водительские права {FFFFFF}%s.",giveplayer);
                SendClientMessage(playerid, 0x0099FFFF, string);
               	format(string, sizeof(string), "Инструктор {FFFFFF}%s {0099FF}выдал вам водительские права",playername);
                SendClientMessage(cashdeposit, 0x0099FFFF, string);
                PlayerInfo[cashdeposit][pCarLic] = 1;
       		}
        }
        case 36:
        {
        	if(response)
         	{
          		new cashdeposit = strval(inputtext);
            	new giveplayer[MAX_PLAYER_NAME];
            	if(!ProxDetectorS(8.0, playerid, cashdeposit)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас!");
             	GetPlayerName(playerid, playername, sizeof(playername));
            	GetPlayerName(cashdeposit, giveplayer, sizeof(giveplayer));
             	format(string, sizeof(string), "Вы выдали лицензию на полёты {FFFFFF}%s.",giveplayer);
              	SendClientMessage(playerid, 0x0099FFFF, string);
               	format(string, sizeof(string), "Инструктор {FFFFFF}%s {0099FF}выдал вам лицензию на полёты",playername);
               	SendClientMessage(cashdeposit, 0x0099FFFF, string);
                PlayerInfo[cashdeposit][pFlyLic] = 1;
            }
        }
        case 37:
        {
        	if(response)
         	{
          		new cashdeposit = strval(inputtext);
            	new giveplayer[MAX_PLAYER_NAME];
            	if(!ProxDetectorS(8.0, playerid, cashdeposit)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас!");
             	GetPlayerName(playerid, playername, sizeof(playername));
              	GetPlayerName(cashdeposit, giveplayer, sizeof(giveplayer));
               	format(string, sizeof(string), "Вы выдали лицензию на водный транспорт {FFFFFF}%s.",giveplayer);
                SendClientMessage(playerid, 0x0099FFFF, string);
                format(string, sizeof(string), "Инструктор {FFFFFF}%s {0099FF}выдал вам лицензию на водный транспорт",playername);
                SendClientMessage(cashdeposit, 0x0099FFFF, string);
                PlayerInfo[cashdeposit][pBoatLic] = 1;
            }
        }
        case 38:
        {
        	if(response)
         	{
          		new cashdeposit = strval(inputtext);
            	new giveplayer[MAX_PLAYER_NAME];
            	if(!ProxDetectorS(8.0, playerid, cashdeposit)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас!");
             	GetPlayerName(playerid, playername, sizeof(playername));
              	GetPlayerName(cashdeposit, giveplayer, sizeof(giveplayer));
               	format(string, sizeof(string), "Вы выдали лицензию на рыбаловство {FFFFFF}%s.",giveplayer);
               	SendClientMessage(playerid, 0x0099FFFF, string);
               	format(string, sizeof(string), "Инструктор {FFFFFF}%s {0099FF}выдал вам лицензию на рыбаловство",playername);
               	SendClientMessage(cashdeposit, 0x0099FFFF, string);
                PlayerInfo[cashdeposit][pFishLic] = 1;
            }
        }
		case 39:
        {
        	if(response)
         	{
          		new cashdeposit = strval(inputtext);
            	new giveplayer[MAX_PLAYER_NAME];
            	if(!ProxDetectorS(8.0, playerid, cashdeposit)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас!");
             	GetPlayerName(playerid, playername, sizeof(playername));
              	GetPlayerName(cashdeposit, giveplayer, sizeof(giveplayer));
               	format(string, sizeof(string), "Вы выдали лицензию на оружие {FFFFFF}%s.",giveplayer);
                SendClientMessage(playerid, 0x0099FFFF, string);
               	format(string, sizeof(string), "Инструктор {FFFFFF}%s {0099FF}выдал вам лицензию на оружие",playername);
               	SendClientMessage(cashdeposit,0x0099FFFF, string);
                PlayerInfo[cashdeposit][pGunLic] = 1;
            }
        }
        case 40:
        {
            if(response)
         	{
          		new cashdeposit = strval(inputtext);
            	new giveplayer[MAX_PLAYER_NAME];
            	if(!ProxDetectorS(8.0, playerid, cashdeposit)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас!");
             	GetPlayerName(playerid, playername, sizeof(playername));
              	GetPlayerName(cashdeposit, giveplayer, sizeof(giveplayer));
               	format(string, sizeof(string), "Вы выдали лицензию на бизнес {FFFFFF}%s.",giveplayer);
                SendClientMessage(playerid, 0x0099FFFF, string);
               	format(string, sizeof(string), "Инструктор {FFFFFF}%s {0099FF}выдал вам лицензию на бизнес",playername);
               	SendClientMessage(cashdeposit, 0x0099FFFF, string);
                PlayerInfo[cashdeposit][pBisLic] = 1;
            }
		}
	    case 7779:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:	ShowPlayerDialog(playerid, 100, DIALOG_STYLE_INPUT, "Отобрать водительские права", "Введите [ID] игрока", "Отобрать", "Отмена");
					case 1:	ShowPlayerDialog(playerid, 103, DIALOG_STYLE_INPUT, "Отобрать лицензию на полёты", "Введите [ID] игрока", "Отобрать", "Отмена");
					case 2: ShowPlayerDialog(playerid, 104, DIALOG_STYLE_INPUT, "Отобрать лицензию на рыболовлю", "Введите [ID] игрока", "Отобрать", "Отмена");
					case 3:	ShowPlayerDialog(playerid, 105, DIALOG_STYLE_INPUT, "Отобрать лицензию на вождение водного транспорта", "Введите [ID] игрока", "Отобрать", "Отмена");
					case 4:	ShowPlayerDialog(playerid, 106, DIALOG_STYLE_INPUT, "Отобрать лицензию на оружие", "Введите [ID] игрока", "Отобрать", "Отмена");
					case 5:	ShowPlayerDialog(playerid, 108, DIALOG_STYLE_INPUT, "Отобрать наркотики", "Введите [ID] игрока", "Отобрать", "Отмена");
					case 6:	ShowPlayerDialog(playerid, 109, DIALOG_STYLE_INPUT, "Отобрать оружие", "Введите [ID] игрока", "Отобрать", "Отмена");
					case 7: ShowPlayerDialog(playerid, 110, DIALOG_STYLE_INPUT, "Отобрать материалы", "Введите [ID] игрока", "Отобрать", "Отмена");
				}
			}
			else
			{
			    return true;
			}
		}
		case 100:
		{
			if(response)
		    {
			    new string556[255];
			    new pname[MAX_PLAYER_NAME];
			    new idd = strval(inputtext);
			    if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				if(!ProxDetectorS(8.0, playerid, idd)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас!");
		   	    GetPlayerName(idd, pname, sizeof(pname));
		        new sendername[MAX_PLAYER_NAME];
		        GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s забрал у вас водительские права.", sendername);
				SendClientMessage(idd, 0x6495EDFF, string);
				PlayerInfo[idd][pCarLic] = 0;
			    format(string556, sizeof(string556), "Вы забрали водительские права у %s.",pname,idd);
			    SendClientMessage(playerid, 0x6495EDFF, string556);
			    return true;
			}
	   		else
			{
			    return true;
			}
		}
		case 103:
		{
			if(response)
		    {
			    new string556[255];
			    new pname[MAX_PLAYER_NAME];
			    new idd = strval(inputtext);
			    if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				if(!ProxDetectorS(8.0, playerid, idd)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
		   	    GetPlayerName(idd, pname, sizeof(pname));
		        new sendername[MAX_PLAYER_NAME];
		        GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s забрал у вас лицензию на полёты.", sendername);
				SendClientMessage(idd, 0x6495EDFF, string);
				PlayerInfo[idd][pFlyLic] = 0;
			    format(string556, sizeof(string556), "Вы забрали лицензию на полёты у %s.",pname,idd);
			    SendClientMessage(playerid, 0x6495EDFF, string556);
			    return true;
			}
			else
			{
			    return true;
			}
		}
		case 104:
		{
			if(response)
		    {
			    new string556[255];
			    new pname[MAX_PLAYER_NAME];
			    new idd = strval(inputtext);
			    if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				if(!ProxDetectorS(8.0, playerid, idd)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
		   	    GetPlayerName(idd, pname, sizeof(pname));
		        new sendername[MAX_PLAYER_NAME];
		       	GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s забрал у вас лицензию на рыболовство.", sendername);
				SendClientMessage(idd, 0x6495EDFF, string);
				PlayerInfo[idd][pBoatLic] = 0;
			    format(string556, sizeof(string556), "Вы забрали лицензию на рыболовлю у %s.",pname,idd);
			    SendClientMessage(playerid, 0x6495EDFF, string556);
			    return true;
		    }
	    	else
			{
			    return true;
			}
		}
		case 105:
		{
			if(response)
		    {
			    new string556[255];
			    new pname[MAX_PLAYER_NAME];
			    new idd = strval(inputtext);
			    if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				if(!ProxDetectorS(8.0, playerid, idd)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
		  		GetPlayerName(idd, pname, sizeof(pname));
		        new sendername[MAX_PLAYER_NAME];
		        GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s забрал у вас лицензию на водный транспорт.", sendername);
				SendClientMessage(idd, 0x6495EDFF, string);
				PlayerInfo[idd][pFishLic] = 0;
			    format(string556, sizeof(string556), "Вы забрали лицензию водный транспорт у %s.",pname,idd);
			    SendClientMessage(playerid, 0x6495EDFF, string556);
			    return true;
			}
			else
			{
			    return true;
			}
		}
		case 106:
		{
			if(response)
		    {
			    new string556[255];
			    new pname[MAX_PLAYER_NAME];
			    new idd = strval(inputtext);
			    if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				if(!ProxDetectorS(8.0, playerid, idd)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
		  		GetPlayerName(idd, pname, sizeof(pname));
		        new sendername[MAX_PLAYER_NAME];
		        GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s забрал у вас лицензию на оружие.", sendername);
				SendClientMessage(idd, 0x6495EDFF, string);
				PlayerInfo[idd][pGunLic] = 0;
			    format(string556, sizeof(string556), "Вы забрали лицензию на оружие у %s.",pname,idd);
			    SendClientMessage(playerid, 0x6495EDFF, string556);
			    return true;
		    }
			else
			{
				return true;
			}
		}
		case 108:
		{
			if(response)
		    {
			    new string556[255];
			    new pname[MAX_PLAYER_NAME];
			    new idd = strval(inputtext);
			    if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				if(!ProxDetectorS(8.0, playerid, idd)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
				GetPlayerName(idd, pname, sizeof(pname));
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s забрал у вас все наркотики.", sendername);
			 	SendClientMessage(idd, 0x6495EDFF, string);
				PlayerInfo[idd][pDrugs] = 0;
			    format(string556, sizeof(string556), "Вы забрали наркотики у %s.",pname,idd);
			    SendClientMessage(playerid, 0x6495EDFF, string556);
			    return true;
			}
			else
			{
			    return true;
			}
		}
		case 109:
		{
			if(response)
		    {
			    new string556[255];
			    new pname[MAX_PLAYER_NAME];
			    new idd = strval(inputtext);
			    if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				if(!ProxDetectorS(8.0, playerid, idd)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
				GetPlayerName(idd, pname, sizeof(pname));
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s забрал у вас оружие.", sendername);
			 	SendClientMessage(idd, 0x6495EDFF, string);
			 	DelGun(idd);
			    format(string556, sizeof(string556), "Вы забрали оружие у %s.",pname,idd);
			    SendClientMessage(playerid, 0x6495EDFF, string556);
			    return true;
		    }
			else
			{
				return true;
			}
		}
		case 110:
		{
			if(response)
		    {
			    new string556[255];
			    new pname[MAX_PLAYER_NAME];
			    new idd = strval(inputtext);
			    if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				if(!ProxDetectorS(8.0, playerid, idd)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
				GetPlayerName(idd, pname, sizeof(pname));
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s забрал у вас материалы.", sendername);
			 	SendClientMessage(idd, 0x6495EDFF, string);
				PlayerInfo[idd][pMaterials] = 0;
			    format(string556, sizeof(string556), "Вы забрали материалы у %s.",pname,idd);
			    SendClientMessage(playerid, 0x6495EDFF, string556);
			    return true;
	    	}
			else
			{
			    return true;
			}
		}
		case 9956:
		{
		    if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(TaxiDrivers < 1)
				        {
				            SendClientMessage(playerid, COLOR_GREY, "Нет таксистов поблизости");
				            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				            return true;
			        	}
		   			    format(string, sizeof(string), "- Диспетчер: Человек нуждается в такси! {FFFFFF}( Введите: /accept taxi, чтобы принять вызов)");
				    	SendJobMessage(4, COLOR_REDD, string);
				    	SendClientMessage(playerid, COLOR_REDD, "- Диспетчер: ваше сообщение доставлено, подождите пока примут вызов");
				    	TaxiCall = playerid;
				    	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				    	return true;
					}
					case 1:
					{
						if(Medics < 1)
				        {
				            SendClientMessage(playerid, COLOR_GREY, "В данный момент нет медиков на дежурстве!");
				            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				            return true;
				        }
		   			    format(string, sizeof(string), "- Диспетчер: Человек нуждается в медицинской помощи! {FFFFFF}( Введите: /accept medic, чтобы принять вызов )");
		       			SendRadioMessage(4, COLOR_REDD, string);
		       			SendRadioMessage(22, COLOR_REDD, string);
		       			SendRadioMessage(33, COLOR_REDD, string);
				    	SendClientMessage(playerid, COLOR_REDD, "- Диспетчер: ваше сообщение доставлено, подождите пока примут вызов");
				    	MedicCall = playerid;
				    	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				    	return true;
					}
					case 2:
					{
						if(Mechanics < 1)
				        {
				            SendClientMessage(playerid, COLOR_GREY, "В данный момент нет механиков на дежурстве!");
				            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				            return true;
				        }
		   			    format(string, sizeof(string), "- Диспетчер: Человек нуждается в помощи механика. {FFFFFF}( Введите: /accept mechanic, чтобы принять вызов )");
				    	SendJobMessage(2, COLOR_REDD, string);
				    	SendClientMessage(playerid, COLOR_REDD, "- Диспетчер: ваше сообщение доставлено, подождите пока примут вызов");
				    	MechanicCall = playerid;
				    	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				    	return true;
					}
					case 3:
					{
						if(Police < 1)
				        {
				            SendClientMessage(playerid, COLOR_GREY, "В данный момент нет патрульных на дежурстве!");
				            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				            return true;
				        }
		   			    format(string, sizeof(string), "- Диспетчер: Человек нуждается в помощи полицейских. {FFFFFF}( Введите: /accept police, чтобы принять вызов )");
				    	SendRadioMessage(1, COLOR_REDD, string);
				    	SendRadioMessage(10, COLOR_REDD, string);
				    	SendRadioMessage(21, COLOR_REDD, string);
				    	SendClientMessage(playerid, COLOR_REDD, "- Диспетчер: ваше сообщение доставлено, подождите пока примут вызов");
				    	PoliceCall = playerid;
				    	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				    	return true;
					}
				}
			}
			else
			{
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			}
			return true;
		}
		case 5454:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						new giveplayer[MAX_PLAYER_NAME];
						SendClientMessage(playerid, COLOR_YELLOW2, "Адвокаты Online:");
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pMember] == 7 && PlayerInfo[i][pRank] == 2)
								{
								    GetPlayerName(i, giveplayer, sizeof(giveplayer));
									format(string, 256, "Адвокат: %s Тел: %d", giveplayer, PlayerInfo[i][pPnumber]);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
							}
						}
					}
					case 1:
					{
						new giveplayer[MAX_PLAYER_NAME];
						SendClientMessage(playerid, COLOR_YELLOW2, "Таксисты:");
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pJob] == 4)
								{
								    GetPlayerName(i, giveplayer, sizeof(giveplayer));
									format(string, 256, " %s Тел: %d", giveplayer, PlayerInfo[i][pPnumber]);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
							}
						}
					}
					case 2:
					{
						new giveplayer[MAX_PLAYER_NAME];
						SendClientMessage(playerid, COLOR_YELLOW2, "Крупье:");
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pMember] == 8 && PlayerInfo[i][pRank] == 3)
								{
								    GetPlayerName(i, giveplayer, sizeof(giveplayer));
									format(string, 256, "Крупье: %s", giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
							}
						}
					}
					case 3:
	                {
						if(IsPlayerConnected(playerid))
	                    {
	                        SendClientMessage(playerid, COLOR_NEWS, "Лидеры онлайн:");
	                        for(new i = 0; i < MAX_PLAYERS; i++)
	                        {
	                            if(IsPlayerConnected(i))
	                            {
	                                if(PlayerInfo[i][pLeader]>0)
	                                {
                                        new ttext[255];
	                                    if(PlayerInfo[i][pLeader] == 1) { ttext = "LSPD";
										}
	                                    else if(PlayerInfo[i][pLeader] == 2) { ttext = "ФБР"; }
	                                    else if(PlayerInfo[i][pLeader] == 3) { ttext = "Армия: Авианосец"; }
	                                    else if(PlayerInfo[i][pLeader] == 4) { ttext = "МЧС San Fierro"; }
	                                    else if(PlayerInfo[i][pLeader] == 5) { ttext = "LCN"; }
	                                    else if(PlayerInfo[i][pLeader] == 6) { ttext = "Yakuza"; }
	                                    else if(PlayerInfo[i][pLeader] == 7) { ttext = "Мэрия"; }
	                                    else if(PlayerInfo[i][pLeader] == 8) { ttext = "Casino Caligula"; }
	                                    else if(PlayerInfo[i][pLeader] == 9) { ttext = "SF News"; }
	                                    else if(PlayerInfo[i][pLeader] == 10) { ttext = "SFPD"; }
	                                    else if(PlayerInfo[i][pLeader] == 11) { ttext = "Инструкторы"; }
	                                    else if(PlayerInfo[i][pLeader] == 12) { ttext = "The Ballas "; }
	                                    else if(PlayerInfo[i][pLeader] == 13) { ttext = "The Vagos"; }
	                                    else if(PlayerInfo[i][pLeader] == 14) { ttext = "Русская мафия"; }
	                                    else if(PlayerInfo[i][pLeader] == 15) { ttext = "The Grove"; }
	                                    else if(PlayerInfo[i][pLeader] == 16) { ttext = "LS News"; }
	                                    else if(PlayerInfo[i][pLeader] == 17) { ttext = "The Aztecas"; }
	                                    else if(PlayerInfo[i][pLeader] == 18) { ttext = "The Rifa"; }
	                                    else if(PlayerInfo[i][pLeader] == 19) { ttext = "Армия: Зона 51"; }
	                                    else if(PlayerInfo[i][pLeader] == 20) { ttext = "LV News"; }
	                                    else if(PlayerInfo[i][pLeader] == 21) { ttext = "LVPD"; }
	                                    else if(PlayerInfo[i][pLeader] == 22) { ttext = "МЧС Los Santos"; }
	                                    else if(PlayerInfo[i][pLeader] == 23) { ttext = "МЧС Las Venturas"; }
	                                    else if(PlayerInfo[i][pMember] == 24) { ttext = "Хитманы";}
	                                    new plname[255];
	                                    GetPlayerName(i, plname, sizeof(plname));
	                                    format(string, sizeof(string), " %s: %s | Тел: %d",ttext,plname,PlayerInfo[i][pPnumber]);
	                                    SendClientMessage(playerid, 0xF5DEB3AA, string);
	                                }
	                            }
	                        }
	                    }
					}
					case 4:
					{
						new giveplayer[MAX_PLAYER_NAME];
						SendClientMessage(playerid, 0x6495EDFF, "Инструкторы Online:");
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pMember] == 11)
								{
								    GetPlayerName(i, giveplayer, sizeof(giveplayer));
									format(string, 256, " %s Тел: %d", giveplayer, PlayerInfo[i][pPnumber]);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
							}
						}
					}
					case 5:
					{
						new giveplayer[MAX_PLAYER_NAME];
						SendClientMessage(playerid, COLOR_YELLOW2, "Механики:");
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pJob] == 2)
								{
								    GetPlayerName(i, giveplayer, sizeof(giveplayer));
									format(string, 256, " %s Тел: %d", giveplayer, PlayerInfo[i][pPnumber]);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
							}
						}
					}
					case 6:
					{
						new giveplayer[MAX_PLAYER_NAME];
						SendClientMessage(playerid, COLOR_YELLOW2, "Медики:");
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pMember] == 4 || PlayerInfo[i][pMember] == 22 || PlayerInfo[i][pMember] == 23)
								{
								    GetPlayerName(i, giveplayer, sizeof(giveplayer));
									format(string, 256, " %s Тел: %d", giveplayer, PlayerInfo[i][pPnumber]);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
							}
						}
					}
					case 7:
					{
						new giveplayer[MAX_PLAYER_NAME];
						SendClientMessage(playerid, COLOR_YELLOW2, "Развозчики продуктов:");
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pJob] == 5)
								{
								    GetPlayerName(i, giveplayer, sizeof(giveplayer));
									format(string, 256, " %s Тел: %d", giveplayer, PlayerInfo[i][pPnumber]);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
							}
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 8240:
	    {
	        if(response)
	        {
				SetPlayerInterior(playerid,6);
				ACP_SetPlayerPos(playerid,316.3837,-167.8547,999.5938);
				SetPlayerFacingAngle(playerid, 34.3574);
				SetPlayerVirtualWorld(playerid, 15);
				return true;
	        }
	        else
	        {
		    	SetPlayerInterior(playerid, 0);
				ACP_SetPlayerPos(playerid,2278.3853,2460.9187,38.6837);
				SetPlayerFacingAngle(playerid, 357.9236);
				return true;
	        }
	    }
	    case 8241:
	    {
	        if(response)
	        {
				SetPlayerInterior(playerid,6);
				SetPlayerVirtualWorld(playerid, 15);
				ACP_SetPlayerPos(playerid,316.3837,-167.8547,999.5938);
				SetPlayerFacingAngle(playerid, 318.5262);
				return true;
	        }
	        else
	        {
		    	SetPlayerInterior(playerid, 0);
				ACP_SetPlayerPos(playerid,2294.0447,2468.8052,10.8203);
				SetPlayerFacingAngle(playerid, 90.8629);
				return true;
	        }
	    }
		case 2013:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
	            	if(yakuzamats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50;
					yakuzamats -= 70;
				}
				else if(listitem == 1)
	            {
	            	if(yakuzamats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15;
					yakuzamats -= 50;
				}
				else if(listitem == 2)
	            {
	            	if(yakuzamats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10;
					yakuzamats -= 100;
				}
				else if(listitem == 3)
	            {
	            	if(yakuzamats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100;
					yakuzamats -= 500;
				}
				else if(listitem == 4)
	            {
	            	if(yakuzamats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100;
					yakuzamats -= 500;
				}
				else if(listitem == 5)
	            {
	            	if(yakuzamats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200;
	                yakuzamats -= 400;
				}
	   			else if(listitem == 6)
	            {
	            	if(yakuzamats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; yakuzamats -= 100;
				}
	 			new sendername[MAX_PLAYER_NAME];
				GetWeaponName(gun, gunname, sizeof(gunname));
				GiveWeapon(playerid, gun, ammo);
				format(string, 256, "Вы взяли оружие со склада");
				SendClientMessage(playerid, 0x6495EDFF, string);
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
		case 2014:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
					if(lcnmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50; lcnmats -= 70;
				}
				else if(listitem == 1)
	            {
					if(lcnmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15; lcnmats -= 50;
				}
				else if(listitem == 2)
	            {
					if(lcnmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10; lcnmats -= 100;
				}
				else if(listitem == 3)
	  			{
					if(lcnmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100; lcnmats -= 500;
				}
				else if(listitem == 4)
	            {
					if(lcnmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100; lcnmats -= 500;
				}
				else if(listitem == 5)
	            {
					if(lcnmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200; lcnmats -= 400;
				}
	   			else if(listitem == 6)
	            {
					if(lcnmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; lcnmats -= 100;
				}
				new sendername[MAX_PLAYER_NAME];
				GetWeaponName(gun, gunname, sizeof(gunname));
				GiveWeapon(playerid, gun, ammo);
				format(string, 256, "Вы взяли оружие со склада");
				SendClientMessage(playerid, 0x6495EDFF, string);
			 	GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	  		}
	 		else
			{
			    return true;
			}
		}
		case 2015:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
					if(rmmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50; rmmats -= 70;
				}
				else if(listitem == 1)
	            {
					if(rmmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	            	gun = 25; ammo = 15; rmmats -= 50;
				}
				else if(listitem == 2)
	            {
					if(rmmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	            	gun = 33; ammo = 10; rmmats -= 100;
				}
				else if(listitem == 3)
	            {
					if(rmmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	            	gun = 31; ammo = 100; rmmats -= 500;
				}
				else if(listitem == 4)
	            {
					if(rmmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	            	gun = 30; ammo = 100; rmmats -= 500;
				}
				else if(listitem == 5)
	            {
					if(rmmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	            	gun = 29; ammo = 200; rmmats -= 400;
				}
	   			else if(listitem == 6)
	            {
					if(rmmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	            	gun = 23; ammo = 100; rmmats -= 100;
				}
				new sendername[MAX_PLAYER_NAME];
				GetWeaponName(gun, gunname, sizeof(gunname));
				GiveWeapon(playerid, gun, ammo);
				format(string, 256, "Вы взяли оружие со склада");
				SendClientMessage(playerid, 0x6495EDFF, string);
			 	GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
		case 2016:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
					if(ssmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50; ssmcmatbi -= 70;
				}
				else if(listitem == 1)
	            {
					if(ssmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15; ssmcmatbi -= 50;
				}
				else if(listitem == 2)
	            {
					if(ssmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10; ssmcmatbi -= 100;
				}
				else if(listitem == 3)
	            {
					if(ssmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100; ssmcmatbi -= 500;
				}
				else if(listitem == 4)
	            {
					if(ssmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100; ssmcmatbi -= 500;
				}
				else if(listitem == 5)
	            {
					if(ssmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200; ssmcmatbi -= 400;
				}
	   			else if(listitem == 6)
	            {
					if(ssmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; ssmcmatbi -= 100;
				}
				new sendername[MAX_PLAYER_NAME];
				GetWeaponName(gun, gunname, sizeof(gunname));
				GiveWeapon(playerid, gun, ammo);
				format(string, 256, "Вы взяли оружие со склада");
				SendClientMessage(playerid, 0x6495EDFF, string);
			 	GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
		case 2017:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
					if(hamcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50; hamcmatbi -= 70;
				}
				else if(listitem == 1)
	            {
					if(hamcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15; hamcmatbi -= 50;
				}
				else if(listitem == 2)
	            {
					if(hamcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10; hamcmatbi -= 100;
				}
				else if(listitem == 3)
	            {
					if(hamcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100; hamcmatbi -= 500;
				}
				else if(listitem == 4)
	            {
					if(hamcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100; hamcmatbi -= 500;
				}
				else if(listitem == 5)
	            {
					if(hamcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200; hamcmatbi -= 400;
				}
	   			else if(listitem == 6)
	            {
					if(hamcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; hamcmatbi -= 100;
				}
				new sendername[MAX_PLAYER_NAME];
				GetWeaponName(gun, gunname, sizeof(gunname));
				GiveWeapon(playerid, gun, ammo);
				format(string, 256, "Вы взяли оружие со склада");
				SendClientMessage(playerid, 0x6495EDFF, string);
			 	GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
		case 2018:
		{
	        if(response)
	        {
	            if(listitem == 0)
	            {
					if(omcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50; omcmatbi -= 70;
				}
				else if(listitem == 1)
	            {
					if(omcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15; omcmatbi -= 50;
				}
				else if(listitem == 2)
	            {
					if(omcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10; omcmatbi -= 100;
				}
				else if(listitem == 3)
	            {
					if(omcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100; omcmatbi -= 500;
				}
				else if(listitem == 4)
	            {
					if(omcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100; omcmatbi -= 500;
				}
				else if(listitem == 5)
	            {
					if(omcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200; omcmatbi -= 400;
				}
	   			else if(listitem == 6)
	            {
					if(omcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; omcmatbi -= 100;
				}
				new sendername[MAX_PLAYER_NAME];
				GetWeaponName(gun, gunname, sizeof(gunname));
				GiveWeapon(playerid, gun, ammo);
				format(string, 256, "Вы взяли оружие со склада");
				SendClientMessage(playerid, 0x6495EDFF, string);
			 	GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
		case 2019:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
					if(wmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50; wmcmatbi -= 70;
				}
				else if(listitem == 1)
	            {
					if(wmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15; wmcmatbi -= 50;
				}
				else if(listitem == 2)
	            {
					if(wmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10; wmcmatbi -= 100;
				}
				else if(listitem == 3)
	            {
					if(wmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100; wmcmatbi -= 500;
				}
				else if(listitem == 4)
	            {
					if(wmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100; wmcmatbi -= 500;
				}
				else if(listitem == 5)
	            {
					if(wmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200; wmcmatbi -= 400;
				}
	   			else if(listitem == 6)
	            {
					if(wmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; wmcmatbi -= 100;
				}
				new sendername[MAX_PLAYER_NAME];
				GetWeaponName(gun, gunname, sizeof(gunname));
				GiveWeapon(playerid, gun, ammo);
				format(string, 256, "Вы взяли оружие со склада");
				SendClientMessage(playerid, 0x6495EDFF, string);
			 	GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
		case 2020:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
					if(hwmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50; hwmcmatbi -= 70;
				}
				else if(listitem == 1)
	            {
					if(hwmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15; hwmcmatbi -= 50;
				}
				else if(listitem == 2)
	            {
					if(hwmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10; hwmcmatbi -= 100;
				}
				else if(listitem == 3)
	            {
					if(hwmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100; hwmcmatbi -= 500;
				}
				else if(listitem == 4)
	            {
					if(hwmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100; hwmcmatbi -= 500;
				}
				else if(listitem == 5)
	            {
					if(hwmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200; hwmcmatbi -= 400;
				}
	   			else if(listitem == 6)
	            {
					if(hwmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; hwmcmatbi -= 100;
				}
				new sendername[MAX_PLAYER_NAME];
				GetWeaponName(gun, gunname, sizeof(gunname));
				GiveWeapon(playerid, gun, ammo);
				format(string, 256, "Вы взяли оружие со склада");
				SendClientMessage(playerid, 0x6495EDFF, string);
			 	GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
		case 2021:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
					if(fsmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50; fsmcmatbi -= 70;
				}
				else if(listitem == 1)
	            {
					if(fsmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15; fsmcmatbi -= 50;
				}
				else if(listitem == 2)
	            {
					if(fsmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10; fsmcmatbi -= 100;
				}
				else if(listitem == 3)
	            {
					if(fsmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100; fsmcmatbi -= 500;
				}
				else if(listitem == 4)
	            {
					if(fsmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100; fsmcmatbi -= 500;
				}
				else if(listitem == 5)
	            {
					if(fsmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200; fsmcmatbi -= 400;
				}
	   			else if(listitem == 6)
	            {
					if(fsmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; fsmcmatbi -= 100;
				}
				new sendername[MAX_PLAYER_NAME];
				GetWeaponName(gun, gunname, sizeof(gunname));
				GiveWeapon(playerid, gun, ammo);
				format(string, 256, "Вы взяли оружие со склада");
				SendClientMessage(playerid, 0x6495EDFF, string);
			 	GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
		case 2022:
		{
	        if(response)
	        {
	            if(listitem == 0)
	            {
					if(pmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50; pmcmatbi -= 70;
				}
				else if(listitem == 1)
	            {
					if(pmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15; pmcmatbi -= 50;
				}
				else if(listitem == 2)
	            {
					if(pmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10; pmcmatbi -= 100;
				}
				else if(listitem == 3)
	            {
					if(pmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100; pmcmatbi -= 500;
				}
				else if(listitem == 4)
	            {
					if(pmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100; pmcmatbi -= 500;
				}
				else if(listitem == 5)
	            {
					if(pmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200; pmcmatbi -= 400;
				}
	   			else if(listitem == 6)
	            {
					if(pmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; pmcmatbi -= 100;
				}
				new sendername[MAX_PLAYER_NAME];
				GetWeaponName(gun, gunname, sizeof(gunname));
				GiveWeapon(playerid, gun, ammo);
				format(string, 256, "Вы взяли оружие со склада");
				SendClientMessage(playerid, 0x6495EDFF, string);
			 	GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
		case 2023:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
					if(mmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50; mmcmatbi -= 70;
				}
				else if(listitem == 1)
	            {
					if(mmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15; mmcmatbi -= 50;
				}
				else if(listitem == 2)
	            {
					if(mmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10; mmcmatbi -= 100;
				}
				else if(listitem == 3)
	            {
					if(mmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100; mmcmatbi -= 500;
				}
				else if(listitem == 4)
	            {
					if(mmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100; mmcmatbi -= 500;
				}
				else if(listitem == 5)
	            {
					if(mmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200; mmcmatbi -= 400;
				}
	   			else if(listitem == 6)
	            {
					if(mmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; mmcmatbi -= 100;
				}
				new sendername[MAX_PLAYER_NAME];
				GetWeaponName(gun, gunname, sizeof(gunname));
				GiveWeapon(playerid, gun, ammo);
				format(string, 256, "Вы взяли оружие со склада");
				SendClientMessage(playerid, 0x6495EDFF, string);
			 	GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
		case 2024:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
					if(vmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50; vmcmatbi -= 70;
				}
				else if(listitem == 1)
	            {
					if(vmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15; vmcmatbi -= 50;
				}
				else if(listitem == 2)
	            {
					if(vmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10; vmcmatbi -= 100;
				}
				else if(listitem == 3)
	            {
					if(vmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100; vmcmatbi -= 500;
				}
				else if(listitem == 4)
	            {
					if(vmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100; vmcmatbi -= 500;
				}
				else if(listitem == 5)
	            {
					if(vmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200; vmcmatbi -= 400;
				}
	   			else if(listitem == 6)
	            {
					if(vmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; vmcmatbi -= 100;
				}
				new sendername[MAX_PLAYER_NAME];
				GetWeaponName(gun, gunname, sizeof(gunname));
				GiveWeapon(playerid, gun, ammo);
				format(string, 256, "Вы взяли оружие со склада");
				SendClientMessage(playerid, 0x6495EDFF, string);
			 	GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
		case 2025:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
					if(bmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50; bmcmatbi -= 70;
				}
				else if(listitem == 1)
	            {
					if(bmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15; bmcmatbi -= 50;
				}
				else if(listitem == 2)
	            {
					if(bmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10; bmcmatbi -= 100;
				}
				else if(listitem == 3)
	            {
					if(bmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100; bmcmatbi -= 500;
				}
				else if(listitem == 4)
	            {
					if(bmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100; bmcmatbi -= 500;
				}
				else if(listitem == 5)
	            {
					if(bmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200; bmcmatbi -= 400;
				}
	   			else if(listitem == 6)
	            {
					if(bmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; bmcmatbi -= 100;
				}
				new sendername[MAX_PLAYER_NAME];
				GetWeaponName(gun, gunname, sizeof(gunname));
				GiveWeapon(playerid, gun, ammo);
				format(string, 256, "Вы взяли оружие со склада");
				SendClientMessage(playerid, 0x6495EDFF, string);
			 	GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
		case 9000:
		{
		    if(response)
		    {
				switch(listitem)
				{
				    case 0: // Фракции
				    {
				        new listitems[] = "Гос.Фракции\nБанды\nМафии";
						ShowPlayerDialog(playerid, 9002, DIALOG_STYLE_LIST, "Фракции", listitems, "Выбрать", "Закрыть");
				    }
				    case 1: // Важные
				    {
				        new listitems[] = "Админ Дом\nАвтовокзал\nАвтосалон\nCTO\nКазино калигула\nСпортзал\nVINEWOOD\nБанк\nСалон МТС\nГетто\nГлен парк\nМагазин одежды\nМухосранск";
						ShowPlayerDialog(playerid, 9003, DIALOG_STYLE_LIST, "Важные", listitems, "Выбрать", "Закрыть");
				    }
				    case 2: // Работы
				    {
				        new listitems[] = "Работа грузчиков\nМашины таксистов\nМашины механиков\nМашины хот-догеров\nМашины дальнобойщиков\nМашины развозчиков продуктов\nЛовец медуз";
						ShowPlayerDialog(playerid, 9004, DIALOG_STYLE_LIST, "Работы", listitems, "Выбрать", "Закрыть");
				    }
				}
			}
		}
		case 9003:
		{
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            ACP_SetPlayerPos(playerid,1416.3859,-1481.0020,106.9689);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы в {009900}Админ дом");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
			        }
			        case 1:
			        {
			            ACP_SetPlayerPos(playerid,1223.1262,-1842.5288,13.5485);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы на {009900}Автовокзал");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
			        }
			        case 2:
			        {
			            ACP_SetPlayerPos(playerid,1733.1948,-1773.1763,13.5136);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}Автосалону");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
			        }
			        case 3:
			        {
			            ACP_SetPlayerPos(playerid,2513.9824,-1524.7295,24.0067);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}СТО");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
			        }
			        case 4:
			        {
			            ACP_SetPlayerPos(playerid,1200.5535,-1740.1626,13.5845);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}Казино Калигула");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
			        }
			        case 5:
			        {
			            ACP_SetPlayerPos(playerid,2223.2834,-1725.2505,13.5625);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}Спортзалу");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
			        }
			        case 6:
			        {
			            ACP_SetPlayerPos(playerid,1407.0452,-763.2707,95.8387);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы на {009900}VINEWOOD");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
			        }
			        case 7:
			        {
			            ACP_SetPlayerPos(playerid,1420.2900,-1702.1946,13.5469);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}Банку");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
			        }
			        case 8:
			        {
			            ACP_SetPlayerPos(playerid,1421.8030,-1625.2670,13.5469);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}ССС МТС");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
			        }
			        case 9:
			        {
			            ACP_SetPlayerPos(playerid,2293.4363,-1530.3906,26.8750);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы в {009900}Гетто");
						SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
			        }
			        case 10:
			        {
			            ACP_SetPlayerPos(playerid,1930.5085,-1210.0809,20.0234);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы в {009900}Глен парк");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
			        }
			        case 11:
			        {
			            ACP_SetPlayerPos(playerid,457.5111,-1501.0477,31.0412);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}Магазину одежды");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
			        }
			        case 12:
			        {
			            ACP_SetPlayerPos(playerid,-2142.5500,2575.6357,132.8514);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы в {009900}Мухосранск");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
			        }
			    }
			}
		}
		case 9004:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
					case 0:
					{
					    ACP_SetPlayerPos(playerid,2182.1257,-2288.8726,13.5469);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы на {009900}Работу грузчиков");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
					}
					case 1:
					{
					    ACP_SetPlayerPos(playerid,1070.9885,-1761.2572,13.3918);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}Машинам таксистов");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
					}
					case 2:
					{
					    ACP_SetPlayerPos(playerid,1638.5176,-1093.8710,23.9063);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}Машинам механиков");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
					}
					case 3:
					{
					    ACP_SetPlayerPos(playerid,-2455.7405,732.3153,35.0156);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}Машинам хот-догов");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
					}
					case 4:
					{
					    ACP_SetPlayerPos(playerid,2304.6140,2797.9124,10.8203);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}Машинам дальнобойщиков");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
					}
					case 5:
					{
					    ACP_SetPlayerPos(playerid,-8.9729,-348.6131,5.4297);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}Развозчикам продуктов");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
					}
					case 6:
					{
					    ACP_SetPlayerPos(playerid,466.9502,-2735.7563,4.8519);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы на работу {009900}Ловец медуз");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
					}
		        }
		    }
		}
		case 9002:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
			        case 0: // Гос. Фракции
			        {
			            new listitems[] = "Мэрия\nФБР\nИнструкторы\nLSPD\nSFPD\nLVPD\nБольница LS\nБольница SF\nБольница LV\nНовости LS\nНовости SF\nНовости LV\nАрмия LS\nАрмия LV\nАрмия SF";
						ShowPlayerDialog(playerid, 9005, DIALOG_STYLE_LIST, "Гос.Фракции", listitems, "Выбрать", "Закрыть");
			        }
			        case 1: // Банды
			        {
			            new listitems[] = "GROVE\nBALLAS\nVAGOS\nAZTEC\nRIFA";
						ShowPlayerDialog(playerid, 9006, DIALOG_STYLE_LIST, "Банды", listitems, "Выбрать", "Закрыть");
			        }
			        case 2: // Мафии
					{
					    new listitems[] = "LCN\nRM\nYakuza";
						ShowPlayerDialog(playerid, 9007, DIALOG_STYLE_LIST, "Мафии", listitems, "Выбрать", "Закрыть");
					}
				}
		    }
		}
		case 9005:
		{
		    if(response)
		    {
				switch(listitem)
				{
				    case 0: // Мэрия
					{
					    ACP_SetPlayerPos(playerid, 1484.7512,-1767.3676,18.7958);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}Мэрии.");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
					}
					case 1:
					{
					    ACP_SetPlayerPos(playerid,-2438.6543,507.4709,29.9384);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}FBI");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
					}
					case 2:
					{
					    ACP_SetPlayerPos(playerid,1081.2264,-1702.5221,13.5469);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}Автошколе");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
					}
					case 3:
					{
					    ACP_SetPlayerPos(playerid,1566.6851,-1696.9552,5.8906);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}LSPD");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
					}
					case 4:
					{
					    ACP_SetPlayerPos(playerid,-1584.9025,711.6435,-5.2422);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}SFPD");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
					}
					case 5:
					{
					    ACP_SetPlayerPos(playerid,2287.3120,2452.0779,10.8203);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}LVPD");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
					}
					case 6:
					{
					    ACP_SetPlayerPos(playerid,1188.0292,-1324.6654,13.5593);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}Больнице LS");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
					}
					case 7:
					{
					    ACP_SetPlayerPos(playerid,-2657.3018,625.0680,14.4531);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}Больнице SF");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
					}
					case 8:
					{
					    ACP_SetPlayerPos(playerid,1607.6581,1830.6531,10.8203);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}Больнице LV");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
					}
					case 9:
					{
					    ACP_SetPlayerPos(playerid,1652.9122,-1700.9150,15.6094);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}Новостям LS");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
					}
					case 10:
					{
					    ACP_SetPlayerPos(playerid,-2046.4122,463.5975,35.1719);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}Новостям SF");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
					}
					case 11:
					{
					    ACP_SetPlayerPos(playerid,2649.4766,1178.4358,10.8203);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}Новостям LV");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
					}
					case 12:
					{
					    ACP_SetPlayerPos(playerid,2789.9207,-2436.1013,13.6331);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}Армии LS");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
					}
					case 13:
					{
					    ACP_SetPlayerPos(playerid,212.2079,1903.3328,17.6406);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}Армии LV");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
					}
					case 14:
					{
					    ACP_SetPlayerPos(playerid,-1333.4280,471.2141,7.1875);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}Армии SF");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
					}
				}
		    }
		}
		case 9006:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                ACP_SetPlayerPos(playerid,2494.1294,-1668.1360,13.3438);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}GROVE");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
		            }
		            case 1:
		            {
		                ACP_SetPlayerPos(playerid,2654.1685,-2002.3365,13.3828);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}BALLAS");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
		            }
		            case 2:
		            {
		                ACP_SetPlayerPos(playerid,2784.4407,-1610.4017,10.9219);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}VAGOS");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
		            }
		            case 3:
		            {
		                ACP_SetPlayerPos(playerid,1688.6095,-2112.5894,13.4795);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}AZTEC");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
		            }
		            case 4:
		            {
		                ACP_SetPlayerPos(playerid,2178.8525,-1801.8147,13.3675);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}RIFA");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
		            }
		        }
		    }
		}
		case 9007:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                ACP_SetPlayerPos(playerid,1441.1620,751.4345,10.8203);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}LCN");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
		            }
		            case 1:
		            {
		                ACP_SetPlayerPos(playerid,957.4554,1727.0422,8.6484);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}RM");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
		            }
		            case 2:
		            {
		                ACP_SetPlayerPos(playerid,1464.5984,2774.5684,10.6719);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}YAKUZA");
					    SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
		            }
		        }
			}
		}
		case 9001:
		{
	        new sendername[MAX_PLAYER_NAME];
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(response)
	        {
		        switch(listitem)
				{
				  	case 0:
				    {
					  	if (GetPlayerState(playerid) == 2)
					    {
						    new tmpcar = GetPlayerVehicleID(playerid);
						    SetVehiclePos(tmpcar, 1221.3490,-1842.4059,13.5466);
						    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						    return true;
					    }
						else
						{
							ACP_SetPlayerPos(playerid, 1221.3490,-1842.4059,13.5466);
						}
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы на {009900}Автовокзал.");
					    SetPlayerInterior(playerid,0);
					    SetPlayerVirtualWorld(playerid,0);
					    PlayerInfo[playerid][pInt] = 0;
					    return true;
					}
					case 1:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1483.4178,-1743.8053,13.5469);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							ACP_SetPlayerPos(playerid, 1483.4178,-1743.8053,13.5469);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}Мэрии.");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 2:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1081.2273,-1702.5182,13.5469);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							ACP_SetPlayerPos(playerid, 1081.2273,-1702.5182,13.5469);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы в {009900}Автошколу.");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 3:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1359.0708,-1278.9153,13.3582);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							ACP_SetPlayerPos(playerid, 1359.0708,-1278.9153,13.3582);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы к {009900}Оружейному магазину LS.");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
				}
			}
			else
			{
			    return true;
			}
		}
	    case 10000:
	    {
	        if(response)
	        {
				if(listitem == 0)
	            {
	                ShowPlayerDialog(playerid, 10001, DIALOG_STYLE_LIST, "Фракции", "{e23434}[1]{FFFFFF}Государственные\n{e23434}[2]{FFFFFF}СМИ\n{e23434}[3]{FFFFFF}Мафии\n{e23434}[3]{FFFFFF}Банды\n{e23434}[5]{FFFFFF}Хитманы", "Выбрать", "Назад");
	                return true;
	            }
				else if(listitem == 1)
	            {
	                ShowPlayerDialog(playerid, 10002, DIALOG_STYLE_LIST, "Работы", "{e23434}[1]{FFFFFF}Ловец медуз\n{e23434}[2]{ffffff}Ловля рыбы\n{e23434}[3]{ffffff}Продажа рыб/медуз\n{e23434}{e23434}[4]{ffffff}Грузчики\n{e23434}[5]{ffffff}Развозчик продуктов\n{e23434}[6]{ffffff}Машины таксистов\n{e23434}[7]{ffffff}Машины автомехаников\n{e23434}[8]{ffffff}Машины хот-догеров\n{e23434}[9]{ffffff}Машины дальнобоев\n{e23434}[10]{ffffff}Нефтезавод", "Выбрать", "Назад");
	                return true;
	            }
				else if(listitem == 2)
	            {
	                ShowPlayerDialog(playerid, 10003, DIALOG_STYLE_LIST, "Важное", "{e23434}[1]{ffffff}Мерия\n{e23434}[2]{ffffff}Банк\n{e23434}[3]{ffffff}Салон сотовой связи\n{e23434}[4]{ffffff}Автошкола\n{e23434}[5]{ffffff}Магазин оружия\n{e23434}[6]{ffffff}Автосалон\n{e23434}[7]{ffffff}Станция Тех. Обслуживания\n{e23434}[8]{ffffff}Загс\n{e23434}[9]{ffffff}Магазин одежды", "Выбрать", "Назад");
	                return true;
	            }
				else if(listitem == 3)
	            {
					ShowPlayerDialog(playerid, 10035, DIALOG_STYLE_LIST, "Развлечение", "{e23434}[1]{ffffff}Пеинтбол\n{e23434}[2]{ffffff}Стрит рейсинг\n{e23434}[3]{ffffff}Казино", "Выбрать", "Назад");
					return true;
	            }
	            else if(listitem == 4)
	            {
	            	ShowPlayerDialog(playerid, 31996, DIALOG_STYLE_LIST, "Прочее", "{e23434}[1]{ffffff}Спортзал\n{e23434}[2]{ffffff}Глен парк\n{e23434}[3]{ffffff}Сдача металла", "Выбрать", "Назад");
	            	return true;
	            }
				else if(listitem == 5)
				{
					DisablePlayerRaceCheckpoint(playerid);
					RaceCP[playerid] = 0;
					GameTextForPlayer(playerid, "~r~last point~n~is removed", 5000, 1);
					return true;
				}
	        }
	        else
	        {
	            return true;
	        }
	    }
	    case 10001:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
					ShowPlayerDialog(playerid, 10004, DIALOG_STYLE_LIST, "Государственные", "{e23434}[1]{ffffff}ФБР\n{e23434}[2]{ffffff}Полиция LS\n{e23434}[3]{ffffff}Полиция SF\n{e23434}[4]{ffffff}Полиция LV\n{e23434}[5]{ffffff}Армия SF\n{e23434}[6]{ffffff}Армия LV\n{e23434}[7]{ffffff}Больница LS\n{e23434}[8]{ffffff}Больница SF\n{e23434}[9]{ffffff}Больница LV", "Выбрать", "Назад");
	                return true;
	            }
	            else if(listitem == 1)
	            {
					ShowPlayerDialog(playerid, 10005, DIALOG_STYLE_LIST, "СМИ", "{e23434}[1]{ffffff}Новости LS\n{e23434}[2]{ffffff}Новости SF\n{e23434}[3]{ffffff}Новости LV", "Выбрать", "Назад");
	                return true;
	            }
	            else if(listitem == 2)
				{
					ShowPlayerDialog(playerid, 10006, DIALOG_STYLE_LIST, "Мафии", "{e23434}[1]{ffffff}Русская Мафия\n{e23434}[2]{ffffff}LCN\n{e23434}[3]{ffffff}Yakuza", "Выбрать", "Назад");
	                return true;
	            }
	            else if(listitem == 3)
	            {
					ShowPlayerDialog(playerid, 10010, DIALOG_STYLE_LIST, "Банды", "{e23434}[1]{ffffff}Ацтек\n{e23434}[2]{ffffff}Рифа\n{e23434}[3]{ffffff}Баллас\n{e23434}[4]{ffffff}Грув\n{e23434}[5]{ffffff}Вагос", "Выбрать", "Назад");
	                return true;
	            }
	            else if(listitem == 4)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, -718.8021,968.5861,12.1328, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	        }
	        else
	        {
				OnPlayerCommandText(playerid, "/gps");
				return true;
	        }
	    }
	    case 10004:
	    {
	        if(response)
	        {
	        	if(listitem == 0)
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, -2433.3945,495.8735,29.9267, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            if(listitem == 1)
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, 1536.5212,-1621.9694,13.3828, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            if(listitem == 2)
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, -1568.2939,662.9872,7.1875, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            if(listitem == 3)
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, 2235.0518,2452.6550,10.7672, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            if(listitem == 4)
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, -1532.7219,488.7329,7.1797, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            if(listitem == 5)
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, 83.1176,1907.0988,17.6849, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            if(listitem == 6)
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, 1188.0280,-1324.6647,13.5593, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            if(listitem == 7)
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, -2659.3799,634.6324,14.4531, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            if(listitem == 8)
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, 1608.0236,1830.3239,10.8203, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
			}
			else{OnPlayerCommandText(playerid,"/gps");}
		}
	    case 10005:
	    {
	        if(response)
	        {
	        	if(listitem == 0)
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, 1630.0510,-1718.8566,13.5138, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            if(listitem == 1)
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, -2035.5096,472.3824,35.1723, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            if(listitem == 2)
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, 2648.6401,1178.9288,10.8203, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
			}
			else{OnPlayerCommandText(playerid,"/gps");}
		}
	    case 10006:
	    {
	        if(response)
	        {
	        	if(listitem == 0)
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, 945.7642,1733.3834,8.8516, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            if(listitem == 1)
	            {
	            	SetPlayerRaceCheckpoint(playerid, 1, 1445.8689,740.1821,10.8203, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            if(listitem == 2)
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, 1462.9832,2774.6423,10.6719, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
			}
			else{OnPlayerCommandText(playerid,"/gps");}
		}
	    case 10010:
	    {
	        if(response)
	        {
	        	if(listitem == 0)
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, 1675.3098,-2110.1521,13.5469, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            if(listitem == 1)
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, 2175.6584,-1799.7000,13.3654, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            if(listitem == 2)
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, 2649.8765,-2003.8992,13.3828, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            if(listitem == 3)
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, 2483.0938,-1676.6815,13.3378, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            if(listitem == 4)
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, 2790.5181,-1612.0372,10.9219, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
			}
			else{OnPlayerCommandText(playerid,"/gps");}
		}
		case 10002:
	    {
	        if(response)
	        {
	        	if(listitem == 0)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 465.2602,-2729.9124,4.0096, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 1)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 396.2411,-2084.9866,7.8359, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 2)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 393.5863,-1759.2871,8.1293, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 3)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 2190.0391,-2265.5066,13.5190, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 4)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, -10.7650,-350.3199,5.4297, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 5)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 1069.1820,-1768.3042,13.3619, 0.0, 0.0, 0.0, 3); // 2137.8918,-2280.1104,20.6719
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 6)
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, 1641.0438,-1092.4894,23.9063, 0.0, 0.0, 0.0, 3); // 2137.8918,-2280.1104,20.6719
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 7) // aspidaos;d
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, -2449.0227,731.6228,35.0156, 0.0, 0.0, 0.0, 3); // 2137.8918,-2280.1104,20.6719
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 8)
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, 2301.8740,2794.6606,10.8203, 0.0, 0.0, 0.0, 3); // 2137.8918,-2280.1104,20.6719
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 9)
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, -1018.3677,-655.1767,32.0078, 0.0, 0.0, 0.0, 3); // 2137.8918,-2280.1104,20.6719
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	        }
	        else
	        {
				OnPlayerCommandText(playerid, "/gps");
				return true;
	        }
	    }
	    case 10003:
	    {
	        if(response)
	        {
	            if(listitem == 0)
				{
					SetPlayerRaceCheckpoint(playerid, 1, 1481.9427,-1740.0208,13.5469, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 1)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 1422.9336,-1704.8024,13.5469, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 2)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 1423.0876,-1624.0138,13.5469, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 3)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 1081.3363,-1705.5038,13.5469, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 4)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 1363.9668,-1277.8361,13.5469, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 5)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 1754.3230,-1770.9325,13.5611, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 6)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 2517.4390,-1528.4440,24.0067, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 7)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 1383.8004,-1754.2876,13.5469, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 8)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 456.9115,-1504.8364,31.0162, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	        }
	        else
	        {
	            OnPlayerCommandText(playerid, "/gps");
				return true;
	        }
	    }
		case 10035:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 1431.9001,-966.8666,37.3989, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 1)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 1961.9681,-2183.1580,13.5469, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
				else if(listitem == 2)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 1204.7289,-1734.6912,13.5784, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	        }
	        else
	        {
				OnPlayerCommandText(playerid, "/gps");
	            return true;
	        }
		}
		case 10230: // ГАРАЖБЛЯТЬ
		{
		    if(response) // УЛИЦА
		    {
		        for(new i = 0; i < sizeof(HouseInfo); i++)
				{
				    if (PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
					{
						if(GetPlayerVirtualWorld(playerid) == i+50)
						{
					        SetPlayerInterior(playerid,0);
				            SetPlayerVirtualWorld(playerid,0);
				            ACP_SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
				            PlayerInfo[playerid][pInt] = 0;
				            PlayerInfo[playerid][pLocal] = 255;
						}
			    	}
				}
			}
			else // ГАРАЖ
			{
			    for(new i = 0; i < sizeof(HouseInfo); i++)
				{
				    if (PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
					{
					    if(GetPlayerVirtualWorld(playerid) == i+50)
						{
						    if(PlayerInfo[playerid][pPHousekey] != i)return SendClientMessage(playerid, COLOR_GREY,"У вас нет ключей от данного гаража.");
						    //SendClientMessage(playerid,0xFF0000FF,"Используйте {FFFFFF}/gexit{e23434} для выхода из гаража.");
							ACP_SetPlayerPos(playerid,2492.9834,1081.7345,-89.6970);
							SetPlayerFacingAngle(playerid,181.8447);
							SetPlayerInterior(playerid,0);
							SetPlayerVirtualWorld(playerid,PlayerInfo[playerid][pPHousekey]);
						}
					}
				}
			}
		}
		case 12222:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                OnPlayerCommandText(playerid, "/mytune");
					}
					case 1:
					{
					    if(PlayerInfo[playerid][pProcents] == 100)return SendClientMessage(playerid, COLOR_GREY, "Вашему транспорту не требуеться ремонт двигателя");
						{
						    new nadoproc = 100 - PlayerInfo[playerid][pProcents];
							new cenaproc = nadoproc * 100;
                            if(PlayerInfo[playerid][pCash] < cenaproc)return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег");
							PlayerInfo[playerid][pCash] -= cenaproc;
							PlayerInfo[playerid][pProcents] = 100;
							SendClientMessage(playerid, COLOR_GREEN, "Двигатель отремонтирован.");
						}
					}
					case 2:
					{
					    if(PlayerInfo[playerid][pCash] < 100)return SendClientMessage(playerid,COLOR_GREY,"У вас недостаточно денег");
						PlayerInfo[playerid][pCash] -= 100;
                        AnRepairVehicle(GetPlayerVehicleID(playerid));
                        SendClientMessage(playerid, COLOR_GREEN, "Машина отремонтирована.");
					}
				}
			}
			return true;
		}
		case 10228:
		{
		    if(response)
			{
				if(listitem == 0)
				{
					SetPlayerRaceCheckpoint(playerid, 1, 1963.8372,-2182.4536,13.5469, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
				}
				if(listitem == 1)
				{
                    SetPlayerRaceCheckpoint(playerid, 1, 1428.7936,-960.8754,36.3377, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
				}
			}
		}
		case 31996:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: { SetPlayerRaceCheckpoint(playerid, 1, 2223.2834,-1725.2505,13.5625, 0.0, 0.0, 0.0, 3); }
					case 1: { SetPlayerRaceCheckpoint(playerid, 1, 1877.4432,-1163.6970,23.8620, 0.0, 0.0, 0.0, 3); }
					case 2: { SetPlayerRaceCheckpoint(playerid, 1, 2759.1116,-2512.3435,13.6431, 0.0, 0.0, 0.0, 3); }
				}
				SendClientMessage(playerid,COLOR_WHITE, "Место помечено на карте красной меткой");
			}
			else return OnPlayerCommandText(playerid, "/gps");
		}
		case 32000:
		{
			if(response)
			{
				new car = GetPlayerVehicleID(playerid);
				if(car >= PetrolTanker[0] && car <= PetrolTanker[1])
				{
					if(PlayerInfo[playerid][pDLevel] >= 15)
					{
						if(PlayerInfo[playerid][pCash] <= 5000)
						{
							SendClientMessage(playerid, COLOR_WHITE, "Не достаточно денег");
							RemovePlayerFromVehicleAc(playerid);
							TogglePlayerControllable(playerid, 1);
							return true;
						}
						jobcar[car] = true;
						PlayerInfo[playerid][pCash] -= 5000;
						TogglePlayerControllable(playerid, 1);
						SendClientMessage(playerid, COLOR_WHITE, "Вы начали работу! Покупайте и отвозите грузы!");
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "Этот грузовик 15 уровня Дальнобойщика!");
						RemovePlayerFromVehicleAc(playerid);
						TogglePlayerControllable(playerid, 1);
					}
				}
				else if(car >= Linerunner[0] && car <= Linerunner[1])
				{
					if(PlayerInfo[playerid][pDLevel] >= 0)
					{
						if(PlayerInfo[playerid][pCash] < 5000)
						{
							SendClientMessage(playerid, COLOR_WHITE, "Не достаточно денег");
							RemovePlayerFromVehicleAc(playerid);
							TogglePlayerControllable(playerid, 1);
							return true;
						}
						jobcar[car] = true;
						PlayerInfo[playerid][pCash] -= 5000;
						TogglePlayerControllable(playerid, 1);
						SendClientMessage(playerid, COLOR_WHITE, "Вы начали работу! Покупайте и отвозите грузы!");
						return true;
					}
				}
				else if(car >= Roadtrain[0] && car <= Roadtrain[1])
				{
					if(PlayerInfo[playerid][pDLevel] > 25)
					{
						if(PlayerInfo[playerid][pCash] < 5000)
						{
							SendClientMessage(playerid, COLOR_WHITE, "Не достаточно денег");
							RemovePlayerFromVehicleAc(playerid);
							TogglePlayerControllable(playerid, 1);
							return true;
						}
 						jobcar[car] = true;
						PlayerInfo[playerid][pCash] -= 5000;
						TogglePlayerControllable(playerid, 1);
						SendClientMessage(playerid, COLOR_WHITE, "Вы начали работу! Покупайте и отвозите грузы!");
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "Этот грузовик 25 уровня Дальнобойщика!");
						RemovePlayerFromVehicleAc(playerid);
						TogglePlayerControllable(playerid, 1);
					}
				}
				return true;
			}
			else
			{
				RemovePlayerFromVehicleAc(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
		case 1360:
		{
		    if(response)
		    {
		        new produkti = PlayerInfo[playerid][pPBiskey];
				if(!strlen(inputtext))return ShowPlayerDialog(playerid,1360,DIALOG_STYLE_INPUT,"Заказ продуктов","Цена продуктов зависит от количества!\nВведите количество продуктов:","Ок","");
				new zakaz = strval(inputtext);
				if(zakaz < 1 || zakaz > 20000)
				{
					SendClientMessage(playerid, COLOR_GREY, "Минимальное количество 1 , максимальное 20000!");
					ShowPlayerDialog(playerid,1360,DIALOG_STYLE_INPUT,"Заказ продуктов","Цена продуктов зависит от количества!\nВведите количество продуктов:","Ок","");
				}
				new zakazprod = strval(inputtext) * 3;
				if(PlayerInfo[playerid][pCash] < zakazprod) return	SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег!");
				if(produkti >=100)
				{
				    if(SBizzInfo[produkti][sbProducts] >= 20000) return SendClientMessage(playerid, COLOR_GREY, "У вашего бизнеса больше 20000 продуктов");
					PlayerInfo[playerid][pCash] -= zakazprod;
					SBizzInfo[produkti-100][sbProducts] += zakaz;
					format(string, sizeof(string), "Вы заказали %d продуктов на сумму: %d",zakaz, zakazprod);
					SendClientMessage(playerid, 0x6495EDFF, string);
					OnPropUpdate();
				}
				if(produkti < 100)
				{
				    if(BizzInfo[produkti][bProducts] >= 20000) return SendClientMessage(playerid, COLOR_GREY, "У вашего бизнеса больше 20000 продуктов");
					PlayerInfo[playerid][pCash] -= zakazprod;
					BizzInfo[produkti][bProducts] += zakaz;
					format(string, sizeof(string), "Вы заказали %d продуктов на сумму: %d",zakaz, zakazprod);
					SendClientMessage(playerid, 0x6495EDFF, string);
					OnPropUpdate();
				}
		    }
		}
		case 2929:
		{
			if(response)
			{
				new bouse = PlayerInfo[playerid][pPBiskey];
				if(!strlen(inputtext))return ShowPlayerDialog(playerid,2929,DIALOG_STYLE_INPUT, "Перевод денег на счёт бизнеса",string, "Готово", "Отмена");
				new moneys;
				moneys = strval(inputtext);
				if(moneys < 1000 || moneys > 1000000)
				{
					SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма 1000 вирт, максимальная 1000000 вирт");
					format(string,sizeof(string), "Введите сумму, которую вы хотите положить на счёт бизнеса");
					ShowPlayerDialog(playerid,2929,DIALOG_STYLE_INPUT, "Перевод денег на счёт бизнеса",string, "Готово", "Отмена");
					return true;
				}
				if(PlayerInfo[playerid][pCash] < moneys) return	SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
				if(bouse >=100)
				{
					PlayerInfo[playerid][pCash] -= moneys;
					SBizzInfo[bouse-100][sbTill] += moneys;
					format(string, sizeof(string), "Вы положили на счёт Вашего бизнеса %d вирт", moneys);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SetPlayerChatBubble(playerid, "кладёт на счёт бизнеса",COLOR_PURPLE,30.0,10000);
				}
				if(bouse < 100)
				{
					PlayerInfo[playerid][pCash] -= moneys;
					BizzInfo[bouse][bTill] += moneys;
					format(string, sizeof(string), "Вы положили на счёт Вашего бизнеса %d вирт", moneys);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SetPlayerChatBubble(playerid, "кладёт на счёт бизнеса",COLOR_PURPLE,30.0,10000);
				}
				return true;
			}
			else
			{
				return true;
			}
		}
		case 8454:
	    {
	        if(response)
	        {
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(PlayerInfo[playerid][pCash] < addd[0]) return SendClientMessage(playerid, COLOR_WHITE,  "У вас нет столько денег");
				PlayerInfo[playerid][pCash] -= addd[0];
				FracBank[0][fLsnews] += addd[0];
				TOTALADVERT[0] ++;
				AdvertInfo[TOTALADVERT[0]][0][adPhone] = PlayerInfo[playerid][pPnumber];
				strmid(AdvertInfo[TOTALADVERT[0]][0][adText],ReportQ[playerid],0,128,128);
				strmid(AdvertInfo[TOTALADVERT[0]][0][adName],sendername,0,MAX_PLAYER_NAME,MAX_PLAYER_NAME);
				format(string,sizeof(string), "~r~-$%d", addd[0]);
				GameTextForPlayer(playerid, string, 5000, 1);
				SendClientMessage(playerid, COLOR_WHITE, "Ваше обьявление будет подано после проверки");
				PlayerInfo[playerid][pAdvertTime] = 15;
			}
			else
			{
	    		return true;
	       	}
		}
		case 8455:
	    {
	        if(response)
	        {
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(PlayerInfo[playerid][pCash] < addd[1]) return SendClientMessage(playerid, COLOR_WHITE,  "У вас нет столько денег");
				PlayerInfo[playerid][pCash] -= addd[1];
				FracBank[0][fSfnews] += addd[1];
				TOTALADVERT[1] ++;
				AdvertInfo[TOTALADVERT[1]][1][adPhone] = PlayerInfo[playerid][pPnumber];
				strmid(AdvertInfo[TOTALADVERT[1]][1][adText],ReportQ[playerid],0,128,128);
				strmid(AdvertInfo[TOTALADVERT[1]][1][adName],sendername,0,MAX_PLAYER_NAME,MAX_PLAYER_NAME);
				format(string,sizeof(string), "~r~-$%d", addd[1]);
				GameTextForPlayer(playerid, string, 5000, 1);
				SendClientMessage(playerid, COLOR_WHITE, "Ваше обьявление будет подано после проверки");
				PlayerInfo[playerid][pAdvertTime] = 15;
			}
			else
			{
	    		return true;
	       	}
		}
		case 8456:
	    {
	        if(response)
	        {
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(PlayerInfo[playerid][pCash] < addd[2]) return SendClientMessage(playerid, COLOR_WHITE,  "У вас нет столько денег");
				PlayerInfo[playerid][pCash] -= addd[2];
				FracBank[0][fLvnews] += addd[2];
				TOTALADVERT[2] ++;
				AdvertInfo[TOTALADVERT[2]][2][adPhone] = PlayerInfo[playerid][pPnumber];
				strmid(AdvertInfo[TOTALADVERT[2]][2][adText],ReportQ[playerid],0,128,128);
				strmid(AdvertInfo[TOTALADVERT[2]][2][adName],sendername,0,MAX_PLAYER_NAME,MAX_PLAYER_NAME);
				format(string,sizeof(string), "~r~-$%d", addd[2]);
				GameTextForPlayer(playerid, string, 5000, 1);
				SendClientMessage(playerid, COLOR_WHITE, "Ваше обьявление будет подано после проверки");
				PlayerInfo[playerid][pAdvertTime] = 15;
			}
			else
			{
	    		return true;
	       	}
		}
	    case 5032:
	    {
	        new sendername[MAX_PLAYER_NAME];
	        new house = PlayerInfo[playerid][pPHousekey];
	        if(response)
	        {
	        	for(new h = 0; h < sizeof(HouseInfo); h++)
				{
	        	    HouseInfo[house][hHel] = 0;
					HouseInfo[house][hLock] = 1;
					HouseInfo[house][hOwned] = 0;
					HouseInfo[house][hVec] = 0;
					HouseInfo[h][hVcol1] = 0;
					HouseInfo[h][hVcol2] = 0;
					DestroyVehicle(caridhouse[playerid]);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
					PlayerInfo[playerid][pCash] += HouseInfo[house][hValue];
					format(string, sizeof(string), "Дом продан за %d вирт", HouseInfo[house][hValue]);
	 				SendClientMessage(playerid, COLOR_WHITE, string);
	 				format(string, sizeof(string), "Наличные: %d", PlayerInfo[playerid][pCash]);
	 				SendClientMessage(playerid, COLOR_WHITE, string);
					PlayerInfo[playerid][pPHousekey] = 255;
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					ACP_SetPlayerPos(playerid,HouseInfo[house][hEntrancex],HouseInfo[house][hEntrancey],HouseInfo[house][hEntrancez]);
					PlayerInfo[playerid][pInt] = 0;
					OnPropUpdate();
					BuyHouse();
	 				return true;
				}
			}
			else
			{
				return true;
			}
		}
		case 9989:
	    {
	        if(response)
	        {
	 			new loginmsg[1000];
	    		new loginname[64];
	    		GetPlayerName(playerid,loginname,sizeof(loginname)); // babasa
			    format(loginmsg,sizeof(loginmsg), "{ffffff}Добро пожаловать, {0033FF}%s\n\n{ffffff}Этот аккаунт {FF3366}не зарегистрирован{ffffff} на нашем сервере.\n{ffffff}Для регистрации введите пароль.\n{ffffff}Он будет использоваться для авторизации на нашем сервере.\n\n\t{CC0000}Примечания:\n\t{CC0000}- Длина пароль должен состоять из букв и цифр\n\t{CC0000}- Пароль чувствиленег к регистру{ffffff}",loginname);
		    	ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT, "{CC9900}(1/4) Пароль",loginmsg, "Принять", "Выход");
				return true;
			}
	        else
	        {
				SendClientMessage(playerid, COLOR_LIGHTRED, "Для выхода из игры используйте /q(uit)");
	  			FixKickedPlayer[playerid] = 1;
	        }
	 	}
		case 405:
	    {
	        if(response)
	        {
				if(FormaFrac[playerid] == 1) return SendClientMessage(playerid,COLOR_GREY,"Вы состоите во фракции! Переоденьтесь в гражданскую форму!");
	        	if(Works[playerid] == true) return SendClientMessage(playerid, COLOR_GREY, "Вы уже устроились");
			    Works[playerid] = true;
				JobAmmount[playerid] = 0; JobCP[playerid] = 1; PicCP[playerid] = 0;
				SetPlayerCheckpoint(playerid,2230.3528,-2286.1353,14.3751,1.5);
	   			new skin = random(2);
	   			if(skin == 1) SetPlayerSkin(playerid,260);
				else SetPlayerSkin(playerid,16);
				SendClientMessage(playerid,COLOR_GREEN, "Отправляйтесь носить мешки!");
			}
	        else
	        {
				if(Works[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, "Вы не устроены на работу");
			    if(JobAmmount[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "Вы должны получить зарплату в офисе");
			    SendClientMessage(playerid,COLOR_GREEN, "Рабочий день завершён!");
			    PicCP[playerid] = 1; Bags[playerid] = 999; WithBag[playerid] = 0;
				Works[playerid] = false; JobAmmount[playerid] = 0; JobCP[playerid] = 0; Employer[playerid] = 999;
				SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
				DisablePlayerCheckpoint(playerid);
		    	return true;
	        }
		}
		case 406:
		{
			if(response)
			{
			    if(PlayerInfo[playerid][pMember] >= 1 || PlayerInfo[playerid][pLeader] >= 1) return SendClientMessage(playerid, COLOR_GREY, "Вы состоите во фракции!");
				if(PlayerInfo[playerid][pJob] != 7) return SendClientMessage(playerid, COLOR_GREY,"Ты не прораб");
				if(Prorab[playerid] == true) return SendClientMessage(playerid, COLOR_GREY,"Ты уже работаешь");
				SetPlayerSkin(playerid, 27);
				Prorab[playerid] = true;
				SendClientMessage(playerid, COLOR_GREEN, "Отправляйтесь заключать контракты с грузчиками");
				return true;
			}
			else
			{
				if(Prorab[playerid] == false) return SendClientMessage(playerid, COLOR_GREY,"Ты не в рабочей форме");
				SendClientMessage(playerid,COLOR_GREEN, "Рабочий день завершён!");
				Prorab[playerid] = false; JobAmmount[playerid] = 0; Employer[playerid] = 999;
				SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
				return true;
			}
		}
	    case 9298:
	    {
	        if(response)
	        {
				if(PlayerInfo[playerid][pCash] <= 99999)
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
					return true;
				}
	        	switch(PlayerInfo[playerid][pMember])
	        	{
					case 5:
					{
						lcnmats = 50000;
					    SendClientMessage(playerid,COLOR_YELLOW, "Вы купили 50000 материалов за 100000 вирт");
					    PlayerInfo[playerid][pCash] -= 100000;
					}
					case 6:
					{
						yakuzamats = 50000;
					    SendClientMessage(playerid,COLOR_YELLOW, "Вы купили 50000 материалов за 100000 вирт");
					    PlayerInfo[playerid][pCash] -= 100000;
					}
					case 14:
					{
						rmmats = 50000;
					    SendClientMessage(playerid,COLOR_YELLOW, "Вы купили 50000 материалов за 100000 вирт");
					    PlayerInfo[playerid][pCash] -= 100000;
					}
				}
			}
			else
			{
				return true;
			}
			return true;
		}
		case 7724:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
					SetPlayerFacingAngle(playerid, 181.6046);
	                SetPlayerCameraPos(playerid,338.6618,1573.9758,29.3534);
					SetPlayerCameraLookAt(playerid,338.6618,1573.9758,29.3534);
					TogglePlayerControllable(playerid, 0);
					return true;
	            }
	            else if(listitem == 1)
	            {
					SetPlayerFacingAngle(playerid, 170.0947);
	                SetPlayerCameraPos(playerid,-61.5420,1612.7935,24.2544);
					SetPlayerCameraLookAt(playerid,-61.5420,1612.7935,24.2544);
					TogglePlayerControllable(playerid, 0);
					return true;
	            }
	            else if(listitem == 2)
	            {
	                SetPlayerFacingAngle(playerid, 115.7203);
	                SetPlayerCameraPos(playerid,121.2786,1942.5219,29.0367);
					SetPlayerCameraLookAt(playerid,121.2786,1942.5219,29.0367);
					TogglePlayerControllable(playerid, 0);
					return true;
	            }
	            else if(listitem == 3)
	            {
	               	SetPlayerFacingAngle(playerid, 319.3263);
	                SetPlayerCameraPos(playerid,277.4582,2024.3215,26.3999);
					SetPlayerCameraLookAt(playerid,277.4582,2024.3215,26.3999);
					TogglePlayerControllable(playerid, 0);
					return true;
	            }
	            SendClientMessage(playerid, COLOR_LIGHTRED, "/cameraoff - отключить камеру.");
				SetPlayerVirtualWorld(playerid, 0);
	        }
	        else
	        {
	        	return true;
	        }
	    }
		case 3725:
		{
			if(response)
			{
			    switch(listitem)
			    {
					case 0:
					{
						for(new h = 0; h < sizeof(HouseInfo); h++)
						{
							if(HouseInfo[h][hOwned] == 1)
							{
								HouseInfo[h][hOwned] = 0;
								HouseInfo[h][hHel] = 0;
								HouseInfo[h][hLock] = 1;
								HouseInfo[h][hTakings] = 100;
								SendClientMessage(playerid, COLOR_GREEN, "Дом продан");
								strmid(HouseInfo[h][hOwner], "The State", 0, strlen("The State"), 255);
								BuyHouse();
							}
						}
						return true;
					}
					case 1:
					{
						for(new i = 0; i < sizeof(BizzInfo); i++)
						{
							if(BizzInfo[i][bOwned] == 1)
							{
								BizzInfo[i][bOwned] = 0;
								SendClientMessage(playerid, COLOR_GREEN, "Бизнес продан");
								strmid(BizzInfo[i][bOwner], "The State", 0, strlen("The State"), 255);
								BizzInfo[i][bTill] = 0;
								BizzInfo[i][b2Till] = 0;
								format(string, sizeof(string), "%s\nПродаётся\nЦена: %d", BizzInfo[i][bMessage],BizzInfo[i][bBuyPrice]);
								Update3DTextLabelText(BizzInfo[i][bLabel], 0xEAC700AA, string);
							}
						}
						for(new i = 0; i < sizeof(SBizzInfo); i++)
						{
							if(SBizzInfo[i][sbOwned] == 1)
							{
								SBizzInfo[i][sbOwned] = 0;
								SendClientMessage(playerid, COLOR_GREEN, "Бизнес продан");
								strmid(SBizzInfo[i][sbOwner], "The State", 0, strlen("The State"), 255);
								SBizzInfo[i][sbTill] = 0;
								SBizzInfo[i][s2bTill] = 0;
								format(string, sizeof(string), "%s\nПродаётся\nЦена: %d", SBizzInfo[i][sbMessage],SBizzInfo[i][sbBuyPrice]);
								Update3DTextLabelText(SBizzInfo[i][sbLabel], 0xEAC700AA, string);
							}
						}
					}
					case 2:
					{
						ShowPlayerDialog(playerid, 2725, DIALOG_STYLE_LIST, "Выбирете интерьер", " [1] Деревянный\n [2] Мрамор\n [3] Дворец\n [4] Обычный стиль\n [5] Обычное дерево\n [6] Обычный стиль 2\n [7] Красное деверо\n [8] Обычный стиль\n [9] Дешовый стиль", "Выбрать", "Закрыть");
						return true;
					}
					case 3:
					{
						ShowPlayerDialog(playerid, 15624, DIALOG_STYLE_LIST, "Выбирете интерьер", " [1] Интерьер C Класса\n [2] Интерьер A Класса\n [3] Интерьер S Класса\n [4] Интерьер D Класса\n [5] Интерьер D Класса\n [6] Интерьер N Класса\n [7] Интерьер S Класса\n [8] Интерьер D Класса\n [9] Интерьер D Класса\n [10] Интерьер D Класса\n [11] Интерьер A Класса\n [12] Интерьер N Класса", "Выбрать", "Закрыть");
						return true;
					}
					case 4:
					{
						for(new h = 0; h < sizeof(HouseInfo); h++)
						{
						    if(HouseInfo[h][hKlass] == 0)
						    {
						        HouseInfo[h][hValue] = 50000;
						        HouseInfo[h][hKlass] = 0;
								HouseInfo[h][hHel] = 0;
								HouseInfo[h][hLock] = 1;
								HouseInfo[h][hTakings] = 500;
							}
							else if(HouseInfo[h][hKlass] == 1)
							{
							    HouseInfo[h][hValue] = 100000;
							    HouseInfo[h][hKlass] = 1;
								HouseInfo[h][hHel] = 0;
								HouseInfo[h][hLock] = 1;
								HouseInfo[h][hTakings] = 500;
							}
							else if(HouseInfo[h][hKlass] == 2)
							{
							    HouseInfo[h][hValue] = 500000;
							    HouseInfo[h][hKlass] = 2;
								HouseInfo[h][hHel] = 0;
								HouseInfo[h][hLock] = 1;
								HouseInfo[h][hTakings] = 500;
							}
							else if(HouseInfo[h][hKlass] == 3)
							{
							    HouseInfo[h][hValue] = 1000000;
							    HouseInfo[h][hKlass] = 3;
								HouseInfo[h][hHel] = 0;
								HouseInfo[h][hLock] = 1;
								HouseInfo[h][hTakings] = 500;
							}
							else if(HouseInfo[h][hKlass] == 4)
							{
							    HouseInfo[h][hValue] = 2000000;
							    HouseInfo[h][hKlass] = 4;
								HouseInfo[h][hHel] = 0;
								HouseInfo[h][hLock] = 1;
								HouseInfo[h][hTakings] = 500;
							}
							else if(HouseInfo[h][hKlass] == 5)
							{
							    HouseInfo[h][hValue] = 3000000;
							    HouseInfo[h][hKlass] = 5;
								HouseInfo[h][hHel] = 0;
								HouseInfo[h][hLock] = 1;
								HouseInfo[h][hTakings] = 500;
							}
						}
					}
				}
			}
			return true;
		}
		case 2725:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:	ShowPlayerDialog(playerid, 2726, DIALOG_STYLE_INPUT, "Деревянный стиль", "Введите номер дома", "Готово", "Отмена");
					case 1:	ShowPlayerDialog(playerid, 2727, DIALOG_STYLE_INPUT, "Мрамор", "Введите номер дома", "Готово", "Отмена");
					case 2: ShowPlayerDialog(playerid, 2728, DIALOG_STYLE_INPUT, "Дворец", "Введите номер дома", "Готово", "Отмена");
					case 3:	ShowPlayerDialog(playerid, 2729, DIALOG_STYLE_INPUT, "Обычный стиль", "Введите номер дома", "Готово", "Отмена");
					case 4:	ShowPlayerDialog(playerid, 2730, DIALOG_STYLE_INPUT, "Обычное дерево", "Введите номер дома", "Готово", "Отмена");
					case 5: ShowPlayerDialog(playerid, 2731, DIALOG_STYLE_INPUT, "Обычный стиль [2]", "Введите номер дома", "Готово", "Отмена");
					case 6:	ShowPlayerDialog(playerid, 2732, DIALOG_STYLE_INPUT, "Красное дерево", "Введите номер дома", "Готово", "Отмена");
					case 7: ShowPlayerDialog(playerid, 2733, DIALOG_STYLE_INPUT, "Обычный стиль [3]", "Введите номер дома", "Готово", "Отмена");
					case 8: ShowPlayerDialog(playerid, 2734, DIALOG_STYLE_INPUT, "Дешевый стиль", "Введите номер дома", "Готово", "Отмена");
				}
			}
			else
			{
				return true;
			}
		}
		case 15624:
		{
			if(response)
			{
		    	switch(listitem)
				{
					case 0: ShowPlayerDialog(playerid, 2735, DIALOG_STYLE_INPUT, "Интерьер C Класса", "Введите номер дома", "Готово", "Отмена");
					case 1: ShowPlayerDialog(playerid, 2736, DIALOG_STYLE_INPUT, "Интерьер A Класса", "Введите номер дома", "Готово", "Отмена");
					case 2: ShowPlayerDialog(playerid, 2737, DIALOG_STYLE_INPUT, "Интерьер S Класса", "Введите номер дома", "Готово", "Отмена");
					case 3: ShowPlayerDialog(playerid, 2738, DIALOG_STYLE_INPUT, "Интерьер D Класса", "Введите номер дома", "Готово", "Отмена");
					case 4: ShowPlayerDialog(playerid, 2739, DIALOG_STYLE_INPUT, "Интерьер D Класса", "Введите номер дома", "Готово", "Отмена");
					case 5: ShowPlayerDialog(playerid, 2740, DIALOG_STYLE_INPUT, "Интерьер N Класса", "Введите номер дома", "Готово", "Отмена");
					case 6: ShowPlayerDialog(playerid, 2741, DIALOG_STYLE_INPUT, "Интерьер S Класса", "Введите номер дома", "Готово", "Отмена");
					case 7: ShowPlayerDialog(playerid, 2742, DIALOG_STYLE_INPUT, "Интерьер D Класса", "Введите номер дома", "Готово", "Отмена");
					case 8: ShowPlayerDialog(playerid, 2743, DIALOG_STYLE_INPUT, "Интерьер D Класса", "Введите номер дома", "Готово", "Отмена");
					case 9: ShowPlayerDialog(playerid, 2744, DIALOG_STYLE_INPUT, "Интерьер D Класса", "Введите номер дома", "Готово", "Отмена");
					case 10: ShowPlayerDialog(playerid, 2745, DIALOG_STYLE_INPUT, "Интерьер A Класса", "Введите номер дома", "Готово", "Отмена");
					case 11: ShowPlayerDialog(playerid, 2746, DIALOG_STYLE_INPUT, "Интерьер N Класса", "Введите номер дома", "Готово", "Отмена");
				}
			}
			else
			{
				return true;
			}
		}
		case 2726:
		{
			if(response)
		    {
			    new house = strval(inputtext);
				HouseInfo[house][hInt] = 4;
				HouseInfo[house][hExitx] = -261.9759;
				HouseInfo[house][hExity] = 1456.8844;
				HouseInfo[house][hExitz] = 1084.3672;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
			return true;
		}
		case 2727:
		{
			if(response)
		    {
			    new house = strval(inputtext);
				HouseInfo[house][hInt] = 6;
				HouseInfo[house][hExitx] = 234.1571;
				HouseInfo[house][hExity] = 1064.9569;
				HouseInfo[house][hExitz] = 1084.2104;
			    SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
			}
			return true;
		}
		case 2728:
		{
			if(response)
		    {
				new house = strval(inputtext);
				HouseInfo[house][hInt] = 5;
				HouseInfo[house][hExitx] = 140.9131;
				HouseInfo[house][hExity] = 1367.9713;
				HouseInfo[house][hExitz] = 1083.8621;
				SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
			return true;
		}
		case 2729:
		{
			if(response)
		    {
			    new house = strval(inputtext);
				HouseInfo[house][hInt] = 5;
				HouseInfo[house][hExitx] = 22.7783;
				HouseInfo[house][hExity] = 1404.9600;
				HouseInfo[house][hExitz] = 1084.4297;
				SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
			return true;
		}
		case 2730:
		{
			if(response)
		    {
			    new house = strval(inputtext);
				HouseInfo[house][hInt] = 10;
				HouseInfo[house][hExitx] = 23.8334;
				HouseInfo[house][hExity] = 1340.4812;
				HouseInfo[house][hExitz] = 1084.3750;
				SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
			return true;
		}
		case 2731:
		{
			if(response)
		    {
			    new house = strval(inputtext);
				HouseInfo[house][hInt] = 4;
				HouseInfo[house][hExitx] = 261.0654;
				HouseInfo[house][hExity] = 1284.2991;
				HouseInfo[house][hExitz] = 1080.2578;
				SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
			return true;
		}
		case 2732:
		{
			if(response)
		    {
			    new house = strval(inputtext);
				HouseInfo[house][hInt] = 2;
				HouseInfo[house][hExitx] = 491.0190;
				HouseInfo[house][hExity] = 1399.0691;
				HouseInfo[house][hExitz] = 1080.2578;
				SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
	    	return true;
		}
		case 2733:
		{
			if(response)
		    {
			    new house = strval(inputtext);
				HouseInfo[house][hInt] = 2;
				HouseInfo[house][hExitx] = 225.9761;
				HouseInfo[house][hExity] = 1239.9126;
				HouseInfo[house][hExitz] = 1082.1406;
				SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
			return true;
		}
		case 2734:
		{
			if(response)
		    {
			    new house = strval(inputtext);
				HouseInfo[house][hInt] = 10;
				HouseInfo[house][hExitx] = 2261.3103;
				HouseInfo[house][hExity] = -1136.4467;
				HouseInfo[house][hExitz] = 1050.6328;
				SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
	    	return true;
		}
		case 2735:
	    {
	        if(response)
	        {
	            new house = strval(inputtext);
	            HouseInfo[house][hInt] = 5;
	            HouseInfo[house][hExitx] = 22.7405;
	            HouseInfo[house][hExity] = 1404.3799;
	            HouseInfo[house][hExitz] = 1084.4297;
	            SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
	    	return true;
		}
		case 2736:
	    {
	        if(response)
	        {
	            new house = strval(inputtext);
	            HouseInfo[house][hInt] = 5;
	            HouseInfo[house][hExitx] = 140.2206;
	            HouseInfo[house][hExity] = 1367.2734;
	            HouseInfo[house][hExitz] = 1083.8612;
	            SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
	    	return true;
		}
		case 2737:
	    {
	        if(response)
	        {
	            new house = strval(inputtext);
	            HouseInfo[house][hInt] = 6;
	            HouseInfo[house][hExitx] = 234.1562;
	            HouseInfo[house][hExity] = 1064.9047;
	            HouseInfo[house][hExitz] = 1084.2106;
	            SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
		    return true;
		}
		case 2738:
	    {
	        if(response)
	        {
	            new house = strval(inputtext);
	            HouseInfo[house][hInt] = 6;
	            HouseInfo[house][hExitx] = -68.8618;
	            HouseInfo[house][hExity] = 1352.2183;
	            HouseInfo[house][hExitz] = 1080.2109;
	            SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
		    return true;
		}
		case 2739:
	    {
	        if(response)
	        {
	            new house = strval(inputtext);
	            HouseInfo[house][hInt] = 8;
	            HouseInfo[house][hExitx] = -42.6081;
	            HouseInfo[house][hExity] = 1406.5001;
	            HouseInfo[house][hExitz] = 1084.4297;
	            SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
		    return true;
		}
		case 2740:
	    {
	        if(response)
	        {
	            new house = strval(inputtext);
	            HouseInfo[house][hInt] = 6;
	            HouseInfo[house][hExitx] = 344.7035;
	            HouseInfo[house][hExity] = 304.9266;
	            HouseInfo[house][hExitz] = 999.1484;
	            SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
		    return true;
		}
		case 2741:
	    {
	        if(response)
	        {
	            new house = strval(inputtext);
	            HouseInfo[house][hInt] = 5;
	            HouseInfo[house][hExitx] = 1298.9363;
	            HouseInfo[house][hExity] = -795.4872;
	            HouseInfo[house][hExitz] = 1084.0078;
	            SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
	    	return true;
		}
		case 2742:
	    {
	        if(response)
	        {
	            new house = strval(inputtext);
	            HouseInfo[house][hInt] = 2;
	            HouseInfo[house][hExitx] = 2467.7708;
	            HouseInfo[house][hExity] = -1698.2811;
	            HouseInfo[house][hExitz] = 1013.5078;
	            SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
		    return true;
		}
		case 2743:
	    {
	        if(response)
	        {
	            new house = strval(inputtext);
	            HouseInfo[house][hInt] = 8;
	            HouseInfo[house][hExitx] = 2807.6252;
	            HouseInfo[house][hExity] = -1173.2600;
	            HouseInfo[house][hExitz] = 1025.5703;
	            SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
	    	return true;
		}
		case 2744:
	    {
	        if(response)
	        {
	            new house = strval(inputtext);
	            HouseInfo[house][hInt] = 5;
	            HouseInfo[house][hExitx] = 318.6064;
	            HouseInfo[house][hExity] = 1115.7708;
	            HouseInfo[house][hExitz] = 1083.8828;
	            SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
	    	return true;
		}
		case 2745:
	    {
	        if(response)
	        {
	            new house = strval(inputtext);
	            HouseInfo[house][hInt] = 12;
	            HouseInfo[house][hExitx] = 2324.3367;
	            HouseInfo[house][hExity] = -1148.6296;
	            HouseInfo[house][hExitz] = 1050.7101;
	            SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
	    	return true;
		}
		case 2746:
	    {
	        if(response)
	        {
	            new house = strval(inputtext);
	            HouseInfo[house][hInt] = 10;
	            HouseInfo[house][hExitx] = 421.7613;
	            HouseInfo[house][hExity] = 2536.4836;
	            HouseInfo[house][hExitz] = 10.0000;
	            SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
	    	return true;
		}
		case 2:
		{
			new name[MAX_PLAYER_NAME];
	  		GetPlayerName(playerid, name, sizeof(name));
			new bac[500];
	    	GetPlayerName(playerid, playername, sizeof(playername));
			if(response)
			{
				if(!strlen(inputtext))
				{
				    new loginmsg[1000];
					format(loginmsg,sizeof(loginmsg), "{ffffff}Добро пожаловать, {0033FF}%s\n\n{ffffff}Этот аккаунт {FF3366}не зарегистрирован{ffffff} на нашем сервере.\n{ffffff}Для регистрации введите пароль.\n{ffffff}Он будет использоваться для авторизации на нашем сервере.\n\n\t{CC0000}Примечания:\n\t{CC0000}- Длина пароль должен состоять из букв и цифр\n\t{CC0000}- Пароль чувствиленег к регистру{ffffff}",name);
		    		ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT, "{FFFF00}Регистрация",loginmsg, "Готово", "Отмена");
					return true;
				}
				format(bac, sizeof(bac), "%s.ini", playername);
				dini_Create(bac);
				OnPlayerRegister(playerid,inputtext);
				if(!strlen(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 15)
				{
					return ShowPlayerDialog(playerid,2,DIALOG_STYLE_MSGBOX, "Ошибка!", "{FF6347}Длина пароля должна быть от 6 до 15 символов", "Повтор", "");
				}
				for(new i = strlen(inputtext); i != 0; --i)
				switch(inputtext[i])
				{
					case 'А'..'Я', 'а'..'я', ' ':
					return ShowPlayerDialog(playerid,2,DIALOG_STYLE_MSGBOX, "Ошибка!", "{ffffff}Добро пожаловать на {FFCC33}Arizona Role Play\n\n{ffffff}Введите свой пароль.", "Повтор", "");
				}
				ShowPlayerDialog(playerid,2625,DIALOG_STYLE_INPUT, "{e23434}Реферал", "{009933}Вы успешно придумали пароль для вашего аккаунта.\n{FFFFFF}Теперь введите ник игрока, который пригласил вас на сервер:", "Далее", "Пропуск");
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Для выхода из игры используйте /q(uit)");
	  			FixKickedPlayer[playerid] = 1;
			}
		}
		case 9898:
	    {
	        if(response)
	        {
		       	for(new i = 0; i < sizeof(BizzInfo); i++)
				{
					if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
					{
				        if(PlayerInfo[playerid][pCash] < BizzInfo[i][bEntranceCost])
						{
					        SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
							return true;
						}
						PlayerInfo[playerid][pCash] -=BizzInfo[i][bEntranceCost];
						BizzInfo[i][b2Till] += BizzInfo[i][bEntranceCost];
						SetPlayerInterior(playerid,BizzInfo[i][bInterior]);
						ACP_SetPlayerPos(playerid,BizzInfo[i][bExitX],BizzInfo[i][bExitY],BizzInfo[i][bExitZ]);
						PlayerInfo[playerid][pInt] = BizzInfo[i][bInterior];
						SetPlayerVirtualWorld(playerid,0);
						OnPlayerUpdateAc(playerid);
						enterbiz[playerid] = 1;
						return true;
			  		}
				}
			}
			else
			{
			    return true;
			}
		}
		case 10075:
	    {
	        if(response)
	        {
				for(new i = 0; i < sizeof(HouseInfo); i++)
				{
					if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
					{
						if(PlayerInfo[playerid][pPHousekey] == i || HouseInfo[i][hLock] == 0)
						{
							SetPlayerInterior(playerid,HouseInfo[i][hInt]);
							SetPlayerVirtualWorld(playerid,i+50);
							ACP_SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
							PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
							PlayerInfo[playerid][pLocal] = i;
							return true;
						}
						else
						{
	     					GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
						}
					}
				}
	        }
	        else
	        {
				return true;
	        }
		}
		case 9828:
	    {
	        if(response)
	        {
		  		new sendername[MAX_PLAYER_NAME];
				new Float:oldposx, Float:oldposy, Float:oldposz;
	 	    	GetPlayerName(playerid, playername, sizeof(playername));
				GetPlayerPos(playerid, oldposx, oldposy, oldposz);
				if(PlayerInfo[playerid][pPBiskey] != 255) return SendClientMessage(playerid, COLOR_WHITE, "У вас уже есть бизнес");
				for(new b = 0; b < sizeof(BizzInfo); b++)
				{
					if(PlayerToPoint(10.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bOwned] == 0)
					{
						if(PlayerInfo[playerid][pBank] > BizzInfo[b][bBuyPrice])
						{
							PlayerInfo[playerid][pPBiskey] = b;
							BizzInfo[b][bOwned] = 1;
							BizzInfo[b][bLocked] = 0;
							BizzInfo[b][bPrice] = 100;
							BizzInfo[b][bTill] = 0;
							BizzInfo[b][b2Till] = 0;
							PlayerInfo[playerid][pJob] = 0;
							BizzInfo[b][bProducts] = 0;
							BizzInfo[b][bEntranceCost] = 100;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							strmid(BizzInfo[b][bOwner], sendername, 0, strlen(sendername), 255);
							PlayerInfo[playerid][pBank] -=BizzInfo[b][bBuyPrice];
							SetPlayerInterior(playerid,BizzInfo[b][bInterior]);
							PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
							ACP_SetPlayerPos(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
							SetPlayerVirtualWorld(playerid, 0);
							PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
							PlayerInfo[playerid][pLocal] = b+99;
							SendClientMessage(playerid, COLOR_GREEN, "Бизнес приобретён");
							SendClientMessage(playerid, COLOR_WHITE, "Помощь по бизнесу: /mm - Команды сервера - Бизнес");
							format(string,sizeof(string), "%s\nВладелец:\n %s", BizzInfo[b][bMessage], BizzInfo[b][bOwner]);
							Update3DTextLabelText(BizzInfo[b][bLabel], 0x00D900AA, string);
							OnPropUpdate();
							return true;
						}
						else
						{
							SendClientMessage(playerid, COLOR_WHITE, "На Вашем счету в банке нет столько денег!");
							return true;
						}
					}
				}
	  		}
	        else
	        {
	        	return true;
	        }
		}
		case 10026:
		{
	        if(response)
	        {
				for(new i = 0; i < sizeof(HouseInfo); i++)
				{
					if (PlayerToPoint(1.5, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
					{
						OnPlayerCommandText(playerid,"/buyhouse");
					}
				}
	        }
	        else
	        {
				return true;
	        }
		}
	    case 4:
	    {
	        if(response)
	        {
	 			new rand = random(sizeof(gInviteSpawns));
				ACP_SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
				SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
				SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
				SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			    PlayerInfo[playerid][pSex] = 1;
			    PlayerInfo[playerid][pTut] = 0;
	 			PlayerInfo[playerid][pChar] = 230;
				PlayerInfo[playerid][pModel] = 255;
			 	PlayerInfo[playerid][pMember] = 0;
			 	PlayerInfo[playerid][pLeader] = 0;
			 	PlayerInfo[playerid][pRank] = 1;
	   			SetPlayerInterior(playerid,5);
				ShowMenuForPlayer(bomj[0],playerid);
				ChosenSkin[playerid] = 230;
				gOoc[playerid] = 0; gFam[playerid] = 0; gLogin[playerid] = 0;
				TogglePlayerControllable(playerid, 0);
				SendClientMessage(playerid, COLOR_REDD, "Используйте клавишу 'Быстрый бег' (пробел по умолчанию)");
				SendClientMessage(playerid, COLOR_REDD, "Используйте клавишу 'Вверх,вниз' (W,S по умолчанию)");
				SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
				SelectChar[playerid] = 255;
				SelectCharPlace[playerid] = 1;
				PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
				new skin =2 + random(100);
				SetPlayerVirtualWorld(playerid,skin);
				return true;
	        }
	        else
	        {
	  			new rand = random(sizeof(gInviteSpawns));
				ACP_SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
				SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
				SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
				SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			    PlayerInfo[playerid][pSex] = 2;
			    PlayerInfo[playerid][pTut] = 0;
	 			PlayerInfo[playerid][pChar] = 90;
				PlayerInfo[playerid][pModel] = 255;
			 	PlayerInfo[playerid][pMember] = 0;
			 	PlayerInfo[playerid][pLeader] = 0;
			 	PlayerInfo[playerid][pRank] = 1;
			 	ChosenSkin[playerid] = 90;
	   			SetPlayerInterior(playerid,5);
				ShowMenuForPlayer(bomj[1],playerid);
				gOoc[playerid] = 0; gFam[playerid] = 0; gLogin[playerid] = 0;
				TogglePlayerControllable(playerid, 0);
				SendClientMessage(playerid, COLOR_REDD, "Используйте клавишу 'Быстрый бег' (пробел по умолчанию)");
				SendClientMessage(playerid, COLOR_REDD, "Используйте клавишу 'Вверх,вниз' (W,S по умолчанию)");
				SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
				SelectChar[playerid] = 255;
				SelectCharPlace[playerid] = 1;
				PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
				new skin =2 + random(100);
				SetPlayerVirtualWorld(playerid,skin);
				return true;
	        }
		}
		case 1993:
		{
	        if(response)
	        {
				new donate;
				new sendername[MAX_PLAYER_NAME];
				new iniFile = ini_openFile("gamefiles/donate.ini");
				if(ini_getInteger(iniFile, inputtext, donate) == 0)
				{
				    GetPlayerName(playerid, sendername, sizeof(sendername));
				    PlayerInfo[playerid][pDonateMoney1] += donate;
				    ini_removeKey(iniFile, inputtext);
					SendClientMessage(playerid, COLOR_LIGHTRED, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
					format(string, sizeof(string), "[DONATE] Пополнение счёта на сумму: {e23434}%d {e23434}рублей", donate);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "[DONATE] Ваш донатный счёт: {d53e07}%d {33ccff}рублей", PlayerInfo[playerid][pDonateMoney1]);
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "[DONATE] Для покупки чего либо, используйте команду (( {d53e07}/donate{33ccff} ))");
					SendClientMessage(playerid, COLOR_WHITE, string);
					SendClientMessage(playerid, COLOR_LIGHTRED, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
					format(string, sizeof(string), " %s Zadonatil %d virt", sendername, donate);
					DonateLog(string);
				}
				else
				{
					ShowPlayerDialog(playerid,69,DIALOG_STYLE_MSGBOX, "Ошибка", "Вы ошиблись при вводе кодов", "Готово", "");
				}
				ini_closeFile(iniFile);
			}
			else
			{
				return true;
			}
		}
		case 10025:
	    {
	        if(response)
	        {
	      		switch(listitem)
				{
				    case 0:
				    {
						new cmdnew1[1200];
				        format(cmdnew1, 1000, "%s\n{00FF00}/suicid {FFFFFF}- Покончить жизнь самоубийством.",cmdnew1);
	                    format(cmdnew1, 1000, "%s\n{00FF00}/piss {FFFFFF}- Пописать.",cmdnew1);
	                    format(cmdnew1, 1000, "%s\n{00FF00}/hi {FFFFFF}- Пожать руку/поздароваться.",cmdnew1);
	                    format(cmdnew1, 1000, "%s\n{00FF00}/neon {FFFFFF}- Установка неона ( не сохраняеться ).",cmdnew1);
	                    format(cmdnew1, 1000, "%s\n{00FF00}/contract {FFFFFF}- Заказать человека.",cmdnew1);
                        ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Новые",cmdnew1, "Назад", "");
					}
		   			case 1:
		            {
	                    new obychnyi[1200];
				        format(obychnyi, 1000, "{00FF00}/time {FFFFFF}- Посмотреть время / дату.");
				        format(obychnyi, 1000, "%s\n{00FF00}/id [id / NickName] {FFFFFF}- Узнать id игрока.",obychnyi);
	                    format(obychnyi, 1000, "%s\n{00FF00}/gps {FFFFFF}- GPS навигатор.",obychnyi);
	                    format(obychnyi, 1000, "%s\n{00FF00}/divorce {FFFFFF}- Развестись, если вы женаты / замужем.",obychnyi);
	                    format(obychnyi, 1000, "%s\n{00FF00}/propose [id] {FFFFFF}- Предложить поженится.",obychnyi);
	                    format(obychnyi, 1000, "%s\n{00FF00}/drink {FFFFFF}- Выпить.",obychnyi);
	                    format(obychnyi, 1000, "%s\n{00FF00}/myskill {FFFFFF}- Посмотреть свои навыки владением оружия.",obychnyi);
	                    format(obychnyi, 1000, "%s\n{00FF00}/pdd {FFFFFF}- Посмотреть Правила Дорожного Движения.",obychnyi);
	                    format(obychnyi, 1000, "%s\n{00FF00}/eat {FFFFFF}- Меню заксочной.",obychnyi);
	                    format(obychnyi, 1000, "%s\n{00FF00}/licenses {FFFFFF}- Посмотреть свои лицензии.",obychnyi);
	                    format(obychnyi, 1000, "%s\n{00FF00}/showlicenses [id] {FFFFFF}- Показать лицензий игроку.",obychnyi);
	                    format(obychnyi, 1000, "%s\n{00FF00}/animlist {FFFFFF}- Анимаций персонажа.",obychnyi);
	                    format(obychnyi, 1000, "%s\n{00FF00}/eject {FFFFFF}- Выгнать игрока из машины.",obychnyi);
	                    format(obychnyi, 1000, "%s\n{00FF00}/quitjob {FFFFFF}- Уволится с работы.",obychnyi);
	                    format(obychnyi, 1000, "%s\n{00FF00}/buy {FFFFFF}- Меню покупки в магазине.",obychnyi);
	                    format(obychnyi, 1000, "%s\n{00FF00}/pay [id] [Сумма] {FFFFFF}- Передать деньги игроку.",obychnyi);
	                    format(obychnyi, 1000, "%s\n{00FF00}/usedrugs [Количество] {FFFFFF}- Употребить наркотик.",obychnyi);
	                    format(obychnyi, 1000, "%s\n{00FF00}/radio {FFFFFF}- Переключить радио.",obychnyi);
	                    format(obychnyi, 1000, "%s\n{00FF00}/satiety{FFFFFF}- Посмотреть свою сытость.",obychnyi);
	                    ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Обычные",obychnyi, "Назад", "");
					}
					case 2:
            		{
	            		new chats[1200];
						format(chats, 1000, "{00FF00}/o [Текст] {FFFFFF}- Глобальный чат.");
						format(chats, 1000, "%s\n{00FF00}(/ad)vertise [Текст] {FFFFFF}- Подать обьявление.",chats);
						format(chats, 1000, "%s\n{00FF00}(/gov)ernment [Текст] {FFFFFF}- Государственные новости.",chats);
						format(chats, 1000, "%s\n{00FF00}(/f)amily [Текст] {FFFFFF}- Чат органицации.",chats);
						format(chats, 1000, "%s\n{00FF00}(/s)hout [Текст] {FFFFFF}- Крикнуть.",chats);
						format(chats, 1000, "%s\n{00FF00}(/m)egaphone [Текст] {FFFFFF}- Мегафон в полицейских машинах.",chats);
						format(chats, 1000, "%s\n{00FF00}(/r)adio [Текст] {FFFFFF}- Чат государственных организаций.",chats);
						format(chats, 1000, "%s\n{00FF00}(/d)epartments [Текст] {FFFFFF}- Общий чат государственных организаций.",chats);
						format(chats, 1000, "%s\n{00FF00}/me [Текст] {FFFFFF}- Действие.",chats);
						format(chats, 1000, "%s\n{00FF00}(/w)hisper [Текст] {FFFFFF}- Шептать.",chats);
						ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Чат",chats, "Назад", "");
   					}
            		case 3:
            		{
		            	new phones[1200];
						format(phones, 1000, "{00FF00}/call [Номер] {FFFFFF}- Позвонить игроку (Узнать номер телефона /number).");
						format(phones, 1000, "%s\n{00FF00}/sms [id] [Текст] {FFFFFF}- Отправить SMS сообщение.",phones);
						format(phones, 1000, "%s\n{00FF00}(/p)ickup {FFFFFF}- Ответить на звонок.",phones);
						format(phones, 1000, "%s\n{00FF00} /c {FFFFFF}- Позвонить госс. службам.",phones);
						format(phones, 1000, "%s\n{00FF00}(/h)angup {FFFFFF}- Завершить телефонный разговор.",phones);
						format(phones, 1000, "%s\n{00FF00}/directory {FFFFFF}- Справочник.",phones);
						format(phones, 1000, "%s\n{00FF00}/togphone {FFFFFF}- Вкл./выкл. телефон.",phones);
						ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Телефон",phones, "Назад", "");
            		}
            		case 4:
            		{
			    		if(PlayerInfo[playerid][pJob] == 3)
			    		{
				    		new job3[1200];
							format(job3, 1000, "{00FF00}/selleat [id] [Цена] {FFFFFF}- Предложить купить ХотДог по выбору.");
							format(job3, 1000, "%s\n{00FF00}/hotdog [id] [Цена] {FFFFFF}- Предложить купить ХотДог.",job3);
							ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Мои команды",job3, "Назад", "");
						}
			    		else if(PlayerInfo[playerid][pJob] == 4)
				    	{
							new job4[1200];
							format(job4, 1000, "%s\n{00FF00}/fare {FFFFFF}- Начать/закончить рабочий день.",job4);
							ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Мои команды",job4, "Назад", "");
						}
		  				else if(PlayerInfo[playerid][pJob] == 5)
				    	{
				    		new job5[1200];
							format(job5, 1000, "{00FF00}/load {FFFFFF}- Загрузить продукты.");
							format(job5, 1000, "%s\n{00FF00}/sellprods {FFFFFF}- Выгрузить продукты.",job5);
							format(job5, 1000, "%s\n{00FF00}/loadgas {FFFFFF}- Загрузить бензин и прецепить прицеп.",job5);
							format(job5, 1000, "%s\n{00FF00}/sellgas {FFFFFF}- Начать развозку бензина.",job5);
							format(job5, 1000, "%s\n{00FF00}/pmenu {FFFFFF}- Меню загрузки / разгрузки зерна.",job5);
							ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Мои команды",job5, "Назад", "");
						}
		  				else if(PlayerInfo[playerid][pJob] == 10)
		            	{
							new job10[1200];
							format(job10, 1000, "{00FF00}/tskill {FFFFFF}- Статистика дальнобойщика.");
							format(job10, 1000, "%s\n{00FF00}/tmonitor {FFFFFF}- Мониторинг цен продуктов.",job10);
							format(job10, 1000, "%s\n{00FF00}/tload [Тонн] {FFFFFF}- Купить груз.",job10);
							format(job10, 1000, "%s\n{00FF00}/tunload {FFFFFF}- Продать груз.",job10);
							ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Мои команды",job10, "Назад", "");
						}
						if (IsACop(playerid))
						{
							new member1[1700];
							format(member1, 1700, "%s\n{00FF00}/ram {FFFFFF}- Войти в дом.",member1);
							format(member1, 1700, "%s\n{00FF00}/wanted {FFFFFF}- Посмотреть список разыскиваемых.",member1);
							format(member1, 1700, "%s\n{00FF00}/tazer {FFFFFF}- Ударить игрока эелектрошокером.",member1);
							format(member1, 1700, "%s\n{00FF00}/cuff [id] {FFFFFF}- Надеть наручники на игрока.",member1);
							format(member1, 1700, "%s\n{00FF00}/uncuff [id] {FFFFFF}- Снять наручники с игрока.",member1);
							format(member1, 1700, "%s\n{00FF00}/su [id] [Преступление] {FFFFFF}- Дать игроку розыск.",member1);
							format(member1, 1700, "%s\n{00FF00}/clear [id] {FFFFFF}- Снять уровень розыска с игрока.",member1);
							format(member1, 1700, "%s\n{00FF00}/arrest (1-6) {FFFFFF}- Посадить игрока в тюрьму.",member1);
							format(member1, 1700, "%s\n{00FF00}/cput [id] {FFFFFF}- Посадить нарушителя в машину.",member1);
							format(member1, 1700, "%s\n{00FF00}/ceject [id] {FFFFFF}- Вытолкнуть игрока из машины, и отправить в участок.",member1);
							format(member1, 1700, "%s\n{00FF00}/givecopkeys [id] {FFFFFF}- Выдать пропуск, от полицейского участка.",member1);
							format(member1, 1700, "%s\n{00FF00}/take {FFFFFF}- Забрать у игрока лицензии / запрещенные предметы.",member1);
							format(member1, 1700, "%s\n{00FF00}/frisk [id] {FFFFFF}- Обыскать игрока.",member1);
							format(member1, 1700, "%s\n{00FF00}/mdc [id] {FFFFFF}- Бортовой компьютер.",member1);
							format(member1, 1700, "%s\n{00FF00}/warehouse {FFFFFF}- Посмотреть кол-во материалов на складе.",member1);
							format(member1, 1700, "%s\n{00FF00}/members {FFFFFF}- Посмотреть количество игроков в вашей фаркции онлайн.",member1);
							format(member1, 1700, "%s\n{00FF00}/demote {FFFFFF}- Повысить/Понизить законника",member1);
							format(member1, 1700, "%s\n{00FF00}/bizlock {FFFFFF}- Открыть/закрыть бизнес",member1);
							format(member1, 1700, "%s\n{00FF00}/gate {FFFFFF}- Открыть шлагбаум",member1);
							format(member1, 1700, "%s\n{00FF00}/pdinvite {FFFFFF}- Принять в ПД.",member1); // /pdinvite
							ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Мои команды",member1, "Назад", "");
						}
		            	else if (IsAArm(playerid))
						{
							new member2[1200];
							format(member2, 1000, "%s\n{00FF00}/carmat {FFFFFF}- Загрузить материалы в матолет.",member2);
							format(member2, 1000, "%s\n{00FF00}/warehouse {FFFFFF}- Посмотреть кол-во матов на складе.",member2);
							format(member2, 1000, "%s\n{00FF00}/members {FFFFFF}- Посмотреть количество игроков в вашей фаркции онлайн.",member2);
							format(member2, 1000, "%s\n{00FF00}/carm {FFFFFF}- Загрузить материалы в матовоз.",member2);
							ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Мои команды",member2, "Назад", "");
		            	}
		            	else if(PlayerInfo[playerid][pMember] == 24)
		            	{
		            	    new member24[1200];
							format(member24, 1000, "%s\n{00FF00}/portable {FFFFFF}- Меню.",member24);
							format(member24, 1000, "%s\n{00FF00}/invite {FFFFFF}- Принять игрока.",member24);
							format(member24, 1000, "%s\n{00FF00}/f {FFFFFF}- Чат фракции.",member24);
							format(member24, 1000, "%s\n{00FF00}/uninvite {FFFFFF}- Уволить игрока.",member24);
							format(member24, 1000, "%s\n{00FF00}/giverank {FFFFFF}- Повысить игрока.",member24);
							format(member24, 1000, "%s\n{00FF00}/find {FFFFFF}- Найти жертву.",member24);
							ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Мои команды",member24, "Назад", "");
		            	}
				   		else if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pMember] == 23 )
						{
							new member7[1200];
							format(member7, 1000, "%s\n{00FF00}/sethealcost [Сумма] {FFFFFF}- Установить цену за лечение.",member7);
		   					format(member7, 1000, "%s\n{00FF00}/accept medic {FFFFFF}- Принять вызов.",member7);
			            	format(member7, 1000, "%s\n{00FF00}/members {FFFFFF}- Посмотреть количество игроков в вашей фаркции онлайн.",member7);
		            		format(member7, 1000, "%s\n{00FF00}/heal [id] {FFFFFF}- Вылечить игрока.",member7);
			            	format(member7, 1000, "%s\n{00FF00}/lomka {FFFFFF}- Провести сеанс от наркозависимости.",member7);
			            	format(member7, 1000, "%s\n{00FF00}/reference {FFFFFF}- Выписать игрока из больницы",member7);
							ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Мои команды",member7, "Назад", "");
						}
						else if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
						{
							new member8[1200];
							format(member8, 1000, "{00FF00}/setmng {FFFFFF}- Назначить менеджером на работу в казино..");
							format(member8, 1000, "%s\n{00FF00}/deal {FFFFFF}- Крутить рулетку.",member8);
							format(member8, 1000, "%s\n{00FF00}/invite {FFFFFF}- Принять на работу в казино.",member8);
							format(member8, 1000, "%s\n{00FF00}/giverank {FFFFFF}- Повысить/понизить рабочего.",member8);
							format(member8, 1000, "%s\n{00FF00}/uninvite {FFFFFF}- Уволить работника.",member8);
							ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Мои команды",member8, "Назад", "");
						}
			 			else if (PlayerInfo[playerid][pMember] == 19)
					   	{
					   		new member9[1200];
							format(member9, 1000, "{00FF00}/camera	 {FFFFFF}- Посмотреть камеры");
							format(member9, 1000, "%s\n{00FF00}/cameraoff {FFFFFF}- Выйти из просмотра камер",member9);
							ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Мои команды",member9, "Назад", "");
					   	}
						else if (IsAMafia(playerid))
						{
							new member10[1200];
							format(member10, 1000, "%s\n{00FF00}/mydebts {FFFFFF}- Узнать информацию о себе.",member10);
							format(member10, 1000, "%s\n{00FF00}/hackbase [id] {FFFFFF}- Снять розыск с игрока.",member10);
							format(member10, 1000, "%s\n{00FF00}/setdebt [id] {FFFFFF}- Предложить крышу.",member10);
							format(member10, 1000, "%s\n{00FF00}/members {FFFFFF}- Посмотреть количество игроков в вашей фаркции онлайн.",member10);
							format(member10, 1000, "%s\n{00FF00}/mbank [Сумма] {FFFFFF}- Пoложить деньги в банк вашей мафии.",member10);
							format(member10, 1000, "%s\n{00FF00}/warehouse {FFFFFF}- Посмотреть кол-во материалов на складе.",member10);
							format(member10, 1000, "%s\n{00FF00}/getgun {FFFFFF}- Взять оружие со склада мафии.",member10);
							format(member10, 1000, "%s\n{00FF00}/untie [id] {FFFFFF}- Развязать заложника.",member10);
							format(member10, 1000, "%s\n{00FF00}/tie [id] {FFFFFF}- Связать заложника.",member10);
							format(member10, 1000, "%s\n{00FF00}/debtors {FFFFFF}- Посмотреть список заложников онлайн.",member10);
							format(member10, 1000, "%s\n{00FF00}/mbalance {FFFFFF}- Посмотреть кол-во денег в банке мафии.",member10);
							format(member10, 1000, "%s\n{00FF00}/materials buy {FFFFFF}- Купить материалы.",member10);
							format(member10, 1000, "%s\n{00FF00}/bizlist {FFFFFF}- Посмотреть список бизнесов.",member10);
							format(member10, 1000, "%s\n{00FF00}/mwithdraw [Сумма] {FFFFFF}- Снять деньги с банка мафии.",member10);
							format(member10, 1000, "%s\n{00FF00}/mafiawar {FFFFFF}- Назначить стрелу за бизнес.",member10);
							ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Мои команды",member10, "Назад", "");
						}
						else if (PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)
						{
							new member11[1200];
							format(member11, 1000, "%s\n{00FF00}/invite [id] {FFFFFF}- Принять игрока в фракцию.",member11);
							format(member11, 1000, "%s\n{00FF00}/uninvite [id] {FFFFFF}- Уволить игрока из фракции.",member11);
							format(member11, 1000, "%s\n{00FF00}/giverank [id] [Rank] {FFFFFF}- Дать игроку ранг.",member11);
							format(member11, 1000, "%s\n{00FF00}/gettax {FFFFFF}- Посмотреть казну мэрии.",member11);
							format(member11, 1000, "%s\n{00FF00}/givepass {FFFFFF}- Выдать игроку паспорт.",member11);
							format(member11, 1000, "%s\n{00FF00}/kaznawithdraw {FFFFFF}- Снять деньги с казны.",member11);
							format(member11, 1000, "%s\n{00FF00}/kaznaput {FFFFFF}- Положить деньги в казну.",member11);
							format(member11, 1000, "%s\n{00FF00}/settax {FFFFFF}- Поставить налог всем игрокам.",member11);
							ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Мои команды",member11, "Назад", "");
						}
						else if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
						{
							new member12[1200];
							format(member12, 1000, "{00FF00}/news {FFFFFF}- Написать новости");
							format(member12, 1000, "%s\n{00FF00}/newsbank {FFFFFF}- Баланс банка.",member12);
							format(member12, 1000, "%s\n{00FF00}/newswithdraw {FFFFFF}- Снять деньги с банка",member12);
							format(member12, 1000, "%s\n{00FF00}/yes {FFFFFF}- Принять звонок в студию",member12);
							format(member12, 1000, "%s\n{00FF00}/off {FFFFFF}- Завершить звонок в студию",member12);
							format(member12, 1000, "%s\n{00FF00}/givenewskeys [id] {FFFFFF}- Выдать пропуск в студию.",member12);
							format(member12, 1000, "%s\n{00FF00}/members {FFFFFF}- Посмотреть количество игроков в вашей фаркции онлайн.",member12);
							ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Мои команды",member12, "Назад", "");
						}
						else if (PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
						{
							new member13[1200];
							format(member13, 1000, "{00FF00}/news {FFFFFF}- Написать новости");
							format(member13, 1000, "%s\n{00FF00}/newsbank {FFFFFF}- Баланс банка",member13);
							format(member13, 1000, "%s\n{00FF00}/newswithdraw {FFFFFF}- Снять деньги с банка",member13);
							format(member13, 1000, "%s\n{00FF00}/yes {FFFFFF}- Принять звонок в студию",member13);
							format(member13, 1000, "%s\n{00FF00}/off {FFFFFF}- Завершить звонок в студию",member13);
							format(member13, 1000, "%s\n{00FF00}/givenewskeys [id] {FFFFFF}- Выдать пропуск в студию.",member13);
							format(member13, 1000, "%s\n{00FF00}/members {FFFFFF}- Посмотреть количество игроков в вашей фаркции онлайн.",member13);
							ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Мои команды",member13, "Назад", "");
						}
						else if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 9)
						{
							new member14[1200];
							format(member14, 1000, "{00FF00}/news {FFFFFF}- Написать новости");
							format(member14, 1000, "%s\n{00FF00}/newsbank {FFFFFF}- Баланс банка",member14);
							format(member14, 1000, "%s\n{00FF00}/newswithdraw {FFFFFF}- Снять деньги с банка",member14);
							format(member14, 1000, "%s\n{00FF00}/yes {FFFFFF}- Принять звонок в студию",member14);
							format(member14, 1000, "%s\n{00FF00}/off {FFFFFF}- Завершить звонок в студию",member14);
							format(member14, 1000, "%s\n{00FF00}/givenewskeys [id] {FFFFFF}- Выдать пропуск в студию.",member14);
							format(member14, 1000, "%s\n{00FF00}/members {FFFFFF}- Посмотреть количество игроков в вашей фаркции онлайн.",member14);
							ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Мои команды",member14, "Назад", "");
						}
						else if (PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
						{
							new member15[1200];
							format(member15, 1000, "%s\n{00FF00}/members {FFFFFF}- Посмотреть количество игроков в вашей фаркции онлайн.",member15);
							format(member15, 1000, "%s\n{00FF00}/instructors {FFFFFF}- Узнать инструкторов онлайн.",member15);
							format(member15, 1000, "%s\n{00FF00}/gl {FFFFFF}- Выдать лицензии игроку.",member15);
							format(member15, 1000, "%s\n{00FF00}/f {FFFFFF}- Чат организации.",member15);
							ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Мои команды",member15, "Назад", "");
						}
						else if (IsAGang(playerid))
						{
							new member16[2000];
							format(member16, 2000, "%s\n{00FF00}/gunlist {FFFFFF}- Посмотреть ид оружий, и расходы на создание оружия.",member16);
							format(member16, 2000, "%s\n{00FF00}/usedrugs [Кол-во] {FFFFFF}- Употребить наркотик.",member16);
							format(member16, 2000, "%s\n{00FF00}/getekey {FFFFFF}- Посмотреть свои ключи.",member16);
							format(member16, 2000, "%s\n{00FF00}/unloading {FFFFFF}- Разгрузить материалы на склад банды.",member16);
							format(member16, 2000, "%s\n{00FF00}/switchskin {FFFFFF}- Надеть форму.",member16);
							format(member16, 2000, "%s\n{00FF00}/robhouse {FFFFFF}- Ограбить дом.",member16);
							format(member16, 2000, "%s\n{00FF00}/warehouse {FFFFFF}- Посмотреть кол-во материалов на складе.",member16);
							format(member16, 2000, "%s\n{00FF00}/gbank {FFFFFF}- Посмотреть банк банды.",member16);
							format(member16, 2000, "%s\n{00FF00}/members {FFFFFF}- Посмотреть количество игроков в вашей фаркции онлайн.",member16);
							format(member16, 2000, "%s\n{00FF00}/selldrugs [id] [Кол-во] [Цена] {FFFFFF}- Продать наркотики игроку.",member16);
							format(member16, 2000, "%s\n{00FF00}/sellgun [id] [id оружия] [Патроны] [Цена] {FFFFFF}- Продать оружие игроку.",member16);
							format(member16, 2000, "%s\n{00FF00}/get guns [Кол-во] {FFFFFF}- Взять материалы, со склада банды.",member16);
							format(member16, 2000, "%s\n{00FF00}/gunlist[Кол-во] {FFFFFF}- Взять материалы, со склада банды.",member16);
							format(member16, 2000, "%s\n{00FF00}/capture {FFFFFF}- Начать захват вражеской терриории.",member16);
							format(member16, 2000, "%s\n{00FF00}/sellzone [id] [Цена] {FFFFFF}- Продать территорию.",member16);
							format(member16, 2000, "%s\n{00FF00}/gbankput [Сумма] {FFFFFF}- Положить деньги на счет банды.",member16);
							format(member16, 2000, "%s\n{00FF00}/gwithdraw [Сумма] {FFFFFF}- Снять деньги с банка мафии.",member16);
							ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Мои команды",member16, "Назад", "");
						}
					}
            		case 5:
            		{
		           		if (PlayerInfo[playerid][pLeader] >= 1)
				   		{
						   	new member17[1200];
							format(member17, 1000, "{00FF00}/invite {FFFFFF}- Предложить вступить во фракцию");
							format(member17, 1000, "%s\n{00FF00}/uninvite {FFFFFF}- Выгнать с фракции",member17);
							format(member17, 1000, "%s\n{00FF00}/giverank {FFFFFF}- Поднять/понизить ранг",member17);
							ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Главным",member17, "Назад", "");
						}
		            	else
						{
				   			SendClientMessage(playerid, COLOR_GREY, "Вы не лидер какой либо фракции.");
						}
    				}
		  			case 6:
		            {
			            new member19[1200];
						format(member19, 1000, "%s\n{00FF00}/home {FFFFFF}- Поставить метку у дома (GPS).",member19);
						format(member19, 1000, "%s\n{00FF00}/changehouse [id] [Цена] {FFFFFF}- Продать дом игроку.",member19);
						format(member19, 1000, "%s\n{00FF00}/healme {FFFFFF}- Использовать аптечку.",member19);
						format(member19, 1000, "%s\n{00FF00}/exit {FFFFFF}- выйти из дома.",member19);
						format(member19, 1000, "%s\n{00FF00}/buyhouse {FFFFFF}- Купить дом.",member19);
						format(member19, 1000, "%s\n{00FF00}/sellhouse {FFFFFF}- Продать дом.",member19);
						format(member19, 1000, "%s\n{00FF00}/hpanel {FFFFFF}- Панель дома.",member19);
						ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Квартира",member19, "Назад", "");
					}
					case 7:
					{
						new member20[1200];
						format(member20, 1000, "{00FF00}/buybiz {FFFFFF}- Купить бизнес.",member20);
			            format(member20, 1000, "%s\n{00FF00}/sellbiz {FFFFFF}- Продать бизнес.",member20);
			            format(member20, 1000, "%s\n{00FF00}/bizlock {FFFFFF}- Закрыть / Открыть бизнес.",member20);
			            format(member20, 1000, "%s\n{00FF00}/bizstats {FFFFFF}- Статистика бизнеса.",member20);
			            format(member20, 1000, "%s\n{00FF00}/bizfee {FFFFFF}- Установить цену за  бензин/вход.",member20);
			            format(member20, 1000, "%s\n{00FF00}/bizwithdraw {FFFFFF}- Снять деньги с бизнеса.",member20);
			   			format(member20, 1000, "%s\n{00FF00}/bizmafia {FFFFFF}- Установить крышу (Работает только на заправках).",member20);
			   			format(member20, 1000, "%s\n{00FF00}/produkts {FFFFFF}- Заказать продукты.",member20);
			   			ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Бизнес",member20, "Назад", "");
					}
					case 8:
		            {
			            new member22[1200];
			            format(member22, 1000, "%s\n{00FF00}/carpass {FFFFFF}- Посмотреть документы на машину.",member22);
			            format(member22, 1000, "%s\n{00FF00}/showcarpass [id] {FFFFFF}- Показать документы на машину.",member22);
			            format(member22, 1000, "%s\n{00FF00}/sellcar {FFFFFF}- Продать машину.",member22);
			            format(member22, 1000, "%s\n{00FF00}/fixcar {FFFFFF}- Обновить машину.",member22);
			            format(member22, 1000, "%s\n{00FF00}/fill {FFFFFF}- Заправить машину на заправке.",member22);
			            format(member22, 1000, "%s\n{00FF00}/changecar [id] [Цена] {FFFFFF}- Продать машину игроку.",member22);
			            format(member22, 1000, "%s\n{00FF00}/fillcar {FFFFFF}- Заправить машину с канистры.",member22);
			            format(member22, 1000, "%s\n{00FF00}/get fuel {FFFFFF}- Купить канистру.",member22);
			            ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Автомобиль",member22, "Назад", "");
					}
					case 9:
		            {
			            new member23[1200];
			            format(member23, 1000, "{00FF00}/tune {FFFFFF}- Заказать тюнинг.");
			            ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Автомастерские",member23, "Назад", "");
					}
					case 10:
		            {
			            new member24[1200];
						format(member24, 1000, "Идите в банк.");
						ShowPlayerDialog(playerid,10025,DIALOG_STYLE_MSGBOX,"{FFFFFF}Банк",member24, "Назад", "");
					}
				}
				return true;
			}
		}
		case 14288:
		{
		    if(response == 1)
			{
   				switch(listitem)
				{
				    case 0:
				    {
						ShowPlayerDialog(playerid,14289,DIALOG_STYLE_INPUT, "{e23434}Отправить вопрос", "{FFFFFF}Введите суть вопроса ниже:", "Готово", "Назад");
					}
					case 1:
					{
						ShowPlayerDialog(playerid,14287,DIALOG_STYLE_INPUT, "{e23434}Отправить жалобу на игрока", "{FFFFFF}Вы собираетесь отправить жалобу на игрока\nНапишите ID игрока", "Готово", "Назад");
					}
				}
			}
		}
		case 14289:
		{
			if(response)
			{
			    new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				SendClientMessage(playerid, 0x339933AA, "Ваш вопрос успешно был отправлен службе поддержки{FFFFFF}Ожидайте ответа");
				format(string, sizeof(string), "Вопрос от %s[%d]: %s", sendername, playerid, (inputtext));
				HelpChat(0xA85400AA, string, 1);
				return true;
			}
		}
		case 14287:
		{
			if(response)
			{
			    new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "{e23434}[Информация] {ffffff}Вы отправили жалоба: {FFFFFF}%s", (inputtext));
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
				SendClientMessage(playerid, 0x339933AA, "Ваша жалоба успешно была отправлена администраторам!!!");
				format(string, sizeof(string), "{CC0033}[Жалоба] от %s[%d]: {ffffff}%s", sendername, playerid, (inputtext));
				ABroadCast(0xA85400AA, string, 1);
				return true;
			}
		}
		case 14:
		{
	   	 	if(response)
			{
		   		if(!strlen(inputtext)) return ShowPlayerDialog(playerid,14,DIALOG_STYLE_INPUT, "Ключ безопасности", "Введите Ваш новый ключ безопасности", "Готово", "Назад");
		    	GetPlayerName(playerid,playername,sizeof(playername));
				format(string,sizeof(string), "%s.ini",playername);
				new File=ini_openFile(string);
				ini_setString(File, "Keyip",inputtext);
				ini_closeFile(File);
				PlayerInfo[playerid][pCheckip] = 1;
				format(string, sizeof(string), "Ваш новый ключ безопасности: %s", inputtext);
				SendClientMessage(playerid, COLOR_GREEN, string);
				SendClientMessage(playerid, COLOR_GREEN, "Мы рекомендуем вам сделать скриншот. Клавиша F8");
				return true;
	    	}
		    else
		    {
		    	new listitems[] = "{e23434}[1]{ffffff}Настройки\n{e23434}[2]{ffffff}Мои данные\n{ffffff}{e23434}[3]{ffffff}Команды сервера\n{e23434}[4]{ffffff}Администратция\n{e23434}[5]{ffffff}Смена пароля\n{e23434}[6]{ffffff}Очистить чат\n{e23434}[6]{ffffff}Слив денег\n{e23434}[7]{ffffff}Безопастность\n{e23434}[8]{ffffff}Смена ника\n{e23434}[9]{ffffff}Донат\n";
				ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "Личное меню", listitems, "Выбрать", "Отмена");
				return true;
		    }
		}
		case 11:
		{
	   	 	if(response)
			{
				if(!strlen(inputtext)) return ShowPlayerDialog(playerid,11,DIALOG_STYLE_INPUT, "Смена пароля", "Чтобы не подвергнуть аккаунт взлому, рекомедуем придумать трудный пароль.\nСодержащий набор букв и цифр", "Сменить", "Назад");
	      		GetPlayerName(playerid,playername,sizeof(playername));
				format(string,sizeof(string), "%s.ini",playername);
				new File=ini_openFile(string);
				ini_setString(File,"Key",(inputtext));
				ini_closeFile(File);
				format(string, sizeof(string), "Ваш новый пароль: %s", inputtext);
				SendClientMessage(playerid, COLOR_GREEN, string);
				SendClientMessage(playerid, COLOR_GREEN, "Мы рекомендуем вам сделать скриншот. Клавиша F8");
				return true;
			}
		    else
			{
	    		new listitems[] = "{e23434}[1]{ffffff}Настройки\n{e23434}[2]{ffffff}Мои данные\n{e23434}[3]{ffffff}Команды сервера\n{e23434}[4]{ffffff}Администратция\n{e23434}[5]{ffffff}Смена пароля\n{e23434}[6]{ffffff}Очистить чат\n{e23434}[7]{ffffff}Слив денег\n{e23434}[8]{ffffff}Безопастность\n{e23434}[9]{ffffff}Смена ника\n{e23434}[10]{ffffff}Донат\n";
				ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "Личное меню", listitems, "Выбрать", "Отмена");
				return true;
			}
		}
		case 11332:
		{
		    if(response)
			{
				if(!strlen(inputtext))return ShowPlayerDialog(playerid,11332,DIALOG_STYLE_INPUT, "Смена Admin пароля", "Введите новый пароль ниже\n{e23434}Напоминаем, что пароль должен состоять из цифр.", "X", "");
                for(new i = strlen(inputtext); i != 0; --i)
				switch(inputtext[i])
				{
					case 'А'..'Я', 'а'..'я', 'A'..'Z', 'a'..'z', ' ':
					return ShowPlayerDialog(playerid,11333,DIALOG_STYLE_MSGBOX, "Ошибка!", "Введенный вами пароль содержит буквы!\n{e23434}Напоминаем, что пароль должен состоять из цифр.", "Повтор", "");
				}
				GetPlayerName(playerid,playername,sizeof(playername));
				format(string,sizeof(string), "%s.ini",playername);
				PlayerInfo[playerid][pDostup] = strval(inputtext);
				new File=ini_openFile(string);
				ini_setString(File,"pDostup",(PlayerInfo[playerid][pDostup]));
				ini_closeFile(File);
				format(string, sizeof(string), "Ваш новый пароль: {FFFFFF}%s", inputtext);
				SendClientMessage(playerid, COLOR_GREEN, string);
				format(string, sizeof(string), "<Admin Log> Администратор: %s поменял пароль от /alogin", playername);
				ABroadCast(COLOR_RED, string, 1);
			}
		}
		case 11333:
		{
			if(response)
			{
			    ShowPlayerDialog(playerid,11332,DIALOG_STYLE_INPUT, "Смена Admin пароля", "Введите новый пароль ниже\n{e23434}Напоминаем, что пароль должен состоять из цифр.", "X", "");
			}
		}
		case 9653:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pMember] == 19 || proverkaforma[playerid] == 1)
				{
		  			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return SendClientMessage(playerid,COLOR_GREY, "Вы не в матовозе!");
					switch(listitem)
					{
						case 0:
						{
							SendClientMessage(playerid,COLOR_GREEN, "Встаньте на красный маркер, чтобы заполнить грузовик материалами!");
							SetPlayerCheckpoint(playerid,335.9255,1994.7932,17.6406,8.0);
							MatsArmyCar[playerid]=20;
							return true;
						}
						case 1:
						{
							if(!PlayerToPoint(10.0,playerid,334.9307,1962.9658,17.6406)) return	SendClientMessage(playerid,COLOR_GREY, "Вы не у разгрузочной зоны!");
						    new tmpcar = GetPlayerVehicleID(playerid);
						    if(MatHaul[tmpcar-gunscar[0]][mLoad] <= 0) return SendClientMessage(playerid, COLOR_GREY, "В матовозе нет оружия!");
						   	armmatbi += MatHaul[tmpcar-gunscar[0]][mLoad];
					   		MatHaul[tmpcar-gunscar[0]][mLoad] =0;
							format(string, sizeof(string), "Оружие выгружено! В грузовике: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							SaveMaterials();
							return true;
						}
						case 2:
						{
							SetPlayerCheckpoint(playerid,2745.2368,-2463.9832,13.6484,6.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
							MatsArmyCar[playerid]=151;
							return true;
						}
						case 3:
						{
				     		SetPlayerCheckpoint(playerid,-1601.8774,309.4032,7.1875,6.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=21;
				            return true;
						}
						case 4:
						{
				     		SetPlayerCheckpoint(playerid,1529.6000,-1691.2000,13.3828,6.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=31;
				            return true;
						}
						case 5:
						{
				     		SetPlayerCheckpoint(playerid,-2429.1721,490.0948,29.9279,6.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=24;
				            return true;
						}
						case 6:
						{
				     		SetPlayerCheckpoint(playerid,-1607.2913,683.5955,-5.2422,6.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=35;
				            return true;
						}
						case 7:
						{
				     		SetPlayerCheckpoint(playerid,2292.0837,2458.9941,10.8203,6.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=150;
				            return true;
						}
						case 8:
						{
							new listitems[] = " [1] Разгрузка The Ballas\n [2] Разгрузка The Vagos\n [3] Разгрузка The Grove\n [4] Разгрузка The Aztek\n [5] Разгрузка The Rifa";
							ShowPlayerDialog(playerid, 3232, DIALOG_STYLE_LIST, "Развозка материалов бандам", listitems, "Выбрать", "Отмена");
				 			return true;
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 3233:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pMember] == 19 || proverkaforma[playerid] == 1)
				{
		 			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return SendClientMessage(playerid,COLOR_GREY, "Вы не в матовозе!");
					switch(listitem)
					{
						case 0:
						{
				     		SetPlayerCheckpoint(playerid,1244.5627,205.2205,19.6454,10.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=60;
				            return true;
						}
			 			case 1:
						{
				     		SetPlayerCheckpoint(playerid,681.5627,-473.9190,16.5363,10.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=61;
							return true;
						}
						case 2:
						{
				     		SetPlayerCheckpoint(playerid,-311.1547,1303.4301,53.6643,10.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=62;
				            return true;
						}
						case 3:
						{
				     		SetPlayerCheckpoint(playerid,662.8604,1716.4194,7.1875,10.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=63;
				            return true;
						}
						case 4:
						{
				     		SetPlayerCheckpoint(playerid,24.4948,-2646.5129,40.4637,10.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=64;
				            return true;
						}
						case 5:
						{
				     		SetPlayerCheckpoint(playerid,-255.0120,2603.3000,62.8582,10.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=65;
				            return true;
						}
			 			case 6:
						{
				     		SetPlayerCheckpoint(playerid,-2105.8921,-2480.8372,30.6250,10.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=66;
							return true;
						}
						case 7:
						{
				     		SetPlayerCheckpoint(playerid,-1266.7014,2715.9397,50.2663,10.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=67;
				            return true;
						}
						case 8:
						{
					     	SetPlayerCheckpoint(playerid,-313.9936,1774.6589,43.6406,10.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
							MatsArmyCar[playerid]=68;
							return true;
						}
						case 9:
						{
				     		SetPlayerCheckpoint(playerid,-1942.1289,2379.4338,49.7031,10.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=69;
				            return true;
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 3232:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pMember] == 19 || proverkaforma[playerid] == 1)
				{
		 			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return SendClientMessage(playerid,COLOR_GREY, "Вы не в матовозе!");
					switch(listitem)
					{
						case 0:
						{
				     		SetPlayerCheckpoint(playerid,2645.9717,-2005.8618,13.3828,6.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=100;
							return true;
						}
			 			case 1:
						{
				     		SetPlayerCheckpoint(playerid,2795.7639,-1619.4196,10.9219,6.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=101;
							return true;
						}
						case 2:
						{
				     		SetPlayerCheckpoint(playerid,2489.2656,-1670.0692,13.3359,6.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=102;
							return true;
						}
						case 3:
						{
				     		SetPlayerCheckpoint(playerid,1806.0304,-2111.7974,13.3828,6.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=103;
							return true;
						}
						case 4:
						{
				     		SetPlayerCheckpoint(playerid,2176.5503,-1803.5483,13.3692,6.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=104;
							return true;
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 2323:
		{
			if(response)
			{
				if(listitem == 0)
				{
					if(PlayerInfo[playerid][pCheckip] == 1)
					{
						PlayerInfo[playerid][pCheckip] = 0;
			  			SendClientMessage(playerid, COLOR_WHITE, "Проверка по IP адресу отключина");
					   	return true;
					}
					PlayerInfo[playerid][pCheckip] = 1;
				  	SendClientMessage(playerid, COLOR_WHITE, "Проверка по IP адресу включена!");
				   	return true;
				}
				if(listitem == 1)
				{
					ShowPlayerDialog(playerid,14,DIALOG_STYLE_INPUT, "Сменить ключ", "Введите ваш новый ключ безопасности", "Готово", "Назад");
					return true;
				}
				if(listitem == 2)
				{
					new vdata = PlayerInfo[playerid][pVhoddata];
					new vmes = PlayerInfo[playerid][pVhodMes];
					new vchas = PlayerInfo[playerid][pVhodchas];
					new vminute = PlayerInfo[playerid][pVhodminute];
					new mtext[20];
					if(vmes == 1) { mtext = "Январь"; }
					else if(vmes == 2) { mtext = "Февраль"; }
					else if(vmes == 3) { mtext = "Март"; }
					else if(vmes == 4) { mtext = "Апрель"; }
					else if(vmes == 5) { mtext = "Май"; }
					else if(vmes == 6) { mtext = "Июнь"; }
					else if(vmes == 7) { mtext = "Июль"; }
					else if(vmes == 8) { mtext = "Август"; }
					else if(vmes == 9) { mtext = "Сентябрь"; }
					else if(vmes == 10) { mtext = "Октябрь"; }
					else if(vmes == 11) { mtext = "Ноябрь"; }
					else if(vmes == 12) { mtext = "Декабрь"; }
					new playersip[20];
					new stringg[20];
					GetPlayerIp(playerid,playersip,sizeof(playersip));
					new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s.ini",sendername);
					new file = ini_openFile(string);
					if(file < 0) print("нет файла");
					else
					{
						ini_getString(file, "pvIp",stringg);
						ini_closeFile(file);
						new coordsstring[100];
						new msg[] = "Данная система, позволяет Вам увидеть\nВремя последнего вашего Входа на сервер.\n\nИнформация обновляется при выходе\n\n{FEBC41}---------------------------------------------------\nДата: %d %s\nВремя:  %d:%d\nВаш IP адрес: %s\nПоследний IP адрес: %s\n---------------------------------------------------";
						format(coordsstring, 2000, msg, vdata,mtext,vchas,vminute,playersip,stringg);
						ShowPlayerDialog(playerid,3025,DIALOG_STYLE_MSGBOX, "Информация о последнем заходе в игру",coordsstring, "Готово", "");
						return true;
					}
				}
				if(listitem == 3)
				{
					new rulesdialog[1024];
					format(rulesdialog,sizeof(rulesdialog), "%s%s%s%s%s",IPMSG[0],IPMSG[1],IPMSG[2],IPMSG[3],IPMSG[4]);
					ShowPlayerDialog(playerid,165,DIALOG_STYLE_MSGBOX, "INFO",rulesdialog, "Готово", "");
				}
			}
			else
			{
				new listitems[] = "{e23434}[1]{ffffff}Настройки\n{e23434}[2]{ffffff}Мои данные\n{e23434}[3]{ffffff}Команды сервера\n{e23434}[4]{ffffff}Администратция\n{e23434}[5]{ffffff}Смена пароля\n{e23434}[6]{ffffff}Очистить чат\n{e23434}[7]{ffffff}Слив денег\n{e23434}[8]{ffffff}Безопастность\n{e23434}[9]{ffffff}Смена ника\n{e23434}[10]{ffffff}Донат\n";
				ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "Личное меню", listitems, "Выбрать", "Отмена");
				return true;
			}
		}
		case 9943:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pAdmin] >= 1) return SendClientMessage(playerid, COLOR_GREY , "Аминистраторам запрещено менять ник!");
		 		if(!strlen(inputtext)) return ShowPlayerDialog(playerid,9943,DIALOG_STYLE_INPUT, "Заявка на смену ника", "Напишите новый ник (по форме Имя_Фамилия)", "Отправить", "Назад");
		    	format(string,sizeof(string), "%s.ini",inputtext);
				if(fexist(string))
				{
					SendClientMessage(playerid,COLOR_GREY, "Ник занят");
					ShowPlayerDialog(playerid,9943,DIALOG_STYLE_INPUT, "Заявка на смену ника", "Напишите новый ник (по форме Имя_Фамилия)", "Отправить", "Назад");
					return true;
				}
		   		new sendername[MAX_PLAYER_NAME];
		   		format(WantNickChange[playerid],MAX_PLAYER_NAME, "%s",inputtext);
				GetPlayerName(playerid, sendername, sizeof(sendername));
		       	format(string, sizeof(string), "{FF9900}[{FFFFFF}Смена ника{FF9900}] {FFFFFF}%s[%d] {FF9900}просит сменить ник на: {FF9900}%s", sendername,playerid,(inputtext));
		       	ABroadCast(COLOR_USE, string, 1);
		       	format(string, sizeof(string), "{FF9900}Для подтверждения смены ника введите {FFFFFF}/setname %d", playerid);
		       	ABroadCast(COLOR_USE, string, 1);
			   	format(string, sizeof(string), "{FF9900}[{FFFFFF}Смена ника{FF9900}] {FFFFFF}%s[%d] {FF9900}просит сменить ник на: {FF9900}%s", sendername,playerid,(inputtext));
		       	SendClientMessage(playerid, COLOR_LIGHTRED, string);
				SendClientMessage(playerid, COLOR_GREEN, "Ваша заявка отправлена. Ждите одобрения администрацией");
		       	return true;
			}
		 	else
			{
				new listitems[] = "{e23434}[1]{ffffff}Настройки\n{e23434}[2]{ffffff}Мои данные\n{e23434}[3]{ffffff}Команды сервера\n{e23434}[4]{ffffff}Администратция\n{e23434}[5]{ffffff}Смена пароля\n{e23434}[6]{ffffff}Очистить чат\n{e23434}[7]{ffffff}Слив денег\n{e23434}[8]{ffffff}Безопастность\n{e23434}[9]{ffffff}Смена ника\n{e23434}[10]{ffffff}Донат\n";
				ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "Личное меню", listitems, "Выбрать", "Отмена");
				return true;
			}
		}
		case 200:
		{
			if(response)
			{
				new listitems[] = "{D1DBD0}[1] Общение\n{D1DBD0}[2] Список игроков\n{D1DBD0}[3] Транспорт\n{D1DBD0}[4] Общее\n{D1DBD0}[5] Транспорт часть 2\n{D1DBD0}[6] Работа\n{D1DBD0}[7] Оружие и Убийство\n[8]{D1DBD0} Role Play";
				ShowPlayerDialog(playerid, 61, DIALOG_STYLE_LIST, "Помощь по игре", listitems, "Далее", "Отмена");
				showhelp[playerid] = 1;
			}
		}
		case 6004:
	    {
	        if(response)
	        {
	            new vehicleid = GetPlayerVehicleID(playerid);
				new car = PlayerInfo[playerid][pCar];
				if(car == 468 || car == 461 || car == 522 || car == 463 || car == 521)return SendClientMessage(playerid, COLOR_GREY, "Ваш транспорт не поддержвает диски");
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						PlayerInfo[playerid][pWheels] = 1073;
						AddVehicleComponent(vehicleid,1073);
						PlayerInfo[playerid][pCash] -= 10000;
						SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели диски марки {FFFFFF}Shadow");
					}
					case 1:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						PlayerInfo[playerid][pWheels] = 1074;
						PlayerInfo[playerid][pCash] -= 10000;
						AddVehicleComponent(vehicleid,1074);
						SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели диски марки {FFFFFF}Mega");
					}
					case 2:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						PlayerInfo[playerid][pWheels] = 1075;
						PlayerInfo[playerid][pCash] -= 10000;
						AddVehicleComponent(vehicleid,1075);
						SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели диски марки {FFFFFF}Rimshine");
					}
					case 3:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						PlayerInfo[playerid][pWheels] = 1076;
						PlayerInfo[playerid][pCash] -= 10000;
						AddVehicleComponent(vehicleid,1076);
						SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели диски марки {FFFFFF}Cable");

					}
					case 4:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						PlayerInfo[playerid][pWheels] = 1077;
						PlayerInfo[playerid][pCash] -= 10000;
						SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели диски марки {FFFFFF}Classic");
					}
     				case 5:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						PlayerInfo[playerid][pWheels] = 1078;
						PlayerInfo[playerid][pCash] -= 10000;
						AddVehicleComponent(vehicleid,1078);
						SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели диски марки {FFFFFF}Twist");
					}
					case 6:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						PlayerInfo[playerid][pWheels] = 1079;
						PlayerInfo[playerid][pCash] -= 10000;
						AddVehicleComponent(vehicleid,1079);
						SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели диски марки {FFFFFF}Rezak");
					}
					case 7:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						PlayerInfo[playerid][pWheels] = 1080;
						PlayerInfo[playerid][pCash] -= 10000;
						AddVehicleComponent(vehicleid,1080);
						SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели диски марки {FFFFFF}Switches");
					}
					case 8:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						PlayerInfo[playerid][pWheels] = 1081;
						PlayerInfo[playerid][pCash] -= 10000;
						AddVehicleComponent(vehicleid,1081);
						SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели диски марки {FFFFFF}Grove");
					}
					case 9:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						PlayerInfo[playerid][pWheels] = 1082;
						PlayerInfo[playerid][pCash] -= 10000;
						AddVehicleComponent(vehicleid,1082);
						SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели диски марки {FFFFFF}Import");
					}
					case 10:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						PlayerInfo[playerid][pWheels] = 1083;
						PlayerInfo[playerid][pCash] -= 10000;
						AddVehicleComponent(vehicleid,1083);
						SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели диски марки {FFFFFF}Dollar");
					}
					case 11:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						PlayerInfo[playerid][pWheels] = 1084;
						PlayerInfo[playerid][pCash] -= 10000;
						AddVehicleComponent(vehicleid,1084);
						SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели диски марки {FFFFFF}Trans");
					}
					case 12:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						PlayerInfo[playerid][pWheels] = 1085;
						PlayerInfo[playerid][pCash] -= 10000;
						AddVehicleComponent(vehicleid,1085);
						SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели диски марки {FFFFFF}Atomic");
					}
					case 13:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						PlayerInfo[playerid][pWheels] = 1096;
						PlayerInfo[playerid][pCash] -= 10000;
						AddVehicleComponent(vehicleid,1096);
						SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели диски марки {FFFFFF}Ahab");
					}
					case 14:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						PlayerInfo[playerid][pWheels] = 1097;
						PlayerInfo[playerid][pCash] -= 10000;
						AddVehicleComponent(vehicleid,1097);
						SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели диски марки {FFFFFF}Virtual");
					}
					case 15:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						PlayerInfo[playerid][pWheels] = 1098;
						PlayerInfo[playerid][pCash] -= 10000;
						AddVehicleComponent(vehicleid,1098);
						SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели диски марки {FFFFFF}Acces");
					}
				}
			}
			else
			{
				OnPlayerCommandText(playerid, "/mytune");
			}
    	}
	    case 6019:
	    {
	        if(response)
	        {
	            new vehicleid = GetPlayerVehicleID(playerid);
	 			new cvettt;
				cvettt = strval(inputtext);
				PlayerInfo[playerid][pPaintJob] = 3;
				ChangeVehiclePaintjob(vehicleid,3);
				PlayerInfo[playerid][pColor1] = cvettt;
				PlayerInfo[playerid][pCash] -= 500;
				ChangeVehicleColor(vehicleid,PlayerInfo[playerid][pColor],cvettt);
 				SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели {FFFFFF}покраску.");
 				OnPlayerCommandText(playerid,"/mytune");
			}
			else
			{
			    ShowPlayerDialog(playerid, 6006, DIALOG_STYLE_INPUT, "Цвета","Введите ID основного цвета:", "Выбрать", "<< Назад");
			}
    	}
	    case 6006:
	    {
	        if(response)
	        {
            	new vehicleid = GetPlayerVehicleID(playerid);
				new cvettt;
				cvettt = strval(inputtext);
 				PlayerInfo[playerid][pCash] -= 500;
 				PlayerInfo[playerid][pColor] = cvettt;
 				ChangeVehicleColor(vehicleid,cvettt,PlayerInfo[playerid][pColor1]);
  				ShowPlayerDialog(playerid, 6019, DIALOG_STYLE_INPUT, "Цвета","Введите ID дополнительного цвета\n{e23434}Не на всех машинах есть дополнительный цвет!!!", "Выбрать", "<< Назад");
			}
			else
			{
			    OnPlayerCommandText(playerid, "/mytune");
			}
    	}
		case 9623:
	    {
			if(response)
			{
				switch(listitem)
				{
					case 0: ShowPlayerDialog(playerid, 9973, DIALOG_STYLE_LIST, "Настройки", "{e23434}[1]{ffffff}Выключить чат семьи\n{e23434}[2]{ffffff}Включить чат семьи\n{e23434}[3]{ffffff}Сменить пол", "Выбрать", "Назад");
					case 1: ShowStats(playerid,playerid);
					case 2: ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "Команды сервера", "{e23434}[1]{ffffff}Новые команды\n{e23434}[2]{ffffff}Обычные\n{e23434}[3]{ffffff}Чат\n{e23434}[3]{ffffff}Телефон\n{e23434}[4]{ffffff}Мои команды\n{e23434}[5]{ffffff}Главным\n{e23434}[6]{ffffff}Дом\n{e23434}[7]{ffffff}Бизнес\n{e23434}[8]{ffffff}Автомобиль\n{e23434}[9]{ffffff}Автомастерские\n{e23434}[10]{ffffff}Банк", "Выбрать", "Назад");
                    case 3: ShowPlayerDialog(playerid, 14288, DIALOG_STYLE_LIST, "Администратция", "{e23434}[1]{FFFFFF}Задать вопрос\n{e23434}[2]{FFFFFF}Отправить жалобу","Выбрать", "Назад");
					//case 3: ShowPlayerDialog(playerid,10,DIALOG_STYLE_INPUT, "{e23434}Отправить жалобу на игрока", "{FFCC33}Вы собираетесь отправить жалобу на игрока/задать вопрос?\nЕсли вы хотите написать жалобу то пишите по форме\n-\nID: << ид писать сюда >> нарушителя: << {e23434}суть жалобы {FFCC33}>>.\n-\nЕсли же вы хотите задать вопрос, то пишите по форме\n-\n[Вопрос]: << {e23434}Суть вопроса {FFCC33} >>\n-\n{e23434}ЖАЛОБЫ/ВОПРОСЫ НЕ ПО ФОРМЕ ИГНОРИРУЮТЬСЯ!!!", "Готово", "Назад");
					case 4: ShowPlayerDialog(playerid,11,DIALOG_STYLE_INPUT, "Смена пароля", "    Введите Ваш новый пароль     ", "Принять", "Назад");
					case 5:
					{
						new clearc;
						while(clearc++ < 99)
						SendClientMessage(playerid, COLOR_WHITE, " ");
					}
		        	case 6: ShowPlayerDialog(playerid,8842,DIALOG_STYLE_INPUT, "Слив денег", "Если к Вам попали ворованные деньги отправьте их администрации сервера.\nИначе Вы будете забанены как соучастник", "Слив", "Назад");
			        case 7:
					{
						if(PlayerInfo[playerid][pCheckip]== 0) return ShowPlayerDialog(playerid,14,DIALOG_STYLE_INPUT, "Ключ безопасности", "У Вас не установлен ключ безопасности!\nВведите  ключ безопасности состоящий из 5 - 16 символом", "Готово", "Назад");
						ShowPlayerDialog(playerid, 2323, DIALOG_STYLE_LIST, "Безопасность", "[1] Вкл./Откл. проверку по IP\n[1] Сменить ключ\n[2] Последний вход\n[3] Помощь", "Выбрать", "Назад");
						return true;
					}
					case 8: ShowPlayerDialog(playerid,9943,DIALOG_STYLE_INPUT, "Заявка на смену ника", "Напишите новый ник (по форме Имя_Фамилия)", "Отправить", "Назад");
					case 9: OnPlayerCommandText(playerid,"/donate");//ShowPlayerDialog(playerid,1993,DIALOG_STYLE_INPUT, "Donate", "==========================\n	Введите донат код:\n==========================", "Далее", "Отмена");
					case 10: OnPlayerCommandText(playerid, "/sbag");
				}
			}
			else
			{
				return true;
			}
		}
		case 2008:
		{
			if(response)
			{
    			if(listitem == 0)
				{
				    SetPlayerSpecialAction(playerid, 5);
				    PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
        			return 1;
				}
    			else if(listitem == 1)
				{
        			ApplyAnimation(playerid, "DANCING", "DAN_Loop_A", 4.0999, 0, 1, 1, 1, 1, 1);
    				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
        			return 1;
				}
    			else if(listitem == 2)
				{
					SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE4);
				 	PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
        			return 1;
				}
    			else if(listitem == 3)
				{
        			SetPlayerSpecialAction(playerid, 10);
     				return 1;
				}
    			else if(listitem == 4)
				{
				    ApplyAnimation(playerid, "Attractors", "Stepsit_in", 4.0999, 0, 1, 1, 1, 1, 0);
				    PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
        			return 1;
				}
			    else if(listitem == 5)
				{
        			ApplyAnimation(playerid, "Attractors", "Stepsit_out", 4.0999, 0, 1, 1, 1, 1, 0);
   				 	PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
        			return 1;
				}
    			else if(listitem == 6)
				{
				    ApplyAnimation(playerid, "FOOD", "SHP_Tray_Lift_Out", 4.0999, 0, 1, 1, 1, 1, 0);
				    PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
        			return 1;
				}
    			else if(listitem == 7)
				{
        			ApplyAnimation(playerid, "FOOD", "SHP_Tray_Out", 4.0999, 0, 1, 1, 1, 1, 0);
    				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
   				 	return 1;
				}
    			else if(listitem == 8)
				{
    				ApplyAnimation(playerid, "GANGS", "hndshkca", 4.0999, 0, 1, 1, 1, 1, 0);
    				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
        			return 1;
				}
    			else if(listitem == 9)
				{
				    ApplyAnimation(playerid, "GANGS", "hndshkda", 4.0999, 0, 1, 1, 1, 1, 0);
				    PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
        			return 1;
				}
    			else if(listitem == 10)
				{
					ApplyAnimation(playerid, "GANGS", "hndshkea", 4.0999, 0, 1, 1, 1, 1, 0);
        			return 1;
				}
    			else if(listitem == 11)
				{
        			ApplyAnimation(playerid, "GANGS", "leanIN", 4.0999, 0, 1, 1, 1, 1, 0);
     				SetPlayerChatBubble(playerid,"Зивнул",COLOR_PURPLE,30.0,10000);
         			return 1;
				}
				else  if(listitem == 12)
				{
					ApplyAnimation(playerid, "GANGS", "prtial_gngtlkB", 4.0999, 0, 1, 1, 1, 1, 0);
        			return 1;
				}
				else if(listitem == 13)
				{
					ApplyAnimation(playerid, "OTB", "wtchrace_lose", 4.0999, 0, 1, 1, 1, 1, 0);
    				return 1;
				}
				else if(listitem == 14)
				{
					ApplyAnimation(playerid, "COP_AMBIENT", "Copbrowse_shake", 4.0999, 0, 1, 1, 1, 1, 0);
   				 	return 1;
				}
				else if(listitem == 15)
				{
    				ApplyAnimation(playerid, "CRACK", "crckidle1", 4.0999, 0, 1, 1, 1, 1, 0);
    				return 1;
				}
				else if(listitem == 16)
				{
					ApplyAnimation(playerid, "CRACK", "crckidle2", 4.0999, 0, 1, 1, 1, 1, 0);
    				return 1;
				}
				else if(listitem == 17)
				{
				    ApplyAnimation(playerid, "JST_BUISNESS", "girl_02", 4.0999, 0, 1, 1, 1, 1, 0);
				    return 1;
				}
				else if(listitem == 18)
				{
					ApplyAnimation(playerid, "DAM_JUMP", "DAM_Dive_Loop", 4.0999, 0, 1, 1, 1, 1, 0);
    				return 1;
				}
				else if(listitem == 19)
				{
				    ApplyAnimation(playerid, "DEALER", "DEALER_IDLE", 4.0999, 0, 1, 1, 1, 1, 0);
				}
				else if(listitem == 20)
				{
					ApplyAnimation(playerid, "TATTOOS", "TAT_ArmL_Out_T", 4.0999, 0, 1, 1, 1, 1, 0);
    				return 1;
				}
				else if(listitem == 21)
				{
					ApplyAnimation(playerid,"BEACH","Lay_Bac_Loop",4.1,0,1,1,1,1);
    				return 1;
				}
				else if(listitem == 22)
				{
					ApplyAnimation( playerid, "DEALER", "DRUGS_BUY", 4.1, 1, 1, 1, 1, 1 ,1);
    				return 1;
				}
				else if(listitem == 23)
				{
					ApplyAnimation( playerid, "RYDER", "RYD_Die_PT1", 4.1, 1, 1, 1, 1, 1 ,1);
    				return 1;
				}
				else if(listitem == 24)
				{
					ApplyAnimation(playerid,"PED","SEAT_down", 4.1, 0, 0, 0, 0, 0 ,1);
    				return 1;
				}
			}
			else
        	{
            	return 1;
        	}
		}
		case 9973:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
				{
					gFam[playerid] = 1;
					SendClientMessage(playerid, 0x6495EDFF, "Просмотр семейного чата отключён!");
				}
				case 1:
				{
					gFam[playerid] = 0;
					SendClientMessage(playerid, 0x6495EDFF, "Просмотр семейного чата включён!");
				}
				case 2:
				{
					ShowPlayerDialog(playerid,8843,DIALOG_STYLE_LIST, "Меню выбора пола", "[0] Мужской\n[1] Женский", "Выбрать", "Назад"); }
				}
			}
			else
			{
				new listitems[] = "{e23434}[1]{ffffff}Настройки\n{e23434}[2]{ffffff}Мои данные\n{e23434}[3]{ffffff}Команды сервера\n{e23434}[4]{ffffff}Администратция\n{e23434}[5]{ffffff}Смена пароля\n{e23434}[6]{ffffff}Очистить чат\n{e23434}[7]{ffffff}Слив денег\n{e23434}[8]{ffffff}Безопастность\n{e23434}[9]{ffffff}Смена ника\n{e23434}[10]{ffffff}Донат\n";
				ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "Личное меню", listitems, "Выбрать", "Отмена");
				return true;
			}
		}
		case 8842:
		{
			if(response)
		    {
				new moneys;
				moneys = strval(inputtext);
				if(moneys > 999999999 || moneys < 1) return SendClientMessage(playerid, COLOR_RED, "Неверная сумма");
				if(PlayerInfo[playerid][pCash] < 1) return SendClientMessage(playerid, COLOR_RED, "У вас нет денег");
				PlayerInfo[playerid][pCash] -= moneys;
				format(string, sizeof(string), "Вы пожертвовали $ %d", moneys);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SendClientMessage(playerid, COLOR_LIGHTRED, "Большое спасибо за сотрудничество");
			    return true;
			}
			else
			{
				new listitems[] = "{e23434}[1]{ffffff}Настройки\n{e23434}[2]{ffffff}Мои данные\n{e23434}[3]{ffffff}Команды сервера\n{e23434}[4]{ffffff}Администратция\n{e23434}[5]{ffffff}Смена пароля\n{e23434}[6]{ffffff}Очистить чат\n{e23434}[7]{ffffff}Слив денег\n{e23434}[8]{ffffff}Безопастность\n{e23434}[9]{ffffff}Смена ника\n{e23434}[10]{ffffff}Донат\n";
				ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "Личное меню", listitems, "Выбрать", "Отмена");
				return true;
			}
		}
		case 8843:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
			        {
				        PlayerInfo[playerid][pSex] = 1;
				        SendClientMessage(playerid, COLOR_WHITE, "Вы сменили свой пол на Мужской");
				       	return true;
			        }
			        case 1:
			        {
				        PlayerInfo[playerid][pSex] = 2;
				        SendClientMessage(playerid, COLOR_WHITE, "Вы сменили свой пол на Женский");
						return true;
			        }
				}
			}
		 	else
			{
				new listitems[] = "{e23434}[1]{ffffff}Настройки\n{e23434}[2]{ffffff}Мои данные\n{e23434}[3]{ffffff}Команды сервера\n{e23434}[4]{ffffff}Администратция\n{e23434}[5]{ffffff}Смена пароля\n{e23434}[6]{ffffff}Очистить чат\n{e23434}[7]{ffffff}Слив денег\n{e23434}[8]{ffffff}Безопастность\n{e23434}[9]{ffffff}Смена ника\n{e23434}[10]{ffffff}Донат\n";
				ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "Личное меню", listitems, "Выбрать", "Отмена");
				return true;
			}
		}
		case 7925:
	    {
	        if(response)
	        {
		    	switch(listitem)
				{
					case 0:
			        {
		         		new listitems[] = " [1] M4\n [2] AK-47\n [3] MP5";
		    			ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Назад");
						return true;
					}
					case 1:
		            {
		                new listitems[] = " [1] Colt 45\n [2] Deagle";
		        		ShowPlayerDialog(playerid, 7927, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Назад");
						return true;
					}
					case 2:
		            {
		                new listitems[] = " [1] Shotgun";
		        		ShowPlayerDialog(playerid, 7928, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Назад");
						return true;
					}
				}
			}
			else
			{
				useguns[playerid] = 0;
				return true;
			}
		}
		case 7926:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
	                new listitems[] = " [1] 50 [7500] вирт\n [2] 100 [10500] вирт\n [3] 250 [12000] вирт\n [4] 500 [18500] вирт";
	    			ShowPlayerDialog(playerid, 7929, DIALOG_STYLE_LIST, "<< M4 >>", listitems, "Выбрать", "Назад");
	    			return true;
				}
				else if(listitem == 1)
	            {
	                new listitems[] = " [1] 50 [7500] вирт\n [2] 100 [10500] вирт\n [3] 250 [12000] вирт\n [4] 500 [18500] вирт";
	    			ShowPlayerDialog(playerid, 7930, DIALOG_STYLE_LIST, "<< AK - 47 >>", listitems, "Выбрать", "Назад");
	    			return true;
				}
				else if(listitem == 2)
	            {
	                new listitems[] = " [1] 50 [6000] вирт\n [2] 100 [8500] вирт\n [3] 250 [10000] вирт\n [4] 500 [14500] вирт";
	    			ShowPlayerDialog(playerid, 7931, DIALOG_STYLE_LIST, "<< MP5 >>", listitems, "Выбрать", "Назад");
	    			return true;
				}
			}
			else
			{
			    new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Винтовки и дробовики";
	    		ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
	    		return true;
			}
		}
		case 7929:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
					gun = 31; ammo = 50; money = 7500;
				}
				else if(listitem == 1)
	            {
	                gun = 31; ammo = 100; money = 10500;
	      		}
				else if(listitem == 2)
	            {
	                gun = 31; ammo = 250; money = 12000;
				}
				else if(listitem == 3)
	            {
	                gun = 31; ammo = 500; money = 18500;
				}
				if(PlayerInfo[playerid][pCash] < money) return SendClientMessage(playerid, COLOR_GREY, "У вас не хватает денег!");
				GetWeaponName(gun, gunname, sizeof(gunname));
				GiveWeapon(playerid, gun, ammo);
				PlayerInfo[playerid][pCash] -= money;
				format(string, 256, "Вы купили оружие %s за %d вирт",gunname, money);
				useguns[playerid] = 0;
				MafiaBank[0][nYakuza] += money;
				MafiaBank[0][nRm] += money;
				MafiaBank[0][nLcn] += money;
				SendClientMessage(playerid, COLOR_WHITE, string);
	            new listitems[] = " [1] 50 [7500] вирт\n [2] 100 [10500] вирт\n [3] 250 [12000] вирт\n [4] 500 [18500] вирт";
	    		ShowPlayerDialog(playerid, 7929, DIALOG_STYLE_LIST, "<< M4 >>", listitems, "Выбрать", "Назад");
				return true;
			}
			else
			{
	         	new listitems[] = " [1] M4\n [2] AK-47\n [3] MP5";
	    		ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Назад");
	   			return true;
			}
		}
		case 7930:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
					gun = 30; ammo = 50; money = 7500;
				}
				else if(listitem == 1)
	            {
	                gun = 30; ammo = 100; money = 10500;
				}
				else if(listitem == 2)
	            {
	                gun = 30; ammo = 250; money = 12000;
				}
				else if(listitem == 3)
	            {
	                gun = 30; ammo = 500; money = 18500;
				}
				if(PlayerInfo[playerid][pCash] < money) return SendClientMessage(playerid, COLOR_GREY, "У вас не хватает денег!");
				GetWeaponName(gun, gunname, sizeof(gunname));
				GiveWeapon(playerid, gun, ammo);
				PlayerInfo[playerid][pCash] -= money;
				format(string, 256, "Вы купили оружие %s за %d вирт",gunname, money);
				useguns[playerid] = 0;
				MafiaBank[0][nYakuza] += money;
				MafiaBank[0][nRm] += money;
				MafiaBank[0][nLcn] += money;
				SendClientMessage(playerid, COLOR_WHITE, string);
	            new listitems[] = " [1] 50 [7500] вирт\n [2] 100 [10500] вирт\n [3] 250 [12000] вирт\n [4] 500 [18500] вирт";
	    		ShowPlayerDialog(playerid, 7930, DIALOG_STYLE_LIST, "<< AK - 47 >>", listitems, "Выбрать", "Назад");
				return true;
			}
			else
			{
	         	new listitems[] = " [1] M4\n [2] AK-47\n [3] MP5";
	    		ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Назад");
	   			return true;
			}
		}
		case 7931:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
					gun = 29; ammo = 50; money = 6000;
				}
				else if(listitem == 1)
	            {
	                gun = 29; ammo = 100; money = 8500;
				}
				else if(listitem == 2)
	            {
	                gun = 29; ammo = 250; money = 10000;
				}
				else if(listitem == 3)
	            {
	                gun = 29; ammo = 500; money = 14500;
				}
				if(PlayerInfo[playerid][pCash] < money) return SendClientMessage(playerid, COLOR_GREY, "У вас не хватает денег!");
				GetWeaponName(gun, gunname, sizeof(gunname));
				GiveWeapon(playerid, gun, ammo);
				PlayerInfo[playerid][pCash] -= money;
				format(string, 256, "Вы купили оружие %s за %d вирт",gunname, money);
				SendClientMessage(playerid, COLOR_WHITE, string);
				useguns[playerid] = 0;
				MafiaBank[0][nYakuza] += money;
				MafiaBank[0][nRm] += money;
				MafiaBank[0][nLcn] += money;
	            new listitems[] = " [1] 50 [6000] вирт\n [2] 100 [8500] вирт\n [3] 250 [10000] вирт\n [4] 500 [14500] вирт";
	    		ShowPlayerDialog(playerid, 7931, DIALOG_STYLE_LIST, "<< MP5 >>", listitems, "Выбрать", "Назад");
				return true;
			}
			else
			{
	         	new listitems[] = " [1] M4\n [2] AK-47\n [3] MP5";
	    		ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Назад");
	   			return true;
			}
		}
		case 7927:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
	   				new listitems[] = " [1] 50 [500] вирт\n [2] 100 [1000] вирт\n [3] 250 [1500] вирт\n [4] 500 [3000] вирт";
	   				ShowPlayerDialog(playerid, 7932, DIALOG_STYLE_LIST, "<< Colt 45 >>", listitems, "Выбрать", "Назад");
	    			return true;
				}
	            if(listitem == 1)
	            {
	                new listitems[] = " [1] 50 [4000] вирт\n [2] 100 [6500] вирт\n [3] 250 [9500] вирт\n [4] 500 [13000] вирт";
	    			ShowPlayerDialog(playerid, 7933, DIALOG_STYLE_LIST, "<< Deagle >>", listitems, "Выбрать", "Назад");
	    			return true;
				}
			}
			else
			{
			    new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Винтовки и дробовики";
	    		ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
	    		return true;
			}
		}
		case 7932:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
					gun = 22; ammo = 50; money = 500;
				}
				else if(listitem == 1)
	            {
	                gun = 22; ammo = 100; money = 1000;
				}
				else if(listitem == 2)
	            {
	                gun = 22; ammo = 250; money = 1500;
				}
				else if(listitem == 3)
	            {
	                gun = 22; ammo = 500; money = 3000;
				}
				if(PlayerInfo[playerid][pCash] < money) return SendClientMessage(playerid, COLOR_GREY, "У вас не хватает денег!");
				GetWeaponName(gun, gunname, sizeof(gunname));
				GiveWeapon(playerid, gun, ammo);
				PlayerInfo[playerid][pCash] -= money;
				useguns[playerid] = 0;
				MafiaBank[0][nYakuza] += money;
				MafiaBank[0][nRm] += money;
				MafiaBank[0][nLcn] += money;
				format(string, 256, "Вы купили оружие %s за %d вирт",gunname, money);
				SendClientMessage(playerid, COLOR_WHITE, string);
	   			new listitems[] = " [1] 50 [500] вирт\n [2] 100 [1000] вирт\n [3] 250 [1500] вирт\n [4] 500 [3000] вирт";
	   			ShowPlayerDialog(playerid, 7932, DIALOG_STYLE_LIST, "<< Colt 45 >>", listitems, "Выбрать", "Назад");
	   			return true;
			}
			else
			{
			    new listitems[] = " [1] Colt 45\n [2] Deagle";
	    		ShowPlayerDialog(playerid, 7927, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Назад");
			}
		}
		case 7933:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
					gun = 24; ammo = 50; money = 4000;
				}
				else if(listitem == 1)
	            {
	                gun = 24; ammo = 100; money = 6500;
				}
				else if(listitem == 2)
	            {
	                gun = 24; ammo = 250; money = 9500;
				}
				else if(listitem == 3)
	            {
	                gun = 24; ammo = 500; money = 13000;
				}
				if(PlayerInfo[playerid][pCash] < money) return SendClientMessage(playerid, COLOR_GREY, "У вас не хватает денег!");
				GetWeaponName(gun, gunname, sizeof(gunname));
				GiveWeapon(playerid, gun, ammo);
				PlayerInfo[playerid][pCash] -= money;
				useguns[playerid] = 0;
				MafiaBank[0][nYakuza] += money;
				MafiaBank[0][nRm] += money;
				MafiaBank[0][nLcn] += money;
				format(string, 256, "Вы купили оружие %s за %d вирт",gunname, money);
				SendClientMessage(playerid, COLOR_WHITE, string);
	            new listitems[] = " [1] 50 [4000] вирт\n [2] 100 [6500] вирт\n [3] 250 [9500] вирт\n [4] 500 [13000] вирт";
	    		ShowPlayerDialog(playerid, 7933, DIALOG_STYLE_LIST, "<< Deagle >>", listitems, "Выбрать", "Назад");
	   			return true;
			}
			else
			{
			    new listitems[] = " [1] Colt 45\n [2] Deagle";
	    		ShowPlayerDialog(playerid, 7927, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Назад");
			}
		}
		case 7928:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
	                new listitems[] = " [1] 50 [4500] вирт\n [2] 100 [6000] вирт\n [3] 250 [9500] вирт\n [4] 500 [11000] вирт";
	    			ShowPlayerDialog(playerid, 7935, DIALOG_STYLE_LIST, "<< Shotgun >>", listitems, "Выбрать", "Назад");
	    			return true;
				}
	 		}
			else
			{
			    new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Винтовки и дробовики";
	    		ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
	    		return true;
			}
		}
		case 7935:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
					gun = 25; ammo = 50; money = 4500;
				}
				else if(listitem == 1)
	            {
	                gun = 25; ammo = 100; money = 6000;
				}
				else if(listitem == 2)
	            {
	                gun = 25; ammo = 250; money = 9500;
				}
				else if(listitem == 3)
	            {
	                gun = 25; ammo = 500; money = 11000;
				}
				if(PlayerInfo[playerid][pCash] < money) return SendClientMessage(playerid, COLOR_GREY, "У вас не хватает денег!");
				GetWeaponName(gun, gunname, sizeof(gunname));
				GiveWeapon(playerid, gun, ammo);
				PlayerInfo[playerid][pCash] -= money;
				useguns[playerid] = 0;
				MafiaBank[0][nYakuza] += money;
				MafiaBank[0][nRm] += money;
				MafiaBank[0][nLcn] += money;
				format(string, 256, "Вы купили оружие %s за %d вирт",gunname, money);
				SendClientMessage(playerid, COLOR_WHITE, string);
	            new listitems[] = " [1] 50 [4500] вирт\n [2] 100 [6000] вирт\n [3] 250 [9500] вирт\n [4] 500 [11000] вирт";
	    		ShowPlayerDialog(playerid, 7935, DIALOG_STYLE_LIST, "<< Shotgun >>", listitems, "Выбрать", "Назад");
	   			return true;
			}
			else
			{
	    		ShowPlayerDialog(playerid, 7928, DIALOG_STYLE_LIST, "Магазин оружия", " [1] Shotgun", "Выбрать", "Назад");
			}
		}
		case 2934:
	    {
	        if(response)
	        {
	            if(!strlen(inputtext)) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
                Dostup[playerid] = strval(inputtext);
				if(Dostup[playerid] == PlayerInfo[playerid][pDostup])
	            {
					if(PlayerInfo[playerid][pAdmin] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не администратор");
	                dostup[playerid] = 1;
					new sendername[MAX_PLAYER_NAME];
	                new playersip[256];
	               	GetPlayerName(playerid, sendername, sizeof(sendername));
	               	GetPlayerIp(playerid, playersip, sizeof(playersip));
					format(string, sizeof(string), "{ffffff}[A] Вы успешно авторизовались как {009933}Администратор", PlayerInfo[playerid][pAdmin]);
	 				SendClientMessage(playerid, 0xCC9900FF, string);
 					format(string, sizeof(string), "{ffffff}[A] {006600}Администратор {ffffff}%s[%d] зашел в систему администратирования", sendername, playerid, playersip);
					ABroadCast(0xCC9900FF, string, 1);
	   				return true;
				}
				else
				{
				    new sendername[MAX_PLAYER_NAME];
	                new playersip[256];
   					GetPlayerName(playerid, sendername, sizeof(sendername));
	               	GetPlayerIp(playerid, playersip, sizeof(playersip));
				    format(string, sizeof(string), "{e23434}Игрока/админ %s[%d] ввел неправильный пароль [norm ip: %s] ", sendername, playerid, playersip);
					ABroadCast(COLOR_LIGHTRED, string, 1);
					SendClientMessage(playerid, 0xFF0000FF, "Вы ввели неверный пароль, обратитесь к основателю.");
					return true;
				}
			}
			else
			{
				return true;
			}
		}
		case 16:
	    {
	        if(response)
	        {
	            if(!strlen(inputtext))
	           	{
					ShowPlayerDialog(playerid,16,DIALOG_STYLE_INPUT, "Введите ключ безопастности", "    ==== Ваш IP адрес сменился ====\n=== Введите Ваш ключ безопасности ===", "Готово", "Отмена");
					SetPlayerInterior(playerid,0);
					SetPlayerFacingAngle(playerid, 179.5547);
					SetPlayerCameraPos(playerid,-1817.0808,1112.9937,235.4244);
					SetPlayerCameraLookAt(playerid,-1816.5471,949.6590,235.4244);
					TogglePlayerControllable(playerid, 0);
					gPlayerLogged[playerid] = 0;
					return true;
	            }
	            keyip[playerid] = strval(inputtext);
	            if(keyip[playerid] == PlayerInfo[playerid][pKeyip])
	            {
	            	new playersip[256];
					new sendername[MAX_PLAYER_NAME];
	                GetPlayerIp(playerid,playersip,sizeof(playersip));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s.ini",sendername);
					new files = ini_openFile(string);
					if(files < 0) print("нет файла");
					else
					{
						ini_setString(files, "pIp",playersip);
						ini_closeFile(files);
					}
					gPlayerLogged[playerid] = 1;
					SpawnPlayer(playerid);
					SetPlayerWeapons(playerid);
					TogglePlayerControllable(playerid, 1);
	   				return true;
				}
				else
				{
					ShowPlayerDialog(playerid,69,DIALOG_STYLE_MSGBOX, "{B20000}Внимание", "{FF6347}Вы были кикнуты с сервера\nПричина: 'Не верный ключ безопасности'\nВведите '/q', чтобы выйти", "Закрыть", "");
					FixKickedPlayer[playerid] = 1;
					return true;
				}
			}
			else
	  		{
			    return true;
			}
	    }
		case 10007:
		{
	        new name[MAX_PLAYER_NAME];
	        GetPlayerName(playerid, name, sizeof(name));
			if(response)
			{
				if(!strlen(inputtext))
				{
					format(string,256, "{ffffff}Добро пожаловать на {FFCC00}Arizona Role Play{ffffff}\n\n Введите свой пароль\nПопыток для ввода пароля: {009933}3", name);
					ShowPlayerDialog(playerid,10007,DIALOG_STYLE_PASSWORD, "{CC0000}Авторизация",string, "Принять", " ");
					return true;
				}
				new pass[256];
				GetPlayerName(playerid,playername,sizeof(playername));
				format(string,sizeof(string), "%s.ini",playername);
				new File = ini_openFile(string);
				ini_getString(File, "Key",pass);
				ini_closeFile(File);
				for(new i = strlen(inputtext); i != 0; --i)
 				switch(inputtext[i])
				{
					case 'А'..'Я', 'а'..'я', ' ':
					return ShowPlayerDialog(playerid,10007,DIALOG_STYLE_MSGBOX, "Ошибка!", "{ffffff}Добро пожаловать на {FFCC33}Arizona Role Play\n\n{ffffff}Введите свой пароль.", "Повтор", "");
				}
				if(!strcmp((inputtext),pass,true))
				{
					OnPlayerLogin(playerid,(inputtext));
				}
				else
				{
					ShowPlayerDialog(playerid,69,DIALOG_STYLE_MSGBOX, "{B20000}Внимание", "{FF6347}Вы были кикнуты\nВведите '/q', чтобы выйти", "Закрыть", "");
					FixKickedPlayer[playerid] = 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Для выхода из игры используйте /q(uit)");
	 			FixKickedPlayer[playerid] = 1;
			}
		}
		case 10008:
		{
	        new name[MAX_PLAYER_NAME];
	        GetPlayerName(playerid, name, sizeof(name));
			if(response)
			{
				if(!strlen(inputtext))
				{
					format(string,256, "{ffffff}Добро пожаловать на {FFCC33}Arizona Role Play\n\n{ffffff}Введите свой пароль\n{ffffff}Попыток для ввода пароля: {009933}", name);
	           		ShowPlayerDialog(playerid,10008,DIALOG_STYLE_PASSWORD, "{CC0000}Авторизация",string, "Принять", " ");
					return true;
				}
				new pass[256];
				GetPlayerName(playerid,playername,sizeof(playername));
				format(string,sizeof(string), "%s.ini",playername);
				new File = ini_openFile(string);
				ini_getString(File, "Key",pass);
				ini_closeFile(File);
				for(new i = strlen(inputtext); i != 0; --i)
 				switch(inputtext[i])
				{
					case 'А'..'Я', 'а'..'я', ' ':
					return ShowPlayerDialog(playerid,10008,DIALOG_STYLE_MSGBOX, "{CC0000}Авторизация", "{ffffff}Добро пожаловать на {FFCC33}Arizona Role Play\n\n{ffffff}Введите свой пароль", "Принять", "");
				}
				if(!strcmp((inputtext),pass,true))
				{
					OnPlayerLogin(playerid,(inputtext));
				}
	            else
				{
					format(string,256, "{ffffff}Добро пожаловать на {FFCC33}Arizona Role Play\n\n{ffffff}Введите свой пароль.\n Осталось попыток: {e23434}1");
					ShowPlayerDialog(playerid,10007,DIALOG_STYLE_MSGBOX, "Ошибка!",string, "Повтор", "Выйти");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Для выхода из игры используйте /q(uit)");
				FixKickedPlayer[playerid] = 1;
			}
		}
		case 10009:
	    {
			new loginmsg[1000];
		   	new loginname[MAX_PLAYER_NAME];
		   	GetPlayerName(playerid,loginname,sizeof(loginname));
	        if(response)
	        {
	  			format(loginmsg,sizeof(loginmsg), "{ffffff}Добро пожаловать, {0033FF}%s\n\n{ffffff}Этот аккаунт {FF3366}не зарегистрирован{ffffff} на нашем сервере.\n{ffffff}Для регистрации введите пароль.\n{ffffff}Он будет использоваться для авторизации на нашем сервере.\n\n\t{CC0000}Примечания:\n\t{CC0000}- Длина пароль должен состоять из букв и цифр\n\t{CC0000}- Пароль чувствиленег к регистру{ffffff}",loginname);
				ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT, "{FFFFFF}Регистрация",loginmsg, "Готово", "Отмена");
		    	return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Для выхода из игры используйте /q(uit)");
	  			FixKickedPlayer[playerid] = 1;
			}
		}
	}
	while(strfind(inputtext, "%s",true)!=-1)
	{
		strdel(inputtext,strfind(inputtext, "%s",true),strfind(inputtext, "%s",true)+2);
	}
	return true;
}
public OnPlayerDisconnect(playerid, reason)
{
	new sendername[MAX_PLAYER_NAME];
	new string[128];
	new playersip[125];
	new year, month,day;
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
    	if(GetPlayerState(i) == PLAYER_STATE_SPECTATING && gSpectateID[i] == playerid)
    	{
        	StopSpectate(i);
        	SetPlayerHealthAC(i, 100);
        	format(string, sizeof(string), "~w~RECON ~r~ OFF~n~ ~r~PLAYER DISCONNECT");
        	GameTextForPlayer(i, string, 5000, 3);
		}
    }
    if(gPlayerLogged[playerid] == 1) strmid(ExitInfo[playerid][ExitName],playername, 0, strlen(playername), 32), ExitInfo[playerid][ExitTime] = GetTickCount();
	FixKickedPlayer[playerid] = 0;
	SetPlayerSkills(playerid);
	SaveWeapon(playerid);
    KillTimer(Collectionit[playerid]);
	KillTimer(Timerkk[playerid]);
	KillTimer(SpeedTimer[playerid]);
	zips[playerid] = 0;
	IsConnected[playerid] = 0;
	RobbingCar[playerid] = false;
	FormaFrac[playerid] = 0;
	MehJob[playerid] = 999;
	AntiDM[playerid] = 0;
	robh[playerid] = false;
	showhelp[playerid] = 0;
	PlayerPaintballing[playerid] = 0;
	arenda[playerid] = 0;
	afkto[playerid] = 0;
	chet[playerid] = 0;
	arenda[playerid] = 0;
	adminreadsms[playerid] = 0;
	adminreadpay[playerid] = 0;
	adminreadconnect[playerid] = 0;
	BigEar[playerid] = 0;
	AddictionsTimer[playerid] = 0;
	proverkaforma[playerid] = 0;
	usegruz[playerid] = 0;
	keys[playerid] = 0;
	SelectCharPlace[playerid] = 0;
	CharPrice[playerid] = 0;
  	SelectCharID[playerid] = 0;
	SelectChar[playerid] = 0;
    SelectCharPlace[playerid] = 0;
	SelectCharID[playerid] = 0;
	SelectChar[playerid] = 0;
    PicCP[playerid] = 0;
	PlayerRacing[playerid] = 0;
	balonchik[playerid] = 0;
	enterbiz[playerid] = 0;
	Zhyk[playerid] = 0;
	RemovePlayerAttachedObject(playerid, 0);
	RemovePlayerAttachedObject(playerid, 1);
	RemovePlayerAttachedObject(playerid, 2);
    RemovePlayerAttachedObject(playerid, 3);
    RemovePlayerAttachedObject(playerid, 4);
    RemovePlayerAttachedObject(playerid, 5);
	RemovePlayerAttachedObject(playerid, 6);
	RemovePlayerAttachedObject(playerid, 7);
	RemovePlayerAttachedObject(playerid, 8);
    RemovePlayerAttachedObject(playerid, 9);
    DeletePVar(playerid,"LOGGED");
	{
		if(gcontract[playerid] == 1)
		{
			Delete3DTextLabel(Meh3d[GetPlayerVehicleID(playerid)]);
			gcontract[playerid] = 0;
		}
	}
	if(PlayerPaintballing[playerid] == 1)
	{
	    PlayerPaintballing[playerid] = 0;
	    PaintballPlayers -= 1;
	}
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	    adminreadsms[playerid] = 0;
	    adminreadpay[playerid] = 0;
	    adminreadconnect[playerid] = 0;
	}
	if(PlayerInfo[playerid][pPHousekey] != 255)
	{
		PlayerInfo[playerid][pFuelCar] = Fuell[caridhouse[playerid]];
		Fuell[caridhouse[playerid]] = 0;
		DestroyVehicle(caridhouse[playerid]);
		createdcar --;
	}
	if(lNews[playerid] == 0)
	{
		radiols--;
		PlayerInfo[playerid][pRadio] = 2;
	}
	if(gNews[playerid] == 0)
	{
		radiosf--;
		PlayerInfo[playerid][pRadio] = 1;
	}
	if(LvNews[playerid] == 0)
	{
		radiolv--;
		PlayerInfo[playerid][pRadio] = 3;
	}
	format(WantNickChange[playerid],MAX_PLAYER_NAME, "");
	GetPlayerIp(playerid,playersip,sizeof(playersip));
	getdate(year, month, day);
	new hour, minute, second;
	gettime(hour, minute, second);
	GetPlayerName(playerid, sendername, sizeof(sendername));
	GetPlayerIp(playerid,playersip,sizeof(playersip));
	format(string, sizeof(string), "%s.ini",sendername);
	new file = ini_openFile(string);
	if(file < 0) print("нет файла");
	else
	{
		ini_setInteger(file, "pVhoddata",day);
		ini_setInteger(file, "pVhodMes",month);
		ini_setInteger(file, "pVhodchas",hour);
		ini_setInteger(file, "pVhodminute",minute);
		ini_closeFile(file);
	}
	if(SelectChar[playerid] == 255)
	{
		SetPlayerSkin(playerid, OldSkin[playerid]);
		PlayerInfo[playerid][pChar] = OldSkin[playerid];
		SelectChar[playerid] = 0;
	}
	if(PlayerInfo[playerid][pAdmin] >= 1)
  	{
		dostup[playerid] = 0;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "<ALogin> вышел %s[%d]", sendername, playerid);
   		ABroadCast(0xCC9900FF, string, 1);
  	}
	if(PlayerBoxing[playerid] > 0)
	{
		if(Boxer1 == playerid)
		{
			if(IsPlayerConnected(Boxer2))
			{
				PlayerBoxing[Boxer2] = 0;
				ACP_SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
				SetPlayerInterior(Boxer2, 5);
				GameTextForPlayer(Boxer2, "~r~BREAK", 5000, 1);
			}
		}
		else if(Boxer2 == playerid)
		{
			if(IsPlayerConnected(Boxer1))
			{
				PlayerBoxing[Boxer1] = 0;
				ACP_SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186);
				SetPlayerInterior(Boxer1, 5);
				GameTextForPlayer(Boxer1, "~r~BREAK", 5000, 1);
			}
		}
		InRing = 0;
 		RoundStarted = 0;
		Boxer1 = 255;
		Boxer2 = 255;
		TBoxer = 255;
	}
   	if(TransportDuty[playerid] == 1)
	{
		TaxiDrivers -= 1;
	}
   	if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pMember] == 23)
	{
	    Medics -= 1;
	}
	if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pMember] == 21)
	{
	    Police -= 1;
	}
	else if(PlayerInfo[playerid][pJob] == 2)
	{
	    Mechanics -= 1;
	}
	if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
	{
	    if(IsPlayerConnected(TransportDriver[playerid]))
		{
		    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
		    TransportTime[TransportDriver[playerid]] = 0;
		    TransportCost[TransportDriver[playerid]] = 0;
		    format(string, sizeof(string), "~g~+%d",TransportCost[playerid]);
		    GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
		}
	}
	OnPlayerUpdateAc(playerid);
	return true;
}
stock SetPlayerWeapons(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pSlot][0] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][0], PlayerInfo[playerid][pSlotammo][0]);
		}
		if(PlayerInfo[playerid][pSlot][1] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][1], PlayerInfo[playerid][pSlotammo][1]);
		}
		if(PlayerInfo[playerid][pSlot][2] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][2], PlayerInfo[playerid][pSlotammo][2]);
		}
		if(PlayerInfo[playerid][pSlot][3] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][3], PlayerInfo[playerid][pSlotammo][3]);
		}
		if(PlayerInfo[playerid][pSlot][4] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][4], PlayerInfo[playerid][pSlotammo][4]);
		}
		if(PlayerInfo[playerid][pSlot][5] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][5], PlayerInfo[playerid][pSlotammo][5]);
		}
		if(PlayerInfo[playerid][pSlot][6] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][6], PlayerInfo[playerid][pSlotammo][6]);
		}
		if(PlayerInfo[playerid][pSlot][7] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][7], PlayerInfo[playerid][pSlotammo][7]);
		}
		if(PlayerInfo[playerid][pSlot][8] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][8], PlayerInfo[playerid][pSlotammo][8]);
		}
		if(PlayerInfo[playerid][pSlot][9] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][9], PlayerInfo[playerid][pSlotammo][9]);
		}
		if(PlayerInfo[playerid][pSlot][10] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][10], PlayerInfo[playerid][pSlotammo][10]);
		}
		if(PlayerInfo[playerid][pSlot][11] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][11], PlayerInfo[playerid][pSlotammo][11]);
		}
		if(PlayerInfo[playerid][pSlot][12] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][12], PlayerInfo[playerid][pSlotammo][12]);
		}
		if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)
		{
		    GiveWeapon(playerid, 2, 1);
		}
		if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
		{
			GiveWeapon(playerid, 8, 1);
		}
		if(PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] >= 3 && PlayerInfo[playerid][pRank] <= 4)
		{
		    GiveWeapon(playerid, 24, 100);
			SetPlayerArmourAC(playerid, 100);
		}
		if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
		{
		    GiveWeapon(playerid, 43, 30);
		}
		if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
		{
			GiveWeapon(playerid, 5, 1);
		}
		if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)
		{
			GiveWeapon(playerid, 5, 1);
		}
		if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
		{
			GiveWeapon(playerid, 1, 1);
		}
		if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
		{
			GiveWeapon(playerid, 5, 1);
		}
		if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
		{
			GiveWeapon(playerid, 43, 30);
		}
		if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
		{
			GiveWeapon(playerid, 5, 1);
		}
		if(PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18)
		{
			GiveWeapon(playerid, 5, 1);
		}
		if(PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
		{
			GiveWeapon(playerid, 43, 30);
		}
		if(PlayerInfo[playerid][pMember] == 24 || PlayerInfo[playerid][pLeader] == 24)
		{
			GiveWeapon(playerid, 4, 1);
		}
	}
	return true;
}
stock SetPlayerSpawn(playerid)
{
	if(gPlayerLogged[playerid] == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Необходимо авторизоваться!");
		FixKickedPlayer[playerid] = 1;
		return true;
	}
	if(IsPlayerConnected(playerid))
	{
		new house = PlayerInfo[playerid][pPHousekey];
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerHealthAC(playerid, PlayerInfo[playerid][pHP]);
		if(PlayerInfo[playerid][pWantedLevel] >= 1)
		{
			WantedPoints[playerid] = PlayerInfo[playerid][pWantedLevel];
			WantedLevel[playerid] = PlayerInfo[playerid][pWantedLevel];
			SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
		}
		if(PlayerInfo[playerid][pTut] == 0)
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerHealthAC(playerid, 100);
			PlayerInfo[playerid][pHP] = 100;
			InterpolateCameraPos(playerid, 1478.729980, -1613.905517, 17.904853, 1508.780029, -1654.556274, 15.790087, 5000);
			InterpolateCameraLookAt(playerid, 1478.811401, -1618.903442, 17.787170, 1504.388671, -1652.165649, 15.756586, 5000);
			ShowPlayerDialog(playerid,4,DIALOG_STYLE_MSGBOX, " ", "{33CCFF}Выберите ваш пол:\n", "Мужской", "Женский");
			TogglePlayerControllable(playerid, 0);
			DelGun(playerid);
		}
		if(PlayerInfo[playerid][pMember] == 1 )
  		{
			if(FormaFrac[playerid] == 1)
			{
				SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
				SetPlayerToTeamColor(playerid);
			}
		}
		if(PlayerInfo[playerid][pMember] == 2)
  		{
			if(FormaFrac[playerid] == 1)
			{
				SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
				SetPlayerToTeamColor(playerid);
			}
		}
		if(PlayerInfo[playerid][pMember] >= 3)
  		{
			if(PlayerInfo[playerid][pRank] >= 3)
			{
				if(FormaFrac[playerid] == 1)
				{
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerToTeamColor(playerid);
				}
			}
			else
			{
			    FormaFrac[playerid] = 1;
			    SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
				SetPlayerToTeamColor(playerid);
			}
		}
		if(PlayerInfo[playerid][pMember] >= 4)
  		{
			if(FormaFrac[playerid] == 1)
			{
				SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
				SetPlayerToTeamColor(playerid);
			}
		}
		if(PlayerInfo[playerid][pMember] == 7)
		{
			if(FormaFrac[playerid] == 1)
			{
		    	SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
		    	SetPlayerToTeamColor(playerid);
		    }
		}
		if(PlayerInfo[playerid][pMember] == 8)
		{
		    if(FormaFrac[playerid] == 1)
		    {
		    	SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
		    	SetPlayerToTeamColor(playerid);
		    }
		}
		if(PlayerInfo[playerid][pMember] >= 9 && PlayerInfo[playerid][pMember] <= 11)
		{
		    if(FormaFrac[playerid] == 1)
		    {
		    	SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
		    	SetPlayerToTeamColor(playerid);
		    }
		}
		if(PlayerInfo[playerid][pMember] == 16)
		{
		    if(FormaFrac[playerid] == 1)
		    {
		    	SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
		    	SetPlayerToTeamColor(playerid);
		    }
		}
		if(PlayerInfo[playerid][pMember] == 19)
		{
		    if(PlayerInfo[playerid][pRank] >= 3)
			{
				if(FormaFrac[playerid] == 1)
				{
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerToTeamColor(playerid);
				}
			}
			else
			{
			    FormaFrac[playerid] = 1;
			    SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
				SetPlayerToTeamColor(playerid);
			}
		}
		if(PlayerInfo[playerid][pMember] >= 20 && PlayerInfo[playerid][pMember] <= 22)
		{
		    if(FormaFrac[playerid] == 1)
		    {
		    	SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
		    	SetPlayerToTeamColor(playerid);
		    }
		}
		if(PlayerInfo[playerid][pMember] == 23)
		{
		    if(FormaFrac[playerid] == 1)
		    {
		    	SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
		    	SetPlayerToTeamColor(playerid);
		    }
		}
		if(PlayerInfo[playerid][pMember] >= 5 && PlayerInfo[playerid][pMember] <= 6)
		{
			FormaFrac[playerid] = 1;
			SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
			SetPlayerToTeamColor(playerid);
		}
		if(PlayerInfo[playerid][pMember] >= 12 && PlayerInfo[playerid][pMember] <= 15)
		{
			FormaFrac[playerid] = 1;
			SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
			SetPlayerToTeamColor(playerid);
		}
		if(PlayerInfo[playerid][pMember] >= 17 && PlayerInfo[playerid][pMember] <= 18)
		{
			FormaFrac[playerid] = 1;
			SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
			SetPlayerToTeamColor(playerid);
		}
		if(PlayerInfo[playerid][pMember] == 24)
		{
		    FormaFrac[playerid] = 1;
			SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
			SetPlayerToTeamColor(playerid);
		}
		if(FormaFrac[playerid] == 0)
		{
			SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
			SetPlayerColor(playerid, TEAM_HIT_COLOR);
		}
		if(PlayerPaintballing[playerid] != 0)
		{
			new rand;
			new rands = random(sizeof(paintgun));
			GiveWeapon(playerid, paintgun[rands], 300);
			rand = random(sizeof(PaintballSpawns));
			ACP_SetPlayerPos(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
			SetPlayerInterior(playerid, 10);
			SetPlayerVirtualWorld(playerid, 1);
			return true;
		}
		if(PlayerInfo[playerid][pJailed] == 1)
		{
			switch(PlayerInfo[playerid][pPlaceJail])
			{
				case 1:
				{
				    SetPlayerInterior(playerid, 6);
					ACP_SetPlayerPos(playerid,264.1425,77.4712,1001.0391);
					SetPlayerFacingAngle(playerid, 263.0160);
					return true;
				}
				case 2:
	   			{
					SetPlayerInterior(playerid, 10);
					ACP_SetPlayerPos(playerid,219.5400,109.9767,999.0156);
					SetPlayerFacingAngle(playerid, 1.0000);
					return true;
				}
				case 3:
				{
					SetPlayerInterior(playerid, 3);
					ACP_SetPlayerPos(playerid,198.3642,161.8103,1003.0300);
					SetPlayerFacingAngle(playerid, 1.0000);
					return true;
				}
				case 4:
				{
				    ACP_SetPlayerPos(playerid,5508.3706,1244.7594,23.1886);
					SetPlayerFacingAngle(playerid, 1.0000);
					return true;
				}
			}
		}
		if(PlayerInfo[playerid][pCheat] == 1)
		{
			SetPlayerInterior(playerid, 18);
			ACP_SetPlayerPos(playerid,-219.7144,1410.6461,27.7734);
			SetPlayerFacingAngle(playerid, 276.6526);
			SetPlayerVirtualWorld(playerid, 1);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Мы Вам крайне рекомендуем удалить чит программу");
			return true;
		}
		if(house != 255)
		{
        	if(SpawnChange[playerid])
            {
            	SetPlayerInterior(playerid,HouseInfo[house][hInt]);
           		ACP_SetPlayerPos(playerid, HouseInfo[house][hExitx], HouseInfo[house][hExity],HouseInfo[house][hExitz]);
            	PlayerInfo[playerid][pLocal] = house;
            	PlayerInfo[playerid][pInt] = HouseInfo[house][hInt];
            	SetPlayerVirtualWorld(playerid, house+50);
				return true;
			}
		}
		if(FormaFrac[playerid] == 1)
		{
            switch(PlayerInfo[playerid][pMember])
			{
		   	 	case 1:
				{
				    SetPlayerInterior(playerid, 6);
				    ACP_SetPlayerPos(playerid, 235.8750,73.5106,1005.0391);
				    PlayerInfo[playerid][pInt] = 6;
				    SetPlayerVirtualWorld(playerid, 0);
				    return true;
				}
				case 2:
				{
		            SetPlayerInterior(playerid, 0);
		            ACP_SetPlayerPos(playerid, -1777.4290,970.1733,1038.9189);
		            PlayerInfo[playerid][pInt] = 0;
		            SetPlayerFacingAngle(playerid, 266.4333);
		            return true;
	            }
	            case 3:
	            {
		            if(forma[playerid] == 1)
		            {
			            SetPlayerSkin(playerid, 252);
			            SetPlayerInterior(playerid, 0);
			            ACP_SetPlayerPos(playerid, -1346.2050,492.3983,11.2027);
			            PlayerInfo[playerid][pInt] = 0;
			            SetPlayerVirtualWorld(playerid, 0);
			            return true;
		            }
			        SetPlayerInterior(playerid, 0);
			        ACP_SetPlayerPos(playerid, -1346.2050,492.3983,11.2027);
			        PlayerInfo[playerid][pInt] = 0;
			        SetPlayerVirtualWorld(playerid, 0);
			        return true;
	            }
				case 4:
				{
		  			SetPlayerInterior(playerid, 15);
				    SetPlayerVirtualWorld(playerid, 3);
				    ACP_SetPlayerPos(playerid, 372.0985,-53.2946,1076.4708);
			    	SetPlayerFacingAngle(playerid, 90.0000);
			    	Medics += 1;
				    return true;
				}
	            case 7:
	            {
		            SetPlayerInterior(playerid, 3);
		            ACP_SetPlayerPos(playerid, 372.8669,186.9229,1008.3893);
		            SetPlayerFacingAngle(playerid, 273.5776);
		            PlayerInfo[playerid][pInt] = 3;
		            SetPlayerVirtualWorld(playerid, 0);
		            return true;
	            }
				case 8:
				{
		  		    SetPlayerInterior(playerid, 1);
				    ACP_SetPlayerPos(playerid, 2151.4502,1602.8522,1006.1752);
				    SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
				    SetPlayerFacingAngle(playerid, 269.7087);
				    SetPlayerVirtualWorld(playerid, 0);
				    return true;
				}
				case 9:
		    	{
				    SetPlayerInterior(playerid, 15);
					ACP_SetPlayerPos(playerid, 997.6838,1005.4717,1999.7999);
					SetPlayerFacingAngle(playerid, 270.0000);
					SetPlayerVirtualWorld(playerid, 2);
			        return true;
			    }
	            case 10:
	            {
		            SetPlayerInterior(playerid, 10);
		            ACP_SetPlayerPos(playerid, 221.2526,111.5752,1010.2118);
		            SetPlayerFacingAngle(playerid, 268.9050);
		            PlayerInfo[playerid][pInt] = 10;
		            return true;
				}
	            case 11:
	            {
					ACP_SetPlayerPos(playerid, -2031.7778,-117.3789,1035.1719);
					SetPlayerFacingAngle(playerid, 268.5241);
					SetPlayerInterior(playerid,3);
					PlayerInfo[playerid][pInt] = 3;
					SetPlayerVirtualWorld(playerid, 1);
					return true;
	            }
			    case 16:
			    {
				    SetPlayerInterior(playerid, 15);
					ACP_SetPlayerPos(playerid, 997.6838,1005.4717,1999.7999);
					SetPlayerFacingAngle(playerid, 270.0000);
					SetPlayerVirtualWorld(playerid, 1);
			        return true;
			    }
	            case 19:
	            {
		            if(forma[playerid] == 1)
		            {
			            SetPlayerSkin(playerid, 252);
			            SetPlayerInterior(playerid, 0);
			            ACP_SetPlayerPos(playerid, 241.7503,1852.6790,8.7578);
			            PlayerInfo[playerid][pInt] = 0;
			            SetPlayerVirtualWorld(playerid, 0);
			            return true;
		            }
		            SetPlayerInterior(playerid, 0);
		            ACP_SetPlayerPos(playerid, 241.7503,1852.6790,8.7578);
		            PlayerInfo[playerid][pInt] = 0;
		            SetPlayerVirtualWorld(playerid, 0);
		            return true;
	            }
				case 20:
				{
				    SetPlayerInterior(playerid, 15);
					ACP_SetPlayerPos(playerid, 997.6838,1005.4717,1999.7999);
					SetPlayerFacingAngle(playerid, 270.0000);
					SetPlayerVirtualWorld(playerid, 3);
				    return true;
				}
	            case 21:
	            {
		            SetPlayerInterior(playerid, 3);
		            ACP_SetPlayerPos(playerid, 211.3636,184.3113,1003.0313);
		            SetPlayerFacingAngle(playerid, 174.3579);
		            PlayerInfo[playerid][pInt] = 122;
		            SetPlayerVirtualWorld(playerid, 122);
		            return true;
	            }
				case 22:
				{
		  			SetPlayerInterior(playerid, 15);
				    SetPlayerVirtualWorld(playerid, 4);
				    ACP_SetPlayerPos(playerid, 372.0985,-53.2946,1076.4708);
			    	SetPlayerFacingAngle(playerid, 90.0000);
			    	Medics += 1;
				    return true;
				}
				case 23:
				{
		  			SetPlayerInterior(playerid, 15);
				    SetPlayerVirtualWorld(playerid, 5);
				    ACP_SetPlayerPos(playerid, 372.0985,-53.2946,1076.4708);
			    	SetPlayerFacingAngle(playerid, 90.0000);
			    	Medics += 1;
				    return true;
	            }
            }
		}
		switch(PlayerInfo[playerid][pMember])
		{
			case 5:
			{
	 	   		SetPlayerInterior(playerid, 5);
			    ACP_SetPlayerPos(playerid, 1265.7104,-793.7453,1084.0078);
			    SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
			    PlayerInfo[playerid][pInt] = 5;
			    SetPlayerVirtualWorld(playerid, 2);
			    return true;
			}
			case 6:
			{
			    SetPlayerInterior(playerid, 5);
			    ACP_SetPlayerPos(playerid, 1265.7104,-793.7453,1084.0078);
			    SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
			    PlayerInfo[playerid][pInt] = 5;
			    SetPlayerVirtualWorld(playerid, 0);
			    return true;
			}
			case 12:
	    	{
				ACP_SetPlayerPos(playerid, -61.2984,1364.5847,1080.2109);
				SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
				SetPlayerFacingAngle(playerid, 100);
				SetPlayerInterior(playerid,6);
				SetPlayerVirtualWorld(playerid, 34);
				PlayerInfo[playerid][pInt] = 6;
		        return true;
	    	}
	      	case 13:
	    	{
			    SetPlayerInterior(playerid, 4);
			    SetPlayerVirtualWorld(playerid, 75);
			    SetPlayerFacingAngle(playerid, 263.0497);
			    ACP_SetPlayerPos(playerid, 303.63,309.25,999.15);
			    SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
			    PlayerInfo[playerid][pInt] = 0;
			    return true;
	    	}
			case 14:
			{
			    SetPlayerInterior(playerid, 5);
			    ACP_SetPlayerPos(playerid, 1265.7104,-793.7453,1084.0078);
			    SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
			    PlayerInfo[playerid][pInt] = 5;
			    SetPlayerVirtualWorld(playerid, 1);
			    return true;
			}
			case 15:
	    	{
			    SetPlayerInterior(playerid, 3);
			    SetPlayerVirtualWorld(playerid, 0);
			    ACP_SetPlayerPos(playerid,  2496.012939,-1708.923217,1014.742187);
			    SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
			    SetPlayerFacingAngle(playerid, 0.191693);
			    PlayerInfo[playerid][pInt] = 3;
			    SetPlayerVirtualWorld(playerid, 1);
		        return true;
	    	}
			case 17:
	    	{
		        SetPlayerFacingAngle(playerid, 90.4248);
				ACP_SetPlayerPos(playerid, -49.7558,1400.3553,1084.4297);
				SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
				SetPlayerInterior(playerid,8);
				SetPlayerVirtualWorld(playerid, 36);
				PlayerInfo[playerid][pInt] = 0;
		        return true;
	    	}
	    	case 18:
			{
			    SetPlayerInterior(playerid, 18);
			    SetPlayerVirtualWorld(playerid, 63);
			    ACP_SetPlayerPos(playerid, -223.84,1410.51,27.77);
				SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
			    RemovePlayerAttachedObject(playerid, 1);
			    PlayerInfo[playerid][pInt] = 0;
			    return true;
			}
			case 24:
   			{
   			    SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
                SetPlayerPos(playerid, -688.6319,935.5018,13.6328);//координаты x,y,z
                SetPlayerFacingAngle(playerid, 261.8689);//направление камеры
                SetPlayerInterior(playerid,0);//id интерьера если на улице то пишите 0
                PlayerInfo[playerid][pInt] = 0;
                return 1;
   			}
		}
		if(PlayerInfo[playerid][pLevel] >= 0 && PlayerInfo[playerid][pLevel] <= 50) // спавн новичеов
		{
			ACP_SetPlayerPos(playerid,1223.9259,-1814.5690,16.5938);
			SetPlayerFacingAngle(playerid, 185.5578);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	return true;
}
public OnPlayerDeath(playerid, killerid, reason)
{
	SetPlayerHealthAC(playerid, 100);
	PlayerInfo[playerid][pHP] = 100;
	TextDrawHideForPlayer(playerid, DRAP);
	new name[MAX_PLAYER_NAME];
	new string[100];
	zips[playerid] = 0;
	Bags[playerid] = 999;
	WithBag[playerid] = 0;
	enterbiz[playerid] = 0;
	WJFish[playerid] = 0;
	RJFish[playerid] = 0;
	Mper[playerid] = 0;
	plafk[playerid] = -2;
    if(PlayerInfo[playerid][pHeadValue] > 0)
    {
        if(PlayerInfo[killerid][pLeader] == 24 || PlayerInfo[killerid][pMember] == 24)
        {
            if(GoChase[killerid] == playerid)
            {
                new killer[MAX_PLAYER_NAME];
                GetPlayerName(killerid, killer, sizeof(killer));
                PlayerInfo[killerid][pCash] += PlayerInfo[playerid][pHeadValue];
                format(string,128,"<< Хитман %s выполнил контракт на %s и получил $%d >>",killer,name,PlayerInfo[playerid][pHeadValue]);
                SendFamilyMessage(24, COLOR_YELLOW, string);
                SendClientMessage(playerid, COLOR_LIGHTRED," * Вы были убиты хитманом по заказу!");
                PlayerInfo[playerid][pHeadValue] = 0;
                GotHit[playerid] = 0;
                GetChased[playerid] = 999;
                GoChase[killerid] = 999;
            }
        }
    }
	if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pMember] == 18)
    {
        new namegang[24],namegangv[24];
		for(new i = 0; i < sizeof(GZInfo); i++)
        {
            if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && PlayerToKvadrat(killerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
            {
                if(GZInfo[i][gFrakVlad] == PlayerInfo[playerid][pMember] && GZInfo[i][gNapad] == PlayerInfo[killerid][pMember]) ScoreZahvat[GZInfo[i][gNapad]]++;
                else if(GZInfo[i][gNapad] == PlayerInfo[playerid][pMember] && GZInfo[i][gFrakVlad] == PlayerInfo[killerid][pMember]) ScoreZahvat[GZInfo[i][gFrakVlad]]++;
                else return true;
                switch(GZInfo[i][gNapad])
                {
                    case 15: namegang = "Grove Street";
                    case 17: namegang = "Aztecas Gang";
                    case 12: namegang = "Ballas Gang";
                    case 18: namegang = "Rifa Gang";
                    case 13: namegang = "Vagos Gang";
                }
                switch(GZInfo[i][gFrakVlad])
                {
                    case 15: namegangv = "Grove Street";
                    case 17: namegangv = "Aztecas Gang";
                    case 12: namegangv = "Ballas Gang";
                    case 18: namegangv = "Rifa Gang";
                    case 13: namegangv = "Vagos Gang";
                }
                if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pMember] == 18)
                {
                    format(string,100,"[Capture] {FFFFFF}%s - {FFEE00}%d{4169E1} | {FFFFFF}%s - {FFEE00}%d",namegangv,ScoreZahvat[GZInfo[i][gFrakVlad]],namegang,ScoreZahvat[GZInfo[i][gNapad]]);
                    SendFamilyMessage(GZInfo[i][gNapad],0x4169E1FF,string);
                    SendFamilyMessage(GZInfo[i][gFrakVlad],0x4169E1FF,string);
                }
            }
        }
    }
    if(reason == 38 || reason == 38 && GetPlayerState(killerid) == PLAYER_STATE_PASSENGER)
	{
		new warnn[128];
		new killer[MAX_PLAYER_NAME];
		GetPlayerName(killerid,killer,sizeof(killer));
		GetPlayerName(playerid,name,sizeof(name));
		format(warnn, sizeof(warnn), "-<WARNING> %s[%d]: убил с минигана %s[%d] wep %d guns %d",killer,killerid,name,playerid,GetPlayerWeapon(killerid),GetPlayerAmmo(killerid));
		ABroadCast(0xff0000ff,warnn,2);
		if(GetPlayerState(killerid) == PLAYER_STATE_PASSENGER) RemovePlayerFromVehicle(killerid);
	}
    if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 14)
    {
        new namem[24],namemv[24];
		for(new i = 0; i < sizeof(MZInfo); i++)
        {
            if(PlayerToKvadrat(playerid,328.755706, 2412.644531, 448.755706, 2564.644531) && PlayerToKvadrat(killerid,328.755706, 2412.644531, 448.755706, 2564.644531))
            {
                if(MZInfo[i][mFrakVlad] == PlayerInfo[playerid][pMember] && MZInfo[i][mNapad] == PlayerInfo[killerid][pMember]) ScoreZahvat[MZInfo[i][mNapad]]++;
                else if(MZInfo[i][mNapad] == PlayerInfo[playerid][pMember] && MZInfo[i][mFrakVlad] == PlayerInfo[killerid][pMember]) ScoreZahvat[MZInfo[i][mFrakVlad]]++;
                else return true;
                switch(MZInfo[i][mNapad])
                {
                    case 5: namem = "LCN";
                    case 6: namem = "YAKUZA";
                    case 14: namem = "Russian Mafia";
                }
                switch(MZInfo[i][mFrakVlad])
                {
                    case 5: namemv = "LCN";
                    case 6: namemv = "YAKUZA";
                    case 14: namemv = "Russian Mafia";
                }
                if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 14)
                {
                    format(string,100,"[Mafiawar] {FFFFFF}%s - {FFEE00}%d{4169E1} | {FFFFFF}%s - {FFEE00}%d",namemv,ScoreZahvat[MZInfo[i][mFrakVlad]],namem,ScoreZahvat[MZInfo[i][mNapad]]);
                    SendFamilyMessage(MZInfo[i][mNapad],0x4169E1FF,string);
                    SendFamilyMessage(MZInfo[i][mFrakVlad],0x4169E1FF,string);
                }
            }
        }
    }
	if(PlayerInfo[playerid][pJob] == 2)
	{
		if(gcontract[playerid] == 1)
		{
			Delete3DTextLabel(Meh3d[GetPlayerVehicleID(playerid)]);
			gcontract[playerid] = 0;
		}
	}
	MehJob[playerid] = 999;
	RemovePlayerAttachedObject(playerid,1);
    RemovePlayerAttachedObject(playerid,2);
    RemovePlayerAttachedObject(playerid,3);
    RemovePlayerAttachedObject(playerid,4);
    RemovePlayerAttachedObject(playerid,0);
	arenda[playerid] = 0;
	showhelp[playerid] = 0;
	usegruz[playerid] = 0;
	balonchik[playerid] = 0;
	afkto[playerid] = 0;
	usemats[playerid] = 0;
	if(SelectChar[playerid] == 255)
	{
		SetPlayerSkin(playerid, OldSkin[playerid]);
		PlayerInfo[playerid][pChar] = OldSkin[playerid];
		SelectChar[playerid] = 0;
	}
	new weaponid;
	new gunname[25];
	GetWeaponName(weaponid, gunname, sizeof(gunname));
	AddictionsTimer[playerid] = 0;
	forma[playerid] = 0;
	proverkaforma[playerid] = 0;
	new Float:px,Float:py,Float:pz;
	gPlayerSpawned[playerid] = 0;
 	GetPlayerName(playerid, name, sizeof(name));
	PlayerInfo[playerid][pLocal] = 255;
	if(IsPlayerInAnyVehicle(playerid))
	{
		RemovePlayerFromVehicleAc(playerid);
	}
	GetPlayerPos(playerid, px, py, pz);
	DisablePlayerCheckpoint(playerid);
	keys[playerid] = 0;
	LiveOffer[playerid] = 999;
	TalkingLive[playerid] = 255;
 	LiveOfferls[playerid] = 999;
 	LiveOfferlv[playerid] = 999;
	TalkingLivels[playerid] = 255;
	TalkingLivelv[playerid] = 255;
	Tel[playerid] = 255;
	KillTimer(Timerkk[playerid]);
	PlayerInfo[playerid][pDeaths] += 1;
	if(PlayerInfo[killerid][pMember] != 1 || PlayerInfo[killerid][pMember] != 2 || PlayerInfo[killerid][pMember] != 3 || PlayerInfo[killerid][pMember] != 7 || PlayerInfo[killerid][pMember] != 10 || PlayerInfo[killerid][pMember] != 19 || PlayerInfo[killerid][pMember] != 21)
	{
		PlayerInfo[killerid][pLabiding] -= 2;
		PlayerInfo[killerid][pKills] += 1;
	}
	if(WantedLevel[playerid] > 0)
	{
	    if(IsACop(killerid))
	    {
			PlayerInfo[playerid][pPlaceJail] = 1;
	        if(PlayerInfo[playerid][pWantedLevel] == 1)
	        {
	            DelGun(playerid);
				PlayerInfo[playerid][pJailed] = 1;
                PlayerInfo[playerid][pJailTime] = 600;
                PlayerInfo[playerid][pWantedLevel] = 0;
				SetPlayerInterior(playerid, 6);
				WantedPoints[playerid] = 0;
				WantedLevel[playerid] = 0;
                PlayerInfo[playerid][pWantedLevel] = 0;
				SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
				ACP_SetPlayerPos(playerid, 264.6288,77.5742,1001.0391);
				SendClientMessage(playerid,COLOR_LIGHTRED, "Вы посажены в тюрьму на 600 секунд!");
				SendClientMessage(killerid,0x6495EDFF, "Вы посадили преступника на 600 секунд!");
			}
			else if(PlayerInfo[playerid][pWantedLevel] == 2)
	        {
	            DelGun(playerid);
				PlayerInfo[playerid][pJailed] = 1;
				PlayerInfo[playerid][pJailTime] = 1200;
				SetPlayerInterior(playerid, 6);
				WantedPoints[playerid] = 0;
				WantedLevel[playerid] = 0;
                PlayerInfo[playerid][pWantedLevel] = 0;
				SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
				ACP_SetPlayerPos(playerid, 264.6288,77.5742,1001.0391);
				SendClientMessage(playerid,COLOR_LIGHTRED, "Вы посажены в тюрьму на 1200 секунд!");
				SendClientMessage(killerid,0x6495EDFF, "Вы посадили преступника на 1200 секунд!");
			}
			else if(PlayerInfo[playerid][pWantedLevel] == 3)
	        {
	            DelGun(playerid);
				PlayerInfo[playerid][pJailed] = 1;
				PlayerInfo[playerid][pJailTime] = 1800;
				SetPlayerInterior(playerid, 6);
				WantedPoints[playerid] = 0;
				WantedLevel[playerid] = 0;
                PlayerInfo[playerid][pWantedLevel] = 0;
				SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
				ACP_SetPlayerPos(playerid, 264.6288,77.5742,1001.0391);
				SendClientMessage(playerid,COLOR_LIGHTRED, "Вы посажены в тюрьму на 1800 секунд!");
                SendClientMessage(killerid,0x6495EDFF, "Вы посадили преступника на 1800 секунд!");
			}
			else if(PlayerInfo[playerid][pWantedLevel] == 4)
	        {
				DelGun(playerid);
				PlayerInfo[playerid][pJailed] = 1;
				PlayerInfo[playerid][pJailTime] = 2400;
				SetPlayerInterior(playerid, 6);
				WantedPoints[playerid] = 0;
				WantedLevel[playerid] = 0;
                PlayerInfo[playerid][pWantedLevel] = 0;
				SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
				ACP_SetPlayerPos(playerid, 264.6288,77.5742,1001.0391);
				SendClientMessage(playerid,COLOR_LIGHTRED, "Вы посажены в тюрьму на 2400 секунд!");
				SendClientMessage(killerid,0x6495EDFF, "Вы посадили преступника на 2400 секунд!");
			}
			else if(PlayerInfo[playerid][pWantedLevel] == 5)
	        {
				DelGun(playerid);
				PlayerInfo[playerid][pJailed] = 1;
				PlayerInfo[playerid][pJailTime] = 3000;
				SetPlayerInterior(playerid, 6);
				WantedPoints[playerid] = 0;
				WantedLevel[playerid] = 0;
                PlayerInfo[playerid][pWantedLevel] = 0;
				SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
				ACP_SetPlayerPos(playerid, 264.6288,77.5742,1001.0391);
				SendClientMessage(playerid,COLOR_LIGHTRED, "Вы посажены в тюрьму на 3000 секунд!");
				SendClientMessage(killerid,0x6495EDFF, "Вы посадили преступника на 3000 секунд!");
			}
			else if(PlayerInfo[playerid][pWantedLevel] >= 6)
	        {
	            DelGun(playerid);
				PlayerInfo[playerid][pJailed] = 1;
				PlayerInfo[playerid][pJailTime] = 3600;
				SetPlayerInterior(playerid, 6);
				WantedPoints[playerid] = 0;
				WantedLevel[playerid] = 0;
                PlayerInfo[playerid][pWantedLevel] = 0;
				SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
				ACP_SetPlayerPos(playerid, 264.6288,77.5742,1001.0391);
				SendClientMessage(playerid,COLOR_LIGHTRED, "Вы посажены в тюрьму на 3600 секунд!");
				SendClientMessage(killerid,0x6495EDFF, "Вы посадили преступника на 3600 секунд!");
			}
	    }
		PlayerInfo[playerid][pWantedLevel] = 0;
	}
	if(!IsAArm(killerid)|| !IsACop(killerid) || PlayerPaintballing[killerid] != 1)
	{
		if(PlayerInfo[killerid][pJailed] > 0 || !IsAArm(killerid)|| !IsACop(killerid) || PlayerPaintballing[killerid] != 1) { }
		else
		{
			SetPlayerCriminal(killerid,255, "Убийство человека");
			WantedPoints[killerid] += 1;
			PlayerInfo[killerid][pWantedLevel] += 1;
			WantedLevel[killerid] += 1;
			SetPlayerWantedLevel(killerid, PlayerInfo[killerid][pWantedLevel]);
			SendClientMessage(killerid, COLOR_WHITE, "Ваша узнаваемость повысилась");
		}
	}
	if(IsAArm(killerid))
	{
		if(IsAGang(playerid))
		{
		    if(PlayerToPoint(100.0, killerid, 2746.1118,-2444.9143,13.6484) || PlayerToPoint(150.0, killerid, 204.4098,1912.7648,17.6406) || PlayerToPoint(150.0, killerid, -1409.8993,401.5589,7.1875))
		    {
		        if(PlayerToPoint(100.0, playerid, 2746.1118,-2444.9143,13.6484) || PlayerToPoint(150.0, playerid, 204.4098,1912.7648,17.6406) || PlayerToPoint(150.0, playerid, -1409.8993,401.5589,7.1875))
		        {
		            PlayerInfo[killerid][pPayCheck] += 500;
					GameTextForPlayer(killerid, "~g~+$500", 5000, 1);
				}
			}
		}
	}
	new caller = Mobile[playerid];
	if(caller != 255)
	{
		if(caller < 255)
		{
			SendClientMessage(caller, COLOR_GREY, "Связь оборвалась.");
			Mobile[caller] = 255;
		}
		Mobile[playerid] = 255;
	}
	if(PlayerPaintballing[playerid] != 0)
	{
	    PlayerPaintballKills[killerid] ++;
	    if(PlayerPaintballKills[killerid] > PaintballWinnerKills)
	    {
            new killer[MAX_PLAYER_NAME];
	        PaintballWinner = killerid;
	        PaintballWinnerKills = PlayerPaintballKills[killerid];
	        GetPlayerName(killerid, killer, sizeof(killer));
	        for(new i = 0; i < MAX_PLAYERS; i++)
	        {
	            if(IsPlayerConnected(i))
	            {
	                if(PlayerPaintballing[i] != 0)
	                {
	                    format(string, sizeof(string), "%s выигрывает с %d убийствами",killer,PaintballWinnerKills);
						SetPlayerHealth(playerid, 100);
						SendClientMessage(i, COLOR_YELLOW, string);
	                }
	            }
	        }
	    }
	    return true;
	}
	new sendername[MAX_PLAYER_NAME];
	new killer[MAX_PLAYER_NAME];
	GetPlayerName(playerid, sendername, sizeof(sendername));
	GetPlayerName(killerid, killer, sizeof(killer));
	if(IsAGang(killerid))
	{
		if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
		{
			for(new i = 0; i < sizeof(GZInfo); i++)
			{
				if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
       			{
					if(PlayerInfo[playerid][pMember] == 3 && forma[killerid] == 0)
					{
		                forma[killerid] = 1;
		                PlayerInfo[playerid][pModel] = 252;
		               	SendClientMessage(playerid, COLOR_REDD, "Вы потеряли армейскую форму");
		                SendClientMessage(killerid, COLOR_GREEN, "Вы cняли с армейца форму, введите /switchskin, чтобы переодеться");
		                PlayerInfo[killerid][pLabiding] -= 2;
		                SpawnPlayer(playerid);
					}
					if(PlayerInfo[playerid][pMember] == 19 && forma[killerid] == 0)
	                {
		                forma[killerid] = 1;
		                PlayerInfo[playerid][pModel] = 252;
		               	SendClientMessage(playerid, COLOR_REDD, "Вы потеряли армейскую форму");
		                SendClientMessage(killerid, COLOR_GREEN, "Вы cняли с армейца форму, введите /switchskin, чтобы переодеться");
		                PlayerInfo[killerid][pLabiding] -= 2;
		                SpawnPlayer(playerid);
                	}
				}
			}
		}
	}
 	if(IsAGang(killerid))
 	{
 		if(IsACop(playerid))
		{
	 		if(PlayerInfo[playerid][pMember] != 2 || PlayerInfo[playerid][pLeader] != 2)
			{
				for(new i = 0; i < sizeof(GZInfo); i++)
				{
					if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
	       			{
		                keys[killerid] += 1;
		               	SendClientMessage(playerid, COLOR_REDD, "Вы потеряли ключи от камеры");
		               	SendClientMessage(killerid, COLOR_GREEN, "Вы забрали у полицейского ключи от камеры");
		                PlayerInfo[killerid][pLabiding] -= 2;
	                }
				}
			}
	    }
	}
 	if(gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11)
	{
		DisablePlayerCheckpoint(playerid);
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
	}
	if(PlayerInfo[playerid][pWantedLevel] > 0)
	{
		WantedPoints[playerid] -= 1;
		WantedLevel[playerid] -= 1;
		PlayerInfo[playerid][pWantedLevel] -= 1;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
		SendClientMessage(playerid, COLOR_WHITE, "Ваша узнаваемость понизилась");
	}
	DelGun(playerid);
	return true;
}
public OnPlayerSpawn(playerid)
{
	SetPVarInt(playerid, "NoAB", 1);
	new LevScore;
	Masked[playerid] = 0;
	LevScore = PlayerInfo[playerid][pLevel];
	if(gPlayerLogged[playerid] == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Необходимо авторизоваться!");
		FixKickedPlayer[playerid] = 1;
		return true;
	}
	if(PlayerInfo[playerid][pMember] > 0)
	{
		SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
	}
	if(PlayerInfo[playerid][pMember] <= 0)
	{
		SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
	}
	KillTimer(Collectionit[playerid]);
	SetPlayerScore(playerid, LevScore);
	SetPlayerSkills(playerid);
	InitLockDoors(playerid);
	SetPlayerSpawn(playerid);
//=============== Cердечко Логотипа ============================================
	TextDrawShowForPlayer(playerid,Textdraw0);
	TextDrawShowForPlayer(playerid,Textdraw1);
	TextDrawShowForPlayer(playerid,Textdraw2);
//==============================================================================
	plafk[playerid] = 0;
 	return true;
}
public OnPlayerEnterCheckpoint(playerid)
{
	new string[100];
	new tmpcar = GetPlayerVehicleID(playerid);
	if(VertMats[playerid] == 1)
    {
		if(vertmatbi >= 10000)
		{
       		VertMats[playerid] = 2;
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid,334.5107,1994.6956,17.6406,10);
			format(string, sizeof(string), "Вертолёт загружен");
			SendClientMessage(playerid, COLOR_GREY, string);
			SendClientMessage(playerid, COLOR_WHITE, "Отвезите материалы на Зону 51");
			return true;
		}
		vertmatbi += 10000;
		VertMats[playerid] = 2;
		DisablePlayerCheckpoint(playerid);
		SetPlayerCheckpoint(playerid,334.5107,1994.6956,17.6406,10);
		format(string, sizeof(string), "Материалы успешно загружены! Материалов в вертолёте: %d/10000", vertmatbi);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		SendClientMessage(playerid, COLOR_WHITE, "Отвезите материалы на Зону 51");
	}
	else if(VertMats[playerid] == 2)
    {
		if(armmatbi >= 49999)
		{
			format(string, sizeof(string), "Склад заполнен!");
			SendClientMessage(playerid, COLOR_GREY, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		vertmatbi -= 10000;
		armmatbi += 10000;
		format(string, sizeof(string), "Материалы успешно доставлены! Материалов в вертолёте: %d/10000", vertmatbi);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "На складе Зоны 51 %d/100000 материалов", armmatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		DisablePlayerCheckpoint(playerid);
  		MatsArmyCar[playerid] = 0;
  		VertMats[playerid] = 0;
		SaveMaterials();
		new mess[256];
		format(mess, sizeof(mess), "/carmat");
		OnPlayerCommandText(playerid,mess);
	}
	if(VertMatslsa[playerid] == 1)
    {
		vertmatbilsa += 10000;
        format(string, sizeof(string), "Материалы успешно загружены! Материалов в вертолёте: %d/10000", vertmatbilsa);
        SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
        SendClientMessage(playerid, COLOR_WHITE, "Доставьте материалы в LSA");
		VertMatslsa[playerid] = 2;
        DisablePlayerCheckpoint(playerid);
        SetPlayerCheckpoint(playerid,2773.1833,-2354.5332,15.3227,10);
        if(vertmatbilsa >= 10000)
        {
	        VertMatslsa[playerid] = 2;
	        DisablePlayerCheckpoint(playerid);
	        SetPlayerCheckpoint(playerid,2773.1833,-2354.5332,15.3227,10);
	        return true;
        }
    }
    else if(VertMatslsa[playerid] == 2)
    {
        if(lsamatbi >= 49999)
        {
            format(string, sizeof(string), "Склад заполнен!");
            SendClientMessage(playerid, COLOR_GREY, string);
            DisablePlayerCheckpoint(playerid);
            return true;
        }
        vertmatbilsa -= 10000;
        lsamatbi += 10000;
        format(string, sizeof(string), "Материалы успешно доставлены! Материалов в вертолёте: %d/10000", vertmatbilsa);
        SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
        format(string, sizeof(string), "На складе LSA %d/50000 материалов", lsamatbi);
        SendClientMessage(playerid, COLOR_WHITE, string);
        DisablePlayerCheckpoint(playerid);
        MatsArmyCar[playerid] = 0;
		VertMatslsa[playerid] = 0;
        SaveMaterials();
        new mess[256];
		format(mess, sizeof(mess), "/carmat");
		OnPlayerCommandText(playerid,mess);
    }
	if(MatsArmyCar[playerid]==1000)
	{
 		if(PlayerHaul[tmpcar-comptruck[0]][pLoad] >= 500)
		{
            format(string, sizeof(string), "Машина заполнена!");
			SendClientMessage(playerid, COLOR_GREY, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		PlayerHaul[tmpcar-comptruck[0]][pLoad] += 500;
		SendClientMessage(playerid, COLOR_WHITE, "Вы купили 500 продуктов за 2000");
		format(string, sizeof(string), "Вы загрузили продукты %d/500",PlayerHaul[tmpcar-comptruck[0]][pLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		DisablePlayerCheckpoint(playerid);
		format(string, sizeof(string), "Введите: /sellprods, чтобы начать развозку. Примечание: Нужно быть у бизнеса");
		SendClientMessage(playerid, COLOR_WHITE, string);
		PlayerInfo[playerid][pCash] -= 2000;
	}
	if(MatsArmyCar[playerid] == 2525)
	{
 		if(PlayersHaul[tmpcar-benzovoz[0]][sLoad] >= 1000)
		{
            format(string, sizeof(string), "Машина заполнена!");
			SendClientMessage(playerid, COLOR_GREY, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		PlayersHaul[tmpcar-benzovoz[0]][sLoad] += 1000;
		format(string, sizeof(string), "Бензин загружен! Бензина в прицепе: %d/1000",PlayersHaul[tmpcar-benzovoz[0]][sLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		DisablePlayerCheckpoint(playerid);
		format(string, sizeof(string), "Введите: /sellgas, чтобы начать развозку. Примечание: Нужно быть у бизнеса");
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	if(CP[playerid] == 500)
	{
		SendClientMessage(playerid, COLOR_GREEN, "Вы получили премию, в размере: 600 вирт");
		PlayerInfo[playerid][pCash] += 600;
		DisablePlayerCheckpoint(playerid);
		CP[playerid] = 0;
	}
	else if(MatsArmyCar[playerid] == 20)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] >= 5000 || armmatbi <= 1000)
		{
			format(string, sizeof(string), "Склад пуст или грузовик полон!");
			SendClientMessage(playerid, COLOR_GREY, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] += 5000;
		format(string, sizeof(string), "Материалы успешно загружены! Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		armmatbi -= 5000;
		DisablePlayerCheckpoint(playerid);
		format(string, sizeof(string), "На складе Зоны 51: %d/100000", armmatbi);
		format(string, sizeof(string), "Введите: /carm, чтобы начать развозку материалов");
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 35)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || sfpdmats >= 49999)
		{
			format(string, sizeof(string), "Склад SFPD заполнен, либо грузовик пуст!");
			SendClientMessage(playerid, COLOR_WHITE, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		sfpdmats += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены! Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад SFPD: %d/50000", sfpdmats);
		SendClientMessage(playerid, COLOR_WHITE, string);
		CP[playerid] = 0;
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 150)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || lvpdmats >= 49999)
		{
			format(string, sizeof(string), "Склад LVPD заполнен, либо грузовик пуст!");
			SendClientMessage(playerid, COLOR_WHITE, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		lvpdmats += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены! Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад LVPD: %d/50000", lvpdmats);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 151)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || lsamatbi >= 49999)
		{
			format(string, sizeof(string), "Склад LSA заполнен, либо грузовик пуст!");
			SendClientMessage(playerid, COLOR_WHITE, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		lsamatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены! Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад LSA: %d/50000", lsamatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 100)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || ballasmatbi >= 49999)
		{
			format(string, sizeof(string), "Склад The Ballas заполнен, либо грузовик пуст!");
			SendClientMessage(playerid, COLOR_WHITE, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		ballasmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены! Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад The Ballas: %d/50000", ballasmatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 101)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || vagosmatbi >= 49999)
		{
			format(string, sizeof(string), "Склад The Vagos заполнен, либо грузовик пуст!");
			SendClientMessage(playerid, COLOR_WHITE, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		vagosmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены! Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад The Vagos: %d/50000", vagosmatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 102)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || groovmatbi >= 49999)
		{
			format(string, sizeof(string), "Склад The Grove заполнен, либо грузовик пуст!");
			SendClientMessage(playerid, COLOR_WHITE, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		groovmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены! Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад The Grove: %d/50000", groovmatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 103)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || aztekmatbi >= 49999)
		{
			format(string, sizeof(string), "Склад The Aztek заполнен, либо грузовик пуст!");
			SendClientMessage(playerid, COLOR_WHITE, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		aztekmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены! Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад The Aztek: %d/50000", aztekmatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 104)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || rifamatbi >= 49999)
		{
			format(string, sizeof(string), "Склад The Rifa заполнен, либо грузовик пуст!");
			SendClientMessage(playerid, COLOR_WHITE, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		rifamatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены! Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад The Rifa: %d/50000", rifamatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 31)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || lspdmatbi >= 49999)
		{
			format(string, sizeof(string), "Склад LSPD заполнен, либо грузовик пуст!");
			SendClientMessage(playerid, COLOR_WHITE, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		lspdmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid]=0;
		format(string, sizeof(string), "Материалы успешно доставлены! Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад LSPD: %d/50000", lspdmatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 24)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || fbimats >= 49999)
		{
			format(string, sizeof(string), "Склад FBI заполнен либо грузовик пуст!");
			SendClientMessage(playerid, COLOR_WHITE, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		fbimats += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены! Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад FBI: %d/50000", fbimats);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 21)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || armmatbi >= 49999)
		{
			format(string, sizeof(string), "Cклад Армии SF заполнен, или грузовик пуст!");
			SendClientMessage(playerid, COLOR_GREY, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		armmatsf += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Оружие успешно доставлено! Оружие: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад Армии SF: %d/50000", armmatsf);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 25)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || armmatsf >= 49999)
		{
			format(string, sizeof(string), "Склад армии SF заполнен, либо грузовик пуст!");
			SendClientMessage(playerid, COLOR_WHITE, string);
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		armmatsf += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Оружие успешно доставлено! Оружие: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад Армии SF: %d/50000", armmatsf);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	if(IsPlayerInDynamicCP(playerid, CarLeasing[playerid]))
	{
		if(PlayerInfo[playerid][pCarLic] == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже имеете водительские права");
		if(PlayerInfo[playerid][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нету паспорта!");
		new avtosdacha[512];
		format(avtosdacha,sizeof(avtosdacha), "Приветствуем вас в Автошколе.\nЕсли вы хотите сдать на права, нажмите Далее");
		ShowPlayerDialog(playerid,10022,DIALOG_STYLE_MSGBOX, "Экзамен по вождению",avtosdacha, "Далее", "Отмена");
		return true;
	}
	else if(CP[playerid] == 0)
	{
		DisablePlayerCheckpoint(playerid);
	}
	if(GruzCP[playerid] == 1 && PlayerToPoint(2.0,playerid,600.4599,868.0458,-42.9609))
	{
		DisablePlayerCheckpoint(playerid);
		ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,1,0,0,1,1,1);
		SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
		ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,1,0,0,1,1,1);
	}
	if(Works[playerid])
	{
		if(JobCP[playerid] == 1 && IsPlayerInRangeOfPoint(playerid,2.0,2230.3528,-2286.1353,14.3751))
		{
			if(!IsPlayerInAnyVehicle(playerid))
			{
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid,2172.4146,-2255.5405,13.3041,1.5);
				ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,1,0,0,1,1,1);
				SetPlayerAttachedObject(playerid, 1 , 2060, 1,0.11,0.36,0.0,0.0,90.0);
				ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,1,0,0,1,1,1);
				JobCP[playerid] = 2;
				Bags[playerid] = 1;
				WithBag[playerid] = 1;
			}
		}
		if(JobCP[playerid] == 2 && IsPlayerInRangeOfPoint(playerid,2.0,2172.4146,-2255.5405,13.3041))
		{
	    	if(!IsPlayerInAnyVehicle(playerid))
			{
				JobAmmount[playerid] ++;
				format(string,sizeof(string), "Перенесено мешков: {ffffff}%d",JobAmmount[playerid]);
				SendClientMessage(playerid,COLOR_GREEN,string);
				DisablePlayerCheckpoint(playerid);
				Bags[playerid] = 0;
				WithBag[playerid] = 0;
				ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,1,0);
				if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
				SetPlayerCheckpoint(playerid,2230.3528,-2286.1353,14.3751,1.5);
				JobCP[playerid] = 1;
			}
		}
	}
	else if(CP[playerid] == 500)
	{
		PlayerInfo[playerid][pCash] += 600;
		CP[playerid] = 0;
		format(string, sizeof(string), "~g~+600");
		GameTextForPlayer(playerid, string, 5000, 1);
		DisablePlayerCheckpoint(playerid);
	}
	else
	{
		switch(gPlayerCheckpointStatus[playerid])
		{
			case CHECKPOINT_HOME:
		    {
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				DisablePlayerCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
				GameTextForPlayer(playerid, "~w~Is in~n~~y~House", 5000, 1);
		    }
		}
	}
	return true;
}
public OnPlayerLeaveCheckpoint(playerid)
{
	return true;
}
public OnPlayerEnterRaceCheckpoint(playerid)
{
	new string[128];
	DisablePlayerRaceCheckpoint(playerid);
 	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(LessonCar[playerid] == 1)
		{
	    	switch(pLessonCar[playerid])
			{
				case CHECKPOINT_1:
				{

				    GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_2;
					SetPlayerRaceCheckpoint(playerid, 0,1135.7736,-1712.2013,13.6466,1149.8107,-1702.3768,13.7079, 5.0);
				}
				case CHECKPOINT_2:
				{

				    GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_3;
					SetPlayerRaceCheckpoint(playerid, 0,1149.8107,-1702.3768,13.7079,1148.3579,-1573.1255,13.7079, 5.0);
				}
				case CHECKPOINT_3:
				{

	                GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_4;
					SetPlayerRaceCheckpoint(playerid, 0,1148.3579,-1573.1255,13.7079,1197.2705,-1572.5817,13.7079, 5.0);
				}
				case CHECKPOINT_4:
				{

				    GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_5;
					SetPlayerRaceCheckpoint(playerid, 0,1197.2705,-1572.5817,13.7079,1197.6398,-1410.3936,13.7079, 5.0);
				}
				case CHECKPOINT_5:
				{

				    GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_6;
					SetPlayerRaceCheckpoint(playerid, 0,1197.6398,-1410.3936,13.7079,1337.5392,-1405.4332,13.7079, 5.0);
				}
				case CHECKPOINT_6:
				{

				    GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_7;
					SetPlayerRaceCheckpoint(playerid, 0,1337.5392,-1405.4332,13.7079,1356.7211,-1403.5818,13.7079, 5.0);
				}
				case CHECKPOINT_7:
				{

				    GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_8;
					SetPlayerRaceCheckpoint(playerid, 0,1356.7211,-1403.5818,13.7079,1358.7126,-1322.5813,13.7079, 5.0);
				}
				case CHECKPOINT_8:
				{

				    GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_9;
					SetPlayerRaceCheckpoint(playerid, 0,1358.7126,-1322.5813,13.7079,1356.2925,-1235.6572,13.7079, 5.0);
				}
				case CHECKPOINT_9:
				{

				    GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_10;
					SetPlayerRaceCheckpoint(playerid, 0,1356.2925,-1235.6572,13.7079,1358.6494,-1147.1559,23.6295, 5.0);
				}
				case CHECKPOINT_10:
				{

			    	GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_11;
					SetPlayerRaceCheckpoint(playerid, 0,1358.6494,-1147.1559,23.6295,1384.5165,-1145.8145,23.6295, 5.0);
				}
				case CHECKPOINT_11:
				{

				    GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_13;
					SetPlayerRaceCheckpoint(playerid, 0,1384.5165,-1145.8145,23.6295,1442.7028,-1161.9135,23.6295, 5.0);
				}
				case CHECKPOINT_13:
				{

	                GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_14;
					SetPlayerRaceCheckpoint(playerid, 0,1442.7028,-1161.9135,23.6295,1481.9341,-1163.2592,23.6295, 5.0);
				}
				case CHECKPOINT_14:
				{

				    GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_15;
					SetPlayerRaceCheckpoint(playerid, 0,1481.9341,-1163.2592,23.6295,1483.6790,-1142.5881,23.6295, 5.0);
				}
				case CHECKPOINT_15:
				{

				    GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_16;
					SetPlayerRaceCheckpoint(playerid, 0,1483.6790,-1142.5881,23.6295,1486.4039,-1038.1534,23.6295, 5.0);
				}
				case CHECKPOINT_16:
				{

				    GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_17;
					SetPlayerRaceCheckpoint(playerid, 0,1486.4039,-1038.1534,23.6295,1543.8673,-1055.3752,23.6295, 5.0);
				}
				case CHECKPOINT_17:
				{

				    GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_18;
					SetPlayerRaceCheckpoint(playerid, 0,1543.8673,-1055.3752,23.6295,1573.7150,-1124.0912,23.6295, 5.0);
				}
				case CHECKPOINT_18:
				{

				    GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_19;
					SetPlayerRaceCheckpoint(playerid, 0,1573.7150,-1124.0912,23.6295,1576.3678,-1158.5190,23.6295, 5.0);
				}
				case CHECKPOINT_19:
				{

				    GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_20;
					SetPlayerRaceCheckpoint(playerid, 0,1576.3678,-1158.5190,23.6295,1713.7316,-1164.0687,23.6295, 5.0);
				}
				case CHECKPOINT_20:
				{

			    	GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_21;
					SetPlayerRaceCheckpoint(playerid, 0,1713.7316,-1164.0687,23.6295,1712.2535,-1295.9879,13.3828, 5.0);
				}
				case CHECKPOINT_21:
				{

				    GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_22;
					SetPlayerRaceCheckpoint(playerid, 0,1712.2535,-1295.9879,13.3828,1713.2443,-1439.5563,13.3828, 5.0);
				}
				case CHECKPOINT_22:
				{

				    GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_23;
					SetPlayerRaceCheckpoint(playerid, 0,1713.2443,-1439.5563,13.3828,1656.9470,-1441.6305,13.3828, 5.0);
				}
				case CHECKPOINT_23:
				{

	                GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_24;
					SetPlayerRaceCheckpoint(playerid, 0,1656.9470,-1441.6305,13.3828,1656.2085,-1590.1448,13.3828, 5.0);
				}
				case CHECKPOINT_24:
				{

				    GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_25;
					SetPlayerRaceCheckpoint(playerid, 0,1656.2085,-1590.1448,13.3828,1527.0367,-1590.9215,13.3828, 5.0);
				}
				case CHECKPOINT_25:
				{

				    GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_26;
					SetPlayerRaceCheckpoint(playerid, 0,1527.0367,-1590.9215,13.3828,1526.1722,-1730.0266,13.3828, 5.0);
				}
				case CHECKPOINT_26:
				{

				    GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_27;
					SetPlayerRaceCheckpoint(playerid, 0,1526.1722,-1730.0266,13.3828,1310.2784,-1732.5492,13.3828, 5.0);
				}
				case CHECKPOINT_27:
				{

				    GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_28;
					SetPlayerRaceCheckpoint(playerid, 0,1310.2784,-1732.5492,13.3828,1310.4994,-1848.9890,13.3828, 5.0);
				}
				case CHECKPOINT_28:
				{

				    GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_29;
					SetPlayerRaceCheckpoint(playerid, 0,1310.4994,-1848.9890,13.3828,1067.9976,-1850.2688,13.3828, 5.0);
				}
				case CHECKPOINT_29:
				{

				    GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_30;
					SetPlayerRaceCheckpoint(playerid, 0,1067.9976,-1850.2688,13.3828,1036.2932,-1798.0494,13.3828, 5.0);
				}
				case CHECKPOINT_30:
				{

			    	GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_31;
					SetPlayerRaceCheckpoint(playerid, 0,1036.2932,-1798.0494,13.3828,1039.8436,-1713.9556,13.3828, 5.0);
				}
				case CHECKPOINT_31:
				{

			    	GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_32;
					SetPlayerRaceCheckpoint(playerid, 0,1039.8436,-1713.9556,13.3828,1084.1327,-1712.4047,13.3828, 5.0);
				}
				case CHECKPOINT_32:
				{
			    	GameTextForPlayer(playerid, string, 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_33;
					SetPlayerRaceCheckpoint(playerid, 1,1084.1327,-1712.4047,13.3828,0.0,0.0,0.0, 5.0);
				}
				case CHECKPOINT_33:
				{
				    new Float:health;
    				GetVehicleHealth(GetPlayerVehicleID(playerid),health);
    				if (health >= 850)
    				{
    					JobCarTime[playerid] = 0;
		    			LessonCar[playerid] = 0;
       					LessonStat[playerid] = 0;
		    			TakingLesson[playerid] = 0;
		    			PlayerInfo[playerid][pCarLic] = 1;
						DisablePlayerRaceCheckpoint(playerid);
						SendClientMessage(playerid, COLOR_GREEN, "Припаркуйте пожалуйста автомобиль!!!");
						SendClientMessage(playerid, COLOR_WHITE, "Поздравляем вас! Вы здали экзамен по вождению и получили водительские права.");
						SendClientMessage(playerid, COLOR_WHITE, "Чтобы посмотреть список лицензий напишите /licenses .");
						new stringg[1000];
						if(PlayerInfo[playerid][pQuest] == 3 && PlayerInfo[playerid][pCarLic] == 1)
						{
						    new msgggg[] = "{99CCFF}Поздравляю!\nТы выполнил все начальные требования.\nПо этому у меня для тебя не большой подарок, на твоем банковском счете лежит некая сумма денег\nУзнать сумму можно в банкомате или в самом банке\nМожешь не благодарить!\nНе забудь сменить одежду! А то выглядишь как не знаю кто...\nНу и на этом я с тобой прощаюсь, желаю удачи!\n С Любовью Rafael!";
							format(stringg, sizeof(stringg), msgggg);
							ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Диалог Rafael",stringg, "Спасибо", "");
							PlayerInfo[playerid][pQuest] = 999;
							PlayerInfo[playerid][pBank] += 20000;
						}
	  				}
	  				else
	   				{
						SendClientMessage(playerid, COLOR_RED, "Вы не достаточно хорошо водите, чтобы получить права");
						SendClientMessage(playerid, COLOR_WHITE, "Припаркуйте автомобиль.");
 						JobCarTime[playerid] = 0;
		    			LessonCar[playerid] = 0;
       					LessonStat[playerid] = 0;
		    			TakingLesson[playerid] = 0;
	   				}
				}
			}
		}
	}
	new tmp2[30];
	new name[MAX_PLAYER_NAME];
	if(RaceCP[playerid] == 10) { RaceCP[playerid] = 11; DisablePlayerRaceCheckpoint(playerid); 	chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[1][0],race[1][1],race[1][2], race[2][0],race[2][1],race[2][2],8.0); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 11) { RaceCP[playerid] = 12; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[2][0],race[2][1],race[2][2],race[3][0],race[3][1],race[3][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 12) { RaceCP[playerid] = 13; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[3][0],race[3][1],race[3][2],race[4][0],race[4][1],race[4][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 13) { RaceCP[playerid] = 14; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[4][0],race[4][1],race[4][2],race[5][0],race[5][1],race[5][2],8);	format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 14) { RaceCP[playerid] = 15; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[5][0],race[5][1],race[5][2],race[6][0],race[6][1],race[6][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 15) { RaceCP[playerid] = 16; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[6][0],race[6][1],race[6][2],race[7][0],race[7][1],race[7][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 16) { RaceCP[playerid] = 17; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[7][0],race[7][1],race[7][2],race[8][0],race[8][1],race[8][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 17) { RaceCP[playerid] = 18; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[8][0],race[8][1],race[8][2],race[9][0],race[9][1],race[9][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 18) { RaceCP[playerid] = 19; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[9][0],race[9][1],race[9][2],race[10][0],race[10][1],race[10][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 19) { RaceCP[playerid] = 20; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[10][0],race[10][1],race[10][2],race[11][0],race[11][1],race[11][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 20) { RaceCP[playerid] = 21; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[11][0],race[11][1],race[11][2],race[12][0],race[12][1],race[12][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 21) { RaceCP[playerid] = 22; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[12][0],race[12][1],race[12][2],race[13][0],race[13][1],race[13][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 22) { RaceCP[playerid] = 23; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[13][0],race[13][1],race[13][2],race[14][0],race[14][1],race[14][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 23) { RaceCP[playerid] = 24; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[14][0],race[14][1],race[14][2],race[15][0],race[15][1],race[15][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 24) { RaceCP[playerid] = 25; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[15][0],race[15][1],race[15][2],race[16][0],race[16][1],race[16][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 25) { RaceCP[playerid] = 26; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[16][0],race[16][1],race[16][2],race[17][0],race[17][1],race[17][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 26) { RaceCP[playerid] = 27; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[17][0],race[17][1],race[17][2],race[18][0],race[18][1],race[18][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 27) { RaceCP[playerid] = 28; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[18][0],race[18][1],race[18][2],race[19][0],race[19][1],race[19][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 28) { RaceCP[playerid] = 29; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[19][0],race[19][1],race[19][2],race[20][0],race[20][1],race[20][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 29) { RaceCP[playerid] = 30; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[20][0],race[20][1],race[20][2],race[21][0],race[21][1],race[21][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 30) { RaceCP[playerid] = 31; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,1,race[21][0],race[21][1],race[21][2],race[22][0],race[22][1],race[22][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	if(chet[playerid] == 22)
	{
		RaceCP[playerid] = 31;
		SetPlayerRaceCheckpoint(playerid,1,race[0][0],race[0][1],race[0][2],0.0,0.0,0.0,8);
	}
	if(RaceCP[playerid] == 31)
	{
		GetPlayerName(playerid, name, sizeof(name));
		RaceCP[playerid] = 0;
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerInterior(playerid, 3);
		chet[playerid] = 0;
		DestroyVehicle(GetPlayerVehicleID(playerid));
		if(FirstRaceWinner == 999)
		{
			FirstRaceWinner = playerid;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerRacing[i] != 0)
					{
						format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~g~%s finished - 1st", name);
						GameTextForPlayer(i, string, 2500, 3);
						SendClientMessage(playerid, 0x6495EDFF, "Вы выиграли 50000 вирт");
						PlayerInfo[playerid][pCash] += 50000;
						PlayerRacing[playerid] = 0;
						EndingRaceRound = 1;
						SetPlayerInterior(playerid, 3);
						DisablePlayerRaceCheckpoint(playerid);
						ACP_SetPlayerPos(playerid,831.9918,1.6614,1004.1797);
						SetPlayerFacingAngle(playerid, 39.0413);
						DestroyVehicle(GetPlayerVehicleID(playerid));
						return true;
					}
				}
			}
		}
		else if(SecondRaceWinner == 999)
		{
			SecondRaceWinner = playerid;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerRacing[i] != 0)
					{
						format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~g~%s finished - 2nd",name);
						GameTextForPlayer(i, string, 2500, 3);
						SendClientMessage(playerid, 0x6495EDFF, "Вы выиграли 25000 вирт");
						PlayerInfo[playerid][pCash] += 25000;
						PlayerRacing[playerid] = 0;
						EndingRaceRound = 1;
						SetPlayerInterior(playerid, 3);
						DisablePlayerRaceCheckpoint(playerid);
						ACP_SetPlayerPos(playerid,831.9918,1.6614,1004.1797);
						SetPlayerFacingAngle(playerid, 39.0413);
						DestroyVehicle(GetPlayerVehicleID(playerid));
						return true;
					}
				}
			}
		}
		else if(ThirdRaceWinner == 999)
		{
			ThirdRaceWinner = playerid;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerRacing[i] != 0)
					{
						format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~g~%s finished - 3rd",name);
						GameTextForPlayer(i, string, 2500, 3);
						SendClientMessage(playerid, 0x6495EDFF, "Вы выиграли 15000 вирт");
						PlayerInfo[playerid][pCash] += 15000;
						PlayerRacing[playerid] = 0;
						EndingRaceRound = 1;
						SetPlayerInterior(playerid, 3);
						DisablePlayerRaceCheckpoint(playerid);
						ACP_SetPlayerPos(playerid,831.9918,1.6614,1004.1797);
						SetPlayerFacingAngle(playerid, 39.0413);
						DestroyVehicle(GetPlayerVehicleID(playerid));
						return true;
					}
				}
			}
		}
		PlayerRacing[playerid] = 0;
		RaceCP[playerid] = 0;
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerInterior(playerid, 3);
		chet[playerid] = 0;
		ACP_SetPlayerPos(playerid,831.9918,1.6614,1004.1797);
		SetPlayerFacingAngle(playerid, 39.0413);
		DestroyVehicle(GetPlayerVehicleID(playerid));
		return true;
	}
	return true;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return true;
}

public OnRconCommand(cmd[])
{
	return true;
}

public OnRconLoginAttempt(ip[], password[], success)
{
    if(!success)
    {
		printf("FAILED RCON LOGIN BY IP %s USING PASSWORD %s",ip, password);
        new pip[16];
		new name[MAX_PLAYER_NAME];
		new string[64];
        for(new i = 0; i < MAX_PLAYERS; i++)
        {
            GetPlayerIp(i, pip, sizeof(pip));
            GetPlayerName(i, name, MAX_PLAYER_NAME);
            if(!strcmp(ip, pip, true))
            {
				format(string,64, "[Защита] %s забанен за попытку взлома RCON.",name);
				GetPlayerIp(i,pip,sizeof(pip));
				format(string,sizeof(string), "ID: %d | IP: %s",i,pip);
			    ABroadCast(COLOR_LIGHTRED, string, 1);
				PlayerInfo[i][pLocked] = 1;
				BanEx(i, string);
		    	return true;
            }
        }
    }
    return true;
}

public OnObjectMoved(objectid)
{
	return true;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return true;
}
public OnPlayerPickUpPickup(playerid, pickupid)
{
    if(Dpic[playerid] == 1) return false; else Dpic[playerid] = 1,GetPlayerPos(playerid,PosPic[0][playerid],PosPic[1][playerid],PosPic[2][playerid]);
	new string[128];
	if(pickupid == LastPickup[playerid] && fracgunpic[0] == pickupid || pickupid == LastPickup[playerid] && fracgunpic[1] == pickupid || pickupid == LastPickup[playerid] && fracgunpic[2] == pickupid || pickupid == LastPickup[playerid] && fracgunpic[3] == pickupid){ LastPickup[playerid] = pickupid; return 0;} else LastPickup[playerid] = pickupid;
	if(pickupid == porterinfo)
    {
		new rabotadialog[2148];
		format(rabotadialog,sizeof(rabotadialog), "%s%s%s%s%s%s%s%s%s%s%s%s",
		rabotaMSG[0],rabotaMSG[1],rabotaMSG[2],rabotaMSG[3],rabotaMSG[4],rabotaMSG[5],rabotaMSG[6],rabotaMSG[7],rabotaMSG[8],rabotaMSG[9],rabotaMSG[10],rabotaMSG[11]);
		ShowPlayerDialog(playerid,133,DIALOG_STYLE_MSGBOX, "Информация о работе", rabotadialog, "Готово", "");
    }
 	else if(pickupid >= carjackpic[2] && pickupid == carjackpic[4])
	{
	    if(PlayerInfo[playerid][pJob] != 15) return SendClientMessage(playerid, 0x6495EDFF, "Ты кто такой?");
	    DestroyVehicle(createdvehicles[playerid]);
	    new Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid, X,Y,Z);
  		createdvehicles[playerid] = CreateVehicle(462,X,Y,Z,170,0,0,300);
    	PutPlayerInVehicle(playerid, createdvehicles[playerid], 0);
		CreatedCars[CreatedCar] = createdvehicles[playerid];
		UnLockCar(createdvehicles[playerid]);
		IsLocked[createdvehicles[playerid]] = 0;
		RepairVehicle(createdvehicles[playerid]);
		createdvehs ++;
	}
	else if(pickupid == carjackpic[0])
	{
		if(PlayerInfo[playerid][pLevel] <= 3) return SendClientMessage(playerid, 0x6495EDFF, "Ты кто такой?");
		if(PlayerInfo[playerid][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Эта работа доступна только гражданским!");
		if(PlayerInfo[playerid][pPBiskey] != 255) return SendClientMessage(playerid, COLOR_GREY, "Бизнесмен неможет работать тут");
	    if(PlayerInfo[playerid][pJob] == 15) return ShowPlayerDialog(playerid, 211+1, DIALOG_STYLE_LIST, "Взять заказ","Класс None\nКласс D\nКласс C\nКласс B\nКласс A","Выбор","Отмена");
	    else ShowPlayerDialog(playerid,211+2,DIALOG_STYLE_MSGBOX,"Автоугонщик","Привет,\nнам сейчас требуються хорошие водилы,\n\nХочешь работать на нас?","Да","Нет");
	}
	else if(pickupid == carjackpic[1])
	{
	    if(PlayerInfo[playerid][pJob] != 15)return SendClientMessage(playerid, 0x6495EDFF, "Ты кто такой?");
	    DestroyVehicle(createdvehicles[playerid]);
	    new Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid, X,Y,Z);
        createdvehicles[playerid] = CreateVehicle(462,X,Y,Z,170,0,0,300);
        PutPlayerInVehicle(playerid, createdvehicles[playerid], 0);
		CreatedCars[CreatedCar] = createdvehicles[playerid];
		UnLockCar(createdvehicles[playerid]);
		IsLocked[createdvehicles[playerid]] = 0;
		RepairVehicle(createdvehicles[playerid]);
		createdvehs ++;
	}
	else if(pickupid == caligula[0])
    {
	    SetPlayerInterior(playerid,0);
	    SetPlayerVirtualWorld(playerid, 0);
	    ACP_SetPlayerPos(playerid,1209.1454,-1748.1858,13.5935);
	    SetPlayerFacingAngle(playerid, 47.5802);
    }
    if(pickupid == PU_JF1[0] || pickupid == PU_JF1[1] || pickupid == PU_JF1[2]
	|| pickupid == PU_JF1[3] || pickupid == PU_JF1[4] || pickupid == PU_JF1[5]
	|| pickupid == PU_JF1[6] || pickupid == PU_JF1[7] || pickupid == PU_JF1[8]
	|| pickupid == PU_JF1[9] || pickupid == PU_JF1[10] || pickupid == PU_JF1[11]
	|| pickupid == PU_JF1[12] || pickupid == PU_JF1[13] || pickupid == PU_JF1[14]
	|| pickupid == PU_JF1[15] || pickupid == PU_JF1[16] || pickupid == PU_JF1[17]
	|| pickupid == PU_JF1[18] || pickupid == PU_JF1[19] || pickupid == PU_JF1[20]
	|| pickupid == PU_JF1[21] || pickupid == PU_JF1[22] || pickupid == PU_JF1[23]
	|| pickupid == PU_JF1[24] || pickupid == PU_JF1[25] || pickupid == PU_JF1[26]
	|| pickupid == PU_JF1[27] || pickupid == PU_JF1[28] || pickupid == PU_JF1[29]
	|| pickupid == PU_JF1[30])
	{
		WJFish[playerid] += 1;
		GameTextForPlayer(playerid, "~w~+1 Jellyfish", 1000, 3);
	}
	if(pickupid == PU_JF2[0] || pickupid == PU_JF2[1] || pickupid == PU_JF2[2]
	|| pickupid == PU_JF2[3] || pickupid == PU_JF2[4] || pickupid == PU_JF2[5]
	|| pickupid == PU_JF2[6] || pickupid == PU_JF2[7] || pickupid == PU_JF2[8]
	|| pickupid == PU_JF1[9])
	{
		RJFish[playerid] += 1;
		GameTextForPlayer(playerid, "~r~~h~+1 Jellyfish", 1000, 3);
	}
	if(pickupid == PU_JF3[0])
	{
	    ShowPlayerDialog(playerid, 1370, DIALOG_STYLE_MSGBOX, "Остров медуз", "Что Вы хотите сделать с аквалангом?", "Надеть", "Снять");
	}
	else if(pickupid == PU_JF3[1])
	{
	    if(RJFish[playerid] == 0 && WJFish[playerid] == 0)return SendClientMessage(playerid,COLOR_GREY,"У вас нет пойманых медуз!");
		new money = RJFish[playerid] * 150 + WJFish[playerid] * 100;
	    PlayerInfo[playerid][pCash] += money;
	    format(string, sizeof(string), "~g~~h~+$%d", money);
	    GameTextForPlayer(playerid, string, 3000, 6);
	    RJFish[playerid] = 0;
		WJFish[playerid] = 0;
	}
	else if(pickupid == Fishpic[0])
	{
	    if(PlayerInfo[playerid][pFishes])return SendClientMessage(playerid,COLOR_GREY,"У вас нет пойманых рыб!!");
		new money = PlayerInfo[playerid][pFishes] * 70;
	    PlayerInfo[playerid][pCash] += money;
	    format(string, sizeof(string), "~g~~h~+$%d", money);
	    GameTextForPlayer(playerid, string, 3000, 6);
	    PlayerInfo[playerid][pFishes] = 0;
	}
    else if(pickupid == caligula[1])
    {
	    SetPlayerInterior(playerid,1);
	    SetPlayerVirtualWorld(playerid, 0);
	    ACP_SetPlayerPos(playerid,2233.5422,1710.7037,1011.2906);
	    SetPlayerFacingAngle(playerid, 177.6951);
    }
	else if(pickupid == robber)
	{
		if(robh[playerid] != true)return SendClientMessage(playerid,COLOR_GREY,"У тебя нет материалов для сдачи");
		{
			robh[playerid] = false;
			PlayerInfo[playerid][pCash] += 10000;
			SendClientMessage(playerid,COLOR_GREY,"Вы сдали ограбленное на 10000$");
			return true;
		}
	}
	if(pickupid == monitor)
	{
		ShowPlayerDialog(playerid,9953,DIALOG_STYLE_LIST, "Мониторинг цен", "Магазины 24/7\nЗаправки\nКлубы / Бары", "Готово", "Назад");
	}
    if(pickupid == sporthelp)
    {
		new rabotadialog[2148];
		format(rabotadialog,sizeof(rabotadialog), "%s%s%s%s%s%s%s",
		sportMSG[0],sportMSG[1],sportMSG[2],sportMSG[3],sportMSG[4],sportMSG[5],sportMSG[6]);
		ShowPlayerDialog(playerid,133,DIALOG_STYLE_MSGBOX, "Информация", rabotadialog, "Готово", "");
    }
    if(pickupid == boxform)
    {
 		ShowPlayerDialog(playerid,408,DIALOG_STYLE_MSGBOX, "Выбор", "В какую одежду вы хотите переодеться?", "Спорт", "Обычный");
    }
 	else if(pickupid == dice)
  	{
  	    if(gDice[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "Вам уже выдали игральные кости");
		SendClientMessage(playerid, COLOR_BLUE, "Вам выдали игральные кости");
		SendClientMessage(playerid, COLOR_WHITE, "Введите: /dice, чтобы бросить");
	    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		gDice[playerid] = 1;
	}
	else if(pickupid == lspic[0])
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,1658.2383,-1693.4553,15.6094);
		SetPlayerFacingAngle(playerid, 175.8234);
		SetPlayerVirtualWorld(playerid, 0);
	}
    else if(pickupid == lspic[1])
    {
		if(PlayerInfo[playerid][pNkeys] == 1 || PlayerInfo[playerid][pMember] == 16)
		{
			ShowPlayerDialog(playerid,190,DIALOG_STYLE_LIST,"Меню:","Офис\nСтоянка","Выбрать","Отмена");
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, "Дверь заперта! У вас нет пропуска");
		}
    }
	else if(pickupid == lspic[2])
    {
		if(PlayerInfo[playerid][pNkeys] == 1 || PlayerInfo[playerid][pMember] == 16)
		{
			ShowPlayerDialog(playerid,193,DIALOG_STYLE_LIST,"Меню:","Офис\nКрыша","Выбрать","Отмена");
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, "Дверь заперта! У вас нет пропуска");
		}
    }
	else if(pickupid == FormaFracPic[0])
	{
		if(PlayerInfo[playerid][pMember] == 1)
		{
			if(FormaFrac[playerid] == 1)ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете завершить рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете начать рабочий день?", "Да", "Нет");
		}
	}
	else if(pickupid == FormaFracPic[1])
	{
		if(PlayerInfo[playerid][pMember] == 2)
		{
			if(FormaFrac[playerid] == 1)ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете завершить рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете начать рабочий день?", "Да", "Нет");
		}
	}
	else if(pickupid == FormaFracPic[2])
	{
		if(PlayerInfo[playerid][pMember] == 3)
		{
			if(FormaFrac[playerid] == 1)ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете завершить рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете начать рабочий день?", "Да", "Нет");
		}
	}
	else if(pickupid == FormaFracPic[3])
	{
		if(PlayerInfo[playerid][pMember] == 4)
		{
            if(FormaFrac[playerid] == 1)ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете завершить рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете начать рабочий день?", "Да", "Нет");
		}
	}
	else if(pickupid == FormaFracPic[4])
	{
		if(PlayerInfo[playerid][pMember] == 7)
		{
			if(FormaFrac[playerid] == 1)ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете завершить рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете начать рабочий день?", "Да", "Нет");
		}
	}
	else if(pickupid == FormaFracPic[5])
	{
		if(PlayerInfo[playerid][pMember] == 9)
		{
			if(FormaFrac[playerid] == 1)ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете завершить рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете начать рабочий день?", "Да", "Нет");
		}
	}
	else if(pickupid == FormaFracPic[6])
	{
		if(PlayerInfo[playerid][pMember] == 10)
		{
			if(FormaFrac[playerid] == 1)ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете завершить рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете начать рабочий день?", "Да", "Нет");
		}
	}
	else if(pickupid == FormaFracPic[7])
	{
		if(PlayerInfo[playerid][pMember] == 11)
		{
			if(FormaFrac[playerid] == 1)ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете завершить рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете начать рабочий день?", "Да", "Нет");
		}
	}
	else if(pickupid == FormaFracPic[8])
	{
		if(PlayerInfo[playerid][pMember] == 16)
		{
			if(FormaFrac[playerid] == 1)ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете завершить рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете начать рабочий день?", "Да", "Нет");
		}
	}
	else if(pickupid == FormaFracPic[9])
	{
		if(PlayerInfo[playerid][pMember] == 19)
		{
			if(FormaFrac[playerid] == 1)ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете завершить рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете начать рабочий день?", "Да", "Нет");
		}
	}
	else if(pickupid == FormaFracPic[10])
	{
		if(PlayerInfo[playerid][pMember] == 20)
		{
			if(FormaFrac[playerid] == 1)ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете завершить рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете начать рабочий день?", "Да", "Нет");
		}
	}
	else if(pickupid == FormaFracPic[11])
	{
		if(PlayerInfo[playerid][pMember] == 21)
		{
			if(FormaFrac[playerid] == 1)ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете завершить рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете начать рабочий день?", "Да", "Нет");
		}
	}
	else if(pickupid == FormaFracPic[12])
	{
		if(PlayerInfo[playerid][pMember] == 22)
		{
			if(FormaFrac[playerid] == 1)ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете завершить рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете начать рабочий день?", "Да", "Нет");
		}
	}
	else if(pickupid == FormaFracPic[13])
	{
		if(PlayerInfo[playerid][pMember] == 23)
		{
			if(FormaFrac[playerid] == 1)ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете завершить рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете начать рабочий день?", "Да", "Нет");
		}
	}
	else if(pickupid == FormaFracPic[14])
	{
		if(PlayerInfo[playerid][pMember] == 8)
		{
		    if(FormaFrac[playerid] == 1)ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете завершить рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете начать рабочий день?", "Да", "Нет");
		}
	}
	if(pickupid == paint[0])
	{
		if(PaintballRound >= 1) return SendClientMessage(playerid,COLOR_GREY, "Регистрация закрыта");
		if(PlayerInfo[playerid][pLevel] <= 1) return SendClientMessage(playerid,COLOR_GREY, "Участвовать можно с 2 лет проживания в штате");
		if(PlayerInfo[playerid][pWarns] >= 1) return SendClientMessage(playerid,COLOR_GREY, "Нельзя учавствовать с Варном");
		if(PaintballPlayers >= 20) return SendClientMessage(playerid,COLOR_GREY, "Слишком много участников");
		if(PlayerPaintballing[playerid] == 1) return SendClientMessage(playerid,COLOR_GREY, "Вы уже зарегестрированы на матч");
		SendClientMessage(playerid, COLOR_WHITE, "Вы успешно зарегистрированы на матч. Не выходите из помещения!");
		format(string, sizeof(string), "Зарегистрирована ячейка номер %d", PaintballPlayers);
 		SendClientMessage(playerid, 0x6495EDFF, string);
		PaintballPlayers += 1;
		PlayerPaintballing[playerid] = 1;
	}
	if(pickupid == paint[1])
	{
		SetPlayerInterior(playerid, 1);
		ACP_SetPlayerPos(playerid, 286.4868, -40.2647, 1001.5156);
		SetPlayerFacingAngle(playerid, 318.7845);
		SetPlayerVirtualWorld(playerid, 1);
		DelGun(playerid);
	}
	if(pickupid == paint[2])
	{
		chet[playerid] = 0;
		SetPlayerInterior(playerid, 0);
		ACP_SetPlayerPos(playerid, 1431.6450,-967.4149,37.4021);
		SetPlayerFacingAngle(playerid, 349.2071);
		SetPlayerVirtualWorld(playerid, 0);
		PlayerPaintballing[playerid] = 0;
		CP[playerid] = 0;
		PaintballPlayers -= 1;
	}
	if(pickupid == paintguns[0]) { if(PlayerPaintballing[playerid] == 1) { GiveWeapon(playerid, 25, 300); } }
	if(pickupid == paintguns[1]) { if(PlayerPaintballing[playerid] == 1) { GiveWeapon(playerid, 24, 300); } }
	if(pickupid == paintguns[2]) { if(PlayerPaintballing[playerid] == 1) { GiveWeapon(playerid, 31, 300); } }
	if(pickupid == paintguns[3]) { if(PlayerPaintballing[playerid] == 1) { GiveWeapon(playerid, 31, 300); } }
	if(pickupid == paintguns[4]) { if(PlayerPaintballing[playerid] == 1) { GiveWeapon(playerid, 34, 300); } }
	if(pickupid == paintguns[5]) { if(PlayerPaintballing[playerid] == 1) { GiveWeapon(playerid, 34, 300); } }
	if(pickupid == paintguns[6]) { if(PlayerPaintballing[playerid] == 1) { GiveWeapon(playerid, 25, 300); } }
	if(pickupid == paintguns[7]) { if(PlayerPaintballing[playerid] == 1) { GiveWeapon(playerid, 16, 2); } }
	if(pickupid == paintguns[8]) { if(PlayerPaintballing[playerid] == 1) { GiveWeapon(playerid, 16, 2); } }
	if(pickupid == sportroom[0])
	{
		if(PlayerInfo[playerid][pJob] == 6 && PlayerInfo[playerid][pMember] == 0)
		{
			SetPlayerSkin(playerid, 49);
	 	}
		SetPlayerInterior(playerid,5);
		ACP_SetPlayerPos(playerid,771.4412,-2.7885,1000.7279);
		SetPlayerFacingAngle(playerid, 21.2131);
	}
	else if(pickupid == sportroom[1])
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,2227.1162,-1723.1353,13.5533);
		SetPlayerFacingAngle(playerid, 130.5909);
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
		if(PlayerInfo[playerid][pMember] >= 1) { SetPlayerSkin(playerid,PlayerInfo[playerid][pModel]);}
		if(PlayerInfo[playerid][pMember] == 0) { SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);}
		PlayerInfo[playerid][pBoxstyle] = 0;
		PlayerInfo[playerid][pKstyle] = 0;
		PlayerInfo[playerid][pKickstyle] = 0;
		boxforma[playerid] = 0;
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
		SendClientMessage(playerid, COLOR_GREEN, "Вы закончили тренировку , всего вам доброго.");
	}
	else if(pickupid == mysti)
	{
		SetPlayerInterior(playerid, 0);
		ACP_SetPlayerPos(playerid,-2244.3213,-88.3789,35.3203);
		SetPlayerFacingAngle(playerid, 87.1145);
	}
	else if(pickupid == arace)
	{
		if(EndingRaceRound >= 1) return SendClientMessage(playerid,COLOR_GREY, "Регистрация закрыта");
		if(PlayerInfo[playerid][pLevel] <= 2) return SendClientMessage(playerid,COLOR_GREY, "Участвовать можно с 3 лет проживания в штате");
		if(PlayerInfo[playerid][pWarns] >= 1) return SendClientMessage(playerid,COLOR_GREY, "Нельзя учавствовать с Варном");
		if(RacingPlayers >= 20) return SendClientMessage(playerid,COLOR_GREY, "Слишком много участников");
		if(PlayerRacing[playerid] == 1) return SendClientMessage(playerid,COLOR_GREY, "Вы уже зарегестрированы на гонку");
		SendClientMessage(playerid, COLOR_WHITE, "Вы успешно зарегистрированы на гонку. Не выходите из помещения!");
		format(string, sizeof(string), "Зарегистрирован гонщик под номером: %d", RacingPlayers);
		SendClientMessage(playerid, 0x6495EDFF, string);
		RacingPlayers += 1;
		PlayerRacing[playerid] = 1;
	}
	if(pickupid == racepic[0])
	{
		SetPlayerInterior(playerid,3);
		ACP_SetPlayerPos(playerid,831.7769,6.8750,1004.1797);
		SetPlayerFacingAngle(playerid,108.1610);
	}
	else if(pickupid == racepic[1])
	{
		chet[playerid] = 0;
		SetPlayerInterior(playerid, 0);
		ACP_SetPlayerPos(playerid,1958.6117,-2183.5022,13.5469);
		SetPlayerFacingAngle(playerid,271.8013);
		SetPlayerVirtualWorld(playerid, 0);
		PlayerRacing[playerid] = 0;
		CP[playerid] = 0;
		RacingPlayers -= 1;
	}
	if(pickupid == lvpic[0])
	{
		if(PlayerInfo[playerid][pNkeys] == 1 || PlayerInfo[playerid][pMember] == 20)
		{
			SetPlayerInterior(playerid,15);
			ACP_SetPlayerPos(playerid,999.5983,1000.0139,1999.7999);
			SetPlayerFacingAngle(playerid, 268.4196);
			SetPlayerVirtualWorld(playerid, 3);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, "Дверь заперта! У вас нет пропуска");
		}
	}
	else if(pickupid == lvpic[1])
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,2649.1655,1183.9111,10.8203);
		SetPlayerFacingAngle(playerid, 180.0000);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == SDA)
	{
		GameTextForPlayer(playerid, "~r~/pdd", 1000, 1);
	}
	else if(pickupid == pigpen)
	{
		SetPlayerInterior(playerid, 0);
		ACP_SetPlayerPos(playerid,2421.7114,-1221.1361,25.4387);
		SetPlayerFacingAngle(playerid, 188.2947);
	}
	else if(pickupid == medicss[0])
	{
		SetPlayerInterior(playerid,15);
		ACP_SetPlayerPos(playerid,385.4939,-60.0559,1076.4708);
		SetPlayerFacingAngle(playerid, 90.7810);
		SetPlayerVirtualWorld(playerid, 3);
	}
	if(pickupid == medicss[1])
	{
		SetPlayerInterior(playerid, 0);
		ACP_SetPlayerPos(playerid,-2664.4895,636.7567,14.4531);
		SetPlayerFacingAngle(playerid, 180.9984);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == medicss[2])
	{
		SetPlayerInterior(playerid,15);
		ACP_SetPlayerPos(playerid,385.4939,-60.0559,1076.4708);
		SetPlayerFacingAngle(playerid, 90.7810);
		SetPlayerVirtualWorld(playerid, 4);
	}
	if(pickupid == medicss[3]) // БОЛЬКА ЛС
	{
		SetPlayerInterior(playerid, 0);
		ACP_SetPlayerPos(playerid,1176.2983,-1323.4597,14.0144);
		SetPlayerFacingAngle(playerid, 270.0000);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == medicss[4])
	{
		SetPlayerInterior(playerid,15);
		ACP_SetPlayerPos(playerid,385.4939,-60.0559,1076.4708);
		SetPlayerFacingAngle(playerid, 90.7810);
		SetPlayerVirtualWorld(playerid, 5);
	}
	if(pickupid == medicss[5])
	{
		SetPlayerInterior(playerid, 0);
		ACP_SetPlayerPos(playerid,1607.5677,1818.9572,10.8203);
		SetPlayerFacingAngle(playerid, 360.0000);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == jizzy)
	{
		SetPlayerInterior(playerid, 0);
		ACP_SetPlayerPos(playerid,-2623.5752,1410.0554,7.0938);
		SetPlayerFacingAngle(playerid, 210.1440);
	}
	else if(pickupid == shotbur[0])
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,1199.2008,-920.0023,43.1096);
		SetPlayerFacingAngle(playerid, 169.1297);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == pizza[0])
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,2103.1228,-1806.1877,13.5547);
		SetPlayerFacingAngle(playerid, 87.3147);
	}
	else if(pickupid == pizza[1])
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,-1815.9906,615.9285,35.1719);
		SetPlayerFacingAngle(playerid, 182.5506);
	}
	else if(pickupid == pizza[2])
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,924.3772,-1353.6490,13.3772);
		SetPlayerFacingAngle(playerid, 182.5506);
	}
	else if(pickupid == alhambra)
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,1833.5907,-1682.9531,13.4669);
		SetPlayerFacingAngle(playerid, 85.5382);
	}
	else if(pickupid == shotbur[1])
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,813.0128,-1616.3463,13.5547);
		SetPlayerFacingAngle(playerid, 274.2879);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == sabrina)
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,2269.5942,-77.4715,26.5859);
		SetPlayerFacingAngle(playerid, 183.8331);
	}
	else if(pickupid == grovebar)
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,2307.3132,-1645.9664,14.8270);
		SetPlayerFacingAngle(playerid, 152.2798);
	}
	else if(pickupid == addictionenter)
	{
		SetPlayerInterior(playerid,5);
		ACP_SetPlayerPos(playerid,318.2598,1118.8209,1083.8828);
		SetPlayerFacingAngle(playerid, 2.7967);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == sfnewspic[0])
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,-2052.4917,458.5779,35.1719);
		SetPlayerFacingAngle(playerid, 312.1454);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == sfnewspic[1])
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,-2047.0208,450.5458,139.7422);
		SetPlayerFacingAngle(playerid, 153.7635);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == sfnewspic[2])
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,-2052.4917,458.5779,35.1719);
		SetPlayerFacingAngle(playerid, 312.1454);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == sfnewspic[3])
	{
		if(PlayerInfo[playerid][pNkeys] == 1 || PlayerInfo[playerid][pMember] == 9)
		{
			SetPlayerInterior(playerid,15);
			ACP_SetPlayerPos(playerid,999.5983,1000.0139,1999.7999);
			SetPlayerFacingAngle(playerid, 268.4196);
			SetPlayerVirtualWorld(playerid, 2);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, "Дверь заперта! У вас нет пропуска");
		}
	}
	else if(pickupid == lcnpic[0])
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,1451.7043,749.8376,11.0234);
		SetPlayerFacingAngle(playerid, 89.1102);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == lcnpic[1])
	{
		SetPlayerInterior(playerid, 5);
		ACP_SetPlayerPos(playerid,1298.6915,-794.2542,1084.0078);
		SetPlayerFacingAngle(playerid, 349.0933);
		SetPlayerVirtualWorld(playerid, 2);
	}
	else if(pickupid == zip[0])
	{
		zips[playerid] = 1;
		SetPlayerInterior(playerid,18);
		ACP_SetPlayerPos(playerid,161.6730,-95.5809,1001.8047);
		SetPlayerFacingAngle(playerid, 1.0183);
	}
	else if(pickupid == zip[1])
	{
		zips[playerid] = 0;
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,-1885.0364,862.9141,35.1719);
		SetPlayerFacingAngle(playerid, 151.0559);
	}
	else if(pickupid == casino)
	{
		gDice[playerid] = 0;
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,1658.6047,2253.2153,11.0625);
		SetPlayerFacingAngle(playerid, 354.6682);
	}
	else if(pickupid == shop[0])
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,1931.2080,-1775.9785,13.5469);
		SetPlayerFacingAngle(playerid, 263.9579);
		SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == shop[1])
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,-81.1964,-1168.3134,2.2146);
		SetPlayerFacingAngle(playerid, 58.5935);
		SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == shop[2])
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,-1673.5123,431.4032,7.1797);
		SetPlayerFacingAngle(playerid, 257.8152);
		SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == shop[3])
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,998.2327,-920.4987,42.1797);
		SetPlayerFacingAngle(playerid, 104.2105);
		SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == shop[4])
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,1600.9852,2219.7158,11.0625);
		SetPlayerFacingAngle(playerid, 224.2390);
		SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == shop[5])
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,2637.3076,1127.4176,11.1797);
		SetPlayerFacingAngle(playerid, 180.0000);
		SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == victim[0])
	{
		SetPlayerInterior(playerid,5);
		ACP_SetPlayerPos(playerid,225.2378,-8.0487,1002.2109);
		SetPlayerFacingAngle(playerid, 89.5070);
	}
	else if(pickupid == victim[1])
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,458.0936,-1501.5496,31.0372);
		SetPlayerFacingAngle(playerid, 101.4322);
	}
	else if(pickupid == addictionexit)
	{
		SetPlayerInterior(playerid,0);
	 	ACP_SetPlayerPos(playerid,2168.0977,-1673.5548,15.0826);
	 	SetPlayerFacingAngle(playerid,217.7220);
	 	SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == ammonac[4])
	{
	    if(PlayerInfo[playerid][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нету паспорта!");
		SetPlayerInterior(playerid,7);
		ACP_SetPlayerPos(playerid,313.7110,-140.3784,999.6016);
		SetPlayerFacingAngle(playerid, 334.2157);
		SetPlayerVirtualWorld(playerid, 0);
	 	GameTextForPlayer(playerid, "~y~+ /buygun", 2000, 1);
	}
	else if(pickupid == ammonac[5])
	{
		SetPlayerInterior(playerid,0);
	 	ACP_SetPlayerPos(playerid,2156.1997,943.3864,10.8203);
	 	SetPlayerFacingAngle(playerid, 81.7582);
	 	SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == ammonac[2])
	{
	    if(PlayerInfo[playerid][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нету паспорта!");
		SetPlayerInterior(playerid,4);
		ACP_SetPlayerPos(playerid,286.8773,-83.5809,1001.5156);
		SetPlayerFacingAngle(playerid, 334.2157);
		SetPlayerVirtualWorld(playerid, 0);
		GameTextForPlayer(playerid, "~y~+ /buygun", 2000, 1);
	}
	else if(pickupid == ammonac[3])
	{
		SetPlayerInterior(playerid,0);
	 	ACP_SetPlayerPos(playerid,-2626.6384,210.3960,4.5971);
	 	SetPlayerFacingAngle(playerid, 13.1113);
	 	SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == ammonac[0])
	{
	    if(PlayerInfo[playerid][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нету паспорта!");
		SetPlayerInterior(playerid,1);
		ACP_SetPlayerPos(playerid,286.9145,-38.6596,1001.5156);
		SetPlayerFacingAngle(playerid, 329.0564);
		SetPlayerVirtualWorld(playerid, 0);
		GameTextForPlayer(playerid, "~y~+ /buygun", 2000, 1);
	}
	else if(pickupid == ammonac[1])
	{
		SetPlayerInterior(playerid,0);
	 	ACP_SetPlayerPos(playerid,1366.5776,-1279.5397,13.5469);
	 	SetPlayerFacingAngle(playerid, 89.7301);
	 	SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == rmpic[1])
	{
		SetPlayerInterior(playerid, 5);
		ACP_SetPlayerPos(playerid,1298.6915,-794.2542,1084.0078);
		SetPlayerFacingAngle(playerid, 349.0933);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == rmpic[0])
	{
		SetPlayerInterior(playerid,0);
	 	ACP_SetPlayerPos(playerid,940.2619,1733.4958,8.8516);
	 	SetPlayerFacingAngle(playerid, 276.0833);
	 	SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == yakuzapic[1])
	{
		SetPlayerInterior(playerid, 5);
		ACP_SetPlayerPos(playerid,1298.6915,-794.2542,1084.0078);
		SetPlayerFacingAngle(playerid, 349.0933);
	}
	else if(pickupid == yakuzapic[0])
	{
		SetPlayerInterior(playerid, 0);
		ACP_SetPlayerPos(playerid,1457.5305,2773.4219,10.8203);
		SetPlayerFacingAngle(playerid, 276.0466);
	}
	else if(pickupid == fbi[1])
	{

		if(IsACop(playerid) || keys[playerid] > 0)
		{
		 	SetPlayerInterior(playerid, 0);
			ACP_SetPlayerPos(playerid,-2453.7595,503.7701,30.0798);
			SetPlayerFacingAngle(playerid, 272.4807);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "У вас нету пропуска!");
		}
	}
	else if(pickupid == fbi[0])
	{
		if(IsACop(playerid) || keys[playerid] > 0)
		{
		SetPlayerInterior(playerid, 5);
		ACP_SetPlayerPos(playerid,-1756.1945,966.4996,1038.9189);
		SetPlayerFacingAngle(playerid, 6.1412);
 		}
 		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "У вас нету пропуска!");
		}
	}

 	else if(pickupid == lspd[0])
	{
	 	if(IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] > 0)
		{
			SetPlayerInterior(playerid,6);
			ACP_SetPlayerPos(playerid,246.6428,65.8026,1003.6406);
			SetPlayerFacingAngle(playerid, 2.2168);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Дверь заперта!");
		}
	}
	else if(pickupid == lspd[1])
	{
		if(IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] > 0)
		{
			SetPlayerInterior(playerid,0);
			ACP_SetPlayerPos(playerid,1552.8159,-1675.4498,16.1953);
			SetPlayerFacingAngle(playerid, 91.8310);
			SetPlayerVirtualWorld(playerid, 0);
		 	keys[playerid] -= 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Дверь заперта!");
		}
	}
	else if(pickupid == lspd[2])
	{
	 	SetPlayerInterior(playerid,6);
		ACP_SetPlayerPos(playerid,316.3837,-167.8547,999.5938);
		SetPlayerFacingAngle(playerid, 34.3574);
		SetPlayerVirtualWorld(playerid, 5);
	}
	else if(pickupid == lspd[3])
	{
  		if(IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] > 0)
		{
			SetPlayerInterior(playerid,0);
			ACP_SetPlayerPos(playerid,1568.6962,-1692.2069,5.8906);
			SetPlayerFacingAngle(playerid, 259.617370);
		    SetPlayerVirtualWorld(playerid, 0);
		    keys[playerid] -= 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Дверь заперта!");
		}
	}
	else if(pickupid == lspd[4])
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,1528.010864,-1678.141723,5.890625);
		SetPlayerFacingAngle(playerid, 259.617370);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == lspd[5])
	{
		SetPlayerInterior(playerid,6);
		ACP_SetPlayerPos(playerid,246.5438,85.7663,1003.6406);
		SetPlayerFacingAngle(playerid, 278.0311);
	}
	else if(pickupid == sfpd[4])
	{
	 	if(IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] > 0)
		{
			SetPlayerInterior(playerid,6);
			ACP_SetPlayerPos(playerid,316.3837,-167.8547,999.5938);
			SetPlayerFacingAngle(playerid, 34.3574);
			SetPlayerVirtualWorld(playerid, 1);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Дверь заперта!");
		}
	}
	else if(pickupid == sfpd[0])
	{
		SetPlayerInterior(playerid,0);
	 	ACP_SetPlayerPos(playerid,-1606.4532,674.2636,-5.2422);
		SetPlayerFacingAngle(playerid, 357.2527);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == sfpd[2])
	{
		SetPlayerInterior(playerid,10);
		ACP_SetPlayerPos(playerid,217.3147,121.3382,999.0156);
		SetPlayerFacingAngle(playerid, 272.8898);
	}
	else if(pickupid == sfpd[3])
 	{
	   	if(IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] > 0)
		{
		    SetPlayerInterior(playerid,0);
			ACP_SetPlayerPos(playerid,-1590.8289,716.0479,-5.2422);
			SetPlayerFacingAngle(playerid, 269.9364);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Дверь заперта!");
		}
	}
	else if(pickupid == sfpd[1])
	{
	  	if(IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] > 0)
		{
			SetPlayerInterior(playerid,0);
			ACP_SetPlayerPos(playerid,-1590.8289,716.0479,-5.2422);
			SetPlayerFacingAngle(playerid, 269.9364);
			SetPlayerVirtualWorld(playerid, 0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Дверь заперта!");
		}
	}
	else if(pickupid == armijavhod)
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		ACP_SetPlayerPos(playerid,156.4952,1945.6383,20.0000);
		SetPlayerFacingAngle(playerid, 183.1738);
 	}
	else if(pickupid == armijavihod)
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		ACP_SetPlayerPos(playerid,139.5660,1936.6910,19.2734);
		SetPlayerFacingAngle(playerid, 183.1738);
 	}
	else if(pickupid == avtosh[0])
	{
		SetPlayerInterior(playerid,3);
		SetPlayerVirtualWorld(playerid, 1);
		ACP_SetPlayerPos(playerid,-2029.7866,-117.2675,1035.1719);
		SetPlayerFacingAngle(playerid, 359.0367);
	}
	else if(pickupid == lspdpvhod)
	{
	    SetPlayerInterior(playerid,6);
		ACP_SetPlayerPos(playerid,303.5125,-160.3877,999.5938);
		SetPlayerFacingAngle(playerid, 117.7444);
		SetPlayerVirtualWorld(playerid, 5);
	}
	else if(pickupid == lspdpvihod)
	{
	    SetPlayerInterior(playerid,6);
		ACP_SetPlayerPos(playerid,307.8706,-160.5307,999.5938);
		SetPlayerFacingAngle(playerid, 214.5887);
		SetPlayerVirtualWorld(playerid, 5);
	}
	else if(pickupid == sfpdpvhod)
	{
	    SetPlayerInterior(playerid,6);
		ACP_SetPlayerPos(playerid,303.7336,-160.5929,999.5938);
		SetPlayerFacingAngle(playerid, 128.5069);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == sfpdpvihod)
	{
	    SetPlayerInterior(playerid,6);
		ACP_SetPlayerPos(playerid,308.0272,-161.0272,999.5938);
		SetPlayerFacingAngle(playerid, 201.2008);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == lvpdpvhod)
	{
	    SetPlayerInterior(playerid,6);
		ACP_SetPlayerPos(playerid,303.7315,-160.7716,999.5938);
		SetPlayerFacingAngle(playerid, 133.9143);
		SetPlayerVirtualWorld(playerid, 15);
	}
	else if(pickupid == lvpdpvihod)
	{
	    SetPlayerInterior(playerid,6);
		ACP_SetPlayerPos(playerid,307.9025,-161.2379,999.5938);
		SetPlayerFacingAngle(playerid, 203.7883);
		SetPlayerVirtualWorld(playerid, 15);
	}
	else if(pickupid == avtosh[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		ACP_SetPlayerPos(playerid,1096.4502,-1689.5349,23.5469);
		SetPlayerFacingAngle(playerid,357.4070);
	}
 	else if(pickupid == avtosh[2])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		ACP_SetPlayerPos(playerid,1081.0640,-1699.3230,13.5469);
		SetPlayerFacingAngle(playerid, 178.3235);
	}
	else if(pickupid == avtosh[3])
	{
		SetPlayerInterior(playerid,3);
		SetPlayerVirtualWorld(playerid, 1);
		ACP_SetPlayerPos(playerid,-2028.9421,-105.0366,1035.1719);
		SetPlayerFacingAngle(playerid, 183.1738);
 	}
	else if(pickupid == cerkva[0])
	{
	    SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2016.8442,1019.0240,1418.4969);
		SetPlayerFacingAngle(playerid, 94.5332);
	}
	else if(pickupid == cerkva[1])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1380.3800,-1753.4186,13.5469);
		SetPlayerFacingAngle(playerid, 284.5912);
	}
	else if(pickupid == magazmts[0])// Вход
	{
	    ACP_SetPlayerPos(playerid,828.3567,1.5197,994.5490);
	    SetPlayerFacingAngle(playerid,358.4727);
	    //SetPlayerCheckpoint(playerid,833.2015,1.4539,994.5490,1);
	    //PicCP[playerid] = 3;
	}
	else if(pickupid == magazmts[1])// Выход
	{
	    ACP_SetPlayerPos(playerid,1421.3917,-1623.7723,13.5469);
	    SetPlayerFacingAngle(playerid,273.8954);
	    //DisablePlayerCheckpoint(playerid);
	    //PicCP[playerid] = 0;
	}
	else if(pickupid == pasportstol)
	{
	    if(GetPVarInt(playerid,"Pasport") > gettime()) { SendClientMessage(playerid, COLOR_GREY, "Вставать на пикап выдачи паспорта можно раз в 60 секунд"); return 0; }
	    if(PlayerInfo[playerid][pPasport] == 1) return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть паспорт!");
	    ShowPlayerDialog(playerid,1849,DIALOG_STYLE_MSGBOX, "Паспорт", "{99CCFF}Зравствуйте , подошла ваша очередь на регистрацию паспорта.\n{e23434}Паспорт{99CCFF} - Официальный документ, удостоверяющий личность владельца.\nБез него вы не сможете устроиться на нормальную работу,\nа также вас не возьмут в гос. организацию!\nСтоймость регистрации: 2000$\nВы действительно хотите получить паспорт?", "Получить", "Отмена");
	    SetPVarInt(playerid,"Pasport",gettime() + 60);
	}
	else if(pickupid == lvpd[0])
	{
		SetPlayerInterior(playerid,3);
		SetPlayerVirtualWorld(playerid, 122);
		ACP_SetPlayerPos(playerid,238.5033,141.1578,1003.0234);
		SetPlayerFacingAngle(playerid, 359.1617);
	}
	else if(pickupid == lvpd[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		ACP_SetPlayerPos(playerid,2295.1934,2451.8459,10.8203);
		SetPlayerFacingAngle(playerid, 94.8742);
	}
	else if(pickupid == lvpd[2])
	{
		SetPlayerInterior(playerid,3);
		SetPlayerVirtualWorld(playerid, 122);
		ACP_SetPlayerPos(playerid,288.7445,169.2445,1007.1719);
		SetPlayerFacingAngle(playerid, 9.7598);
	}
	else if(pickupid == lvpd[3])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		ACP_SetPlayerPos(playerid,2340.1965,2455.9792,14.9688);
		SetPlayerFacingAngle(playerid, 178.3347);
	}
 	else if(pickupid == lvpd[4])
	{
		ShowPlayerDialog(playerid,8240,DIALOG_STYLE_MSGBOX, "Вход", "Куда вы хотите войти?", "Склад", "На крышу");
	}
	else if(pickupid == lvpd[5])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		ACP_SetPlayerPos(playerid,2293.3225,2468.6162,10.8203);
		SetPlayerFacingAngle(playerid, 93.6957);
	}
	else if(pickupid == lvpd[6])
	{
		ShowPlayerDialog(playerid,8241,DIALOG_STYLE_MSGBOX, "Вход", "Куда Вы хотите войти?", "Склад", "Вниз");
	}
	else if(pickupid >= chekmaterialslv[0] && pickupid <= chekmaterialslv[9])
  	{
  		if(!IsAGang(playerid)) return SendClientMessage(playerid,COLOR_GREY, "Вы не бандит");
		if(armmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов");
   		if(PlayerInfo[playerid][pMaterials] >= 500) return SendClientMessage(playerid, COLOR_GREY, "У вас на руках уже есть материалы");
     	SendClientMessage(playerid, 0x6495EDFF, "Вы взяли несколько комплектов");
		armmatbi -= 500;
		PlayerInfo[playerid][pMaterials] = 500;
	}
	else if(pickupid >= chekmaterialssf[0]&& pickupid <= chekmaterialssf[2])
  	{
		if (!IsAGang(playerid)) return SendClientMessage(playerid,COLOR_GREY, "Вы не бандит");
		if(armmatsf <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов");
		if(PlayerInfo[playerid][pMaterials] >= 500) return SendClientMessage(playerid, COLOR_GREY, "У вас на руках уже есть материалы");
		SendClientMessage(playerid, 0x6495EDFF, "Вы взяли несколько комплектов");
		armmatsf -= 500;
		PlayerInfo[playerid][pMaterials] = 500;
	}
	else if(pickupid >= mushroom[0]&& pickupid <= mushroom[52])
	{
		new sendername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "%s срезал(а) гриб", sendername);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		PlayerInfo[playerid][pMushrooms] += 1;
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 6.1, 0, 0, 0, 0, 0,1);
		format(string,sizeof(string), "Грибов собрано: {ffffff}%d",PlayerInfo[playerid][pMushrooms]);
		SendClientMessage(playerid,COLOR_GREEN,string);
	}
	else if(pickupid == fracgunpic[0])
	{
		if(FormaFrac[playerid] == 1 && PlayerInfo[playerid][pMember] == 2)
		{
			if(fbimats <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
			{
			    if(GetPVarInt(playerid,"Weapon") > gettime()) { SendClientMessage(playerid, COLOR_GREY, "Брать оружие можно раз в 60 секунд"); return 0; }
				GiveWeapon(playerid, 24, 70);
				GiveWeapon(playerid, 29, 150);
				GiveWeapon(playerid, 41, 300);
				SetPlayerArmourAC(playerid, 100);
				SetPlayerHealthAC(playerid, 100);
				PlayerInfo[playerid][pHP] = 100;
				fbimats -= 100;
				SendClientMessage(playerid, COLOR_USE, "Вам выдано: Deagle (70),Spray (300),МP5 (150)");
				SetPVarInt(playerid,"Weapon",gettime() + 60);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не агент ФБР");
		}
	}
	else if(pickupid == mayorpic[0])
	{
	    if(FormaFrac[playerid] == 1 && PlayerInfo[playerid][pMember] == 7)
	    {
	            if(GetPVarInt(playerid,"Weapon") > gettime()) { SendClientMessage(playerid, COLOR_GREY, "Брать оружие можно раз в 60 секунд"); return 0; }
	        	GiveWeapon(playerid, 24, 100);
				SetPlayerArmourAC(playerid, 100);
				SetPlayerHealthAC(playerid, 100);
				PlayerInfo[playerid][pHP] = 100;
				SendClientMessage(playerid, COLOR_USE, "Вам выдано: Deagle (100), Сухой поек и бронежилет");
				SetPVarInt(playerid,"Weapon",gettime() + 60);
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "Если вы работаете в данной организации - переоденьтесь.");
		}
	}
	else if(pickupid == infpic)
	{
	    new avtinfo[2148];
		format(avtinfo,sizeof(avtinfo), "%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
		infMSG[0],infMSG[1],infMSG[2],infMSG[3],infMSG[4],infMSG[5],infMSG[6],infMSG[7],infMSG[8],infMSG[9],infMSG[10],infMSG[11],infMSG[12],infMSG[13],infMSG[14]);
		ShowPlayerDialog(playerid,133,DIALOG_STYLE_MSGBOX, "Информация по автосалону", avtinfo, "Готово", "");
	}
	else if(pickupid == fracgunpic[1])
	{
		if(FormaFrac[playerid] == 1 && PlayerInfo[playerid][pMember] == 1)
		{
			if(lspdmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
			{
			    if(GetPVarInt(playerid,"Weapon") > gettime()) { SendClientMessage(playerid, COLOR_GREY, "Брать оружие можно раз в 60 секунд"); return 0; }
				GiveWeapon(playerid, 3, 1);
				GiveWeapon(playerid, 24, 100);
				GiveWeapon(playerid, 25, 100);
				SetPlayerArmourAC(playerid, 100);
				SetPlayerHealthAC(playerid, 100);
				PlayerInfo[playerid][pHP] = 100;
				lspdmatbi -= 100;
				SendClientMessage(playerid, COLOR_USE, "Вам выдано: Бронижилет , Дубинка, Дробовик , Deagle (100)");
				SetPVarInt(playerid,"Weapon",gettime() + 60);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в LSPD");
		}
	}
	else if(pickupid == fracgunpic[3])
	{
		if(FormaFrac[playerid] == 1)
		{
			if(lvpdmats <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
			{
			    if(GetPVarInt(playerid,"Weapon") > gettime()) { SendClientMessage(playerid, COLOR_GREY, "Брать оружие можно раз в 60 секунд"); return 0; }
				GiveWeapon(playerid, 3, 1);
				GiveWeapon(playerid, 24, 100);
				GiveWeapon(playerid, 25, 100);
				SetPlayerArmourAC(playerid, 100);
				SetPlayerHealthAC(playerid, 100);
				PlayerInfo[playerid][pHP] = 100;
				lvpdmats -= 100;
				SendClientMessage(playerid, COLOR_USE, "Вам выдано: Бронижилет , Дубинка, Дробовик , Deagle (100)");
				SetPVarInt(playerid,"Weapon",gettime() + 60);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в LVPD");
		}
	}
	else if(pickupid == fracgunpic[2])
	{
		if(FormaFrac[playerid] == 1)
		{
			if(sfpdmats <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
			{
			    if(GetPVarInt(playerid,"Weapon") > gettime()) { SendClientMessage(playerid, COLOR_GREY, "Брать оружие можно раз в 60 секунд"); return 0; }
				GiveWeapon(playerid, 3, 1);
				GiveWeapon(playerid, 24, 100);
				GiveWeapon(playerid, 25, 100);
				SetPlayerArmourAC(playerid, 100);
				SetPlayerHealthAC(playerid, 100);
				PlayerInfo[playerid][pHP] = 100;
				sfpdmats -= 100;
				SendClientMessage(playerid, COLOR_USE, "Вам выдано: Дубинка, Deagle (100)");
				SetPVarInt(playerid,"Weapon",gettime() + 60);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не cостоите в SFPD");
		}
	}
	else if(pickupid == cashs)
	{
	    if(PlayerInfo[playerid][pJob] == 7)
	    {
			if(Prorab[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, "Вы еще не устроились");
		    if(JobAmmount[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Ты еще ничего не заработал");
		    format(string,sizeof(string), "Вы заработали: {FFFFFF}%d вирт",JobAmmount[playerid]*1000);
	        SendClientMessage(playerid,COLOR_GREEN,string);
		    PlayerInfo[playerid][pCash] += JobAmmount[playerid]*1000;
	        JobAmmount[playerid] = 0;
	        SendClientMessage(playerid,COLOR_GREEN, "Рабочий день завершён!");
		    Prorab[playerid] = false; JobAmmount[playerid] = 0; Employer[playerid] = 999;
			SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
			DisablePlayerCheckpoint(playerid);
	    }
	    else
	    {
			if(Works[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, "Вы еще не устроились");
		    if(JobAmmount[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Ты еще ничего не заработал");
		    format(string,sizeof(string), "Вы заработали: {FFFFFF}%d вирт",JobAmmount[playerid]*100);
	        SendClientMessage(playerid,COLOR_GREEN,string);
		    PlayerInfo[playerid][pCash] += JobAmmount[playerid]*200;
	        JobAmmount[playerid] = 0;
	        SendClientMessage(playerid,COLOR_GREEN, "Рабочий день завершён!");
		    Works[playerid] = false; JobAmmount[playerid] = 0; JobCP[playerid] = 0; Employer[playerid] = 999;
			DisablePlayerCheckpoint(playerid);
			new stringg[600];
			if(PlayerInfo[playerid][pQuest] == 2 && PlayerInfo[playerid][pCash] >= 1000)
			{
			    new msgggg[] = "{99CCFF}Молодец! Я знал что ты справишься! Теперь ступай в автошколу и сдай на права!\nПосле экзамена я свяжусь с тобой снова!\nЕсли ты не знаешь где находится автошкола , я могу отметить ее на карте.\nОтметиь?";
				format(stringg, sizeof(stringg), msgggg);
				ShowPlayerDialog(playerid, 1851, DIALOG_STYLE_MSGBOX, "Диалог Rafael",stringg, "Да", "Нет");
			}
		}
    }
	else if(pickupid == clothes)
	{
	    if(PlayerInfo[playerid][pJob] == 7)
	    {
	        ShowPlayerDialog(playerid,406,DIALOG_STYLE_MSGBOX,"Раздевалка","Желаете завершить рабочий день?","Нет","Да");
		}
		else
		{
			ShowPlayerDialog(playerid,405,DIALOG_STYLE_MSGBOX, "Раздевалка", "Желаете начать рабочий день?", "Да", "Нет");
		}
	}
	else if(pickupid == skinshop[0] || pickupid == skinshop[2])
  	{
	  	if(PlayerInfo[playerid][pSex] != 1)
	  	{
		  	SendClientMessage(playerid, COLOR_WHITE, "Вы ошиблись кабинкой");
		  	return true;
	  	}
		if(FormaFrac[playerid] == 0)
  		{
			OldSkin[playerid] = GetPlayerSkin(playerid);
			SetPlayerInterior(playerid,5);
			ShowMenuForPlayer(skinshopmagaz[0],playerid);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Используйте клавиши W,A,S,D и Space ( Пробел) чтобы выбрать скин");
			SendClientMessage(playerid, COLOR_LIGHTRED, "Если Вы случайно нажали 'Enter' и меню пропало, нажмите 'Enter' еще раз");
			new rand = random(sizeof(gInviteSpawns));
			ACP_SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
			SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			TogglePlayerControllable(playerid, 0);
			SelectChar[playerid] = 255;
			ChosenSkin[playerid] = 230;
			CharPrice[playerid] = 1000;
			SelectCharPlace[playerid] = 1;
			PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
			new skin =2 + random(100);
			SetPlayerVirtualWorld(playerid,skin);
			CharPrice[playerid] = 1000;
			GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1000", 2000, 3);
			return true;
  		}
	  	if(FormaFrac[playerid] == 1)
	  	{
			ShowMenuForPlayer(ChoseSkin,playerid);
			if(PlayerInfo[playerid][pMember] == 1) {  ChosenSkin[playerid] = 59; }
			else if(PlayerInfo[playerid][pMember] == 2) {  ChosenSkin[playerid] = 286; }
			else if(PlayerInfo[playerid][pMember] == 3) {  ChosenSkin[playerid] = 287; proverkaforma[playerid] = 1; }
			else if(PlayerInfo[playerid][pMember] == 4) {  ChosenSkin[playerid] = 70; }
			else if(PlayerInfo[playerid][pMember] == 5) {  ChosenSkin[playerid] = 223; }
			else if(PlayerInfo[playerid][pMember] == 6) {  ChosenSkin[playerid] = 120; }
			else if(PlayerInfo[playerid][pMember] == 7) {  ChosenSkin[playerid] = 57; }
			else if(PlayerInfo[playerid][pMember] == 8) {  ChosenSkin[playerid] = 171; }
			else if(PlayerInfo[playerid][pMember] == 9) {  ChosenSkin[playerid] = 250; }
			else if(PlayerInfo[playerid][pMember] == 10) {  ChosenSkin[playerid] = 280; }
			else if(PlayerInfo[playerid][pMember] == 11) {  ChosenSkin[playerid] = 59; }
			else if(PlayerInfo[playerid][pMember] == 12) {  ChosenSkin[playerid] = 102; }
			else if(PlayerInfo[playerid][pMember] == 13) {  ChosenSkin[playerid] = 108; }
			else if(PlayerInfo[playerid][pMember] == 14) {  ChosenSkin[playerid] = 111; }
			else if(PlayerInfo[playerid][pMember] == 15) {  ChosenSkin[playerid] = 106; }
			else if(PlayerInfo[playerid][pMember] == 16) {  ChosenSkin[playerid] = 250; }
			else if(PlayerInfo[playerid][pMember] == 17) {  ChosenSkin[playerid] = 114; }
			else if(PlayerInfo[playerid][pMember] == 18) {  ChosenSkin[playerid] = 173; }
			else if(PlayerInfo[playerid][pMember] == 19) {  ChosenSkin[playerid] = 287; proverkaforma[playerid] = 1; }
			else if(PlayerInfo[playerid][pMember] == 20) {  ChosenSkin[playerid] = 250; }
			else if(PlayerInfo[playerid][pMember] == 21) {  ChosenSkin[playerid] = 280; }
			else if(PlayerInfo[playerid][pMember] == 22) {  ChosenSkin[playerid] = 70; }
			else if(PlayerInfo[playerid][pMember] == 23) {  ChosenSkin[playerid] = 70; }
			else { return true; }
			SetPlayerInterior(playerid,5);
			SetPlayerVirtualWorld(playerid,3);
			new rand = random(sizeof(gInviteSpawns));
			ACP_SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
			SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			TogglePlayerControllable(playerid, 0);
			SelectChar[playerid] = 255;
			SelectCharID[playerid] = PlayerInfo[playerid][pMember];
			SelectCharPlace[playerid] = 1;
			PlayerInfo[playerid][pModel] = ChosenSkin[playerid];
			return true;
		}
   	}
	if(pickupid == skinshop[1] || pickupid == skinshop[3])
  	{
	  	if(PlayerInfo[playerid][pSex] != 2)
	  	{
		  	SendClientMessage(playerid, COLOR_WHITE, "Вы ошиблись кабинкой");
		  	return true;
	  	}
	  	if(FormaFrac[playerid] == 0)
		{
			OldSkin[playerid] = GetPlayerSkin(playerid);
			SetPlayerInterior(playerid,5);
			PlayerInfo[playerid][pChar] = 90;
			ShowMenuForPlayer(skinshopmagaz[1],playerid);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Используйте клавиши W,A,S,D и Space ( Пробел) чтобы выбрать скин");
			SendClientMessage(playerid, COLOR_LIGHTRED, "Если Вы случайно нажали 'Enter' и меню пропало, нажмите 'Enter' еще раз");
			new rand = random(sizeof(gInviteSpawns));
			ACP_SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
			SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			TogglePlayerControllable(playerid, 0);
			SelectChar[playerid] = 255;
			ChosenSkin[playerid] = 90;
			SelectCharPlace[playerid] = 1;
			PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
			new skin =2 + random(100);
			SetPlayerVirtualWorld(playerid,skin);
			PlayerPlaySound(playerid, 1185, 0.0, 0.0, 0.0);
			CharPrice[playerid] = 10000;
			GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~10000", 2000, 3);
			return true;
	  	}
		if(FormaFrac[playerid] == 1)
		{
			ShowMenuForPlayer(ChoseSkin,playerid);
			if(PlayerInfo[playerid][pMember] == 1) {  ChosenSkin[playerid] = 59; }
			else if(PlayerInfo[playerid][pMember] == 2) {  ChosenSkin[playerid] = 286; }
			else if(PlayerInfo[playerid][pMember] == 3) {  ChosenSkin[playerid] = 287; proverkaforma[playerid] = 1; }
			else if(PlayerInfo[playerid][pMember] == 4) {  ChosenSkin[playerid] = 70; }
			else if(PlayerInfo[playerid][pMember] == 5) {  ChosenSkin[playerid] = 223; }
			else if(PlayerInfo[playerid][pMember] == 6) {  ChosenSkin[playerid] = 120; }
			else if(PlayerInfo[playerid][pMember] == 7) {  ChosenSkin[playerid] = 57; }
			else if(PlayerInfo[playerid][pMember] == 8) {  ChosenSkin[playerid] = 171; }
			else if(PlayerInfo[playerid][pMember] == 9) {  ChosenSkin[playerid] = 250; }
			else if(PlayerInfo[playerid][pMember] == 10) {  ChosenSkin[playerid] = 280; }
			else if(PlayerInfo[playerid][pMember] == 11) {  ChosenSkin[playerid] = 59; }
			else if(PlayerInfo[playerid][pMember] == 12) {  ChosenSkin[playerid] = 102; }
			else if(PlayerInfo[playerid][pMember] == 13) {  ChosenSkin[playerid] = 108; }
			else if(PlayerInfo[playerid][pMember] == 14) {  ChosenSkin[playerid] = 111; }
			else if(PlayerInfo[playerid][pMember] == 15) {  ChosenSkin[playerid] = 106; }
			else if(PlayerInfo[playerid][pMember] == 16) {  ChosenSkin[playerid] = 250; }
			else if(PlayerInfo[playerid][pMember] == 17) {  ChosenSkin[playerid] = 114; }
			else if(PlayerInfo[playerid][pMember] == 18) {  ChosenSkin[playerid] = 173; }
			else if(PlayerInfo[playerid][pMember] == 19) {  ChosenSkin[playerid] = 287; proverkaforma[playerid] = 1; }
			else if(PlayerInfo[playerid][pMember] == 20) {  ChosenSkin[playerid] = 250; }
			else if(PlayerInfo[playerid][pMember] == 21) {  ChosenSkin[playerid] = 280; }
			else if(PlayerInfo[playerid][pMember] == 22) {  ChosenSkin[playerid] = 70; }
			else if(PlayerInfo[playerid][pMember] == 23) {  ChosenSkin[playerid] = 70; }
			else { return true; }
			SetPlayerInterior(playerid,5);
			SetPlayerVirtualWorld(playerid,3);
			new rand = random(sizeof(gInviteSpawns));
			ACP_SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
			SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			TogglePlayerControllable(playerid, 0);
			SelectChar[playerid] = 255;
			SelectCharID[playerid] = PlayerInfo[playerid][pMember];
			SelectCharPlace[playerid] = 1;
			PlayerInfo[playerid][pModel] = ChosenSkin[playerid];
			return true;
		}
 	}
	else if(pickupid == hallenter[0])
	{
		SetPlayerInterior(playerid,3);
		ACP_SetPlayerPos(playerid,385.9440,173.6978,1008.3828);
		SetPlayerFacingAngle(playerid, 88.1044);
		SetPlayerCheckpoint(playerid,359.8466,184.7337,1008.3828,1.5);
		PicCP[playerid] = 2;
	}
	else if(pickupid == hallexit)
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,1481.7124,-1810.8739,13.5469);
		SetPlayerFacingAngle(playerid, 359.4586);
		DisablePlayerCheckpoint(playerid);
		PicCP[playerid] = 0;
		CP[playerid] = 0;
		new stringg[600];
		if(PlayerInfo[playerid][pPasport] == 1 && PlayerInfo[playerid][pQuest] == 1)
		{
			new msgggg[] = "{99CCFF}Привет , это снова я! Как и обещал , я связался с тобой! По скольку я знаю , у тебя не осталось денег.\nПо этому я хочу тебя познакомить с начальными работами в этом штате.\n1.Грузчик - находится недалеко отсюда.( За мешок - 200$ )\n2.Шахтер - далековато отсюда , зарплата зависит от добычи.\nЗаработай как минимум 1000. Как заработаешь , я свяжусь с тобой!";
			format(stringg, sizeof(stringg), msgggg);
			ShowPlayerDialog(playerid, 1850, DIALOG_STYLE_MSGBOX, "Диалог Rafael",stringg, "Грузчики", "Отмена");
		}
	}
 	else if(pickupid == lilprobeinn)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		ACP_SetPlayerPos(playerid, -87.1981,1378.5879,10.2734);
		SetPlayerFacingAngle(playerid, 277.5062);
	}
 	else if(pickupid == rifaenter[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		ACP_SetPlayerPos(playerid,2185.96,-1811.94,13.55);
		SetPlayerFacingAngle(playerid, 400);
	}
	else if(pickupid == rifaenter[1])
	{
		SetPlayerInterior(playerid,18);
		SetPlayerVirtualWorld(playerid, 63);
		ACP_SetPlayerPos(playerid,-226.9188,1401.3635,27.7656);
		SetPlayerFacingAngle(playerid, 500);
	}
	else if(pickupid == vagospic[0])
	{
		SetPlayerInterior(playerid,4);
		SetPlayerVirtualWorld(playerid, 75);
		ACP_SetPlayerPos(playerid,303.2970,307.1475,1003.5391);
		SetPlayerFacingAngle(playerid, 500);
	}
	else if(pickupid == vagospic[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		ACP_SetPlayerPos(playerid,2774.2017,-1628.0233,12.1775);
		SetPlayerFacingAngle(playerid, 330.4577);
	}
	else if(pickupid == grove[1])
	{
		SetPlayerInterior(playerid,3);
		ACP_SetPlayerPos(playerid,2496.1580,-1694.5743,1014.7422);
		SetPlayerFacingAngle(playerid,177.8856);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == grove[0])
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,2495.1199,-1688.3727,13.7653);
		SetPlayerFacingAngle(playerid, 4.2929);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == aztecpic[0])
	{
		SetPlayerInterior(playerid,8);
		SetPlayerVirtualWorld(playerid, 36);
		ACP_SetPlayerPos(playerid,-42.31,1408.18,1084.43);
		SetPlayerFacingAngle(playerid, 1000);
	}
	else if(pickupid == aztecpic[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		ACP_SetPlayerPos(playerid,1667.4498,-2108.3840,13.8906);
		SetPlayerFacingAngle(playerid, 178.1356);
	}
	else if(pickupid == bankpic[0]) // ВХОД
	{
		SetPlayerInterior(playerid, 0);
		ACP_SetPlayerPos(playerid,1371.6597,900.2436,1105.2300);
		SetPlayerFacingAngle(playerid, 179.0009);
	}
	else if(pickupid == bankpic[1]) // ВЫХОД
	{
		SetPlayerInterior(playerid, 0);
		ACP_SetPlayerPos(playerid,1414.14,-1702.78,13.5395);
		SetPlayerFacingAngle(playerid, 209.7472);
	}
	else if(pickupid == ballasenter[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		ACP_SetPlayerPos(playerid,2647.9932,-2021.5747,13.5469);
		SetPlayerFacingAngle(playerid, 100);
	}
	else if(pickupid == ballasenter[1])
	{
		SetPlayerInterior(playerid,6);
		SetPlayerVirtualWorld(playerid, 34);
		ACP_SetPlayerPos(playerid,-68.6311,1353.8743,1080.2109);
		SetPlayerFacingAngle(playerid, 100);
	}
	else if(pickupid == warehousearmy[0])
	{
		SetPlayerInterior(playerid,6);
		ACP_SetPlayerPos(playerid,316.9104,-168.6356,999.5938);
		SetPlayerFacingAngle(playerid, 355.8037);
		SetPlayerVirtualWorld(playerid, 228);
	}
	else if(pickupid == warehousearmy[1])
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,338.3804,1949.1343,22.0174);
		SetPlayerFacingAngle(playerid, 92.2485);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == warehousearmy[2])
	{
		SetPlayerInterior(playerid,0);
		ACP_SetPlayerPos(playerid,-1370.39,498.79,11.20);
		SetPlayerFacingAngle(playerid, 270.0000);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == warehousearmy[3])
	{
		SetPlayerInterior(playerid,6);
		ACP_SetPlayerPos(playerid,316.9104,-168.6356,999.5938);
		SetPlayerFacingAngle(playerid, 355.8037);
		SetPlayerVirtualWorld(playerid, 3);
	}
	else if(pickupid == lsaammo)
	{
		if(FormaFrac[playerid] == 1 && PlayerInfo[playerid][pMember] == 1)
		{
			if(lsamatbi <= 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "На складе нет оружия");
				return true;
			}
			if(GetPVarInt(playerid,"Weapon") > gettime()) { SendClientMessage(playerid, COLOR_GREY, "Брать оружие можно раз в 60 секунд"); return 0; }
			GiveWeapon(playerid, 24, 100);
			GiveWeapon(playerid, 31, 200);
			SetPlayerArmourAC(playerid, 100);
			SetPlayerHealthAC(playerid, 100);
			PlayerInfo[playerid][pHP] = 100;
			PlayerInfo[playerid][pSatiety] = 100;
			lsamatbi -= 100;
			SendClientMessage(playerid, COLOR_USE, "Вам выдано: Deagle (100),M4 (200), Бронижелет, Сухой паёк");
			SetPVarInt(playerid,"Weapon",gettime() + 60);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не армеец");
		}
	}
	else if(pickupid == lsamaterials)
	{
		SendClientMessage(playerid, 0x6495EDFF, "Склад с оружием. Чтобы украсть комплект, используйте /materials get");
	}
    else if(pickupid == gunarm[0])
    {
    	if(FormaFrac[playerid] == 1 && PlayerInfo[playerid][pMember] == 19)
    	{
			if(armmatbi <= 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "На складе нет оружия");
				return true;
			}
			if(GetPVarInt(playerid,"Weapon") > gettime()) { SendClientMessage(playerid, COLOR_GREY, "Брать оружие можно раз в 60 секунд"); return 0; }
			GiveWeapon(playerid, 24, 100);
			GiveWeapon(playerid, 31, 200);
			SetPlayerArmourAC(playerid, 100);
			SetPlayerHealthAC(playerid, 100);
			PlayerInfo[playerid][pHP] = 100;
			PlayerInfo[playerid][pSatiety] = 100;
			armmatbi -= 100;
			SendClientMessage(playerid, COLOR_USE, "Вам выдано: Deagle (100),M4 (200), Бронижелет, Сухой паёк");
			SetPVarInt(playerid,"Weapon",gettime() + 60);
		}
		else
		{
            SendClientMessage(playerid, COLOR_GREY, "Вы не солдат LVA");
		}
	}
	else if(pickupid == gunarm[1])
	{
		if(FormaFrac[playerid] == 1 && PlayerInfo[playerid][pMember] == 3)
		{
			if(armmatsf <= 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "На складе нет оружия");
				return true;
			}
			if(GetPVarInt(playerid,"Weapon") > gettime()) { SendClientMessage(playerid, COLOR_GREY, "Брать оружие можно раз в 60 секунд"); return 0; }
			GiveWeapon(playerid, 24, 100);
			GiveWeapon(playerid, 31, 200);
			SetPlayerArmourAC(playerid, 100);
			SetPlayerHealthAC(playerid, 100);
			PlayerInfo[playerid][pHP] = 100;
			PlayerInfo[playerid][pSatiety] = 100;
			armmatsf -= 100;
			SendClientMessage(playerid, COLOR_USE, "Вам выдано: Deagle (100),M4 (200), Бронижелет, Сухой паёк");
			SetPVarInt(playerid,"Weapon",gettime() + 60);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не солдат SFA");
		}
	}
	else if(pickupid == zone[1])
	{
    	if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
		{
			SetPlayerInterior(playerid,0);
			ACP_SetPlayerPos(playerid,279.4233,1835.0087,17.6481);
			SetPlayerFacingAngle(playerid, 17.2727);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "У вас нет ключа!");
		}
	}
	else if(pickupid == zone[0])
	{
	    if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
		{
			SetPlayerInterior(playerid,0);
			ACP_SetPlayerPos(playerid,291.8297,1836.4666,17.6406);
			SetPlayerFacingAngle(playerid, 346.3333);
		}
		else
		{
    		SendClientMessage(playerid, COLOR_WHITE, "У вас нет ключа!");
		}
  	}
	return true;
}
public OnPlayerSelectedMenuRow(playerid, row)
{
	new Menu:Current = GetPlayerMenu(playerid);
	if(Current == Buyint)
	{
	    ShowMenuForPlayer(Buyint,playerid);
		switch(row)
		{
		    case 0: // NEXT >>
		    {
		        if(pokupka[playerid] == 1)
		        {
		            SetPlayerPos(playerid,2262.83,-1137.71,1050.63);
		            SetPlayerInterior(playerid,10);
		            pokupka[playerid] = 2;
		            SendClientMessage(playerid,COLOR_GREEN,"Данный интерьер стоит {FFFFFF}100000");
				}
				else if(pokupka[playerid] == 2)
				{
				    SetPlayerPos(playerid,2365.42,-1131.85,1050.88);
		            SetPlayerInterior(playerid,8);
		            pokupka[playerid] = 3;
		            SendClientMessage(playerid,COLOR_GREEN,"Данный интерьер стоит {FFFFFF}120000");
				}
				else if(pokupka[playerid] == 3)
				{
                    SetPlayerPos(playerid,2451.77,-1699.80,1013.51);
		            SetPlayerInterior(playerid,2);
		            pokupka[playerid] = 4;
		            SendClientMessage(playerid,COLOR_GREEN,"Данный интерьер стоит {FFFFFF}130000");
				}
				else if(pokupka[playerid] == 4)
				{
				    SetPlayerPos(playerid,223.043991,1289.259888,1082.199951);
		            SetPlayerInterior(playerid,1);
		            pokupka[playerid] = 5;
		            SendClientMessage(playerid,COLOR_GREEN,"Данный интерьер стоит {FFFFFF}200000");
				}
				else if(pokupka[playerid] == 5)
				{
				    SetPlayerPos(playerid,385.803986,1471.769897,1080.20996);
		            SetPlayerInterior(playerid,15);
		            pokupka[playerid] = 6;
		            SendClientMessage(playerid,COLOR_GREEN,"Данный интерьер стоит {FFFFFF}220000");
				}
				else if(pokupka[playerid] == 6)
				{
				    SetPlayerPos(playerid,2324.33,-1144.79,1050.71);
		            SetPlayerInterior(playerid,12);
		            pokupka[playerid] = 7;
		            SendClientMessage(playerid,COLOR_GREEN,"Данный интерьер стоит {FFFFFF}250000");
				}
				else if(pokupka[playerid] == 7)
				{
				    SetPlayerPos(playerid,2319.1272,-1023.9562,1050.2109);
		            SetPlayerInterior(playerid,9);
		            pokupka[playerid] = 8;
		            SendClientMessage(playerid,COLOR_GREEN,"Данный интерьер стоит {FFFFFF}270000");
				}
				else if(pokupka[playerid] == 8)
				{
				    SetPlayerPos(playerid,2260.76,-1210.45,1049.02);
		            SetPlayerInterior(playerid,10);
		            pokupka[playerid] = 9;
		            SendClientMessage(playerid,COLOR_GREEN,"Данный интерьер стоит {FFFFFF}300000");
				}
				else if(pokupka[playerid] == 9)
				{
				    SetPlayerPos(playerid,225.630997,1022.479980,1084.069946);
		            SetPlayerInterior(playerid,7);
		            pokupka[playerid] = 10;
		            SendClientMessage(playerid,COLOR_GREEN,"Данный интерьер стоит {FFFFFF}320000");
				}
				else if(pokupka[playerid] == 10)
				{
				    SetPlayerPos(playerid,239.2819,1114.1991,1080.9922);
		            SetPlayerInterior(playerid,5);
		            pokupka[playerid] = 11;
		            SendClientMessage(playerid,COLOR_GREEN,"Данный интерьер стоит {FFFFFF}340000");
				}
				else if(pokupka[playerid] == 11)
				{
				    SetPlayerPos(playerid,234.2826,1065.229,1084.2101);
		            SetPlayerInterior(playerid,6);
		            pokupka[playerid] = 12;
		            SendClientMessage(playerid,COLOR_GREEN,"Данный интерьер стоит {FFFFFF}380000");
				}
				else if(pokupka[playerid] == 12)
				{
				    SetPlayerPos(playerid,2262.83,-1137.71,1050.63);
		            SetPlayerInterior(playerid,10);
		            pokupka[playerid] = 1;
		            SendClientMessage(playerid,COLOR_GREEN,"Данный интерьер стоит {FFFFFF}50000");
				}
		    }
		    case 1: // $ BUY $
		    {
		        if(pokupka[playerid] == 1)
		        {
		            if(PlayerInfo[playerid][pCash] < 50000)return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
					new house = PlayerInfo[playerid][pPHousekey];
					HouseInfo[house][hInt] = 5;
					HouseInfo[house][hExitx] = 2233.7283;
					HouseInfo[house][hExity] = -1115.2617;
					HouseInfo[house][hExitz] = 1050.8828;
					PlayerInfo[playerid][pCash] -= 100000;
					SendClientMessage(playerid,COLOR_GREEN,"Вы преобрели интерьер стоймостью в 50000 вирт");
					SaveHomeSbizz();
					Exit(playerid);
				}
				else if(pokupka[playerid] == 2)
				{
				    if(PlayerInfo[playerid][pCash] < 100000)return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
				    new house = PlayerInfo[playerid][pPHousekey]; //
					HouseInfo[house][hInt] = 10;
					HouseInfo[house][hExitx] = 2259.3816;
					HouseInfo[house][hExity] = -1135.9191;
					HouseInfo[house][hExitz] = 1050.6403;
					PlayerInfo[playerid][pCash] -= 100000;
					SendClientMessage(playerid,COLOR_GREEN,"Вы преобрели интерьер стоймостью в 100000 вирт");
					SaveHomeSbizz();
					Exit(playerid);
				}
				else if(pokupka[playerid] == 3)
				{
				    if(PlayerInfo[playerid][pCash] < 120000)return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
				    new house = PlayerInfo[playerid][pPHousekey]; //
					HouseInfo[house][hInt] = 8;
					HouseInfo[house][hExitx] = 2365.2073;
					HouseInfo[house][hExity] = -1135.5981;
					HouseInfo[house][hExitz] = 1050.8826;
					PlayerInfo[playerid][pCash] -= 120000;
					SendClientMessage(playerid,COLOR_GREEN,"Вы преобрели интерьер стоймостью в 120000 вирт");
					SaveHomeSbizz();
					Exit(playerid);
				}
				else if(pokupka[playerid] == 4)
				{
				    if(PlayerInfo[playerid][pCash] < 130000)return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
				    new house = PlayerInfo[playerid][pPHousekey]; //,
					HouseInfo[house][hInt] = 2;
					HouseInfo[house][hExitx] = 2468.8430;
					HouseInfo[house][hExity] = -1698.1530;
					HouseInfo[house][hExitz] = 1013.5078;
					PlayerInfo[playerid][pCash] -= 130000;
					SendClientMessage(playerid,COLOR_GREEN,"Вы преобрели интерьер стоймостью в 130000 вирт");
					SaveHomeSbizz();
					Exit(playerid);
				}
				else if(pokupka[playerid] == 5)
				{
				    if(PlayerInfo[playerid][pCash] < 200000)return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
				    new house = PlayerInfo[playerid][pPHousekey]; //
					HouseInfo[house][hInt] = 1;
					HouseInfo[house][hExitx] = 223.1932;
					HouseInfo[house][hExity] = 1287.0768;
					HouseInfo[house][hExitz] = 1082.1406;
					PlayerInfo[playerid][pCash] -= 200000;
					SendClientMessage(playerid,COLOR_GREEN,"Вы преобрели интерьер стоймостью в 200000 вирт");
					SaveHomeSbizz();
					Exit(playerid);
				}
				else if(pokupka[playerid] == 6)
				{
					if(PlayerInfo[playerid][pCash] < 220000)return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
				    new house = PlayerInfo[playerid][pPHousekey]; //
					HouseInfo[house][hInt] = 15;
					HouseInfo[house][hExitx] = 387.2260;
					HouseInfo[house][hExity] = 1471.7313;
					HouseInfo[house][hExitz] = 1080.1949;
					PlayerInfo[playerid][pCash] -= 220000;
					SendClientMessage(playerid,COLOR_GREEN,"Вы преобрели интерьер стоймостью в 220000 вирт");
					SaveHomeSbizz();
					Exit(playerid);
				}
				else if(pokupka[playerid] == 7)
				{
					if(PlayerInfo[playerid][pCash] < 250000)return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
				    new house = PlayerInfo[playerid][pPHousekey]; // ,,
					HouseInfo[house][hInt] = 12;
					HouseInfo[house][hExitx] = 2324.4224;
					HouseInfo[house][hExity] = -1149.4077;
					HouseInfo[house][hExitz] = 1050.7101;
					PlayerInfo[playerid][pCash] -= 250000;
					SendClientMessage(playerid,COLOR_GREEN,"Вы преобрели интерьер стоймостью в 250000 вирт");
					SaveHomeSbizz();
					Exit(playerid);
				}
				else if(pokupka[playerid] == 8)
				{
					if(PlayerInfo[playerid][pCash] < 270000)return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
				    new house = PlayerInfo[playerid][pPHousekey]; //
					HouseInfo[house][hInt] = 9;
					HouseInfo[house][hExitx] = 2317.9084;
					HouseInfo[house][hExity] = -1026.7656;
					HouseInfo[house][hExitz] = 1050.2178;
					PlayerInfo[playerid][pCash] -= 270000;
					SendClientMessage(playerid,COLOR_GREEN,"Вы преобрели интерьер стоймостью в 270000 вирт");
					SaveHomeSbizz();
					Exit(playerid);
				}
				else if(pokupka[playerid] == 9)
				{
					if(PlayerInfo[playerid][pCash] < 300000)return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
				    new house = PlayerInfo[playerid][pPHousekey]; // ,,
					HouseInfo[house][hInt] = 10;
					HouseInfo[house][hExitx] = 2269.8389;
					HouseInfo[house][hExity] = -1210.4169;
					HouseInfo[house][hExitz] = 1047.5625;
					PlayerInfo[playerid][pCash] -= 300000;
					SendClientMessage(playerid,COLOR_GREEN,"Вы преобрели интерьер стоймостью в 300000 вирт");
					SaveHomeSbizz();
					Exit(playerid);
				}
				else if(pokupka[playerid] == 10)
				{
					if(PlayerInfo[playerid][pCash] < 320000)return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
				    new house = PlayerInfo[playerid][pPHousekey]; // ,,
					HouseInfo[house][hInt] = 7;
					HouseInfo[house][hExitx] = 225.6452;
					HouseInfo[house][hExity] = 1021.4452;
					HouseInfo[house][hExitz] = 1084.0177;
					PlayerInfo[playerid][pCash] -= 320000;
					SendClientMessage(playerid,COLOR_GREEN,"Вы преобрели интерьер стоймостью в 320000 вирт");
					SaveHomeSbizz();
					Exit(playerid);
				}
				else if(pokupka[playerid] == 11)
				{
					if(PlayerInfo[playerid][pCash] < 340000)return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
				    new house = PlayerInfo[playerid][pPHousekey]; // ,,
					HouseInfo[house][hInt] = 5;
					HouseInfo[house][hExitx] = 226.4627;
					HouseInfo[house][hExity] = 1114.2662;
					HouseInfo[house][hExitz] = 1080.9938;
					PlayerInfo[playerid][pCash] -= 340000;
					SendClientMessage(playerid,COLOR_GREEN,"Вы преобрели интерьер стоймостью в 340000 вирт");
					SaveHomeSbizz();
					Exit(playerid);
				}
				else if(pokupka[playerid] == 12)
				{
					if(PlayerInfo[playerid][pCash] < 380000)return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
				    new house = PlayerInfo[playerid][pPHousekey]; // ,,
					HouseInfo[house][hInt] = 6;
					HouseInfo[house][hExitx] = 234.3617;
					HouseInfo[house][hExity] = 1063.7206;
					HouseInfo[house][hExitz] = 1084.2123;
					PlayerInfo[playerid][pCash] -= 380000;
					SendClientMessage(playerid,COLOR_GREEN,"Вы преобрели интерьер стоймостью в 380000 вирт");
					SaveHomeSbizz();
					Exit(playerid);
				}

		    }
			case 2: // EXIT
			{
			    Exit(playerid);
			}
		}
	}
	if(Current == Admin)
 	{
        ShowMenuForPlayer(Admin,playerid);
        switch(row)
        {
        	case 0: // UPDATE
        	{
        		StartSpectate(playerid,SpecAd[playerid]); // SpecAd[playerid] - за кем следим
	      	}
	      	case 1: // GM
	      	{
	      	    new checkgm[20];
	    		format(checkgm, sizeof(checkgm), "/gm %d",SpecAd[playerid]);
	    		OnPlayerCommandText(playerid,checkgm);
	      	}
	      	case 2: // SLAP
	      	{
	      	    new checkzhopa[20];
	    		format(checkzhopa, sizeof(checkzhopa), "/slap %d",SpecAd[playerid]);
	    		OnPlayerCommandText(playerid,checkzhopa);
	      	}
	      	case 3: // STATS
	      	{
	      	    new checkstat[20];
	    		format(checkstat, sizeof(checkstat), "/getstats %d",SpecAd[playerid]);
	    		OnPlayerCommandText(playerid,checkstat);
	      	}
	      	case 4: // WEAPON
			{
			    new checkweap[20];
	    		format(checkweap, sizeof(checkweap), "/iweap %d",SpecAd[playerid]);
	    		OnPlayerCommandText(playerid,checkweap);
			}
			case 5: // OFF
			{
			    OnPlayerCommandText(playerid,"/reoff");
			    SetPlayerHealthAC(playerid,100);
			}
		}
	}
	if(Current == bomj[0])
	{
		switch(row)
		{
			case 0:
			{
	            if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[96][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[96][0]; }
	            else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[97][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[97][0]; }
	            else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[98][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[98][0]; }
	            else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[99][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[99][0]; }
	            else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[100][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[100][0]; }
	            else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[101][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[101][0]; }
	            ShowMenuForPlayer(bomj[0],playerid);
            }
            case 1:
            {
	            if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[100][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[100][0]; }
	            else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[101][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[101][0]; }
	            else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[96][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[96][0]; }
	            else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[97][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[97][0]; }
	            else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[98][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[98][0]; }
	            else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[99][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[99][0]; }
	            ShowMenuForPlayer(bomj[0],playerid);
            }
            case 2:
            {
	            PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
	            SelectCharPlace[playerid] = 0;
	            PlayerInfo[playerid][pTut] = 1;
	            CharPrice[playerid] = 0;
	            SelectCharID[playerid] = 0;
	            SelectChar[playerid] = 0;
	            PicCP[playerid] = 0;
	            PlayerInfo[playerid][pRank] = 0;
	            new sendername[MAX_PLAYER_NAME];
	            //new string[500];
	            GetPlayerName(playerid, sendername, sizeof(sendername));
                SendClientMessage(playerid, COLOR_WHITE," ");
                SendClientMessage(playerid, COLOR_WHITE," ");
                SendClientMessage(playerid, COLOR_WHITE," ");
                SendClientMessage(playerid, COLOR_WHITE," ");
                SendClientMessage(playerid, COLOR_WHITE," ");
                SendClientMessage(playerid, COLOR_WHITE," ");
                SendClientMessage(playerid, COLOR_WHITE," ");
                SendClientMessage(playerid, COLOR_WHITE," ");
                SendClientMessage(playerid, COLOR_WHITE," ");
                SendClientMessage(playerid, COLOR_WHITE," ");
                SendClientMessage(playerid, COLOR_WHITE," ");
                SendClientMessage(playerid, COLOR_WHITE," ");
                SendClientMessage(playerid, COLOR_WHITE," ");
                SendClientMessage(playerid, COLOR_WHITE," ");
                SendClientMessage(playerid, COLOR_WHITE," ");
                SendClientMessage(playerid, COLOR_WHITE," ");
                SendClientMessage(playerid, COLOR_WHITE," ");
                SendClientMessage(playerid, COLOR_WHITE," ");
                SendClientMessage(playerid, COLOR_WHITE," ");
                SendClientMessage(playerid, COLOR_WHITE," ");
				SendClientMessage(playerid, COLOR_WHITE," ");
				SendClientMessage(playerid, COLOR_WHITE,"{e23434}[Подсказка] {ffffff}Используйте команду /mm и /gps для управления игровым персонажем.");
	            SendClientMessage(playerid, COLOR_WHITE,"{e23434}[Подсказка] {ffffff}Вы можете задать вопрос в нашу техническую поддержку /report");
	            SendClientMessage(playerid, COLOR_WHITE,"{e23434}[Подсказка] {ffffff}Советуем получить пасспорт, а затем отправиться на ферму или завод для заработка денег на права.");
	            SendClientMessage(playerid, 0x00D900C8, "{e23434}[Подсказка] {ffffff}У вас не привязан IP адрес. Привяжите его дабы подтвердить ваш аккаунт /mm - Безопасность");
	            SendClientMessage(playerid, 0x00D900C8, "{e23434}>>> {ffffff}Пока вы маоимущий {e23434}(до 4-го уровня){CC0000}, на улице вы можете попрошайничать деньги.");
	            SendClientMessage(playerid, 0x00D900C8, "{ffffff}Используйте клавишу {e23434}N{CC0000}, чтобы поставить табличку и банку для денег!");
	            SendClientMessage(playerid, 0x00D900C8, "{66CC99}[Объявление] {ffffff}На сервере проходит акция, включены x2 EXP и Донат.");
	            SendClientMessage(playerid, 0x00D900C8, "{e23434}[Подсказка] {FFFFFF}А также любой таксист отвезёт вас куда вы хотите бесплатно");
				PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
	            SetSpawnInfo(playerid, 0, 0, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	            SpawnPlayer(playerid);
				PlayerInfo[playerid][pQuest] = 999;
			}
		}
		return true;
	}
	else if(Current == bomj[1])
    {
		switch(row)
		{
            case 0:
            {
	            if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[103][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[103][0]; }
	            else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[104][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[104][0]; }
	            ShowMenuForPlayer(bomj[1],playerid);
            }
            case 1:
            {
	            if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[103][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[103][0]; }
	            else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[104][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[104][0]; }
	            ShowMenuForPlayer(bomj[1],playerid);
            }
            case 2:
            {
	            PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
	            SelectCharPlace[playerid] = 0;
	            PlayerInfo[playerid][pTut] = 1;
	            CharPrice[playerid] = 0;
	            SelectCharID[playerid] = 0;
	            SelectChar[playerid] = 0;
	            PicCP[playerid] = 0;
	            PlayerInfo[playerid][pRank] = 0;
				new sendername[MAX_PLAYER_NAME];
	            //new string[500];
	            GetPlayerName(playerid, sendername, sizeof(sendername));
	            SendClientMessage(playerid, COLOR_WHITE,"==================================== {e23434}Прочтите обязательно! {FFFFFF}============================================");
	            SendClientMessage(playerid, COLOR_WHITE,"Поздравляем Вас с успешной регистрацией!");
	            SendClientMessage(playerid, COLOR_WHITE,"{e23434}Подсказка: {FFFFFF}Справа от вас за углом стоят мотоциклы .");
	            SendClientMessage(playerid, 0x00D900C8, "{e23434}Подсказка: {FFFFFF}Направляйтесь на работу грузчика (( Используйте /gps >> Работы ))");
	            SendClientMessage(playerid, 0x00D900C8, "{e23434}Подсказка: {FFFFFF}Или же на работу ''Ловец медуз'' (( Используйте /gps >> Работы ))");
	            SendClientMessage(playerid, 0x00D900C8, "{e23434}Подсказка: {FFFFFF}Грузчиком вы сможете заработать денег на одежду. За мешок 200 вирт.");
	            SendClientMessage(playerid, 0x00D900C8, "{e23434}Подсказка: {FFFFFF}Заработав деньги, вы можете приобретите права. (( Используйте /gps >> Важные)) ");
	            SendClientMessage(playerid, 0x00D900C8, "{e23434}Подсказка: {FFFFFF}А также любой таксист отвезёт вас куда вы хотите бесплатно");
				SendClientMessage(playerid, COLOR_WHITE,"==================================== {e23434}С уважением администрация Arizona RP {FFFFFF}============================================");
				PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
	            SetSpawnInfo(playerid, 0, 0, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	            SpawnPlayer(playerid);
				PlayerInfo[playerid][pQuest] = 999;
			}
		}
		return true;
  	}
    else if(Current == ChoseSkin)
	{
	 	switch(row)
	 	{
			case 0:
	  		{
		  		switch (SelectCharID[playerid])
				{
					case 1: // LSPD
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[0][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[0][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[1][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[1][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[2][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[2][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[3][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[3][0]; }
					    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[4][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[4][0]; }
					    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[5][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[5][0]; }
					    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[6][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[6][0]; }
					    else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[7][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[7][0]; }
			      		ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 2: // FBI
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[8][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[8][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[9][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[9][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[10][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[10][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[11][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[11][0]; }
					    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[12][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[12][0]; }
					    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[13][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[13][0]; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
	    			}
					case 3: // Army SF
					{
	                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[91][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[91][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[89][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[89][0]; }
	              		ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 4: // Medics SF
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[16][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[17][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[18][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[19][0]; }
					    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[20][0]; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 5: // La Cosa Nostra
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[21][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[21][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[22][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[22][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[23][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[23][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[24][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[24][0]; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 6: // Yakuza
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[25][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[25][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[26][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[26][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[27][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[27][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[28][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[28][0]; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 7: // Goverment
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[29][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[29][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[30][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[30][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[31][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[31][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[32][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[32][0]; }
					    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[33][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[33][0]; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 8: // Casino Caligula
					{
					   if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 189); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = 189; }
					   else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[46][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[46][0]; }
					   else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[47][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[47][0]; }
					   ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 9: // SF News
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[42][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[42][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[43][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[43][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[44][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[44][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[45][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[45][0]; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 10: // SFPD
					{
	    				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[34][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[34][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[35][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[35][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[36][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[36][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[37][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[37][0]; }
					    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[38][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[38][0]; }
					    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[39][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[39][0]; }
					    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[40][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[40][0]; }
					    else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[41][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[41][0]; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 11: // Instructors
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[48][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[48][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[49][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[49][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[51][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[51][0]; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 12: // Ballas
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[74][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[74][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[75][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[75][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[76][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[76][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 195); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 195; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 13: // Vagos
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[80][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[80][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[81][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[81][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[82][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[82][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 226); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 226; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 14: // Russian Mafia
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[60][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[60][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[61][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[61][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[62][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[62][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[63][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[63][0]; }
					    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[64][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[64][0]; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 15: // Grove
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[65][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[65][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[66][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[66][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[67][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[67][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[68][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[68][0]; }
					    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[69][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[69][0]; }
					    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[70][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[70][0]; }
					    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, 56); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 56; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 16: // LS News
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[85][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[85][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[86][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[86][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[87][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[87][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[88][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[88][0]; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 17: // Aztek
					{
	    			    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[71][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[71][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[72][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[72][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[73][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[73][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 226); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 226; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 18: // Rifa
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[77][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[77][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[78][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[78][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[79][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[79][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 30); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = 30; }
					    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 226); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 226; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 19: // Army LV
	                {
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[91][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[91][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[89][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[89][0]; }
						ShowMenuForPlayer(ChoseSkin,playerid);
	                }
	                case 20: // LV News
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[85][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[85][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[86][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[86][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[87][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[87][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[88][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[88][0]; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 21: // LVPD
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[52][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[52][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[53][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[53][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[54][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[54][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[55][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[55][0]; }
					    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[56][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[56][0]; }
					    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[57][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[57][0]; }
					    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[58][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[58][0]; }
					    else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[59][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[59][0]; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 22: // Medics LS
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[16][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[17][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[18][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[19][0]; }
					    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[20][0]; }
			      		ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 23: // Medics LV
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[16][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[17][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[18][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[19][0]; }
					    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[20][0]; }
			      		ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 24: // HITMAN
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[105][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[105][0]; }
			      		ShowMenuForPlayer(ChoseSkin,playerid);
					}
				}
			}
			case 1:
	  		{
		  		switch (SelectCharID[playerid])
				{
					case 1: // LSPD
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[0][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[0][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[1][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[1][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[2][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[2][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[3][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[3][0]; }
					    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[4][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[4][0]; }
					    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[5][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[5][0]; }
					    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[6][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[6][0]; }
					    else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[7][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[7][0]; }
			      		ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 2: // FBI
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[8][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[8][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[9][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[9][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[10][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[10][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[11][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[11][0]; }
					    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[12][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[12][0]; }
					    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[13][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[13][0]; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
	    			}
					case 3: // Army SF
					{
	                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[91][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[91][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[89][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[89][0]; }
	              		ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 4: // Medics SF
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[16][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[17][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[18][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[19][0]; }
					    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[20][0]; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 5: // La Cosa Nostra
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[21][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[21][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[22][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[22][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[23][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[23][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[24][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[24][0]; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 6: // Yakuza
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[25][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[25][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[26][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[26][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[27][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[27][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[28][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[28][0]; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 7: // Goverment
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[29][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[29][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[30][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[30][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[31][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[31][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[32][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[32][0]; }
					    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[33][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[33][0]; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 8: // Casino Caligula
					{
					   if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 189); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = 189; }
					   else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[46][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[46][0]; }
					   else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[47][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[47][0]; }
					   ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 9: // SF News
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[42][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[42][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[43][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[43][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[44][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[44][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[45][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[45][0]; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 10: // SFPD
					{
	    				if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[34][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[34][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[35][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[35][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[36][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[36][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[37][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[37][0]; }
					    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[38][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[38][0]; }
					    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[39][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[39][0]; }
					    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[40][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[40][0]; }
					    else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[41][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[41][0]; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 11: // Instructors
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[48][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[48][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[49][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[49][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[51][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[51][0]; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 12: // Ballas
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[74][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[74][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[75][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[75][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[76][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[76][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 195); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = 195; }
						ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 13: // Vagos
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[80][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[80][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[81][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[81][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[82][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[82][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 226); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = 226; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 14: // Russian Mafia
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[60][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[60][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[61][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[61][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[62][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[62][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[63][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[63][0]; }
					    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[64][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[64][0]; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 15: // Grove
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[65][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[65][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[66][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[66][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[67][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[67][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[68][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[68][0]; }
					    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[69][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[69][0]; }
					    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[70][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[70][0]; }
					    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, 56); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = 56; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 16: // LS News
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[85][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[85][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[86][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[86][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[87][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[87][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[88][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[88][0]; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 17: // Aztek
					{
	    			    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[71][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[71][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[72][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[72][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[73][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[73][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 226); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = 226; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 18: // Rifa
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[77][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[77][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[78][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[78][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[79][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[79][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 30); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = 30; }
					    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 226); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = 226; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 19: // Army LV
	                {
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[91][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[91][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[89][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[89][0]; }
						ShowMenuForPlayer(ChoseSkin,playerid);
	                }
	                case 20: // LV News
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[85][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[85][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[86][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[86][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[87][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[87][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[88][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[88][0]; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 21: // LVPD
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[52][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[52][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[53][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[53][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[54][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[54][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[55][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[55][0]; }
					    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[56][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[56][0]; }
					    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[57][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[57][0]; }
					    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[58][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[58][0]; }
					    else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[59][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[59][0]; }
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 22: // Medics LS
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[16][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[17][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[18][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[19][0]; }
					    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[20][0]; }
			      		ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 23: // Medics LV
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[16][0]; }
					    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[17][0]; }
					    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[18][0]; }
					    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[19][0]; }
					    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[20][0]; }
			      		ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 24: // HITMAN
					{
					    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[105][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[105][0]; }
			      		ShowMenuForPlayer(ChoseSkin,playerid);
					}
				}
			}
			case 2:
			{
			    PlayerInfo[playerid][pModel] = InviteSkin[playerid];
			    forma[playerid] = 0;
			    SetPlayerVirtualWorld(playerid,0);
	 			SelectCharPlace[playerid] = 0;
			   	CharPrice[playerid] = 0;
				SelectCharID[playerid] = 0;
				SelectChar[playerid] = 0;
			    PicCP[playerid] = 0;
			    SpawnPlayer(playerid);
			}
		}
	}
	else if(Current == skinshopmagaz[0])
	{
		if(PlayerToPoint(3.0,playerid,222.3489,-8.5845,1002.2109))
		{
			switch(row)
			{
				case 0:
	  			{
			    	if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, Peds[0][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = Peds[0][0]; 	CharPrice[playerid] = 500;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~500", 2000, 3); }
			    	else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, Peds[1][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = Peds[1][0]; 	CharPrice[playerid] = 700;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~700", 2000, 3);}
			    	else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, Peds[2][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = Peds[2][0]; 	CharPrice[playerid] = 1000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1000", 2000, 3);}
			    	else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, Peds[3][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = Peds[3][0]; 	CharPrice[playerid] = 1500;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500", 2000, 3);}
			    	else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, Peds[4][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = Peds[4][0];	CharPrice[playerid] = 1500;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500", 2000, 3); }
			    	else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, Peds[5][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = Peds[5][0];	CharPrice[playerid] = 1500;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500", 2000, 3); }
			    	else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, Peds[6][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = Peds[6][0]; 	CharPrice[playerid] = 2000;   	GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000", 2000, 3);}
			    	else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, Peds[7][0]); SelectCharPlace[playerid] = 9; ChosenSkin[playerid] = Peds[7][0]; 	CharPrice[playerid] = 2000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000", 2000, 3);}
			    	else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, Peds[8][0]); SelectCharPlace[playerid] = 10; ChosenSkin[playerid] = Peds[8][0]; 	CharPrice[playerid] = 4000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~4000", 2000, 3);}
			    	else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, Peds[9][0]); SelectCharPlace[playerid] = 11; ChosenSkin[playerid] = Peds[9][0];CharPrice[playerid] = 4000;      GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~4000", 2000, 3); }
			    	else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, Peds[10][0]); SelectCharPlace[playerid] = 12; ChosenSkin[playerid] = Peds[10][0];CharPrice[playerid] = 4000;       GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~4000", 2000, 3); }
			    	else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, Peds[11][0]); SelectCharPlace[playerid] = 13; ChosenSkin[playerid] = Peds[11][0];CharPrice[playerid] = 6000;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~6000", 2000, 3); }
			    	else if(SelectCharPlace[playerid] == 13) { SetPlayerSkin(playerid, Peds[12][0]); SelectCharPlace[playerid] = 14; ChosenSkin[playerid] = Peds[12][0]; CharPrice[playerid] = 8000;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~8000", 2000, 3);}
			    	else if(SelectCharPlace[playerid] == 14) { SetPlayerSkin(playerid, Peds[13][0]); SelectCharPlace[playerid] = 15; ChosenSkin[playerid] = Peds[13][0];CharPrice[playerid] = 8000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~8000", 2000, 3); }
			    	else if(SelectCharPlace[playerid] == 15) { SetPlayerSkin(playerid, Peds[14][0]); SelectCharPlace[playerid] = 16; ChosenSkin[playerid] = Peds[14][0];CharPrice[playerid] = 8000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~8000", 2000, 3); }
			    	else if(SelectCharPlace[playerid] == 16) { SetPlayerSkin(playerid, Peds[15][0]); SelectCharPlace[playerid] = 17; ChosenSkin[playerid] = Peds[15][0];CharPrice[playerid] = 10000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~10000", 2000, 3); }
			    	else if(SelectCharPlace[playerid] == 17) { SetPlayerSkin(playerid, Peds[16][0]); SelectCharPlace[playerid] = 18; ChosenSkin[playerid] = Peds[16][0];CharPrice[playerid] = 10000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~10000", 2000, 3); }
			    	else if(SelectCharPlace[playerid] == 18) { SetPlayerSkin(playerid, Peds[17][0]); SelectCharPlace[playerid] = 19; ChosenSkin[playerid] = Peds[17][0];CharPrice[playerid] = 10000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~10000", 2000, 3); }
			    	else if(SelectCharPlace[playerid] == 19) { SetPlayerSkin(playerid, Peds[18][0]); SelectCharPlace[playerid] = 20; ChosenSkin[playerid] = Peds[18][0]; CharPrice[playerid] = 10000;      GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~10000", 2000, 3);}
			    	else if(SelectCharPlace[playerid] == 20) { SetPlayerSkin(playerid, Peds[19][0]); SelectCharPlace[playerid] = 21; ChosenSkin[playerid] = Peds[19][0];CharPrice[playerid] = 12000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~12000", 2000, 3); }
			    	else if(SelectCharPlace[playerid] == 21) { SetPlayerSkin(playerid, Peds[20][0]); SelectCharPlace[playerid] = 22; ChosenSkin[playerid] = Peds[20][0];CharPrice[playerid] = 12000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~12000", 2000, 3); }
			    	else if(SelectCharPlace[playerid] == 22) { SetPlayerSkin(playerid, Peds[21][0]); SelectCharPlace[playerid] = 23; ChosenSkin[playerid] = Peds[21][0]; CharPrice[playerid] = 12000;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~12000", 2000, 3);}
			    	else if(SelectCharPlace[playerid] == 23) { SetPlayerSkin(playerid, Peds[22][0]); SelectCharPlace[playerid] = 24; ChosenSkin[playerid] = Peds[22][0]; CharPrice[playerid] = 15000;     GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~15000", 2000, 3);}
			    	else if(SelectCharPlace[playerid] == 24) { SetPlayerSkin(playerid, Peds[23][0]); SelectCharPlace[playerid] = 25; ChosenSkin[playerid] = Peds[23][0]; CharPrice[playerid] = 17000;     GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~17000", 2000, 3);}
			    	else if(SelectCharPlace[playerid] == 25) { SetPlayerSkin(playerid, Peds[24][0]); SelectCharPlace[playerid] = 26; ChosenSkin[playerid] = Peds[24][0]; CharPrice[playerid] = 20000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~20000", 2000, 3);}
			    	else if(SelectCharPlace[playerid] == 26) { SetPlayerSkin(playerid, Peds[25][0]); SelectCharPlace[playerid] = 27; ChosenSkin[playerid] = Peds[25][0]; CharPrice[playerid] = 20000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~20000", 2000, 3);}
			    	else if(SelectCharPlace[playerid] == 27) { SetPlayerSkin(playerid, Peds[26][0]); SelectCharPlace[playerid] = 28; ChosenSkin[playerid] = Peds[26][0]; CharPrice[playerid] = 20000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~20000", 2000, 3);}
			    	else if(SelectCharPlace[playerid] == 28) { SetPlayerSkin(playerid, Peds[27][0]); SelectCharPlace[playerid] = 29; ChosenSkin[playerid] = Peds[27][0]; CharPrice[playerid] = 20000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~20000", 2000, 3);}
			    	else if(SelectCharPlace[playerid] == 29) { SetPlayerSkin(playerid, Peds[28][0]); SelectCharPlace[playerid] = 30; ChosenSkin[playerid] = Peds[28][0]; CharPrice[playerid] = 23000;     GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~23000", 2000, 3);}
			    	else if(SelectCharPlace[playerid] == 30) { SetPlayerSkin(playerid, Peds[29][0]); SelectCharPlace[playerid] = 31; ChosenSkin[playerid] = Peds[29][0]; CharPrice[playerid] = 28000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~28000", 2000, 3);}
			    	else if(SelectCharPlace[playerid] == 31) { SetPlayerSkin(playerid, Peds[30][0]); SelectCharPlace[playerid] = 32; ChosenSkin[playerid] = Peds[30][0]; CharPrice[playerid] = 30000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~30000", 2000, 3);}
			    	else if(SelectCharPlace[playerid] == 32) { SetPlayerSkin(playerid, Peds[31][0]); SelectCharPlace[playerid] = 33; ChosenSkin[playerid] = Peds[31][0]; CharPrice[playerid] = 35000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~35000", 2000, 3);}
					ShowMenuForPlayer(skinshopmagaz[0],playerid);
				}
				case 1:
	  			{
  			    	if(SelectCharPlace[playerid] == 33) { SetPlayerSkin(playerid, Peds[31][0]); SelectCharPlace[playerid] = 32; ChosenSkin[playerid] = Peds[31][0]; CharPrice[playerid] = 35000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~35000", 2000, 3);}
                	else if(SelectCharPlace[playerid] == 32) { SetPlayerSkin(playerid, Peds[30][0]); SelectCharPlace[playerid] = 31; ChosenSkin[playerid] = Peds[30][0]; CharPrice[playerid] = 30000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~30000", 2000, 3);}
                	else if(SelectCharPlace[playerid] == 31) { SetPlayerSkin(playerid, Peds[29][0]); SelectCharPlace[playerid] = 30; ChosenSkin[playerid] = Peds[29][0]; CharPrice[playerid] = 28000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~28000", 2000, 3);}
                	else if(SelectCharPlace[playerid] == 30) { SetPlayerSkin(playerid, Peds[28][0]); SelectCharPlace[playerid] = 29; ChosenSkin[playerid] = Peds[28][0]; CharPrice[playerid] = 23000;     GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~23000", 2000, 3);}
                	else if(SelectCharPlace[playerid] == 29) { SetPlayerSkin(playerid, Peds[27][0]); SelectCharPlace[playerid] = 28; ChosenSkin[playerid] = Peds[27][0]; CharPrice[playerid] = 20000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~20000", 2000, 3);}
                	else if(SelectCharPlace[playerid] == 28) { SetPlayerSkin(playerid, Peds[26][0]); SelectCharPlace[playerid] = 27; ChosenSkin[playerid] = Peds[26][0]; CharPrice[playerid] = 20000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~20000", 2000, 3);}
                	else if(SelectCharPlace[playerid] == 27) { SetPlayerSkin(playerid, Peds[25][0]); SelectCharPlace[playerid] = 26; ChosenSkin[playerid] = Peds[25][0]; CharPrice[playerid] = 20000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~20000", 2000, 3);}
                	else if(SelectCharPlace[playerid] == 26) { SetPlayerSkin(playerid, Peds[24][0]); SelectCharPlace[playerid] = 25; ChosenSkin[playerid] = Peds[24][0]; CharPrice[playerid] = 20000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~20000", 2000, 3);}
                	else if(SelectCharPlace[playerid] == 25) { SetPlayerSkin(playerid, Peds[23][0]); SelectCharPlace[playerid] = 24; ChosenSkin[playerid] = Peds[23][0]; CharPrice[playerid] = 17000;     GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~17000", 2000, 3);}
                	else if(SelectCharPlace[playerid] == 24) { SetPlayerSkin(playerid, Peds[22][0]); SelectCharPlace[playerid] = 23; ChosenSkin[playerid] = Peds[22][0]; CharPrice[playerid] = 15000;     GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~15000", 2000, 3);}
                	else if(SelectCharPlace[playerid] == 23) { SetPlayerSkin(playerid, Peds[21][0]); SelectCharPlace[playerid] = 22; ChosenSkin[playerid] = Peds[21][0]; CharPrice[playerid] = 12000;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~12000", 2000, 3);}
                	else if(SelectCharPlace[playerid] == 22) { SetPlayerSkin(playerid, Peds[20][0]); SelectCharPlace[playerid] = 21; ChosenSkin[playerid] = Peds[20][0];CharPrice[playerid] = 12000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~12000", 2000, 3); }
                	else if(SelectCharPlace[playerid] == 21) { SetPlayerSkin(playerid, Peds[19][0]); SelectCharPlace[playerid] = 20; ChosenSkin[playerid] = Peds[19][0];CharPrice[playerid] = 12000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~12000", 2000, 3); }
                	else if(SelectCharPlace[playerid] == 20) { SetPlayerSkin(playerid, Peds[18][0]); SelectCharPlace[playerid] = 19; ChosenSkin[playerid] = Peds[18][0]; CharPrice[playerid] = 10000;      GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~10000", 2000, 3);}
                	else if(SelectCharPlace[playerid] == 19) { SetPlayerSkin(playerid, Peds[17][0]); SelectCharPlace[playerid] = 18; ChosenSkin[playerid] = Peds[17][0];CharPrice[playerid] = 10000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~10000", 2000, 3); }
                	else if(SelectCharPlace[playerid] == 18) { SetPlayerSkin(playerid, Peds[16][0]); SelectCharPlace[playerid] = 17; ChosenSkin[playerid] = Peds[16][0];CharPrice[playerid] = 10000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~10000", 2000, 3); }
					else if(SelectCharPlace[playerid] == 17) { SetPlayerSkin(playerid, Peds[15][0]); SelectCharPlace[playerid] = 16; ChosenSkin[playerid] = Peds[15][0];CharPrice[playerid] = 10000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~10000", 2000, 3); }
					else if(SelectCharPlace[playerid] == 16) { SetPlayerSkin(playerid, Peds[14][0]); SelectCharPlace[playerid] = 15; ChosenSkin[playerid] = Peds[14][0];CharPrice[playerid] = 8000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~8000", 2000, 3); }
					else if(SelectCharPlace[playerid] == 15) { SetPlayerSkin(playerid, Peds[13][0]); SelectCharPlace[playerid] = 14; ChosenSkin[playerid] = Peds[13][0];CharPrice[playerid] = 8000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~8000", 2000, 3); }
					else if(SelectCharPlace[playerid] == 14) { SetPlayerSkin(playerid, Peds[12][0]); SelectCharPlace[playerid] = 13; ChosenSkin[playerid] = Peds[12][0]; CharPrice[playerid] = 8000;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~8000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 13) { SetPlayerSkin(playerid, Peds[11][0]); SelectCharPlace[playerid] = 12; ChosenSkin[playerid] = Peds[11][0];CharPrice[playerid] = 6000;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~6000", 2000, 3); }
					else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, Peds[10][0]); SelectCharPlace[playerid] = 11; ChosenSkin[playerid] = Peds[10][0];CharPrice[playerid] = 4000;       GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~4000", 2000, 3); }
					else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, Peds[9][0]); SelectCharPlace[playerid] = 10; ChosenSkin[playerid] = Peds[9][0];CharPrice[playerid] = 4000;      GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~4000", 2000, 3); }
					else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, Peds[8][0]); SelectCharPlace[playerid] = 9; ChosenSkin[playerid] = Peds[8][0]; 	CharPrice[playerid] = 4000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~4000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, Peds[7][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = Peds[7][0]; 	CharPrice[playerid] = 2000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, Peds[6][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = Peds[6][0]; 	CharPrice[playerid] = 2000;   	GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, Peds[5][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = Peds[5][0];	CharPrice[playerid] = 1500;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500", 2000, 3); }
					else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, Peds[4][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = Peds[4][0];	CharPrice[playerid] = 1500;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500", 2000, 3); }
					else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, Peds[3][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = Peds[3][0]; 	CharPrice[playerid] = 1500;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500", 2000, 3);}
					else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, Peds[2][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = Peds[2][0]; 	CharPrice[playerid] = 1000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, Peds[1][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = Peds[1][0]; 	CharPrice[playerid] = 700;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~700", 2000, 3);}
					else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, Peds[0][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = Peds[0][0]; 	CharPrice[playerid] = 500;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~500", 2000, 3); }
					ShowMenuForPlayer(skinshopmagaz[0],playerid);
				}
				case 2:
				{
					if(PlayerInfo[playerid][pCash] < CharPrice[playerid])
					{
						SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						ShowMenuForPlayer(skinshopmagaz[0],playerid);
						return true;
			  		}
			  		if(CharPrice[playerid] == 500)
			  		{
			  			PlayerInfo[playerid][pCash] -= 500;
			  		}
			  		else if(CharPrice[playerid] == 700)
			  		{
			  			PlayerInfo[playerid][pCash] -= 700;
			  		}
					else if(CharPrice[playerid] == 1000)
			  		{
			  			PlayerInfo[playerid][pCash] -= 1000;
			  		}
				  	else if(CharPrice[playerid] == 1500)
			  		{
			  			PlayerInfo[playerid][pCash] -= 1500;
			  		}
			  		else if(CharPrice[playerid] == 1500)
			  		{
			  			PlayerInfo[playerid][pCash] -= 1500;
			  		}
			  		else if(CharPrice[playerid] == 1500)
			  		{
			  			PlayerInfo[playerid][pCash] -= 1500;
			  		}
			  		else if(CharPrice[playerid] == 2000)
			  		{
			  			PlayerInfo[playerid][pCash] -= 2000;
			  		}
			  		else if(CharPrice[playerid] == 2000)
			  		{
			  			PlayerInfo[playerid][pCash] -= 2000;
			  		}
			  		else if(CharPrice[playerid] == 4000)
			  		{
			  			PlayerInfo[playerid][pCash] -= 4000;
			  		}
					else if(CharPrice[playerid] == 4000)
			  		{
			  			PlayerInfo[playerid][pCash] -= 4000;
			  		}
			  		else if(CharPrice[playerid] == 4000)
			  		{
			  			PlayerInfo[playerid][pCash] -= 4000;
			  		}
			  		else if(CharPrice[playerid] == 6000)
			  		{
			  			PlayerInfo[playerid][pCash] -= 6000;
			  		}
			  		else if(CharPrice[playerid] == 8000)
			  		{
			  			PlayerInfo[playerid][pCash] -= 8000;
			  		}
			  		else if(CharPrice[playerid] == 8000)
			  		{
			  			PlayerInfo[playerid][pCash] -= 8000;
			  		}
			  		else if(CharPrice[playerid] == 8000)
			  		{
			  			PlayerInfo[playerid][pCash] -= 8000;
			  		}
			  		else if(CharPrice[playerid] == 10000)
			  		{
			  			PlayerInfo[playerid][pCash] -= 10000;
			  		}
					else if(CharPrice[playerid] == 10000)
					{
                        PlayerInfo[playerid][pCash] -= 10000;
     				}
					else if(CharPrice[playerid] == 10000)
					{
                        PlayerInfo[playerid][pCash] -= 10000;
     				}
     				else if(CharPrice[playerid] == 10000)
					{
                        PlayerInfo[playerid][pCash] -= 10000;
     				}
     				else if(CharPrice[playerid] == 12000)
					{
                        PlayerInfo[playerid][pCash] -= 12000;
     				}
     				else if(CharPrice[playerid] == 12000)
					{
                        PlayerInfo[playerid][pCash] -= 12000;
     				}
     				else if(CharPrice[playerid] == 12000)
					{
                        PlayerInfo[playerid][pCash] -= 12000;
     				}
     				else if(CharPrice[playerid] == 15000)
					{
                        PlayerInfo[playerid][pCash] -= 15000;
     				}
     				else if(CharPrice[playerid] == 17000)
					{
                        PlayerInfo[playerid][pCash] -= 17000;
     				}
     				else if(CharPrice[playerid] == 20000)
					{
                        PlayerInfo[playerid][pCash] -= 20000;
     				}
     				else if(CharPrice[playerid] == 20000)
					{
                        PlayerInfo[playerid][pCash] -= 20000;
     				}
     				else if(CharPrice[playerid] == 20000)
					{
                        PlayerInfo[playerid][pCash] -= 20000;
     				}
     				else if(CharPrice[playerid] == 20000)
					{
                        PlayerInfo[playerid][pCash] -= 20000;
     				}
     				else if(CharPrice[playerid] == 23000)
					{
                        PlayerInfo[playerid][pCash] -= 23000;
     				}
     				else if(CharPrice[playerid] == 28000)
					{
                        PlayerInfo[playerid][pCash] -= 28000;
     				}
     				else if(CharPrice[playerid] == 30000)
					{
                        PlayerInfo[playerid][pCash] -= 30000;
     				}
     				else if(CharPrice[playerid] == 35000)
					{
                        PlayerInfo[playerid][pCash] -= 35000;
     				}
			     	if(zips[playerid] == 1)
			  		{
				  		SetPlayerInterior(playerid,18);
						SetPlayerVirtualWorld(playerid,0);
				  		CharPrice[playerid] = 0;
				       	PlayerInfo[playerid][pCash]-= CharPrice[playerid];
						ACP_SetPlayerPos(playerid ,181.1844,-88.0599,1002);
				        TogglePlayerControllable(playerid,1);
					    PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
					    SetCameraBehindPlayer(playerid);
						SelectCharPlace[playerid] = 0;
						SelectCharID[playerid] = 0;
						SelectChar[playerid] = 0;
						SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
						return true;
			  		}
			  		CharPrice[playerid] = 0;
			       	PlayerInfo[playerid][pCash] -= CharPrice[playerid];
			      	ACP_SetPlayerPos(playerid ,209.4333,-7.9053,1001.2109);
			        TogglePlayerControllable(playerid, 1);
			        SetPlayerVirtualWorld(playerid, 0);
				    PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
				    SetCameraBehindPlayer(playerid);
					SelectCharPlace[playerid] = 0;
					SelectCharID[playerid] = 0;
					SelectChar[playerid] = 0;
					SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
		 		}
		 		case 3:
			  	{
					if(zips[playerid] == 1)
					{
						SetPlayerVirtualWorld(playerid,0);
	  					SetPlayerInterior(playerid,18);
				  		CharPrice[playerid] = 0;
		    			TogglePlayerControllable(playerid,1);
				  		SetCameraBehindPlayer(playerid);
				  		PlayerInfo[playerid][pChar] = PlayerInfo[playerid][pChar];
				   		ACP_SetPlayerPos(playerid, 181.1844,-88.0599,1002);
					    SetPlayerSkin(playerid, OldSkin[playerid]);
					    PlayerInfo[playerid][pChar] = OldSkin[playerid];
					    SelectCharPlace[playerid] = 0;
					    SelectCharID[playerid] = 0;
					    SelectChar[playerid] = 0;
					    return true;
		  			}
			   		SetPlayerVirtualWorld(playerid, 0);
			  		CharPrice[playerid] = 0;
		    		TogglePlayerControllable(playerid, 1);
			  		SetCameraBehindPlayer(playerid);
			  		PlayerInfo[playerid][pChar] = PlayerInfo[playerid][pChar];
				   	ACP_SetPlayerPos(playerid, 209.4333,-7.9053,1001.2109);
				    SetPlayerSkin(playerid, OldSkin[playerid]);
				    PlayerInfo[playerid][pChar] = OldSkin[playerid];
				    SelectCharPlace[playerid] = 0;
				    SelectCharID[playerid] = 0;
				    SelectChar[playerid] = 0;
				}
			}
		}
		return true;
	}
	else if(Current == skinshopmagaz[1])
	{
		if(PlayerToPoint(3.0,playerid,222.3489,-8.5845,1002.2109))
	  	{
		 	switch(row)
		 	{
		 		case 0:
		  		{
	   				if(SelectCharPlace[playerid] == 1){SetPlayerSkin(playerid, Peds[32][0]);SelectCharPlace[playerid] = 2;ChosenSkin[playerid] = Peds[32][0];CharPrice[playerid] = 500;GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~500", 2000, 3);}
					else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, Peds[32][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = Peds[32][0]; CharPrice[playerid] = 700;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~700", 2000, 3);}
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, Peds[33][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = Peds[33][0]; CharPrice[playerid] = 1500;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500", 2000, 3);}
					else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, Peds[34][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = Peds[34][0]; CharPrice[playerid] = 1500;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500", 2000, 3);}
					else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, Peds[35][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = Peds[35][0]; CharPrice[playerid] = 1500;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500", 2000, 3);}
					else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, Peds[36][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = Peds[36][0]; CharPrice[playerid] = 2000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, Peds[37][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = Peds[37][0]; CharPrice[playerid] = 2000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, Peds[38][0]); SelectCharPlace[playerid] = 9; ChosenSkin[playerid] = Peds[38][0]; CharPrice[playerid] = 2500;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2500", 2000, 3);}
					else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, Peds[39][0]); SelectCharPlace[playerid] = 10; ChosenSkin[playerid] = Peds[39][0]; CharPrice[playerid] = 3000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~3000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, Peds[40][0]); SelectCharPlace[playerid] = 11; ChosenSkin[playerid] = Peds[40][0]; CharPrice[playerid] = 5000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~5000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, Peds[41][0]); SelectCharPlace[playerid] = 12; ChosenSkin[playerid] = Peds[41][0]; CharPrice[playerid] = 5000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~5000", 2000, 3);}
					ShowMenuForPlayer(skinshopmagaz[1],playerid);
				}
		 		case 1:
		  		{
					if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, Peds[41][0]); SelectCharPlace[playerid] = 11; ChosenSkin[playerid] = Peds[41][0]; CharPrice[playerid] = 5000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~5000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, Peds[40][0]); SelectCharPlace[playerid] = 10; ChosenSkin[playerid] = Peds[40][0]; CharPrice[playerid] = 5000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~5000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, Peds[39][0]); SelectCharPlace[playerid] = 9; ChosenSkin[playerid] = Peds[39][0]; CharPrice[playerid] = 3000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~3000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, Peds[38][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = Peds[38][0]; CharPrice[playerid] = 2500;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2500", 2000, 3);}
					else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, Peds[37][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = Peds[37][0]; CharPrice[playerid] = 2000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, Peds[36][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = Peds[36][0]; CharPrice[playerid] = 2000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, Peds[35][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = Peds[35][0]; CharPrice[playerid] = 1500;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500", 2000, 3);}
					else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, Peds[34][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = Peds[34][0]; CharPrice[playerid] = 1500;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500", 2000, 3);}
					else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, Peds[33][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = Peds[33][0]; CharPrice[playerid] = 1500;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500", 2000, 3);}
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, Peds[32][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = Peds[32][0]; CharPrice[playerid] = 700;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~700", 2000, 3);}
					else if(SelectCharPlace[playerid] == 2){SetPlayerSkin(playerid, Peds[32][0]);SelectCharPlace[playerid] = 1;ChosenSkin[playerid] = Peds[32][0];CharPrice[playerid] = 500;GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~500", 2000, 3);}
					ShowMenuForPlayer(skinshopmagaz[1],playerid);
				}
				case 2:
				{
					if(PlayerInfo[playerid][pCash] < CharPrice[playerid])
					{
						SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						ShowMenuForPlayer(skinshopmagaz[0],playerid);
						return true;
					}
			  		if(CharPrice[playerid] == 500)
			  		{
			  			PlayerInfo[playerid][pCash] -= 500;
			  		}
		  			else if(CharPrice[playerid] == 700)
		  			{
	  					PlayerInfo[playerid][pCash] -= 700;
		  			}
		  			else if(CharPrice[playerid] == 1500)
		  			{
			  			PlayerInfo[playerid][pCash] -= 1500;
		  			}
					else if(CharPrice[playerid] == 1500)
  					{
			  			PlayerInfo[playerid][pCash] -= 1500;
		  			}
					else if(CharPrice[playerid] == 1500)
  					{
			  			PlayerInfo[playerid][pCash] -= 1500;
		  			}
					else if(CharPrice[playerid] == 2000)
  					{
			  			PlayerInfo[playerid][pCash] -= 2000;
		  			}
					else if(CharPrice[playerid] == 2000)
  					{
			  			PlayerInfo[playerid][pCash] -= 2000;
		  			}
		  			else if(CharPrice[playerid] == 2500)
  					{
			  			PlayerInfo[playerid][pCash] -= 2500;
		  			}
		  			else if(CharPrice[playerid] == 3000)
  					{
			  			PlayerInfo[playerid][pCash] -= 3000;
		  			}
		  			else if(CharPrice[playerid] == 5000)
  					{
			  			PlayerInfo[playerid][pCash] -= 5000;
		  			}
					if(zips[playerid] == 1)
  					{
						SetPlayerInterior(playerid,18);
						CharPrice[playerid] = 0;
						PlayerInfo[playerid][pCash] -= CharPrice[playerid];
						ACP_SetPlayerPos(playerid ,181.1844,-88.0599,1002);
						TogglePlayerControllable(playerid, 1);
						SetPlayerVirtualWorld(playerid, 0);
						PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
						SetCameraBehindPlayer(playerid);
						SelectCharPlace[playerid] = 0;
						SelectCharID[playerid] = 0;
						SelectChar[playerid] = 0;
						SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
						return true;
  					}
			 		CharPrice[playerid] = 0;
    				PlayerInfo[playerid][pCash] -= CharPrice[playerid];
				   	ACP_SetPlayerPos(playerid ,209.4333,-7.9053,1001.2109);
       				TogglePlayerControllable(playerid,1);
          			SetPlayerVirtualWorld(playerid,0);
		     		PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
				    SetCameraBehindPlayer(playerid);
				    SelectCharPlace[playerid] = 0;
				    SelectCharID[playerid] = 0;
				    SelectChar[playerid] = 0;
				    SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
				}
			 	case 3:
				{
					if(zips[playerid] == 1)
					{
						SetPlayerInterior(playerid,18);
						SetPlayerVirtualWorld(playerid, 0);
						CharPrice[playerid] = 0;
						TogglePlayerControllable(playerid, 1);
						SetCameraBehindPlayer(playerid);
						PlayerInfo[playerid][pChar] = PlayerInfo[playerid][pChar];
						ACP_SetPlayerPos(playerid ,181.1844,-88.0599,1002);
						SetPlayerVirtualWorld(playerid, 0);
						SetPlayerSkin(playerid, OldSkin[playerid]);
						PlayerInfo[playerid][pChar] = OldSkin[playerid];
						SelectCharPlace[playerid] = 0;
						SelectCharID[playerid] = 0;
						SelectChar[playerid] = 0;
						return true;
					}
					SetPlayerVirtualWorld(playerid, 0);
					CharPrice[playerid] = 0;
					TogglePlayerControllable(playerid, 1);
					SetCameraBehindPlayer(playerid);
			  		PlayerInfo[playerid][pChar] = PlayerInfo[playerid][pChar];
					ACP_SetPlayerPos(playerid ,209.4333,-7.9053,1001.2109);
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerSkin(playerid, OldSkin[playerid]);
					PlayerInfo[playerid][pChar] = OldSkin[playerid];
					SelectCharPlace[playerid] = 0;
					SelectCharID[playerid] = 0;
					SelectChar[playerid] = 0;
				}
			}
		}
		return true;
	}
	return true;
}
public OnPlayerExitedMenu(playerid)
{
	new Menu:current = GetPlayerMenu(playerid);
	HideMenuForPlayer(current, playerid);
	return TogglePlayerControllable(playerid, true);
}
public UnSurfCar(carid)
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
		new model = GetVehicleModel(carid);
		if(model != 430 && model != 454 &&
		model != 478 && model != 446 &&
		model != 452 && model != 453 &&
		model != 454 && model != 472 &&
		model != 473 && model != 484 &&
		model != 493 && model != 539 &&
		model != 595)
		if(GetPlayerSurfingVehicleID(i) == carid)
        {
            new Float:p[3];
			GetPlayerPos(i,p[0],p[1],p[2]);
            GetXYInBackOfPlayer(i,p[0],p[1],2.0);
            SetPlayerPos(i,p[0],p[1],p[2]);
        }
    }
    return true;
}
public OnPlayerStateChange(playerid, newstate, oldstate)
{
	SetPVarInt(playerid, "NoAB", 1);
	if(newstate == PLAYER_STATE_DRIVER)
	{
     	timer2[playerid] = SetTimerEx("CheckForCheater",1000,true, "i",playerid);
	    player_NoCheckTimeVeh[playerid] = 1;
	}
	if(newstate == 1)//???????? ?????? ???? ??????? ?? ??????
    {
	    TextDrawHideForPlayer(playerid,Box);
	    TextDrawHideForPlayer(playerid,LBorder);
	    TextDrawHideForPlayer(playerid,RBorder);
	    TextDrawHideForPlayer(playerid,BBorder);
	    TextDrawHideForPlayer(playerid,TBorder);
        TextDrawHideForPlayer(playerid,Speed);
        TextDrawHideForPlayer(playerid,SpeedShow[playerid]);
        TextDrawHideForPlayer(playerid,Speed2Show[playerid]);
        TextDrawHideForPlayer(playerid,Healthh);
        TextDrawHideForPlayer(playerid,HealthShow[playerid]);
        TextDrawHideForPlayer(playerid,Fuelll);
        TextDrawHideForPlayer(playerid,FuelShow[playerid]);
        TextDrawHideForPlayer(playerid,StatusShow[playerid]);
        TextDrawHideForPlayer(playerid,EngineShow[playerid]);
    }
    if(newstate == PLAYER_STATE_DRIVER)//?????????? ?????? ???? ??????? ? ???
    {
            //STimer[playerid] = SetTimerEx("UpdateSpeedometr", ONE_HUNDRED_MSECOND, 1, "d", playerid);
            TextDrawShowForPlayer(playerid,Box);
	        TextDrawShowForPlayer(playerid,LBorder);
	        TextDrawShowForPlayer(playerid,RBorder);
	        TextDrawShowForPlayer(playerid,BBorder);
	        TextDrawShowForPlayer(playerid,TBorder);
	        TextDrawShowForPlayer(playerid,Speed);
	        TextDrawShowForPlayer(playerid,SpeedShow[playerid]);
	        TextDrawShowForPlayer(playerid,Speed2Show[playerid]);
	        TextDrawShowForPlayer(playerid,Healthh);
	        TextDrawShowForPlayer(playerid,HealthShow[playerid]);
	        TextDrawShowForPlayer(playerid,Fuelll);
	        TextDrawShowForPlayer(playerid,FuelShow[playerid]);
	        TextDrawShowForPlayer(playerid,StatusShow[playerid]);
	        TextDrawShowForPlayer(playerid,EngineShow[playerid]);
    }
	if(oldstate == PLAYER_STATE_DRIVER)
	{
	    KillTimer(timer2[playerid]);
	}
	new caridi = GetPlayerVehicleID(playerid);
	if(newstate == PLAYER_STATE_DRIVER && Type == 2)
	{
		Timerkk[playerid] = SetTimerEx("UnSurfCar",1600,1, "i",GetPlayerVehicleID(playerid));
	}
	if(newstate == 2) SetPVarInt(playerid,"ENT_GTC",GetTickCount());
	else if(oldstate == 2)
	{
    	new name[MAX_PLAYER_NAME];
    	new string[128];
    	GetPlayerName(playerid, name, sizeof(name));
    	if((GetTickCount() - GetPVarInt(playerid,"ENT_GTC")) <= 1000)
    	{
    		format(string, sizeof(string), "-<WARNING> %s[%d]: Возможно раскидывает тачки.",name,playerid);
    		ABroadCast(0xFF0000AA, string, 1);
    		return true;
		}
	}
	if(newstate == PLAYER_STATE_ONFOOT)
	{
		new Veh = GetPlayerVehicleID(playerid);
		if(PlayerInfo[playerid][pJob] == 2)
		{
			if(gcontract[playerid] == 1)
			{
				Delete3DTextLabel(Meh3d[GetPlayerVehicleID(playerid)]);
				gcontract[playerid] = 0;
			}
		}
		if(PlayerRacing[playerid] != 0)
		{
			SendClientMessage(playerid, COLOR_NEWS, "Вы были дисквалифицированы!");
			DisablePlayerRaceCheckpoint(playerid);
			DestroyVehicle(Veh);
			RaceCP[playerid] = 0;
			chet[playerid] = 0;
			TogglePlayerControllable(playerid, 1);
			SetPlayerInterior(playerid, 3);
			SetPlayerPos(playerid,831.9918,1.6614,1004.1797);
			SetPlayerFacingAngle(playerid, 39.0413);
			PlayerRacing[playerid] = 0;
			return true;
		}
		if(TalkingLive[playerid] == 2)
		{
			SendClientMessage(playerid, 0x6495EDFF, "Прямой эфир завершён");
			SendClientMessage(TalkingLive[playerid], 0x6495EDFF, "Прямой эфир завершён");
			TogglePlayerControllable(playerid, 1);
			TogglePlayerControllable(TalkingLive[playerid], 1);
			TalkingLive[TalkingLive[playerid]] = 255;
			TalkingLive[playerid] = 255;
			return true;
		}
		else if(TalkingLivels[playerid] == 2)
		{
			SendClientMessage(playerid, 0x6495EDFF, "Прямой эфир завершён");
			SendClientMessage(TalkingLivels[playerid], 0x6495EDFF, "Прямой эфир завершён");
			TogglePlayerControllable(playerid, 1);
			TogglePlayerControllable(TalkingLivels[playerid], 1);
			TalkingLivels[TalkingLivels[playerid]] = 255;
			TalkingLivels[playerid] = 255;
			return true;
		}
		else if(TalkingLivelv[playerid] == 2)
		{
			SendClientMessage(playerid, 0x6495EDFF, "Прямой эфир завершён");
			SendClientMessage(TalkingLivelv[playerid], 0x6495EDFF, "Прямой эфир завершён");
			TogglePlayerControllable(playerid, 1);
			TogglePlayerControllable(TalkingLivelv[playerid], 1);
			TalkingLivelv[TalkingLivelv[playerid]] = 255;
			TalkingLivelv[playerid] = 255;
			return true;
		}
		if(TakingLesson[playerid] == 1)
		{
			SendClientMessage(playerid, COLOR_RED, "Автосдача прекращена, вы покинули автомобиль");
			DisablePlayerRaceCheckpoint(playerid);
			CP[playerid] = 0;
			TakingLesson[playerid] = 0;
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			return true;
		}
   	}
    if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetVehicleModel(caridi) != 481 || GetVehicleModel(caridi) != 509 || GetVehicleModel(caridi) != 510)
		{
			if(Fuell[caridi] <= 0)
			{
		 		if(!IsAPlane(caridi) && !IsABoat(caridi) && !IsANoSpeed(caridi))
				{
					SendClientMessage(playerid, COLOR_RED, "Двигатель не заводится");
					SendClientMessage(playerid, COLOR_GREEN, "{00A86B}Используйте телефон {FFFFFF}(( /call )) {00A86B}чтобы вызвать механика / таксиста");
				}
			}
			if(EngineState[playerid] == false)
			{
				SendClientMessage(playerid,COLOR_GREEN, "{00AB06}Чтобы завести двигатель нажмите клавишу {FFFFFF}'2'{00AB06}.");
				SendClientMessage(playerid,COLOR_GREEN, "{00AB06}Меню автомобиля {FFFFFF}/carmenu{00AB06}.");
			}
		}
	}
	new string[90];
	if(newstate == PLAYER_STATE_ONFOOT)
	{
		DeletePVar(playerid, "NoAB");
		new Veh = GetPlayerVehicleID(playerid);
     	if(TransportDuty[playerid] > 0)
		{
		    if(TransportDuty[playerid] == 1)
			{
		        TaxiDrivers -= 1;
			}
   			Delete3DTextLabel(taxi3d[Veh]);
			TransportDuty[playerid] = 0;
		}
		if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
		{
		    if(IsPlayerConnected(TransportDriver[playerid]))
			{
			    TransportTime[TransportDriver[playerid]] = 0;
			    TransportCost[TransportDriver[playerid]] = 0;
			    if(PlayerInfo[playerid][pCash] < TransportCost[playerid])
			    {
					TransportCost[playerid] = 0;
					TransportTime[playerid] = 0;
					TransportDriver[playerid] = 999;
					return true;
			    }
			    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
				TransportCost[playerid] = 0;
				TransportTime[playerid] = 0;
				TransportDriver[playerid] = 999;
			}
		}
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
	}
	if(newstate == PLAYER_STATE_PASSENGER)
	{
		new name[24];
		GetPlayerName(playerid, name, sizeof(name));
		new vehicleid = GetPlayerVehicleID(playerid);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && TransportDuty[i] == 1)
			{
			    format(string, sizeof(string), "Пассажир %s сел в ваше Такси. Довезите его и государство заплатит вам", name);
				SendClientMessage(i, 0x6495EDFF, string);
			}
			return true;
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
		new newcar = GetPlayerVehicleID(playerid);
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		if(IsABoat(newcar))
		{
		    if(PlayerInfo[playerid][pBoatLic] < 1)
			{
			    SendClientMessage(playerid, COLOR_WHITE, "У вас нет лицензии на управлении морским транспортом!");
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(IsAPlane(newcar))
		{
		    if(PlayerInfo[playerid][pFlyLic] < 1)
			{
			    if(TakingLesson[playerid] == 1) { }
			    else {
			    SendClientMessage(playerid, COLOR_GREY, "У вас нет лицензии пилота!");
			    RemovePlayerFromVehicleAc(playerid); }
			}
		}
		if(CarLic(newcar))
		{
			if(PlayerInfo[playerid][pCarLic] == 0)
			{
				if(TakingLesson[playerid] != 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас нет водительских прав!");
					RemovePlayerFromVehicleAc(playerid);
				}
			}
		}
		if(IsAGunsCar(newcar))
		{
			format(string, sizeof(string), "Оружия: %d/%d", MatHaul[newcar-gunscar[0]][mLoad],MatHaul[newcar-gunscar[0]][mCapasity]);
			SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
			SendClientMessage(playerid, COLOR_WHITE, "(( Для загрузки/разгрузки Оружия Введите: /carm ))");
		}
		if(newcar == mavlic)
		{
			if(FormaFrac[playerid] == 1 && PlayerInfo[playerid][pMember] == 11) { }
			else
			{
			    SendClientMessage(playerid,COLOR_GREY, "Транспорт принадлежит Автошколе");
		        RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= liccar[0] && newcar <= liccar[9])
		{
			if(FormaFrac[playerid] == 1 && PlayerInfo[playerid][pMember] == 11 || TakingLesson[playerid] == 1 ) { }
			else
			{
			    SendClientMessage(playerid,COLOR_GREY, "Транспорт принадлежит Автошколе");
		        RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= arcar[0] && newcar <= arcar[4])
		{
            format(string, sizeof(string), "Аренда данного транспорта стоит 200.\nВы подтверждаете данную операцию?");
			ShowPlayerDialog(playerid,1488,DIALOG_STYLE_MSGBOX, "Аренда транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[0]) // aaaa
		{
		    format(string, sizeof(string), "Данная машина стоит 500.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10600,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[1])
		{
		    format(string, sizeof(string), "Данная машина стоит 700.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10601,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[2])
		{
		    format(string, sizeof(string), "Данная машина стоит 670.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10602,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[3])
		{
		    format(string, sizeof(string), "Данная машина стоит 700.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10603,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[4])
		{
		    format(string, sizeof(string), "Данная машина стоит 750.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10604,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[5])
		{
		    format(string, sizeof(string), "Данная машина стоит 400.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10605,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[6])
		{
		    format(string, sizeof(string), "Данная машина стоит 350.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10606,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[7])
		{
		    format(string, sizeof(string), "Данная машина стоит 300.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10607,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[8])
		{
		    format(string, sizeof(string), "Данная машина стоит 900.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10608,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[9])
		{
		    format(string, sizeof(string), "Данная машина стоит 350.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10609,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[10])
		{
		    format(string, sizeof(string), "Данная машина стоит 950.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10610,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[11])
		{
		    format(string, sizeof(string), "Данный мотоцикл стоит 900.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10611,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[12])
		{
		    format(string, sizeof(string), "Данный мотоцикл стоит 850.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10612,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[13])
		{
		    format(string, sizeof(string), "Данный мотоцикл стоит 800.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10613,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[14])
		{
		    format(string, sizeof(string), "Данный мотоцикл стоит 750.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10614,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[15])
		{
		    format(string, sizeof(string), "Данный мотоцикл стоит 850.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10615,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[16])
		{
		    format(string, sizeof(string), "Данный скутер стоит 70.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10616,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[17])
		{
		    format(string, sizeof(string), "Данный квадроцикл стоит 700.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10617,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[18])
		{
		    format(string, sizeof(string), "Данный мотоцикл стоит 800.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10618,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[19])
		{
		    format(string, sizeof(string), "Данная машина стоит 925.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10619,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[20])
		{
		    format(string, sizeof(string), "Данная машина стоит 600.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10620,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[21])
		{
		    format(string, sizeof(string), "Данная машина стоит 1.000.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10621,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[22])
		{
		    format(string, sizeof(string), "Данная машина стоит 770.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10622,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[23])
		{
		    format(string, sizeof(string), "Данная машина стоит 820.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10623,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[24])
		{
		    format(string, sizeof(string), "Данный картинг стоит 1.200.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10624,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[25])
		{
		    format(string, sizeof(string), "Данный велосипед стоит 20.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10625,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[26])
		{
		    format(string, sizeof(string), "Данный велосипед стоит 35.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10626,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == avtcar[27])
		{
		    format(string, sizeof(string), "Данная машина стоит 1.100.000 вирт.\nВы подтверждаете покупку данного транспорта?");
			ShowPlayerDialog(playerid,10627,DIALOG_STYLE_MSGBOX, "Покупка транспорта",string, "Да", "Нет");
		}
		if(newcar == vertolet)
		{
			if(PlayerInfo[playerid][pPHousekey] != 341)
			{
			    SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от данного вертолета");
			    RemovePlayerFromVehicleAc(playerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREEN, "Приятного полета!");
				return true;
			}
		}
		if(newcar >= liccar[0] && newcar <= liccar[9])
		{
	      	if(PlayerInfo[playerid][pCarLic] == 0 && TakingLesson[playerid] == 1)
			{
				if(JobCarTime[playerid] <= 16 && JobCarTime[playerid] >= 1)
				{
					JobCarTime[playerid] = 0;
				}
				LessonStat[playerid]++;
				pLessonCar[playerid] = CHECKPOINT_1;
				SetPlayerRaceCheckpoint(playerid,0,1121.0159,-1712.0725,13.3828,1081.1600,-1698.9187,13.5469,5.0);
				SendClientMessage(playerid, 0x6495EDFF, "Вы начали экзамен по вождению.");
				SendClientMessage(playerid, 0x6495EDFF, "Чтобы прервать экзамен /endlesson");
			}
		}
		new car = GetPlayerVehicleID(playerid);
		if(car >= PetrolTanker[0] && car <= PetrolTanker[1])
		{
			if(jobcar[car] == false)
			{
				if(PlayerInfo[playerid][pJob] == 10)
				{
					ShowPlayerDialog(playerid,32000,0, " ", "<< Автопарк >>\nЦена аренды: 5000\nВы хотите взять грузовик на прокат?", "Да", "Нет");
					TogglePlayerControllable(playerid, 0);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы не дальнобойщик");
					RemovePlayerFromVehicleAc(playerid);
					TogglePlayerControllable(playerid, 1);
				}
			}
		}
		if(car >= Linerunner[0] && car <= Linerunner[1])
		{
			if(jobcar[car] == false)
			{
				if(PlayerInfo[playerid][pJob] == 10)
				{
					ShowPlayerDialog(playerid,32000,0, " ", "<< Автопарк >>\nЦена аренды: 5000\nВы хотите взять грузовик на прокат?", "Да", "Нет");
					TogglePlayerControllable(playerid, 0);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы не дальнобойщик");
					RemovePlayerFromVehicleAc(playerid);
					TogglePlayerControllable(playerid, 1);
				}
			}
		}
		if(car >= Roadtrain[0] && car <= Roadtrain[1])
		{
			if(jobcar[car] == false)
			{
				if(PlayerInfo[playerid][pJob] == 10)
				{
					ShowPlayerDialog(playerid,32000,0, " ", "<< Автопарк >>\nЦена аренды: 5000\nВы хотите взять грузовик на прокат?", "Да", "Нет");
					TogglePlayerControllable(playerid, 0);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы не дальнобойщик");
					RemovePlayerFromVehicleAc(playerid);
					TogglePlayerControllable(playerid, 1);
				}
			}
		}
		if(newcar >= hotdogcar[0] && newcar <= hotdogcar[8])
		{
			if(PlayerInfo[playerid][pJob] == 3 && PlayerInfo[playerid][pMember] == 0)
			{
				if(arenda[playerid] != 1)
				{
					ShowPlayerDialog(playerid,9130,DIALOG_STYLE_MSGBOX, " ", "<< Автопарк >>\nЦена аренды: 500\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не продавец Хот Догов");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= taxicar[0] && newcar <= taxicar[12])
		{
			if(PlayerInfo[playerid][pJob] == 4 && PlayerInfo[playerid][pMember] == 0)
			{
				if(arenda[playerid] != 1)
				{
					ShowPlayerDialog(playerid,9127,DIALOG_STYLE_MSGBOX, " ", "<< Таксопарк >>\nЦена аренды: 500\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не таксист");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= lsnewscar[0] && newcar <= lsnewscar[5])
		{
			if(FormaFrac[playerid] == 1 && PlayerInfo[playerid][pMember] == 16) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит LS News");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= lvpdcar[0] && newcar <= lvpdcar[16])
		{
			if(FormaFrac[playerid] == 1 && PlayerInfo[playerid][pMember] == 21) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит LVPD");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar == ugoncar[playerid])
		{
		    GangZoneDestroy(zonapoiska[playerid]);
			SendClientMessage(playerid, 0x6495EDFF, "SMS: Это то что нам нужно, гони её на склад.");
			new rand = random(3);
	        switch(rand)
	        {
         		case 0: SetPlayerCheckpoint(playerid,2120.0693,2718.2942,10.8203,3);
           		case 1: SetPlayerCheckpoint(playerid,-1931.6606,271.5569,41.0469,3);
             	case 2: SetPlayerCheckpoint(playerid,2507.9807,-2113.6448,13.5469,3);
	        }
		}
		if(newcar >= ruscar[0] && newcar <= ruscar[15])
		{
			if(PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pMember] == 14) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит Русской Мафии");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= lvnewscar[0] && newcar <= lvnewscar[5])
		{
			if(FormaFrac[playerid] == 1 && PlayerInfo[playerid][pMember] == 20) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит LV News");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= lcncar[0] && newcar <= lcncar[11])
		{
			if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pMember] == 5) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит La Cosa Nostra");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= yakcar[0] && newcar <= yakcar[13])
		{
			if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 6) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит Yakuza");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= cnncar[0] && newcar <= cnncar[4] || newcar == cnnmav)
		{
			if(FormaFrac[playerid] == 1 && PlayerInfo[playerid][pMember] == 9 ) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит SF News");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= comptruck[0] && newcar <= comptruck[8])
		{
			if(PlayerInfo[playerid][pJob] == 5 && PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][pPBiskey] == 255)
			{
				if(arenda[playerid] != 1)
				{
					ShowPlayerDialog(playerid,9131,DIALOG_STYLE_MSGBOX, " ", "<< Автопарк >>\nЦена аренды: 500\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не развозчик продуктов");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= benzovoz[0] && newcar <= benzovoz[9])
		{
			if(PlayerInfo[playerid][pJob] == 5 && PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][pPBiskey] == 255)
			{
				if(arenda[playerid] != 1)
				{
					ShowPlayerDialog(playerid,9132,DIALOG_STYLE_MSGBOX, " ", "<< Автопарк >>\nЦена аренды: 500\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не развозчик продуктов");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= govcar[0] && newcar <= govcar[4])
		{
			if(FormaFrac[playerid] == 1 && PlayerInfo[playerid][pMember] == 7) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит Правительству");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar == matsfura[0])
		{
			if(PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pMember] == 12) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит The Ballas Gang");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= fbicar[0] && newcar <= fbicar[8])
		{
		    if(FormaFrac[playerid] == 1 && PlayerInfo[playerid][pMember] == 2) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит ФБР");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
 	 	if(newcar >= sapdcar[0] && newcar <= sapdcar[26])
		{
		    if(FormaFrac[playerid] == 1 && PlayerInfo[playerid][pMember] == 1) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит LSPD");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= medicsls[0] && newcar <= medicsls[5])
		{
		    if(FormaFrac[playerid] == 1 && PlayerInfo[playerid][pMember] == 22) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит Больнице Los Santos");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= medicslv[0] && newcar <= medicslv[7])
		{
		    if(FormaFrac[playerid] == 1 && PlayerInfo[playerid][pMember] == 23) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит Больнице Las Venturas!");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= medicssf[0] && newcar <= medicssf[7])
		{
		    if(FormaFrac[playerid] == 1 && PlayerInfo[playerid][pMember] == 4) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит Больнице San Fierro!");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= mehanik[0] && newcar <= mehanik[22])
		{
		    if(PlayerInfo[playerid][pJob] == 2 && PlayerInfo[playerid][pMember] == 0)
		    {
				if(arenda[playerid] != 1)
				{
					ShowPlayerDialog(playerid,9128,DIALOG_STYLE_MSGBOX, " ", "<< Автопарк >>\nЦена аренды: 500\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не механик");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= sfpdcar[0] && newcar <= sfpdcar[28])
		{
		    if(FormaFrac[playerid] == 1 && PlayerInfo[playerid][pMember] == 10) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит SFPD");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar == matsfuragrove[0])
		{
			if(PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pMember] == 15) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит Grove Street Gang");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar == matsfuraactek[0])
		{
			if(PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pMember] == 17) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит Varios Los Aztecas Gang");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar == matsfuravagos[0])
		{
			if(PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pMember] == 13) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит Los Santos Vagos Gang");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar == matsfurarifa[0])
		{
			if(PlayerInfo[playerid][pLeader] == 18 || PlayerInfo[playerid][pMember] == 18) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит The Rifa Gang");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= ballascar[0] && newcar <= ballascar[7])
		{
			if(PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pMember] == 12) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит The Ballas Gang");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= grovecar[0] && newcar <= grovecar[6])
		{
			if(PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pMember] == 15) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит Grove Street Gang");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= coronoscar[0] && newcar <= coronoscar[3])
		{
			if(PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pMember] == 17) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит Varios Los Aztecas Gang");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= vagoscar[0] && newcar <= vagoscar[7])
		{
			if(PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pMember] == 13) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит Los Santos Vagos Gang");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= rifacar[0] && newcar <= rifacar[10])
		{
			if(PlayerInfo[playerid][pLeader] == 18 || PlayerInfo[playerid][pMember] == 18) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит The Rifa Gang");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= gunscar[0] && newcar <= gunscar[2])
		{
			if (FormaFrac[playerid] == 1 && PlayerInfo[playerid][pMember] == 19 || proverkaforma[playerid] == 1) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит Армии LVA");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
        if(newcar >= lsacar[0] && newcar <= lsacar[15])
        {
            if(FormaFrac[playerid] == 1) { }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Вы не Армеец");
                RemovePlayerFromVehicleAc(playerid);
            }
        }
        if(newcar >= lsacarvert[0] && newcar <= lsacarvert[0])
        {
            if(FormaFrac[playerid] == 1 ) { }
            else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не Армеец");
				RemovePlayerFromVehicleAc(playerid);
			}
			if(vertmatbilsa >= 10000)
			{
				format(string, sizeof(string), "Вертолёт загружен");
				SendClientMessage(playerid, COLOR_GREY, string);
				SendClientMessage(playerid, COLOR_WHITE, "Доставьте материалы в LSA");
				VertMatslsa[playerid] = 2;
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid,-1469.0442,1489.7952,8.2578,10);
				lsacarvertexit[playerid] = 1;
				return true;
			}
			SetPlayerCheckpoint(playerid,-1420.4194,1485.6796,11.8084,14.0);
			SendClientMessage(playerid,COLOR_WHITE, "Отправляйтесь на корабль, для загрузки Оружия");
			VertMatslsa[playerid] = 1;
			lsacarvertexit[playerid] = 1;
        }
		if(newcar >= armycarsf[0] && newcar <= armycarsf[20])
		{
		    if(PlayerInfo[playerid][pMember] == 3 && FormaFrac[playerid] == 1)
			{
			    SendClientMessage(playerid, COLOR_GREEN, "Чтобы начать доставку материалов введите {e23434}/carmat");
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит Армии SFA");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= armcar[5] && newcar <= armcar[42])
		{
		    if(FormaFrac[playerid] == 1 || proverkaforma[playerid] == 1) { }
  			 else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Транспорт принадлежит Армии LVA");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		// ==== ХИТКАР
		if(newcar >= hitcar[0] && newcar <= hitcar[27])
		{
		    if(PlayerInfo[playerid][pMember] == 24) { }
			else
			{
			    SendClientMessage(playerid,COLOR_GREY, "Транспорт принадлежит Наемным убийцам!");
		        RemovePlayerFromVehicleAc(playerid);
			}
		}
	}
	if(newstate == PLAYER_STATE_SPAWNED)
	{
		new Float: lwx, Float:lwy, Float:lwz;
		GetPlayerPos(playerid, lwx, lwy, lwz);
		if((lwz > 530.0 && PlayerInfo[playerid][pInt] == 0) || PlayerToPoint(1000.0, playerid, -1041.9,-1868.4,79.1))
		{
			SetPlayerSpawn(playerid);
		}
		if(WantedPoints[playerid] > 0)
		{
		    while(WantedPoints[playerid] > 0)
		    {
		        WantedPoints[playerid] -= 1;
		    }
			WantedPoints[playerid] = 0;
			WantedLevel[playerid] = 0;
			PlayerInfo[playerid][pWantedLevel] = 0;
			SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
		    PlayerInfo[playerid][pWantedDeaths] += 1;
		}
		WantedPoints[playerid] = 0;
		WantedLevel[playerid] = 0;
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		gPlayerSpawned[playerid] = 1;
		SafeTime[playerid] = 60;
	}
	return true;
}
stock LockCar(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetVehicleParamsForPlayer(carid, i, 0, 1);
			gCarLock[carid] = 1;
		}
	}
}
stock InitLockDoors(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		new c;
		while(c < 265)
		{
			c++;
			if(gCarLock[c] == 1)
			{
				SetVehicleParamsForPlayer(c,playerid, 0, 1);
			}
		}
	}
	return true;
}
public OnPlayerExitVehicle(playerid, vehicleid)
{
    if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
	{
		new name[24];
		GetPlayerName(playerid, name, sizeof(name));
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && TransportDuty[i] == 1)
			{
				SendClientMessage(i, 0x6495EDFF, "Пассажир вышел из вашего Такси. Деньги и опыт будут зачислены во время зарплаты");
			    if(taxipasashir[playerid] != true)
			    {
					new taxizp = 50+Random(1, 50);
					PlayerInfo[i][pPayCheck] += taxizp*PlayerInfo[i][pTaxiLvl];
					taxipasashir[playerid] = true;
					taxiexpp[i]+= 1;
					SetPVarInt(playerid, "Taxist", i);
					ShowPlayerDialog(playerid, 11516, DIALOG_STYLE_MSGBOX, "Такси", "Как вас обслужили?", "Хорошо", "Плохо");
				}
			}
			return true;
		}
	}
	SetPVarInt(playerid, "NoAB", 1);
	new string[100];
	if(PEfir[playerid] != 255)
	{
		format(string, sizeof(string), "Вы вышли из прямого эфира");
		SendClientMessage(playerid, COLOR_WHITE, string);
		PEfir[playerid] = 255;
	}
	if(Pefir[playerid] == 1 || Pefir[playerid] == 2)
	{
		Pefir[playerid] = 0;
		PEfir[playerid] = 255;
		format(string, sizeof(string), "Вы вышли из прямого эфира");
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	new Veh = GetPlayerVehicleID(playerid);
	if(PlayerRacing[playerid] != 0)
	{
		SendClientMessage(playerid, COLOR_NEWS, "Вы были дисквалифицированы!");
		DisablePlayerRaceCheckpoint(playerid);
		DestroyVehicle(Veh);
		RaceCP[playerid] = 0;
		chet[playerid] = 0;
		TogglePlayerControllable(playerid, 1);
		SetPlayerInterior(playerid, 3);
		ACP_SetPlayerPos(playerid,831.9918,1.6614,1004.1797);
		SetPlayerFacingAngle(playerid, 39.0413);
		PlayerRacing[playerid] = 0;
		return true;
	}
	if(TransportDuty[playerid] > 0)
	{
		if(TransportDuty[playerid] == 1)
		{
			TaxiDrivers -= 1;
		}
		Delete3DTextLabel(taxi3d[Veh]);
		TransportDuty[playerid] = 0;
	}
	return true;
}
public OnPlayerRequestClass(playerid, classid)
{
	SendClientMessage(playerid, 0x00CCFFFF, "{c43c3c}Добро пожаловать на Arizona RolePlay");
	//PlayAudioStreamForPlayer(playerid,"http://radio.zaycev.fm:9002/ZaycevFM(128)");
	PlayAudioStreamForPlayer(playerid,"http://cdndl.zaycev.net/109276/3756750/young_maylay_-_welcome_to_grove_street_gta_san_andreas_ost_.mp3?dlKind=play&format=json");
	InterpolateCameraPos(playerid, 1083.745971, -2110.640136, 122.213020, 1478.559936, -1614.301513, 18.250890, 10000);
	InterpolateCameraLookAt(playerid, 1080.188110, -2107.397460, 120.861465, 1478.844726, -1619.286499, 17.988981, 10000);
	TogglePlayerControllable(playerid, 0);
	SetPlayerHealthAC(playerid, 255);
	PlayerInfo[playerid][pHP] = 255;
	if(gPlayerLogged[playerid] != 1)
	{
		if(NotLogin[playerid] != 1)
		{
			new bac[1000];
			new name[MAX_PLAYER_NAME];
			new playername[MAX_PLAYER_NAME];
		    GetPlayerName(playerid, name, sizeof(name));
		    GetPlayerName(playerid, playername, sizeof(playername));
			format(bac, sizeof(bac), "%s.ini", playername);
			if(gPlayerAccount[playerid] == true)
			{
			    gPlayerAccount[playerid] = true;
				format(bac,256, "{ffffff}Добро пожаловать на {FFCC00}Arizona Role Play{ffffff}\n\n Введите свой пароль\nПопыток для ввода пароля: {009933}3", name);
				ShowPlayerDialog(playerid,1,DIALOG_STYLE_PASSWORD, "{CC0000}Авторизация",bac, "Войти", "Отмена");
				return true;
			}
			if(gPlayerAccount[playerid] == false)
			{
		  		gPlayerAccount[playerid] = false;
				format(bac,sizeof(bac), "{ffffff}Добро пожаловать, {0033FF}%s\n\n{ffffff}Этот аккаунт {FF3366}не зарегистрирован{ffffff} на нашем сервере.\n{ffffff}Для регистрации введите пароль.\n{ffffff}Он будет использоваться для авторизации на нашем сервере.\n\n\t{CC0000}Примечания:\n\t{CC0000}- Длина пароль должен состоять из букв и цифр\n\t{CC0000}- Пароль чувствиленег к регистру{ffffff}",name);
		    	ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT, "{FFFF00}Регистрация",bac, "Готово", "Отмена");
			    return true;
			}
		}
	}
	return true;
}
stock SetPlayerCriminal(playerid,declare,reason[])
{
	if(IsPlayerConnected(playerid))
	{
	    PlayerInfo[playerid][pCrimes] += 1;
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new turnmes[128];
		new wantedmes[128];
		new points = WantedPoints[playerid];
		strmid(PlayerCrime[playerid][pAccusedof], reason, 0, strlen(reason), 255);
		GetPlayerName(playerid, turned, sizeof(turned));
		if(declare == 255)
		{
			format(turner, sizeof(turner), "Неизвестный");
			strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
		}
		else
		{
		    if(IsPlayerConnected(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
				strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
				strmid(PlayerCrime[declare][pBplayer], turned, 0, strlen(turned), 255);
				strmid(PlayerCrime[declare][pAccusing], reason, 0, strlen(reason), 255);
			}
		}
		if(!IsACop(playerid) || !IsAArm(playerid))
		{
			if(PlayerInfo[playerid][pWantedLevel] <= 6)
			{
				format(turnmes, sizeof(turnmes), "Вы совершили преступление: [ %s ]. Сообщает: %s.",reason,turner);
				WantedLevel[playerid] += 1;
				PlayerInfo[playerid][pWantedLevel] += 1;
				SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
				SendClientMessage(playerid, COLOR_LIGHTRED, turnmes);
			}
			if(points > 0)
			{
			    new yesno;
				if(points == 1) { WantedLevel[playerid] = 1; yesno = 1; WantedTime[playerid] = 300; }
				else if(points == 2) { WantedLevel[playerid] = 2; yesno = 1; WantedTime[playerid] = 600; }
				else if(points == 3) { WantedLevel[playerid] = 3; yesno = 1; WantedTime[playerid] = 900; }
				else if(points == 4) { WantedLevel[playerid] = 4; yesno = 1; WantedTime[playerid] = 1200; }
				else if(points == 5) { WantedLevel[playerid] = 5; yesno = 1; WantedTime[playerid] = 1500; }
				else if(points >= 6) { WantedLevel[playerid] = 6; yesno = 1; WantedTime[playerid] = 1800; }
				if(WantedLevel[playerid] >= 1){ }
				if(yesno)
				{
					format(wantedmes, sizeof(wantedmes), "Ваш уровень розыска: %d", WantedLevel[playerid]);
					SendClientMessage(playerid, COLOR_YELLOW, wantedmes);
					SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
						if(IsPlayerConnected(i))
						{
						    if(PlayerInfo[i][pMember] == 1 ||PlayerInfo[i][pLeader] == 1 || PlayerInfo[i][pMember] == 10 ||PlayerInfo[i][pLeader] == 10 || PlayerInfo[i][pMember] == 2 ||PlayerInfo[i][pLeader] == 2 || PlayerInfo[i][pMember] == 3 || PlayerInfo[i][pLeader] == 3 || PlayerInfo[i][pMember] == 19 || PlayerInfo[i][pLeader] == 19 || PlayerInfo[i][pMember] == 21 || PlayerInfo[i][pLeader] == 21)
						    {
								format(cbjstore, sizeof(turnmes), "Рация: Cообщает: %s. Преступление: %s. Подозреваемый: %s",turner,reason,turned);
								SendClientMessage(i, 0xFEBC41AA, cbjstore);
							}
						}
					}
				}
			}
		}
	}
	return true;
}
public OtherTimer()
{
	new string[64];
	GetMoney();
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(gPlayerLogged[i] == 1)
			{
				if(SafeTime[i] > 0)
				{
					SafeTime[i]--;
				}
			}
			if(Mobile[Mobile[i]] == 255)
			{
			    if(IsPlayerConnected(Mobile[i]))
			    {
					new called[MAX_PLAYER_NAME];
					GetPlayerName(Mobile[i], called, sizeof(called));
					format(string, sizeof(string), "У %s звонит телефон", called);
					RingTone[Mobile[i]] = 10;
					ProxDetector(30.0, Mobile[i], string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			}
		}
	}
	return true;
}

public ClearLastPickup()
{
	for(new i=0; i<MAX_PLAYERS; i++)LastPickup[i] = -1;
}

public FixKickedPlayers()
{
	for(new i=0; i<MAX_PLAYERS; i++)if(FixKickedPlayer[i] == 1)Kick(i);
}

stock ACP_SetPlayerPos(playerid, Float:x, Float:y, Float:z)
{
	SetPlayerPos(playerid, x, y, z);
	ACP_pPos[playerid][0] = x;
	ACP_pPos[playerid][1] = y;
	ACP_pPos[playerid][2] = z;
}

public Fresh()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerInRangeOfPoint(i, 6, 2120.0693,2718.2942,10.8203) || IsPlayerInRangeOfPoint(i, 6, -1931.6606,271.5569,41.0469) || IsPlayerInRangeOfPoint(i, 6, 2507.9807,-2113.6448,13.5469))
		{
		    if(ugoncar[i] != 0)
		    {
				if(GetPlayerState(i) != PLAYER_STATE_DRIVER) return SendClientMessage(i, 0x6495EDFF, "Вы не в машине.");
		        if(GetPlayerVehicleID(i) != ugoncar[i]) return SendClientMessage(i, 0x6495EDFF, "Эта не та машина что мы заказывали.");
                DeletePVar(i, "ugontime");
		        new zp = PlayerInfo[i][pCarRobbingExp]*2;
		        DestroyVehicle(ugoncar[i]);
		        PlayerInfo[i][pCash] += 500+zp;
		        new string[26];
		        format(string, sizeof(string), "~g~+%d$", 500+zp);
		        GameTextForPlayer(i, string, 3000, 1);
		        PlayerInfo[i][pCarRobbingExp] ++;
		    	SendClientMessage(i, 0x6495EDFF, "Отличная тачка. Будет нужна работа, приходи.");
		        ugoncar[i] = 0;
			}
		}
		if(!PlayerToPoint(1.0, i, PosPic[0][i], PosPic[1][i], PosPic[2][i])) Dpic[i] = 0;
		if(GetPVarInt(i, "ugontime") > 0)
		{
		    new string[12];
		    SetPVarInt(i, "ugontime", GetPVarInt(i, "ugontime") - 1);
	    	format(string,10,"~r~%s",Convert(GetPVarInt(i, "ugontime")));
	    	GameTextForPlayer(i, string, 2000, 6);
	    	if(GetPVarInt(i, "ugontime") == 1)
	    	{
	    	    if(PlayerInfo[i][pCarRobbingExp] != 0) { PlayerInfo[i][pCarRobbingExp] -= 1; }
	    	    SendClientMessage(i, 0x6495EDFF, "SMS: Ты меня разочеровал");
	    	    DestroyVehicle(ugoncar[i]);
	    	    DeletePVar(i, "ugontime");
	    	}
		}
		if(GetPlayerPing(i) > 1000)
		{
			new steleqepin[170];
			new nameqepin[MAX_PLAYER_NAME];
			GetPlayerName(i, nameqepin, sizeof(nameqepin));
			format(steleqepin, sizeof(steleqepin), "Игрок %s был кикнут с сервера. Причина: Высокий пинг.", nameqepin);
			SendClientMessageToAll(0xAFAFAFAA, steleqepin);
			FixKickedPlayer[i] = 1;
		}
		if(AntiBan[i] > 0) AntiBan[i]--;
		InitLockDoors(i);
		SaveWeapon(i);
		if(Tazer[i] == 1)
		{
			if(TazerTime[i] <= 0)
			{
				Tazer[i] = 0;
			}
			else
			{
				TazerTime[i] -= 1;
			}
		}
		if(PlayerInfo[i][pAdvertTime] > 0) { PlayerInfo[i][pAdvertTime] -= 1; }
		if(PlayerInfo[i][pPHousekey] != 255) { PlayerInfo[i][pFuelCar] = Fuell[caridhouse[i]]; }
	}
	CheckArmour();
	CheckHealth();
	new string[128];
	new hour, minute, second;
	gettime(hour, minute, second);
	new tmphour;
	new tmpminute;
	new tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	FixHour(tmphour);
	tmphour = shifthour;
	if((tmphour > ghour) || (tmphour == 0 && ghour == 23))
	{
		format(string, sizeof(string), "Сейчас времени %d:00 часов",tmphour);
		BroadCast(COLOR_WHITE,string);
		ghour = tmphour;
		PayDay();
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			PlayerInfo[i][pPayDay]+= 1;
		}
		if(realtime)
		{
			SetWorldTime(tmphour);
		}
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(Works[i] == true && JobCP[i] == 2)
		{
			if(WithBag[i] == 1)
			{
 				Bags[i] += 1;
 			}
 		}
		if(clearanim[i] > 0)
		{
			clearanim[i] --;
		}
		if(hour >= 12 && minute == 10 && second == 0)
		{
			startaddiction[i] = 1;
		}
		DeletePVar(i, "NoAB");
		if(PlayerInfo[i][pMuteTime] > 0 && PlayerInfo[i][pMuted] == 1)
		{
			PlayerInfo[i][pMuteTime] -= 1;
			if(PlayerInfo[i][pMuteTime] == 0)
			{
	           	PlayerInfo[i][pMuted] = 0;
				SendClientMessage(i, COLOR_LIGHTRED, "Вам включили чат. Пожалуйста соблюдайте правила");
   			}
		}
		if(PlayerInfo[i][pCheat] == 1)
		{
			new inters = GetPlayerInterior(i);
			new worlds = GetPlayerVirtualWorld(i);
			if(inters != 18 && worlds != 10)
			{
				if(!PlayerToPoint(6.0,i,-219.7144,1410.6461,27.7734))
				{
					SetPlayerInterior(i, 18);
					ACP_SetPlayerPos(i,-219.7144,1410.6461,27.7734);
					SetPlayerFacingAngle(i, 276.6526);
					SetPlayerVirtualWorld(i, 1);
				}
			}
		}
		if(IsPlayerConnected(i))
	    {
			if(PlayerInfo[i][pJailed] > 0)
		    {
				if(PlayerInfo[i][pJailTime] > 0)
				{
					PlayerInfo[i][pJailTime] -= 1;
				}
				if(PlayerInfo[i][pJailTime] <= 0)
				{
					if(PlayerInfo[i][pJailed] == 1)
					{
					    switch(PlayerInfo[i][pPlaceJail])
					    {
							case 1:
							{
								SetPlayerInterior(i, 0);
								ACP_SetPlayerPos(i,1553.4962,-1675.2714,16.1953);
								SetPlayerFacingAngle(i, 95.0636);
							}
	                   	 	case 2:
							{
								SetPlayerInterior(i, 0);
								ACP_SetPlayerPos(i,-1607.1873,721.3649,12.2721);
								SetPlayerFacingAngle(i, 2.3026);
							}
							case 3:
							{
								SetPlayerInterior(i, 0);
								ACP_SetPlayerPos(i,2334.8467,2454.9456,14.9688);
								SetPlayerFacingAngle(i, 115.7874);
							}
							case 4:
							{//1219.8274,-1813.5815,16.5938
							    SetPlayerInterior(i, 0);
								ACP_SetPlayerPos(i,1219.8274,-1813.5815,16.5938);
								SetPlayerFacingAngle(i, 187.0385);
							}
						}
					}
					PlayerInfo[i][pJailTime] = 0;
					PlayerInfo[i][pJailed] = 0;
					SendClientMessage(i, COLOR_RED, "Вы отсидели свой срок, теперь вы свободны!");
					PlayerInfo[i][pPlaceJail] = 0;
					format(string, sizeof(string), "~r~Fredoom");
				   	WantedTime[i] = 0;
				   	WantedPoints[i] = 0;
					WantedLevel[i] = 0;
				   	PlayerInfo[i][pWantedLevel] = 0;
				   	SetPlayerWantedLevel(i, PlayerInfo[i][pWantedLevel]);
					SetPlayerVirtualWorld(i, 0);
					GameTextForPlayer(i, string, 5000, 1);
				}
			}
			if(JobCarTime[i] <= 16 && JobCarTime[i] >= 1)
			{
		    	JobCarTime[i]--;
		    	format(string,sizeof(string), "~r~%d",JobCarTime[i] - 1);
		    	GameTextForPlayer(i, string, 2000, 6);
			}
			if(TieTime[i] > 0)
			{
				TieTime[i]--;
			}
			if(PlayerCuffed[i] == 1)
			{
			    if(PlayerCuffedTime[i] > 0)
			    {
			        PlayerCuffedTime[i] -= 1;
			    }
			    if(PlayerCuffedTime[i] == 0)
			    {
					TogglePlayerControllable(i, 1);
			        PlayerCuffed[i] = 0;
			        PlayerCuffedTime[i] = 0;
			    }
			}
			if(PlayerCuffed[i] == 2)
			{
			    if(PlayerCuffedTime[i] > 0)
			    {
			        PlayerCuffedTime[i] -= 1;
			    }
			    if(PlayerCuffedTime[i] == 0)
			    {
			        TogglePlayerControllable(i, 1);
			        PlayerCuffed[i] = 0;
			        PlayerCuffedTime[i] = 0;
			    }
			}
  		}
	}
	if(hour == 04 && minute == 55 && second == 00)
	{
		OOCOff(COLOR_REDD, "==========================================");
	    OOCOff(COLOR_REDD, "");
	    OOCOff(COLOR_REDD, "");
        OOCOff(COLOR_REDD, "");
		OOCOff(COLOR_REDD, "Внимание! Рестарт сервера через 5 минут!");
		OOCOff(COLOR_REDD, "");
		OOCOff(COLOR_REDD, "");
		OOCOff(COLOR_REDD, "");
		OOCOff(COLOR_REDD, "==========================================");
	}
	else if(hour == 05 && minute == 00 && second == 00)
	{
	    OOCOff(COLOR_REDD, "==========================================");
	    OOCOff(COLOR_REDD, "");
	    OOCOff(COLOR_REDD, "");
        OOCOff(COLOR_REDD, "");
		OOCOff(COLOR_REDD, "Внимание! Происходит рестарт сервера!");
		OOCOff(COLOR_REDD, "");
		OOCOff(COLOR_REDD, "");
		OOCOff(COLOR_REDD, "");
		OOCOff(COLOR_REDD, "==========================================");
		format(string, sizeof(string), "~r~RESTART");
		SaveAccounts();
		SaveMaterials();
		SaveGZ();
		OnPropUpdate();
		GameModeExitFunc();
	}
	if(hour == 13 && minute == 10  || hour == 14 && minute == 10  || hour == 16 && minute == 10  || hour == 22 && minute == 10 )
	{
		if(PaintballRound == 1)
		{
			format(string, sizeof(string), "Внимание! Начало пейнтбола через 5 минут. Место регистрации: гора VineWood (( /gps > Развлечения ))");
			OOCOff(0xFFAAFFAA,string);
			SetTimer("StartPaintballtwo", 180000, 0);
			PaintballRound = 0;
		}
	}
	if(hour == 12 && minute == 10  || hour == 18 && minute == 10  || hour == 21 && minute == 10  || hour == 15 && minute == 10 || hour == 23 && minute == 10 )
	{
		if(EndingRaceRound == 1)
		{
			format(string, sizeof(string), "Внимание! Начало стритрейсинга через 5 минут. Регистрация у въезда! (( /gps > Развлечения ))");
			OOCOff(0xB9B900AA,string);
			EndingRaceRound = 0;
			SetTimer("StartRacetwo", 180000, 0);
		}
	}
	return true;
}
public SetPlayerUnjail()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		new tttgtg;
		new strr1[256];
		tttgtg = GetPlayerAmmo(SpecAd[i]);
		new Float:hppp;
		new Float:aermor;
		GetPlayerArmour(SpecAd[i],aermor);
		GetPlayerHealth(SpecAd[i],hppp);
		if(PlayerInfo[i][pAdmin] >= 2)
		{
			if(IsPlayerInAnyVehicle(SpecAd[i]))
			{
				new Float:health;
				GetVehicleHealth(GetPlayerVehicleID(SpecAd[i]),health);
				format(strr1, sizeof(strr1),"%s~n~[ID:%d]~n~~n~~r~Armour: ~w~%.0f~n~~g~HP: ~w~%.0f~n~~g~CAR HP: ~w~%.0f~n~~b~AMMO: ~w~%d~n~~p~WARNS: ~w~%d/3~n~~y~PING: ~w~%d~n~~b~SPEED: ~w~%d",getName(SpecAd[i]),SpecAd[i],aermor,hppp,health,tttgtg,PlayerInfo[SpecAd[i]][pWarns],GetPlayerPing(SpecAd[i]),SpeedVehicle(SpecAd[i]));
				TextDrawSetString(FULLRECON[i],strr1);
			}
			if(!IsPlayerInAnyVehicle(SpecAd[i]))
			{
				format(strr1, sizeof(strr1),"%s~n~[ID:%d]~n~~n~~r~Armour: ~w~%.0f~n~~g~HP: ~w~%.0f~n~~b~AMMO: ~w~%d~n~~p~WARNS: ~w~%d/3~n~~y~PING: ~w~%d~n~~b~SPEED: ~w~%d",getName(SpecAd[i]),SpecAd[i],aermor,hppp,tttgtg,PlayerInfo[SpecAd[i]][pWarns],GetPlayerPing(SpecAd[i]),SpeedVehicle(SpecAd[i]));
				TextDrawSetString(FULLRECON[i],strr1);
			}
		}
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(plafk[i] > 0)
		{
		    if(plafk[i] >= 600)
			{
			    if(PlayerInfo[i][pAdmin] == 0)
			    {
				    new plname[30];
				    new string[128];
				    GetPlayerName(i,plname,sizeof(plname));
				    format(string,sizeof(string), "Игрок %s был кикнут за AFK. Время отсутствия: %d секунд",plname,plafk[i]);
				    ABroadCast(COLOR_GREY,string,1);
				    SendClientMessage(i,COLOR_LIGHTRED, "Вы были отключены от сервера. Причина: AFK");
				    plafk[i] = 0;
				    FixKickedPlayer[i] = 1;
				}
			}
		}
	}
}
stock AShowStats(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new atext[32];
		if(PlayerInfo[targetid][pSex] == 1) { atext = "Мужчина"; }
		else if(PlayerInfo[targetid][pSex] == 2) { atext = "Женщина"; }
		new ttext[32];
		if(PlayerInfo[targetid][pMember] == 0 && PlayerInfo[targetid][pLeader] == 0) { ttext = "Нет"; }
		else if(PlayerInfo[targetid][pMember] == 1 || PlayerInfo[targetid][pLeader] == 1) { ttext = "LSPD"; }
		else if(PlayerInfo[targetid][pMember] == 2 || PlayerInfo[targetid][pLeader] == 2) { ttext = "FBI"; }
		else if(PlayerInfo[targetid][pMember] == 3 || PlayerInfo[targetid][pLeader] == 3) { ttext = "SFA"; }
		else if(PlayerInfo[targetid][pMember] == 4 || PlayerInfo[targetid][pLeader] == 4) { ttext = "МЧС San Fierro"; }
		else if(PlayerInfo[targetid][pMember] == 5 || PlayerInfo[targetid][pLeader] == 5) { ttext = "LCN"; }
		else if(PlayerInfo[targetid][pMember] == 6 || PlayerInfo[targetid][pLeader] == 6) { ttext = "Yakuza"; }
		else if(PlayerInfo[targetid][pMember] == 7 || PlayerInfo[targetid][pLeader] == 7) { ttext = "Мэрия"; }
		else if(PlayerInfo[targetid][pMember] == 8 || PlayerInfo[targetid][pLeader] == 8) { ttext = "Casino Caligula"; }
		else if(PlayerInfo[targetid][pMember] == 9 || PlayerInfo[targetid][pLeader] == 9) { ttext = "SF NEWS"; }
		else if(PlayerInfo[targetid][pMember] == 10 || PlayerInfo[targetid][pLeader] == 10) { ttext = "SFPD"; }
		else if(PlayerInfo[targetid][pMember] == 11 || PlayerInfo[targetid][pLeader] == 11) { ttext = "Инструкторы"; }
		else if(PlayerInfo[targetid][pMember] == 12 || PlayerInfo[targetid][pLeader] == 12) { ttext = "The Ballas"; }
		else if(PlayerInfo[targetid][pMember] == 13 || PlayerInfo[targetid][pLeader] == 13) { ttext = "Vagos Gang"; }
		else if(PlayerInfo[targetid][pMember] == 14 || PlayerInfo[targetid][pLeader] == 14) { ttext = "Русская Мафия"; }
		else if(PlayerInfo[targetid][pMember] == 15 || PlayerInfo[targetid][pLeader] == 15) { ttext = "Grove Street"; }
		else if(PlayerInfo[targetid][pMember] == 16 || PlayerInfo[targetid][pLeader] == 16) { ttext = "LS NEWS"; }
		else if(PlayerInfo[targetid][pMember] == 17 || PlayerInfo[targetid][pLeader] == 17) { ttext = "The Aztecas"; }
		else if(PlayerInfo[targetid][pMember] == 18 || PlayerInfo[targetid][pLeader] == 18) { ttext = "The Rifa"; }
		else if(PlayerInfo[targetid][pMember] == 19 || PlayerInfo[targetid][pLeader] == 19) { ttext = "Зона 51"; }
		else if(PlayerInfo[targetid][pMember] == 20 || PlayerInfo[targetid][pLeader] == 20) { ttext = "LV NEWS"; }
		else if(PlayerInfo[targetid][pMember] == 21 || PlayerInfo[targetid][pLeader] == 21) { ttext = "LVPD"; }
		else if(PlayerInfo[targetid][pMember] == 22 || PlayerInfo[targetid][pLeader] == 22) { ttext = "МЧС Los Santos"; }
		else if(PlayerInfo[targetid][pMember] == 23 || PlayerInfo[targetid][pLeader] == 23) { ttext = "МЧС Las Venturas"; }
		else if(PlayerInfo[targetid][pMember] == 24 || PlayerInfo[targetid][pLeader] == 24) { ttext = "Хитман"; }
        new jtext[20];
        new rangz[20];
		if(PlayerInfo[targetid][pMember] == 0)
		{
			if(PlayerInfo[targetid][pRank] == 0) { rangz = "Нет"; }
		}
        if(PlayerInfo[targetid][pMember] == 1)
        {
			if(PlayerInfo[targetid][pRank] == 15) { rangz = "Шериф"; }
			else if(PlayerInfo[targetid][pRank] == 14) { rangz = "Полковник"; }
			else if(PlayerInfo[targetid][pRank] == 13) { rangz = "Подполковник";}
			else if(PlayerInfo[targetid][pRank] == 12) { rangz = "Майор"; }
			else if(PlayerInfo[targetid][pRank] == 11) { rangz = "Капитан"; }
			else if(PlayerInfo[targetid][pRank] == 10) { rangz = "Ст. Лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Мл. Лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Ст. Прапорщик"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Прапорщик"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Ст. Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Мл. Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Офицер"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Кадет"; }
        }
        if(PlayerInfo[targetid][pMember] == 2)
        {
			if(PlayerInfo[targetid][pRank] == 8) { rangz = "Директор"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Зам. директора"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Инспектор"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Начальник секции"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Специальный агент"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Старший агент"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Агент"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Стажёр"; }
        }
		if(PlayerInfo[targetid][pMember] == 3)
        {
			if(PlayerInfo[targetid][pRank] == 16) { rangz = "Генерал"; }
			else if(PlayerInfo[targetid][pRank] == 15) { rangz = "Полковник"; }
			else if(PlayerInfo[targetid][pRank] == 14) { rangz = "Подполковник"; }
			else if(PlayerInfo[targetid][pRank] == 13) { rangz = "Майор";}
			else if(PlayerInfo[targetid][pRank] == 12) { rangz = "Капитан"; }
			else if(PlayerInfo[targetid][pRank] == 11) { rangz = "Старший лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 10) { rangz = "Лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Младший лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Старший прапорщик"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Прапорщик"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Старшина"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Ст. Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Мл. Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Ефрейтор"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Рядовой"; }
        }
        if(PlayerInfo[targetid][pMember] == 4)
        {
			if(PlayerInfo[targetid][pRank] == 8) { rangz = "Глав. врач"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Терапевт"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Хирург"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Педиатр"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Санитар"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Интерн"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Стажёр"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Практикант"; }
        }
		if(PlayerInfo[targetid][pMember] == 5)
        {
			if(PlayerInfo[targetid][pRank] == 10) { rangz = "Дон"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Консильери"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Младший Босс"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Капо"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Сотто-Капо"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Боец"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Солдато"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Сомбаттенте"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Ассосиато"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Новицио"; }
        }
        if(PlayerInfo[targetid][pMember] == 6)
        {
			if(PlayerInfo[targetid][pRank] == 10) { rangz = "Кумите"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Оябун-кобун"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Cайко комон"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Оядзи"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Камбу"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Со-хобунтё"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Вакагасира"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Сятейгасира"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Кёдай"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Вакасю"; }
        }
        if(PlayerInfo[targetid][pMember] == 7)
        {
			if(PlayerInfo[targetid][pRank] == 6) { rangz = "Мэр"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Зам. мэра"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Начальник охраны"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Охранник"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Адвокат"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Секретарь"; }
        }
        if(PlayerInfo[targetid][pMember] == 8)
        {
			if(PlayerInfo[targetid][pRank] == 2) { rangz = "Менеджер"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Крупье"; }
        }
        if(PlayerInfo[targetid][pMember] == 9)
        {
			if(PlayerInfo[targetid][pRank] == 6) { rangz = "Главный редактор"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Редактор"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Журналист"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Папарацци"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Фотограф"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Стажер"; }
        }
        if(PlayerInfo[targetid][pMember] == 10)
        {
			if(PlayerInfo[targetid][pRank] == 15) { rangz = "Шериф"; }
			else if(PlayerInfo[targetid][pRank] == 14) { rangz = "Полковник"; }
			else if(PlayerInfo[targetid][pRank] == 13) { rangz = "Подполковник";}
			else if(PlayerInfo[targetid][pRank] == 12) { rangz = "Майор"; }
			else if(PlayerInfo[targetid][pRank] == 11) { rangz = "Капитан"; }
			else if(PlayerInfo[targetid][pRank] == 10) { rangz = "Ст. Лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Мл. Лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Ст. Прапорщик"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Прапорщик"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Ст. Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Мл. Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Офицер"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Кадет"; }
        }
        if(PlayerInfo[targetid][pMember] == 11)
        {
			if(PlayerInfo[targetid][pRank] == 8) { rangz = "Управляющий"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Директор"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Старший менеджер"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Мл. менеджер"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Кординатор"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Инструктор"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Экзаменатор"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Стажёр"; }
        }
  		if(PlayerInfo[targetid][pMember] == 12)
        {
			if(PlayerInfo[targetid][pRank] == 10) { rangz = "Биг Вилли"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Райч Нига"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Фолкс"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Федерал Блок"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Гангстер"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Ап Бро"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Гун брo"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Крэкер"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Младший Нига"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Блайд"; }
        }
        if(PlayerInfo[targetid][pMember] == 13)
        {
			if(PlayerInfo[targetid][pRank] == 11) { rangz = "Падре"; }
			else if(PlayerInfo[targetid][pRank] == 10) { rangz = "Падрино"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Лидер V.E.G."; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Асесор"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Авторитарио"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Асесино"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Амиго"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Эстимадо"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Сольдадо"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Криминаль"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Новато"; }
        }
        if(PlayerInfo[targetid][pMember] == 14)
        {
			if(PlayerInfo[targetid][pRank] == 10) { rangz = "Авторитет"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Вор в законе"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Вор"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Браток"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Свояк"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Блатной"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Барыга"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Бык"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Фраер"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Шнырь"; }
        }
        if(PlayerInfo[targetid][pMember] == 15)
        {
			if(PlayerInfo[targetid][pRank] == 10) { rangz = "Мэд Дог"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Легенд"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Де Кинг"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Мобста"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "О.Г."; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Гангста"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Юонг"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Килла"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Хастла"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Плэйя"; }
        }
        if(PlayerInfo[targetid][pMember] == 16)
        {
			if(PlayerInfo[targetid][pRank] == 6) { rangz = "Главный редактор"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Редактор"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Журналист"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Папарации"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Фотограф"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Стажер"; }
		}
        if(PlayerInfo[targetid][pMember] == 17)
        {
			if(PlayerInfo[targetid][pRank] == 10) { rangz = "Падре"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Нестро"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Тесосеро"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Инвасор"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Сабио"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Мирандо"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Лас Геррас"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Геттор"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Тирадор"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Перро"; }
        }
        if(PlayerInfo[targetid][pMember] == 18)
        {
			if(PlayerInfo[targetid][pRank] == 10) { rangz = "Падре"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Аджунто"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Ауторидад"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Бандидо"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Эрмано"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Джуниор"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Мачo"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Амиго"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Ладрон"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Новато"; }
        }
        if(PlayerInfo[targetid][pMember] == 19)
        {
			if(PlayerInfo[targetid][pRank] == 16) { rangz = "Генерал"; }
			else if(PlayerInfo[targetid][pRank] == 15) { rangz = "Полковник"; }
			else if(PlayerInfo[targetid][pRank] == 14) { rangz = "Подполковник"; }
			else if(PlayerInfo[targetid][pRank] == 13) { rangz = "Майор";}
			else if(PlayerInfo[targetid][pRank] == 12) { rangz = "Капитан"; }
			else if(PlayerInfo[targetid][pRank] == 11) { rangz = "Старший лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 10) { rangz = "Лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Младший лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Старший прапорщик"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Прапорщик"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Старшина"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Ст. Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Мл. Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Ефрейтор"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Рядовой"; }
        }
        if(PlayerInfo[targetid][pMember] == 20)
        {
			if(PlayerInfo[targetid][pRank] == 6) { rangz = "Главный редактор"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Редактор"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Журналист"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Папарации"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Фотограф"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Стажер"; }
		}
        if(PlayerInfo[targetid][pMember] == 21)
        {
			if(PlayerInfo[targetid][pRank] == 15) { rangz = "Шериф"; }
			else if(PlayerInfo[targetid][pRank] == 14) { rangz = "Полковник"; }
			else if(PlayerInfo[targetid][pRank] == 13) { rangz = "Подполковник";}
			else if(PlayerInfo[targetid][pRank] == 12) { rangz = "Майор"; }
			else if(PlayerInfo[targetid][pRank] == 11) { rangz = "Капитан"; }
			else if(PlayerInfo[targetid][pRank] == 10) { rangz = "Ст. Лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Мл. Лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Ст. Прапорщик"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Прапорщик"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Ст. Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Мл. Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Офицер"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Кадет"; }
        }
        if(PlayerInfo[targetid][pMember] == 22)
        {
			if(PlayerInfo[targetid][pRank] == 8) { rangz = "Глав. врач"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Терапевт"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Хирург"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Педиатр"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Санитар"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Интерн"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Стажёр"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Практикант"; }
        }
        if(PlayerInfo[targetid][pMember] == 23)
        {
			if(PlayerInfo[targetid][pRank] == 8) { rangz = "Глав. врач"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Терапевт"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Хирург"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Педиатр"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Санитар"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Интерн"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Стажёр"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Практикант"; }
        }
        else if(PlayerInfo[targetid][pMember] == 24 || PlayerInfo[targetid][pLeader] == 24)
        {
            if(PlayerInfo[targetid][pRank] == 1) { rangz = "Начинающий"; }
            else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Киллер"; }
            else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Снайпер"; }
            else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Стрелок"; }
            else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Агент"; }
            else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Профессионал"; }
            else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Элитный убийца"; }
            else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Тренер"; }
            else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Хитман"; }
            else if(PlayerInfo[targetid][pRank] == 10) { rangz = "Ген. Директор"; }
        }
        else if(PlayerInfo[targetid][pJob] == 2) { jtext = "Механик"; }
        else if(PlayerInfo[targetid][pJob] == 3) { jtext = "Продавец хотдогов"; }
        else if(PlayerInfo[targetid][pJob] == 4) { jtext = "Таксист"; }
        else if(PlayerInfo[targetid][pJob] == 5) { jtext = "Развозчик продуктов"; }
        else if(PlayerInfo[targetid][pJob] == 7) { jtext = "Прораб"; }
        else if(PlayerInfo[targetid][pJob] == 10) { jtext = "Дальнобойщик"; }
        else { jtext = "Безработный"; }
  		new drank[20];
        if(PlayerInfo[targetid][pDonateRank] == 1) { drank = "BRONZE VIP"; }
		else if(PlayerInfo[targetid][pDonateRank] == 2) { drank = "SILVER VIP"; }
		else if(PlayerInfo[targetid][pDonateRank] == 3) { drank = "GOLD VIP"; }
		else if(PlayerInfo[targetid][pLevel] == 1) { drank = "Новичок"; }
        else if(PlayerInfo[targetid][pLevel] == 2) { drank = "Начинающий"; }
        else if(PlayerInfo[targetid][pLevel] == 3) { drank = "Начинающий"; }
        else if(PlayerInfo[targetid][pLevel] == 4) { drank = "Уверенный"; }
        else if(PlayerInfo[targetid][pLevel] == 5) { drank = "Уверенный"; }
        else if(PlayerInfo[targetid][pLevel] == 6) { drank = "Постоянный игрок"; }
        else if(PlayerInfo[targetid][pLevel] == 7) { drank = "Освоившийся"; }
        else if(PlayerInfo[targetid][pLevel] >= 8) { drank = "Освоившийся"; }
        else if(PlayerInfo[targetid][pLevel] >= 22) { drank = "Дед"; }
		new stringus[100];
		new string[100];
		new name[MAX_PLAYER_NAME];
 		new sendername[MAX_PLAYER_NAME];
		GetPlayerName(targetid, sendername, sizeof(sendername));
  		format(stringus, sizeof(stringus), "%s.ini",sendername);
		new file = ini_openFile(stringus);
		if(file < 0) print("нет файла");
		else
		{
	  		ini_getString(file, "MarriedTo",stringus);
			ini_closeFile(file);
			if(PlayerInfo[targetid][pMarried] == 0)
			{
				stringus = "-";
			}
	        new cash = PlayerInfo[targetid][pCash]; // Кошелек
			new level = PlayerInfo[targetid][pLevel]; // Левел
			new exp = PlayerInfo[targetid][pExp];  // ЕХР
			new nxtlevel = PlayerInfo[targetid][pLevel]+1;
			new donatem1 = PlayerInfo[targetid][pDonateMoney1];
			new donatlvl = PlayerInfo[targetid][pDonateRank];
			new expamount = nxtlevel*levelexp;
			new pnumber = PlayerInfo[targetid][pPnumber];
			new warns = PlayerInfo[targetid][pWarns];
			new Skin = PlayerInfo[targetid][pChar];
			new pMashinka = PlayerInfo[targetid][pCar];
			new domik = PlayerInfo[targetid][pPHousekey];
			new unWarTimer = 10 - PlayerInfo[targetid][punWarnstime];
			new bbank = PlayerInfo[targetid][pBank];
			new vwarn = PlayerInfo[targetid][pVWarn];
	  		new stringi[256];
			GetPlayerName(targetid, name, sizeof(name));
			format(string,sizeof(string), "%s.ini",name);
			new File = ini_openFile(string);
			ini_getString(File, "pDataReg",stringi);
			new pRegIP[100];
	 		ini_getString(File, "pIpReg",pRegIP);
			ini_closeFile(File);
			new playerip[256];
			GetPlayerIp(targetid, playerip, sizeof(playerip));
			new str[512];
			new sctring[2000];
			format(str,sizeof(str),"{e23434}ОСНОВНОЕ\n",name); // ОСНОВНОЕ
   			strcat(sctring,str);
			format(str,sizeof(str),"{FFFFFF}Ник:	\t\t%s\n",name);
   			strcat(sctring,str);
      		format(str,sizeof(str),"Уровень:	\t\t%d\n",level);
        	strcat(sctring,str);
         	format(str,sizeof(str),"Exp:	\t\t\t%d/%d\n",exp,expamount);
          	strcat(sctring,str);
            format(str,sizeof(str),"{e23434}СЧЕТ\n",name); // СЧЕТ
   			strcat(sctring,str);
   			format(str,sizeof(str),"{FFFFFF}Донат деньги	\t\t%d\n",donatem1);
           	strcat(sctring,str);
           	format(str,sizeof(str),"Деньги на руках:	\t%d\n",cash);
           	strcat(sctring,str);
           	format(str,sizeof(str),"Деньги в банке:	\t%d\n",bbank);
           	strcat(sctring,str);
            format(str,sizeof(str),"Номер телефона:	\t%d\n",pnumber);
            strcat(sctring,str);
            format(str,sizeof(str),"Уровень VIP:	\t\t%d\n",donatlvl);
           	strcat(sctring,str);
            format(str,sizeof(str),"{e23434}ВАЖНО!\n",name); // ВАЖНО!
   			strcat(sctring,str);
            format(str,sizeof(str),"{FFFFFF}Варны: \t\t\t%d/3\n",warns);
            strcat(sctring,str);
            format(str,sizeof(str),"До снятия варна: \t\t%d\n",unWarTimer);
            strcat(sctring,str);
            format(str,sizeof(str),"Всего варнов: \t\t\t%d\n",vwarn);
            strcat(sctring,str);
            format(str,sizeof(str),"Дата регистрации:	\t%s\n",stringi);
            strcat(sctring,str);
            format(str,sizeof(str),"IP:	\t\t\t%s\n",playerip);
            strcat(sctring,str);
            format(str,sizeof(str),"IP при регистрации:	\t%s\n",pRegIP);
            strcat(sctring,str);
            format(str,sizeof(str),"{e23434}ПРОЧЕЕ\n",name); // ПРОЧЕЕ
   			strcat(sctring,str);
   			format(str,sizeof(str),"{FFFFFF}Скин:	\t\t\t%d\n",Skin); // pMashinka
            strcat(sctring,str);
            format(str,sizeof(str),"Машина: \t\t\t%d\n",pMashinka); //domik
            strcat(sctring,str);
            format(str,sizeof(str),"Дом: \t\t\t\t%d\n",domik);
            strcat(sctring,str);
            format(str,sizeof(str),"Фракция: \t\t\t%s\n",ttext);
            strcat(sctring,str);
            format(str,sizeof(str),"Должность: \t\t\t%s\n",rangz);
            strcat(sctring,str);
            format(str,sizeof(str),"Работа:\t\t\t\t%s\n",jtext);
            strcat(sctring,str);
            format(str,sizeof(str),"Статус:	\t\t\t%s\n",drank);
            strcat(sctring,str);
            format(str,sizeof(str),"Жена/муж:	\t\t%s\n",stringus);
            strcat(sctring,str);
            format(str,sizeof(str),"Пол:	\t\t\t%s\n",atext);
            strcat(sctring,str);
            ShowPlayerDialog(playerid,10004,DIALOG_STYLE_MSGBOX, "ASHOWSTATS",sctring, "Готово", "");
		}
	}
}
stock ShowStats(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new atext[32];
		if(PlayerInfo[targetid][pSex] == 1) { atext = "Мужчина"; }
		else if(PlayerInfo[targetid][pSex] == 2) { atext = "Женщина"; }
		new ttext[32];
		if(PlayerInfo[targetid][pMember] == 0 && PlayerInfo[targetid][pLeader] == 0) { ttext = "Нет"; }
		else if(PlayerInfo[targetid][pMember] == 1 || PlayerInfo[targetid][pLeader] == 1) { ttext = "LSPD"; }
		else if(PlayerInfo[targetid][pMember] == 2 || PlayerInfo[targetid][pLeader] == 2) { ttext = "FBI"; }
		else if(PlayerInfo[targetid][pMember] == 3 || PlayerInfo[targetid][pLeader] == 3) { ttext = "SFA"; }
		else if(PlayerInfo[targetid][pMember] == 4 || PlayerInfo[targetid][pLeader] == 4) { ttext = "МЧС San Fierro"; }
		else if(PlayerInfo[targetid][pMember] == 5 || PlayerInfo[targetid][pLeader] == 5) { ttext = "LCN"; }
		else if(PlayerInfo[targetid][pMember] == 6 || PlayerInfo[targetid][pLeader] == 6) { ttext = "Yakuza"; }
		else if(PlayerInfo[targetid][pMember] == 7 || PlayerInfo[targetid][pLeader] == 7) { ttext = "Мэрия"; }
		else if(PlayerInfo[targetid][pMember] == 8 || PlayerInfo[targetid][pLeader] == 8) { ttext = "Casino Caligula"; }
		else if(PlayerInfo[targetid][pMember] == 9 || PlayerInfo[targetid][pLeader] == 9) { ttext = "SF NEWS"; }
		else if(PlayerInfo[targetid][pMember] == 10 || PlayerInfo[targetid][pLeader] == 10) { ttext = "SFPD"; }
		else if(PlayerInfo[targetid][pMember] == 11 || PlayerInfo[targetid][pLeader] == 11) { ttext = "Инструкторы"; }
		else if(PlayerInfo[targetid][pMember] == 12 || PlayerInfo[targetid][pLeader] == 12) { ttext = "The Ballas"; }
		else if(PlayerInfo[targetid][pMember] == 13 || PlayerInfo[targetid][pLeader] == 13) { ttext = "Vagos Gang"; }
		else if(PlayerInfo[targetid][pMember] == 14 || PlayerInfo[targetid][pLeader] == 14) { ttext = "Русская Мафия"; }
		else if(PlayerInfo[targetid][pMember] == 15 || PlayerInfo[targetid][pLeader] == 15) { ttext = "Grove Street"; }
		else if(PlayerInfo[targetid][pMember] == 16 || PlayerInfo[targetid][pLeader] == 16) { ttext = "LS NEWS"; }
		else if(PlayerInfo[targetid][pMember] == 17 || PlayerInfo[targetid][pLeader] == 17) { ttext = "The Aztecas"; }
		else if(PlayerInfo[targetid][pMember] == 18 || PlayerInfo[targetid][pLeader] == 18) { ttext = "The Rifa"; }
		else if(PlayerInfo[targetid][pMember] == 19 || PlayerInfo[targetid][pLeader] == 19) { ttext = "Зона 51"; }
		else if(PlayerInfo[targetid][pMember] == 20 || PlayerInfo[targetid][pLeader] == 20) { ttext = "LV NEWS"; }
		else if(PlayerInfo[targetid][pMember] == 21 || PlayerInfo[targetid][pLeader] == 21) { ttext = "LVPD"; }
		else if(PlayerInfo[targetid][pMember] == 22 || PlayerInfo[targetid][pLeader] == 22) { ttext = "МЧС Los Santos"; }
		else if(PlayerInfo[targetid][pMember] == 23 || PlayerInfo[targetid][pLeader] == 23) { ttext = "МЧС Las Venturas"; }
		else if(PlayerInfo[targetid][pMember] == 24 || PlayerInfo[targetid][pLeader] == 24) { ttext = "Хитман"; }
        new jtext[20];
        new rangz[20];
		if(PlayerInfo[targetid][pMember] == 0)
		{
			if(PlayerInfo[targetid][pRank] == 0) { rangz = "Нет"; }
		}
        if(PlayerInfo[targetid][pMember] == 1)
        {
			if(PlayerInfo[targetid][pRank] == 15) { rangz = "Шериф"; }
			else if(PlayerInfo[targetid][pRank] == 14) { rangz = "Полковник"; }
			else if(PlayerInfo[targetid][pRank] == 13) { rangz = "Подполковник";}
			else if(PlayerInfo[targetid][pRank] == 12) { rangz = "Майор"; }
			else if(PlayerInfo[targetid][pRank] == 11) { rangz = "Капитан"; }
			else if(PlayerInfo[targetid][pRank] == 10) { rangz = "Ст. Лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Мл. Лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Ст. Прапорщик"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Прапорщик"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Ст. Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Мл. Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Офицер"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Кадет"; }
        }
        if(PlayerInfo[targetid][pMember] == 2)
        {
			if(PlayerInfo[targetid][pRank] == 8) { rangz = "Директор"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Зам. директора"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Инспектор"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Начальник секции"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Специальный агент"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Старший агент"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Агент"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Стажёр"; }
        }
		if(PlayerInfo[targetid][pMember] == 3)
        {
			if(PlayerInfo[targetid][pRank] == 16) { rangz = "Генерал"; }
			else if(PlayerInfo[targetid][pRank] == 15) { rangz = "Полковник"; }
			else if(PlayerInfo[targetid][pRank] == 14) { rangz = "Подполковник"; }
			else if(PlayerInfo[targetid][pRank] == 13) { rangz = "Майор";}
			else if(PlayerInfo[targetid][pRank] == 12) { rangz = "Капитан"; }
			else if(PlayerInfo[targetid][pRank] == 11) { rangz = "Старший лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 10) { rangz = "Лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Младший лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Старший прапорщик"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Прапорщик"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Старшина"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Ст. Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Мл. Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Ефрейтор"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Рядовой"; }
        }
        if(PlayerInfo[targetid][pMember] == 4)
        {
			if(PlayerInfo[targetid][pRank] == 8) { rangz = "Глав. врач"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Терапевт"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Хирург"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Педиатр"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Санитар"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Интерн"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Стажёр"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Практикант"; }
        }
		if(PlayerInfo[targetid][pMember] == 5)
        {
			if(PlayerInfo[targetid][pRank] == 10) { rangz = "Дон"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Консильери"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Младший Босс"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Капо"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Сотто-Капо"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Боец"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Солдато"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Сомбаттенте"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Ассосиато"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Новицио"; }
        }
        if(PlayerInfo[targetid][pMember] == 6)
        {
			if(PlayerInfo[targetid][pRank] == 10) { rangz = "Кумите"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Оябун-кобун"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Cайко комон"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Оядзи"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Камбу"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Со-хобунтё"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Вакагасира"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Сятейгасира"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Кёдай"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Вакасю"; }
        }
        if(PlayerInfo[targetid][pMember] == 7)
        {
			if(PlayerInfo[targetid][pRank] == 6) { rangz = "Мэр"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Зам. мэра"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Начальник охраны"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Охранник"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Адвокат"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Секретарь"; }
        }
        if(PlayerInfo[targetid][pMember] == 8)
        {
			if(PlayerInfo[targetid][pRank] == 2) { rangz = "Менеджер"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Крупье"; }
        }
        if(PlayerInfo[targetid][pMember] == 9)
        {
			if(PlayerInfo[targetid][pRank] == 6) { rangz = "Главный редактор"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Редактор"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Журналист"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Папарацци"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Фотограф"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Стажер"; }
        }
        if(PlayerInfo[targetid][pMember] == 10)
        {
			if(PlayerInfo[targetid][pRank] == 15) { rangz = "Шериф"; }
			else if(PlayerInfo[targetid][pRank] == 14) { rangz = "Полковник"; }
			else if(PlayerInfo[targetid][pRank] == 13) { rangz = "Подполковник";}
			else if(PlayerInfo[targetid][pRank] == 12) { rangz = "Майор"; }
			else if(PlayerInfo[targetid][pRank] == 11) { rangz = "Капитан"; }
			else if(PlayerInfo[targetid][pRank] == 10) { rangz = "Ст. Лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Мл. Лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Ст. Прапорщик"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Прапорщик"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Ст. Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Мл. Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Офицер"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Кадет"; }
        }
        if(PlayerInfo[targetid][pMember] == 11)
        {
			if(PlayerInfo[targetid][pRank] == 8) { rangz = "Управляющий"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Директор"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Старший менеджер"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Мл. менеджер"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Кординатор"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Инструктор"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Экзаменатор"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Стажёр"; }
        }
  		if(PlayerInfo[targetid][pMember] == 12)
        {
			if(PlayerInfo[targetid][pRank] == 10) { rangz = "Биг Вилли"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Райч Нига"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Фолкс"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Федерал Блок"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Гангстер"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Ап Бро"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Гун брo"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Крэкер"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Младший Нига"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Блайд"; }
        }
        if(PlayerInfo[targetid][pMember] == 13)
        {
			if(PlayerInfo[targetid][pRank] == 11) { rangz = "Падре"; }
			else if(PlayerInfo[targetid][pRank] == 10) { rangz = "Падрино"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Лидер V.E.G."; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Асесор"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Авторитарио"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Асесино"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Амиго"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Эстимадо"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Сольдадо"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Криминаль"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Новато"; }
        }
        if(PlayerInfo[targetid][pMember] == 14)
        {
			if(PlayerInfo[targetid][pRank] == 10) { rangz = "Авторитет"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Вор в законе"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Вор"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Браток"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Свояк"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Блатной"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Барыга"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Бык"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Фраер"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Шнырь"; }
        }
        if(PlayerInfo[targetid][pMember] == 15)
        {
			if(PlayerInfo[targetid][pRank] == 10) { rangz = "Мэд Дог"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Легенд"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Де Кинг"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Мобста"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "О.Г."; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Гангста"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Юонг"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Килла"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Хастла"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Плэйя"; }
        }
        if(PlayerInfo[targetid][pMember] == 16)
        {
			if(PlayerInfo[targetid][pRank] == 6) { rangz = "Главный редактор"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Редактор"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Журналист"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Папарации"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Фотограф"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Стажер"; }
		}
        if(PlayerInfo[targetid][pMember] == 17)
        {
			if(PlayerInfo[targetid][pRank] == 10) { rangz = "Падре"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Нестро"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Тесосеро"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Инвасор"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Сабио"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Мирандо"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Лас Геррас"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Геттор"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Тирадор"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Перро"; }
        }
        if(PlayerInfo[targetid][pMember] == 18)
        {
			if(PlayerInfo[targetid][pRank] == 10) { rangz = "Падре"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Аджунто"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Ауторидад"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Бандидо"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Эрмано"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Джуниор"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Мачo"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Амиго"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Ладрон"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Новато"; }
        }
        if(PlayerInfo[targetid][pMember] == 19)
        {
			if(PlayerInfo[targetid][pRank] == 16) { rangz = "Генерал"; }
			else if(PlayerInfo[targetid][pRank] == 15) { rangz = "Полковник"; }
			else if(PlayerInfo[targetid][pRank] == 14) { rangz = "Подполковник"; }
			else if(PlayerInfo[targetid][pRank] == 13) { rangz = "Майор";}
			else if(PlayerInfo[targetid][pRank] == 12) { rangz = "Капитан"; }
			else if(PlayerInfo[targetid][pRank] == 11) { rangz = "Старший лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 10) { rangz = "Лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Младший лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Старший прапорщик"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Прапорщик"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Старшина"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Ст. Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Мл. Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Ефрейтор"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Рядовой"; }
        }
        if(PlayerInfo[targetid][pMember] == 20)
        {
			if(PlayerInfo[targetid][pRank] == 6) { rangz = "Главный редактор"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Редактор"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Журналист"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Папарации"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Фотограф"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Стажер"; }
		}
        if(PlayerInfo[targetid][pMember] == 21)
        {
			if(PlayerInfo[targetid][pRank] == 15) { rangz = "Шериф"; }
			else if(PlayerInfo[targetid][pRank] == 14) { rangz = "Полковник"; }
			else if(PlayerInfo[targetid][pRank] == 13) { rangz = "Подполковник";}
			else if(PlayerInfo[targetid][pRank] == 12) { rangz = "Майор"; }
			else if(PlayerInfo[targetid][pRank] == 11) { rangz = "Капитан"; }
			else if(PlayerInfo[targetid][pRank] == 10) { rangz = "Ст. Лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Мл. Лейтенант"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Ст. Прапорщик"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Прапорщик"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Ст. Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Мл. Сержант"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Офицер"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Кадет"; }
        }
        if(PlayerInfo[targetid][pMember] == 22)
        {
			if(PlayerInfo[targetid][pRank] == 8) { rangz = "Глав. врач"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Терапевт"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Хирург"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Педиатр"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Санитар"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Интерн"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Стажёр"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Практикант"; }
        }
        if(PlayerInfo[targetid][pMember] == 23)
        {
			if(PlayerInfo[targetid][pRank] == 8) { rangz = "Глав. врач"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Терапевт"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Хирург"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Педиатр"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Санитар"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Интерн"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Стажёр"; }
			else if(PlayerInfo[targetid][pRank] == 1) { rangz = "Практикант"; }
        }
        else if(PlayerInfo[targetid][pMember] == 24 || PlayerInfo[targetid][pLeader] == 24)
        {
            if(PlayerInfo[targetid][pRank] == 1) { rangz = "Начинающий"; }
            else if(PlayerInfo[targetid][pRank] == 2) { rangz = "Киллер"; }
            else if(PlayerInfo[targetid][pRank] == 3) { rangz = "Снайпер"; }
            else if(PlayerInfo[targetid][pRank] == 4) { rangz = "Стрелок"; }
            else if(PlayerInfo[targetid][pRank] == 5) { rangz = "Агент"; }
            else if(PlayerInfo[targetid][pRank] == 6) { rangz = "Профессионал"; }
            else if(PlayerInfo[targetid][pRank] == 7) { rangz = "Элитный убийца"; }
            else if(PlayerInfo[targetid][pRank] == 8) { rangz = "Тренер"; }
            else if(PlayerInfo[targetid][pRank] == 9) { rangz = "Хитман"; }
            else if(PlayerInfo[targetid][pRank] == 10) { rangz = "Ген. Директор"; }
        }
        else if(PlayerInfo[targetid][pJob] == 2) { jtext = "Механик"; }
        else if(PlayerInfo[targetid][pJob] == 3) { jtext = "Продавец хотдогов"; }
        else if(PlayerInfo[targetid][pJob] == 4) { jtext = "Таксист"; }
        else if(PlayerInfo[targetid][pJob] == 5) { jtext = "Развозчик продуктов"; }
        else if(PlayerInfo[targetid][pJob] == 10) { jtext = "Дальнобойщик"; }
        else { jtext = "Безработный"; }
  		new drank[20];
        if(PlayerInfo[targetid][pDonateRank] == 1) { drank = "BRONZE VIP"; }
		else if(PlayerInfo[targetid][pDonateRank] == 2) { drank = "SILVER VIP"; }
		else if(PlayerInfo[targetid][pDonateRank] == 3) { drank = "GOLD VIP"; }
		else if(PlayerInfo[targetid][pLevel] == 1) { drank = "Новичок"; }
        else if(PlayerInfo[targetid][pLevel] == 2) { drank = "Начинающий"; }
        else if(PlayerInfo[targetid][pLevel] == 3) { drank = "Начинающий"; }
        else if(PlayerInfo[targetid][pLevel] == 4) { drank = "Уверенный"; }
        else if(PlayerInfo[targetid][pLevel] == 5) { drank = "Уверенный"; }
        else if(PlayerInfo[targetid][pLevel] == 6) { drank = "Постоянный игрок"; }
        else if(PlayerInfo[targetid][pLevel] == 7) { drank = "Освоившийся"; }
        else if(PlayerInfo[targetid][pLevel] >= 8) { drank = "Освоившийся"; }
        else if(PlayerInfo[targetid][pLevel] >= 22) { drank = "Дед"; }
		new stringus[100];
		new string[100];
		new name[MAX_PLAYER_NAME];
 		new sendername[MAX_PLAYER_NAME];
		GetPlayerName(targetid, sendername, sizeof(sendername));
  		format(stringus, sizeof(stringus), "%s.ini",sendername);
		new file = ini_openFile(stringus);
		if(file < 0) print("нет файла");
		else
		{
	  		ini_getString(file, "MarriedTo",stringus);
			ini_closeFile(file);
			if(PlayerInfo[targetid][pMarried] == 0)
			{
				stringus = "-";
			}
	        new cash = PlayerInfo[targetid][pCash];
			new wdeaths = PlayerInfo[targetid][pWantedDeaths];
			new drugs = PlayerInfo[targetid][pDrugs];
			new mats = PlayerInfo[targetid][pMaterials];
			new wanted = PlayerInfo[targetid][pWantedLevel];
			new level = PlayerInfo[targetid][pLevel];
			new exp = PlayerInfo[targetid][pExp];
			new nxtlevel = PlayerInfo[targetid][pLevel]+1;
			new expamount = nxtlevel*levelexp;
			new warns = PlayerInfo[targetid][pWarns];
			new zakon = PlayerInfo[targetid][pLabiding];
			new addiction = PlayerInfo[targetid][pAddiction];
	 		new fishes = PlayerInfo[targetid][pFishes];
	 		new kills = PlayerInfo[targetid][pKills];
	 		new arrests = PlayerInfo[targetid][pArrested];
	  		new stringi[256];
			GetPlayerName(targetid, name, sizeof(name));
			format(string,sizeof(string), "%s.ini",name);
			new File = ini_openFile(string);
			ini_getString(File, "pDataReg",stringi);
			ini_closeFile(File);
			new str[512];
			new sctring[2000];
			format(str,sizeof(str),"{FFFFFF}Ник: \t\t{ffffff}%s\n\n",name);
   			strcat(sctring,str);
      		format(str,sizeof(str),"{FFFFFF}Уровень: \t\t{FFFFFF}%d\n",level);
        	strcat(sctring,str);
         	format(str,sizeof(str),"{FFFFFF}Exp: \t\t\t{FFFFFF}%d/%d\n",exp,expamount);
          	strcat(sctring,str);
           	format(str,sizeof(str),"{FFFFFF}Деньги: \t\t{FFFFFF}%d\n",cash);
           	strcat(sctring,str);
            format(str,sizeof(str),"{FFFFFF}Варны: \t\t\t{FFFFFF}%d/3\n",warns);
            strcat(sctring,str);
            format(str,sizeof(str),"{FFFFFF}Законопослушность: \t\t{FFFFFF}%d\n",zakon);
            strcat(sctring,str);
            format(str,sizeof(str),"{FFFFFF}Преступлений: \t\t{FFFFFF}%d\n",kills);
            strcat(sctring,str);
            format(str,sizeof(str),"{FFFFFF}Арестов: \t\t\t{FFFFFF}%d\n",arrests);
            strcat(sctring,str);
            format(str,sizeof(str),"{FFFFFF}Смертей в розыске: \t\t{FFFFFF}%d\n",wdeaths);
            strcat(sctring,str);
            format(str,sizeof(str),"{FFFFFF}Уровень розыска:     \t{FFFFFF}%d\n",wanted);
            strcat(sctring,str);
            format(str,sizeof(str),"{FFFFFF}Дата регистрации: \t{FFFFFF}%s\n",stringi);
            strcat(sctring,str);
            format(str,sizeof(str),"{FFFFFF}Зависимость:       \t\t{FFFFFF}%d\n",addiction);
            strcat(sctring,str);
            format(str,sizeof(str),"{FFFFFF}Кол-во наркотиков: \t\t{FFFFFF}%d\n",drugs);
            strcat(sctring,str);
            format(str,sizeof(str),"{FFFFFF}Кол-во материалов:   \t{FFFFFF}%d\n",mats);
            strcat(sctring,str);
            format(str,sizeof(str),"{FFFFFF}Рыб поймано:         \t{FFFFFF}%d\n",fishes);
           	strcat(sctring,str);
            format(str,sizeof(str),"{FFFFFF}Фракция: \t\t\t{FFFFFF}%s\n",ttext);
            strcat(sctring,str);
            format(str,sizeof(str),"{FFFFFF}Должность: \t\t\t{FFFFFF}%s\n",rangz);
            strcat(sctring,str);
            format(str,sizeof(str),"{FFFFFF}Работа: \t\t\t{FFFFFF}%s\n",jtext);
            strcat(sctring,str);
            format(str,sizeof(str),"{FFFFFF}Статус: \t\t\t{FFFFFF}%s\n",drank);
            strcat(sctring,str);
            format(str,sizeof(str),"{FFFFFF}Жена/муж: \t\t{FFFFFF}%s\n",stringus);
            strcat(sctring,str);
            format(str,sizeof(str),"{FFFFFF}Пол: \t\t\t{FFFFFF}%s\n",atext);
            strcat(sctring,str);
            ShowPlayerDialog(playerid,10004,DIALOG_STYLE_MSGBOX, "Статистика",sctring, "Готово", "");
			
		}
	}
}

stock SetPlayerToTeamColor(playerid)
{
	switch(PlayerInfo[playerid][pMember])
	{
		case 0:	SetPlayerColor(playerid, TEAM_HIT_COLOR);
        case 1: SetPlayerColor(playerid, 0x110CE7FF);
       	case 2: SetPlayerColor(playerid, 0x313131AA);
       	case 3: SetPlayerColor(playerid, 0x51964DFF);
       	case 4: SetPlayerColor(playerid, 0xA52A2AFF);
       	case 5: SetPlayerColor(playerid, 0xDDA701FF);
       	case 6: SetPlayerColor(playerid, COLOR_REDD);
       	case 7: SetPlayerColor(playerid, 0x114D71FF);
       	case 8: SetPlayerColor(playerid, 0x00FF00FF);
       	case 9: SetPlayerColor(playerid, 0xFF830000);
       	case 10: SetPlayerColor(playerid, 0x49E789FF);
       	case 11: SetPlayerColor(playerid, 0x139BECFF);
       	case 12: SetPlayerColor(playerid, 0x8813E7FF);
       	case 13: SetPlayerColor(playerid, 0xDBD604AA);
       	case 14: SetPlayerColor(playerid, COLOR_GRAD1);
       	case 15: SetPlayerColor(playerid, 0x009F00AA);
       	case 16: SetPlayerColor(playerid, 0x40848BAA);
       	case 17: SetPlayerColor(playerid, TEAM_AZTECAS_COLOR);
       	case 18: SetPlayerColor(playerid, 0x83BFBFAA);
       	case 19: SetPlayerColor(playerid, 0x51964DFF);
       	case 20: SetPlayerColor(playerid, 0xE6284EFF);
       	case 21: SetPlayerColor(playerid, 0x110CE7FF);
       	case 22: SetPlayerColor(playerid, 0xA52A2AFF);
       	case 23: SetPlayerColor(playerid, 0xA52A2AFF);
       	case 24: SetPlayerColor(playerid, 0x336666FF);
	}
	return true;
}
stock GameModeExitFunc()
{
	KillTimer(UnJailTimer);
	KillTimer(AdvertiseTimerEx);
	KillTimer(FreshTimer);
	KillTimer(FixKickedPlayersTimer);
	KillTimer(ClearLastPickupTimer);
	KillTimer(OtherTimerEx);
	KillTimer(SaietyTimer);
	KillTimer(SpeedoTimer);
	KillTimer(PickupTimer);
	KillTimer(ServerNameTimer);
	KillTimer(GzCheckTimer);
	KillTimer(MzCheckTimer);
	SaveServer();
	GameModeExit();
 	return true;
}
public OnGameModeExit()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    ConnectTimed[i] = 0;
	    IsConnected[i] = 0;
	}
	for(new i; i < sizeof(JF_OBJ); i++) DestroyObject(JF_OBJ[i]);
	for(new i; i < sizeof(JF_VEH); i++) DestroyVehicle(JF_VEH[i]);
	for(new i; i < sizeof(PU_JF1); i++) DestroyPickup(PU_JF1[i]);
	for(new i; i < sizeof(PU_JF2); i++) DestroyPickup(PU_JF2[i]);
	for(new i; i < sizeof(PU_JF3); i++) DestroyPickup(PU_JF3[i]);
	Delete3DTextLabel(JF_Text);
	SaveServer();
    return true;
}
stock LoadBizz()
{
	new time = GetTickCount();
	new arrCoords[24][64];
	new strFromFile2[256];
	new File: file = fopen("gamefiles/bizz.cfg", io_read);
	if(file)
	{
		new idx;
		while (idx < sizeof(BizzInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			BizzInfo[idx][bOwned] = strval(arrCoords[0]);
			strmid(BizzInfo[idx][bOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255); // Владелец
			strmid(BizzInfo[idx][bMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255); // Название
			strmid(BizzInfo[idx][bExtortion], arrCoords[3], 0, strlen(arrCoords[3]), 255); // Налог
			BizzInfo[idx][bEntranceX] = floatstr(arrCoords[4]); // Пикап Входа X
 			BizzInfo[idx][bEntranceY] = floatstr(arrCoords[5]); // Пикап Входа Y
			BizzInfo[idx][bEntranceZ] = floatstr(arrCoords[6]); // Пикап Входа Z
			BizzInfo[idx][bExitX] = floatstr(arrCoords[7]); // Вход X
			BizzInfo[idx][bExitY] = floatstr(arrCoords[8]); // Вход Y
			BizzInfo[idx][bExitZ] = floatstr(arrCoords[9]); // Вход Z
			BizzInfo[idx][bBuyPrice] = strval(arrCoords[10]); // Цена
			BizzInfo[idx][bEntranceCost] = strval(arrCoords[11]); // Цена входа
 			BizzInfo[idx][bTill] = strval(arrCoords[12]); // всего заработано
  			BizzInfo[idx][bLocked] = strval(arrCoords[13]); // Состояние (открыто/закрыто)
			BizzInfo[idx][bInterior] = strval(arrCoords[14]); // Интерьер
			BizzInfo[idx][bProducts] = strval(arrCoords[15]); // Продукты
			BizzInfo[idx][bMaxProducts] = strval(arrCoords[16]); // Максимум продуктов
			BizzInfo[idx][bPriceProd] = strval(arrCoords[17]); // Цена продукта
			BizzInfo[idx][b2Till] = strval(arrCoords[18]); // В этом часу заработано
			BizzInfo[idx][bPrice] = strval(arrCoords[19]); // Цена
			BizzInfo[idx][bBarX] = floatstr(arrCoords[20]); // БАР X
			BizzInfo[idx][bBarY] = floatstr(arrCoords[21]); // Бар Y
			BizzInfo[idx][bBarZ] = floatstr(arrCoords[22]); // Бар Z
			BizzInfo[idx][bMafia] = strval(arrCoords[23]); // Под контролем
			idx++;
		}
		fclose(file);
	}
	printf("______________________________", sizeof(BizzInfo),GetTickCount() - time);
	return true;
}
stock LoadSBizz()
{
    new time = GetTickCount();
	new arrCoords[16][64];
	new strFromFile2[256];
	new File: file = fopen("gamefiles/sbizz.cfg", io_read);
	if(file)
	{
		new idx;
		while (idx < sizeof(SBizzInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			SBizzInfo[idx][sbOwned] = strval(arrCoords[0]);
			strmid(SBizzInfo[idx][sbOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(SBizzInfo[idx][sbMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			SBizzInfo[idx][sbEntranceX] = floatstr(arrCoords[3]);
			SBizzInfo[idx][sbEntranceY] = floatstr(arrCoords[4]);
			SBizzInfo[idx][sbEntranceZ] = floatstr(arrCoords[5]);
			SBizzInfo[idx][sbLevelNeeded] = strval(arrCoords[6]);
			SBizzInfo[idx][sbBuyPrice] = strval(arrCoords[7]);
			SBizzInfo[idx][sbEntranceCost] = strval(arrCoords[8]);
			SBizzInfo[idx][sbTill] = strval(arrCoords[9]);
			SBizzInfo[idx][sbLocked] = strval(arrCoords[10]);
			SBizzInfo[idx][sbInterior] = strval(arrCoords[11]);
			SBizzInfo[idx][sbProducts] = strval(arrCoords[12]);
			SBizzInfo[idx][sbPriceProd] = strval(arrCoords[13]);
			SBizzInfo[idx][s2bTill] = strval(arrCoords[14]);
			SBizzInfo[idx][sbMafia] = strval(arrCoords[15]);
			idx++;
		}
		fclose(file);
	}
	printf("| 	    Arizona RP	 |", sizeof(SBizzInfo),GetTickCount() - time);
	return true;
}
stock LoadProperty()
{
    new time = GetTickCount();
	new arrCoords[25][64];
	new strFromFile2[256];
	new File: file = fopen("gamefiles/property.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(HouseInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			HouseInfo[idx][hEntrancex] = floatstr(arrCoords[0]);
			HouseInfo[idx][hEntrancey] = floatstr(arrCoords[1]);
			HouseInfo[idx][hEntrancez] = floatstr(arrCoords[2]);
			HouseInfo[idx][hExitx] = floatstr(arrCoords[3]);
			HouseInfo[idx][hExity] = floatstr(arrCoords[4]);
			HouseInfo[idx][hExitz] = floatstr(arrCoords[5]);
			strmid(HouseInfo[idx][hOwner], arrCoords[6], 0, strlen(arrCoords[6]), 255);
			HouseInfo[idx][hValue] = strval(arrCoords[7]);
			HouseInfo[idx][hHel] = strval(arrCoords[8]);
			HouseInfo[idx][hInt] = strval(arrCoords[9]);
			HouseInfo[idx][hLock] = strval(arrCoords[10]);
			HouseInfo[idx][hOwned] = strval(arrCoords[11]);
			HouseInfo[idx][hTakings] = strval(arrCoords[12]);
			HouseInfo[idx][hVec] = strval(arrCoords[13]);
			HouseInfo[idx][hVcol1] = strval(arrCoords[14]);
			HouseInfo[idx][hVcol2] = strval(arrCoords[15]);
			HouseInfo[idx][hKlass] = strval(arrCoords[16]);
			HouseInfo[idx][hVehSost] = strval(arrCoords[17]);
			HouseInfo[idx][hCarx] = floatstr(arrCoords[18]);
			HouseInfo[idx][hCary] = floatstr(arrCoords[19]);
			HouseInfo[idx][hCarz] = floatstr(arrCoords[20]);
			HouseInfo[idx][hCarc] = floatstr(arrCoords[21]);
			idx++;
		}
		fclose(file);
	}
	printf("______________________________", sizeof(HouseInfo), GetTickCount() - time);
	return true;
}
public OnGameModeInit()
{
	AllowInteriorWeapons(1);
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);
	LimitPlayerMarkerRadius(100.0);
	ShowPlayerMarkers(PLAYER_MARKERS_MODE_GLOBAL);
	ShowNameTags(1);
	SetNameTagDrawDistance(50.0);
	SetPDistance(30);
	SetGameModeText("Arizona RP");
	AntiDeAMX2();
	for(new i=0; i<MAX_PLAYERS; i++) strmid(ExitInfo[i][ExitName],"None", 0, strlen("None"), 32), ExitInfo[i][ExitTime] = 0;
	AntiDeAMX();
	CreateVehicles();
	CreateLabels();
	CreateMapIcons();
	CreateObjects();
	Avtosalon();
	CreatePickups();
	CreateTimers();
	CreateSpecialZone();
	LoadBankMafia();
	LoadBankFrac();
	LoadBizz();
	LoadProperty();
	LoadGZ();
	LoadKazino();
	LoadSBizz();
	LoadMaterials();
	ManualVehicleEngineAndLights();
	Menu();
	addd[0] = 250;
	addd[1] = 250;
	addd[2] = 250;
	Furi[0][gBallas] = 0;
	Furi[0][gVagos] = 0;
	Furi[0][gGrove] = 0;
	Furi[0][gAztek] = 0;
	Furi[0][gRifa] = 0;
	MatHaul[0][mCapasity] = 5000;
	MatHaul[1][mCapasity] = 5000;
	MatHaul[2][mCapasity] = 5000;
	Maxis[0] = 0;
	Maxis[1] = 0;
	PlayerHaul[0][pLoad] = 0;
	PlayersHaul[0][sLoad] = 0;
	//==========================================================================
	SetTimer("Quiz",vTimer * 100000, true);
	SetTimer("AFKSystem", 1000, 1);
	//==========================================================================
	// МЕДУЗЫ
	JF_OBJ[0] = CreateObject(16207, 483.6, -2682.9, -39.3, 0.0, 0.0, 210.0);
	JF_OBJ[1] = CreateObject(16207, 501.6, -2801.5, -50.1, 0.0, 0.0, 66.0);
	JF_OBJ[2] = CreateObject(1637, 462.1, -2733.5, 4.3, 0.0, 0.0, 64.0);
	JF_OBJ[3] = CreateObject(672, 464.4, -2740.3, 4.6, 0.0, 0.0, 0.0);
	JF_OBJ[4] = CreateObject(11556, 449.0, -2777.2, -4.0, 0.0, 0.0, 0.0);
	JF_OBJ[5] = CreateObject(12990, 475.0, -2714.5, 0.5, 0.0, 0.0, 160.0);
	JF_OBJ[6] = CreateObject(800, 450.4, -2732.4, 5.4, 0.0, 0.0, 0.0);
	JF_OBJ[7] = CreateObject(647, 460.4, -2738.3, 6.3, 0.0, 0.0, 0.0);
	JF_OBJ[8] = CreateObject(647, 456.8, -2736.8, 6.2, 0.0, 0.0, 0.0);
	JF_OBJ[9] = CreateObject(647, 453.8, -2735.1, 6.1, 0.0, 0.0, 0.0);
	JF_OBJ[10] = CreateObject(2114, 458.3, -2730.4, 3.6, 0.0, 0.0, 0.0);
	JF_OBJ[11] = CreateObject(1280, 465.2, -2737.3, 4.5, 0.0, 0.0, 246.0);
	JF_OBJ[12] = CreateObject(2116, 460.0, -2730.3, 3.3, 0.0, 0.0, 336.0);
	JF_OBJ[13] = CreateObject(1010, 461.1, -2730.8, 4.1, 0.0, 0.0, 65.0);
	JF_OBJ[14] = CreateObject(1010, 459.9, -2730.2, 4.1, 0.0, 0.0, 65.0);
	JF_OBJ[15] = CreateObject(1010, 460.7, -2730.6, 4.1, 0.0, 0.0, 65.0);
	JF_OBJ[16] = CreateObject(1010, 460.3, -2730.4, 4.1, 0.0, 0.0, 65.0);

	JF_VEH[0] = CreateVehicle(473, 482.6511, -2705.5588, -0.6289, 342.9840, 56, 53, -1);
	JF_VEH[1] = CreateVehicle(473, 480.0605, -2712.9277, 0.2264, 339.6306, 56, 53, -1);
	JF_VEH[2] = CreateVehicle(473, 473.7720, -2702.3792, -0.6280, 344.7112, 56, 53, -1);
	JF_VEH[3] = CreateVehicle(473, 470.7216, -2711.0269, -0.8032, 339.4247, 56, 53, -1);

	PU_JF1[0] = CreatePickup(1602, 2, 477.1, -2780.1, -9.5, -1);
	PU_JF1[1] = CreatePickup(1602, 2, 477.1, -2780.1, -9.5, -1);
	PU_JF1[2] = CreatePickup(1602, 2, 451.5, -2786.4, -9.5, -1);
	PU_JF1[3] = CreatePickup(1602, 2, 484.1, -2795.4, -9.5, -1);
	PU_JF1[4] = CreatePickup(1602, 2, 500.4, -2782.4, -9.5, -1);
	PU_JF1[5] = CreatePickup(1602, 2, 497.3, -2778.5, -0.1, -1);
	PU_JF1[6] = CreatePickup(1602, 2, 493.9, -2767.9, -3.5, -1);
	PU_JF1[7] = CreatePickup(1602, 2, 483.4, -2792.8, -17.7, -1);
	PU_JF1[8] = CreatePickup(1602, 2, 477.0, -2785.5, -17.7, -1);
	PU_JF1[9] = CreatePickup(1602, 2, 451.4, -2789.1, -17.7, -1);
	PU_JF1[10] = CreatePickup(1602, 2, 446.1, -2804.4, -25.7, -1);
	PU_JF1[11] = CreatePickup(1602, 2, 447.1, -2797.6, -25.7, -1);
	PU_JF1[12] = CreatePickup(1602, 2, 452.7, -2804.0, -21.5, -1);
	PU_JF1[13] = CreatePickup(1602, 2, 429.8, -2789.1, -21.5, -1);
	PU_JF1[14] = CreatePickup(1602, 2, 413.3, -2782.5, -21.5, -1);
	PU_JF1[15] = CreatePickup(1602, 2, 415.7, -2783.1, -8.5, -1);
	PU_JF1[16] = CreatePickup(1602, 2, 412.7, -2777.7, -8.5, -1);
	PU_JF1[17] = CreatePickup(1602, 2, 403.9, -2774.7, -8.5, -1);
	PU_JF1[18] = CreatePickup(1602, 2, 398.6, -2760.2, -8.5, -1);
	PU_JF1[19] = CreatePickup(1602, 2, 389.5, -2750.0, -8.5, -1);
	PU_JF1[20] = CreatePickup(1602, 2, 397.2, -2741.0, -8.5, -1);
	PU_JF1[21] = CreatePickup(1602, 2, 396.8, -2747.2, -15.5, -1);
	PU_JF1[22] = CreatePickup(1602, 2, 389.9, -2748.8, -21.7, -1);
	PU_JF1[23] = CreatePickup(1602, 2, 401.2, -2734.9, -21.7, -1);
	PU_JF1[24] = CreatePickup(1602, 2, 416.3, -2705.4, -11.0, -1);
	PU_JF1[25] = CreatePickup(1602, 2, 421.4, -2706.8, -11.0, -1);
	PU_JF1[26] = CreatePickup(1602, 2, 455.3, -2692.2, -11.0, -1);
	PU_JF1[27] = CreatePickup(1602, 2, 453.6, -2691.2, -19.5, -1);
	PU_JF1[28] = CreatePickup(1602, 2, 446.0, -2686.8, -28.7, -1);
	PU_JF1[29] = CreatePickup(1602, 2, 470.3, -2673.4, -32.5, -1);
	PU_JF1[30] = CreatePickup(1602, 2, 476.0, -2677.6, -22.7, -1);

	PU_JF2[0] = CreatePickup(1603, 2, 535.4, -2768.5, -20.7, -1);
	PU_JF2[1] = CreatePickup(1603, 2, 536.4, -2752.5, -20.7, -1);
	PU_JF2[2] = CreatePickup(1603, 2, 544.0, -2762.5, -25.5, -1);
	PU_JF2[3] = CreatePickup(1603, 2, 544.0, -2762.5, -11.8, -1);
	PU_JF2[4] = CreatePickup(1603, 2, 542.9, -2744.3, -11.8, -1);
	PU_JF2[5] = CreatePickup(1603, 2, 547.7, -2745.0, -16.7, -1);
	PU_JF2[6] = CreatePickup(1603, 2, 547.0, -2734.0, -16.7, -1);
	PU_JF2[7] = CreatePickup(1603, 2, 546.4, -2725.0, -16.7, -1);
	PU_JF2[8] = CreatePickup(1603, 2, 545.7, -2713.5, -16.7, -1);
	PU_JF2[9] = CreatePickup(1603, 2, 536.9, -2700.8, -16.7, -1);
	PU_JF2[10] = CreatePickup(1603, 2, 534.1, -2700.5, -25.0, -1);
	PU_JF2[11] = CreatePickup(1603, 2, 540.1, -2716.4, -25.0, -1);
	PU_JF2[12] = CreatePickup(1603, 2, 540.1, -2716.4, -25.0, -1);

	PU_JF3[0] = CreatePickup(1239, 23, 461.0112, -2729.4014, 4.1631, -1); // Aqualung
	PU_JF3[1] = CreatePickup(1239, 23, 397.3723, -1757.7983, 8.2065, -1); // Seller
	Fishpic[0] = CreatePickup(1239,23,390.8552,-1758.0320,8.1990);
	Create3DTextLabel("Продавец рыбы", 0x8fa455FF, 390.8552,-1758.0320,8.1990, 40.0, 0, 0);
	JF_Text = Create3DTextLabel("Продавец медуз", 0x8fa455FF, 397.3723, -1757.7983, 8.2065, 40.0, 0, 0);
	//==========================================================================
	Box = TextDrawCreate(395.0, 354.0, "_");
    LBorder = TextDrawCreate(286.0,354.0,"_");
    RBorder = TextDrawCreate(504.0,354.0,"_");
    BBorder = TextDrawCreate(395.0,416.0,"_");
    TBorder = TextDrawCreate(395.0,354.0,"_");

    Speed = TextDrawCreate(377.000000,370.000000,"SPEED:");
    Healthh = TextDrawCreate(295.000000,370.000000,"HEAL:");
    Fuelll = TextDrawCreate(295.000000,391.000000,"FUEL:");

    TextDrawLetterSize(Speed,0.259999,1.110000);
    TextDrawLetterSize(Healthh,0.245999,1.110000);
    TextDrawLetterSize(Fuelll,0.259999,1.010000);

    TextDrawFont(Fuelll,2);
	TextDrawFont(Speed,2);
    TextDrawFont(Healthh,2);

    TextDrawBackgroundColor(Fuelll,COLOR_BLACK);
    TextDrawBackgroundColor(Speed,COLOR_BLACK);
    TextDrawBackgroundColor(Healthh,COLOR_BLACK);

    TextDrawColor(Fuelll,COLOR_BLUE);
    TextDrawColor(Speed,COLOR_BLUE);
    TextDrawColor(Healthh,COLOR_BLUE);

    TextDrawSetOutline(Fuelll,1);
    TextDrawSetOutline(Speed,1);
    TextDrawSetOutline(Healthh,1);

    TextDrawSetProportional(Fuelll,1);
    TextDrawSetProportional(Speed,1);
    TextDrawSetProportional(Healthh,1);

    TextDrawSetShadow(Fuelll,1);
    TextDrawSetShadow(Speed,1);
    TextDrawSetShadow(Healthh,1);

    TextDrawUseBox(Box, 1);
    TextDrawBoxColor(Box, COLOR_BOX);
    TextDrawTextSize(Box, 0.0, 215.0);
    TextDrawLetterSize(Box, 0.0, 6.7);
    TextDrawAlignment(Box, 2);

    TextDrawUseBox(LBorder, 1);
    TextDrawBoxColor(LBorder,COLOR_BORDER);
    TextDrawTextSize(LBorder, 0.0, -2.0);
    TextDrawLetterSize(LBorder, 0.0, 6.7);
    TextDrawAlignment(LBorder, 2);

    TextDrawUseBox(RBorder, 1);
    TextDrawBoxColor(RBorder,COLOR_BORDER);
    TextDrawTextSize(RBorder, 0.0, -2.0);
    TextDrawLetterSize(RBorder, 0.0, 6.7);
    TextDrawAlignment(RBorder, 2);

    TextDrawUseBox(BBorder, 1);
    TextDrawBoxColor(BBorder, COLOR_BORDER);
    TextDrawTextSize(BBorder, 0.0, 215.0);
    TextDrawLetterSize(BBorder, 0.0, -0.2);
    TextDrawAlignment(BBorder, 2);

    TextDrawUseBox(TBorder, 1);
    TextDrawBoxColor(TBorder, COLOR_BORDER);
    TextDrawTextSize(TBorder, 0.0, 215.0);
    TextDrawLetterSize(TBorder, 0.0, -0.2);
    TextDrawAlignment(TBorder, 2);
	//==========================================================================
	new string[128];
	new File = ini_openFile("gamefiles/tax.ini");
	ini_getInteger(File,"Tax", GovTax);
	ini_closeFile(File);
	//============================= Логотип ====================================
	Textdraw0 = TextDrawCreate(548.000000, 4.355550, "A");
	TextDrawLetterSize(Textdraw0, 0.626500, 3.043555);
	TextDrawAlignment(Textdraw0, 1);
	TextDrawColor(Textdraw0, -872414977);
	TextDrawUseBox(Textdraw0, true);
	TextDrawBoxColor(Textdraw0, 0);
	TextDrawSetShadow(Textdraw0, 0);
	TextDrawSetOutline(Textdraw0, 1);
	TextDrawBackgroundColor(Textdraw0, 51);
	TextDrawFont(Textdraw0, 0);
	TextDrawSetProportional(Textdraw0, 1);

	Textdraw1 = TextDrawCreate(562.500000, 8.711126, "RIZONA");
	TextDrawLetterSize(Textdraw1, 0.422999, 1.506666);
	TextDrawAlignment(Textdraw1, 1);
	TextDrawColor(Textdraw1, -872414977);
	TextDrawSetShadow(Textdraw1, 0);
	TextDrawSetOutline(Textdraw1, 1);
	TextDrawBackgroundColor(Textdraw1, 51);
	TextDrawFont(Textdraw1, 3);
	TextDrawSetProportional(Textdraw1, 1);

	Textdraw2 = TextDrawCreate(562.000000, 20.533309, "PHOENIX");
	TextDrawLetterSize(Textdraw2, 0.206000, 1.270222);
	TextDrawAlignment(Textdraw2, 1);
	TextDrawColor(Textdraw2, -1);
	TextDrawUseBox(Textdraw2, true);
	TextDrawBoxColor(Textdraw2, 0);
	TextDrawSetShadow(Textdraw2, 0);
	TextDrawSetOutline(Textdraw2, 1);
	TextDrawBackgroundColor(Textdraw2, 51);
	TextDrawFont(Textdraw2, 2);
	TextDrawSetProportional(Textdraw2, 1);
	//==========================================================================
	new tmphour, tmpminute, tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	FixHour(tmphour);
	tmphour = shifthour;
	ghour = tmphour;
	SetWorldTime(tmphour);
	//==========================================================================
	gettime(ghour, gminute, gsecond);
	FixHour(ghour);
	ghour = shifthour;
	if(!realtime)
	{
		SetWorldTime(wtime);
	}
	//==========================================================================
	CreateObject(1342, 1221.74756, -1840.04968, 13.53440, 0.00000, 0.00000, 120.00000); // SPAWN кушать
	Create3DTextLabel("Нажмите {FFFFFF}ALT{e23434} чтобы перекусить!",0xFF0000FF,1221.3394,-1838.9180,13.5540,10.0,0,1); // Spawn
	Create3DTextLabel("Нажмите {FFFFFF}ALT{e23434} чтобы перекусить!",0xFF0000FF,1415.2924,-1718.1212,13.5469,10.0,0,1); // Мэрия
	Create3DTextLabel("Нажмите {FFFFFF}ALT{e23434} чтобы перекусить!",0xFF0000FF,2183.4238,-2268.9087,13.4746,10.0,0,1); // Грузчики
	Create3DTextLabel("{E11111}Чтобы вызвать лифт введите {1FE111}/lift",0xE0C24FF,-1897.9850,-1636.9015,25.0391,35.0,0,1); // Лифт-Шахта!
	Create3DTextLabel("Используйте команды:\n/ms - чтобы посмотреть свои стили боя\n/fgstyle - чтобы начать тренировку", COLOR_YELLOW, 773.8724,6.9525,1000.7095,30,1,1);
	Create3DTextLabel("Используйте команду /fbimask", 0xFF0000FF, -2447.7119,523.0289,30.3672,30,0,0);
	Create3DTextLabel("Нажмите {FFFFFF}ALT{e23434} для использования раздевалки", 0xFF0000FF, -692.2068,939.3858,13.6328,30,0,0);
	Create3DTextLabel("Для покупки интерьера используйте: {FFFFFF}/buyint",0xFF0000FF, 358.6835,162.8745,1008.3828,30,0,0);
	//Create3DTextLabel
	Create3DTextLabel("Используйте команду {FF9900}/propose {FFFFFF}Пожениться\n{FF9900}/divorce {FFFFFF}Развестись", 0xFF0000FF, -2022.0374,1005.7747,1418.4869,30,0,0);
	Create3DTextLabel("{FFFFFF}Загс", 0xFFFFFFFF, 1377.8051,-1753.0903,14.1406,10,0,0);
	Create3DTextLabel("Введите команду:\n {e23434}/tune", COLOR_WHITE, 2530.3806,-1519.9351,24.0067,15,0,0);
	Create3DTextLabel("Введите команду:\n {e23434}/tune", COLOR_WHITE, 2531.3801,-1535.4642,24.0067,15,0,0);
	Create3DTextLabel("Нажмите ALT",0x00FF00FF,833.2015,1.4539,994.5490,10,0); // 1544.8239,-1622.3428,13.5469
	Create3DTextLabel("Нажмите: {FFFFFF}H",0xFF0000FF,1547.0994,-1627.2382,13.3828,30,0,1);
	Create3DTextLabel("Склад банды {FFFFFF}RIFA{e23434}\nИспользуйте: {FFFFFF}/sklad{e23434}",0xFF0000FF,2192.2957,-1814.2941,13.5469,30,0,1); //  РИФА
	Create3DTextLabel("Склад банды {FFFFFF}GROVE{e23434}\nИспользуйте: {FFFFFF}/sklad{e23434}",0xFF0000FF,2500.7104,-1685.8938,13.4788,30,0,1); // ГРУВ
	Create3DTextLabel("Склад банды {FFFFFF}BALLAS{e23434}\nИспользуйте: {FFFFFF}/sklad{e23434}",0xFF0000FF,2649.6631,-2027.8259,13.5469,30,0,1); // БАЛЛАС
	Create3DTextLabel("Склад банды {FFFFFF}VAGOS{e23434}\nИспользуйте: {FFFFFF}/sklad{e23434}",0xFF0000FF,2795.9868,-1619.3136,10.9219,30,0,1); // ВАГОС
	Create3DTextLabel("Склад банды {FFFFFF}AZTEC{e23434}\nИспользуйте: {FFFFFF}/sklad{e23434}",0xFF0000FF,1673.4269,-2107.7671,13.5469,30,0,1); // АЦТЕК
	//==========================================================================
	for(new i = 0; i < sizeof(CreatedCars); i++)
	{
	    CreatedCars[i] = 0;
	}
	//==========================================================================
	for(new i = 0; i <= sizeof(Peds)-1; i++)
	{
		AddPlayerClass(Peds[i][0],0.0000,0.0000,0.0000,0.0000,-1,-1,-1,-1,-1,-1);
	}
	//==========================================================================
	for(new v = 0; v < MAX_VEHICLES; v++)
 	{
		SetVehicleNumberPlate(v, "Arizona RP");
		Fuell[v] = 200;
  	}
	//==========================================================================
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		ConnectTimed[i] = 0;
		IsConnected[i] = 0;
	}
 	//==========================================================================
	for(new h = 0; h < sizeof(BizzInfo); h++)
	{
		if(BizzInfo[h][bOwned] == 0)
		{
			AddStaticPickup(19132, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]);
			pickups ++;
			format(string, sizeof(string), "%s\nПродаётся\nЦена: %d", BizzInfo[h][bMessage], BizzInfo[h][bBuyPrice]);
			BizzInfo[h][bLocked] = 1;
			BizzInfo[h][bLabel] = Create3DTextLabel(string, 0xEAC700AA,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],20.0,0,1);
		}
		if(BizzInfo[h][bOwned] == 1)
		{
			AddStaticPickup(19132, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]);
			pickups ++;
			format(string,sizeof(string), "%s\nВладелец:\n %s", BizzInfo[h][bMessage], BizzInfo[h][bOwner]);
			BizzInfo[h][bLabel] = Create3DTextLabel(string,0x00D900AA,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],20.0,0,1);
		}
	}
	//==========================================================================
	for(new h = 0; h < sizeof(SBizzInfo); h++)
	{
		if(SBizzInfo[h][sbOwned] == 0)
		{
			format(string, sizeof(string), "%s\nПродаётся\nЦена: %d", SBizzInfo[h][sbMessage],SBizzInfo[h][sbBuyPrice]);
			SBizzInfo[h][sbLocked] = 1;
			SBizzInfo[h][sbLabel] = Create3DTextLabel(string, 0xEAC700AA,SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ],20.0,0,1);
		}
		if(SBizzInfo[h][sbOwned] == 1)
		{
			format(string,sizeof(string), "%s\nВладелец:\n %s\nЦена бензина: %d вирт", SBizzInfo[h][sbMessage], SBizzInfo[h][sbOwner],SBizzInfo[h][sbPriceProd]);
			SBizzInfo[h][sbLabel] = Create3DTextLabel(string,0x00D900AA,SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ],5.0,0,1);
		}
	}
	//==========================================================================
    for(new h = 0; h < sizeof(HouseInfo); h++)
	{
	  	if(HouseInfo[h][hOwned] == 0)
		{
			HouseInfo[h][hPickup] = CreatePickup(1273, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],-1);
			pickups ++;
			HouseInfo[h][hMIcon] = CreateDynamicMapIcon(HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez], 31, COLOR_WHITE, 0, -1, -1);
		}
		if(HouseInfo[h][hOwned] == 1)
		{
			HouseInfo[h][hPickup] = CreatePickup(1272, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],-1);
			pickups ++;
			HouseInfo[h][hMIcon] = CreateDynamicMapIcon(HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez], 32, COLOR_WHITE, 0, -1, -1);
	    }
	    Create3DTextLabel("Для поднятия пикапа дома\nИспользуйте клавишу: {FFFFFF}ALT{3366CC}.",0x3366CCFF,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],6,0,1);
		Create3DTextLabel("Для выхода из гаража введите {FFFFFF}/gexit",0xFF0000FF,2505.4902,1074.3763,-89.9699,10,h,1);
	}
	//==========================================================================
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		CarLeasing[i] = CreateDynamicCP(-2026.6854,-114.3436,1035.1719,1.5, 1, 3, i,5.0);
	}
	return true;
}
stock SaveAccounts()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			OnPlayerUpdateAc(i);
		}
	}
}
stock GetClosestPlayer(p1)
{
	new Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
	for(new x = 0; x < MAX_PLAYERS; x++)
	{
		if(IsPlayerConnected(x))
		{
			if(x != p1)
			{
				dis2 = GetDistanceBetweenPlayers(x,p1);
				if(dis2 < dis && dis2 != -1.00)
				{
					dis = dis2;
					player = x;
				}
			}
		}
	}
	return player;
}
public PayDay()
{
	new string[128];
	SaveBankMafia();
	new sendername[MAX_PLAYER_NAME];
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		if(GZInfo[i][gFrakVlad] == 12) TotalGz[0]++;
		if(GZInfo[i][gFrakVlad] == 13) TotalGz[1]++;
		if(GZInfo[i][gFrakVlad] == 15) TotalGz[2]++;
		if(GZInfo[i][gFrakVlad] == 17) TotalGz[3]++;
		if(GZInfo[i][gFrakVlad] == 18) TotalGz[4]++;
	}
	FracBank[0][fBallas] += TotalGz[0]*1000;
	FracBank[0][fVagos] += TotalGz[1]*1000;
	FracBank[0][fGrove] += TotalGz[2]*1000;
	FracBank[0][fAztek] += TotalGz[3]*1000;
	FracBank[0][fRifa] += TotalGz[4]*1000;
	ClearTotalGz();
	SaveBankFrac();
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
		if(HouseInfo[h][hKlass] == 0 && HouseInfo[h][hOwned] == 1)
		{
			HouseInfo[h][hTakings] -= 50;
		}
		if(HouseInfo[h][hKlass] == 1 && HouseInfo[h][hOwned] == 1)
		{
			HouseInfo[h][hTakings] -= 100;
		}
		if(HouseInfo[h][hKlass] == 2 && HouseInfo[h][hOwned] == 1)
		{
			HouseInfo[h][hTakings] -= 150;
		}
		if(HouseInfo[h][hKlass] == 3 && HouseInfo[h][hOwned] == 1)
		{
			HouseInfo[h][hTakings] -= 200;
		}
		if(HouseInfo[h][hKlass] == 4 && HouseInfo[h][hOwned] == 1)
		{
			HouseInfo[h][hTakings] -= 250;
		}
		if(HouseInfo[h][hKlass] == 5 && HouseInfo[h][hOwned] == 1)
		{
			HouseInfo[h][hTakings] -= 0;
		}
		if(HouseInfo[h][hTakings] <= 0 && HouseInfo[h][hOwned] == 1)
		{
			new housecash = HouseInfo[h][hValue];
			format(string, sizeof(string), "%s.ini",HouseInfo[h][hOwner]);
			new File = ini_openFile(string);
			ini_setInteger(File, "House", 255);
			ini_setInteger(File, "Housecash", housecash);
			ini_setInteger(File, "Text", 1);
			ini_closeFile(File);
			HouseInfo[h][hHel] = 0;
			HouseInfo[h][hLock] = 1;
			HouseInfo[h][hOwned] = 0;
			strmid(HouseInfo[h][hOwner], "The State", 0, strlen("The State"), 255);
		}
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		new house = PlayerInfo[i][pPHousekey];
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pLevel] > 0)
			{
				new playername2[MAX_PLAYER_NAME];
				GetPlayerName(i, playername2, sizeof(playername2));
				new exp = PlayerInfo[i][pExp];
				new nxtlevel = PlayerInfo[i][pLevel]+1;
				new expamount = nxtlevel*levelexp;
				PlayerInfo[i][pTaxiExp] += taxiexpp[i];
				if(exp == expamount-1)
				{
					PlayerInfo[i][pLevel] += 1;
					PlayerInfo[i][pExp] = -1;
				}
				if(armmatbi < 0)
				{
					armmatbi = 0;
				}
				else if(armmatsf < 0)
				{
					armmatsf = 0;
				}
				if(PlayerInfo[i][pTaxiExp] == PlayerInfo[i][pTaxiLvl]+1*levelexp)
				{
					PlayerInfo[i][pTaxiLvl] += 1;
					PlayerInfo[i][pTaxiExp] = 0;
				}
				//===================[ЗАРПЛАТЫ]=================
				switch(PlayerInfo[i][pMember])
				{
				    case 8:
				    {
				        PlayerInfo[i][pPayCheck] += PlayerInfo[i][pKazpay];
				    }
				    case 5,6,14:
					{
						PlayerInfo[i][pPayCheck] += PlayerInfo[i][pRank]*3000;
					}
                    case 12,13,15,17,18:
                    {
                        PlayerInfo[i][pPayCheck] += PlayerInfo[i][pRank]*2000;
                    }
                    case 1,10,21:
                    {
                        PlayerInfo[i][pPayCheck] += PlayerInfo[i][pRank]*4000;
                    }
                    case 3,19:
                    {
                        PlayerInfo[i][pPayCheck] += PlayerInfo[i][pRank]*3500;
                    }
					case 7:
					{
					    PlayerInfo[i][pPayCheck] += PlayerInfo[i][pRank]*10000;
					}
                    case 4,22,23:
                    {
                        PlayerInfo[i][pPayCheck] += PlayerInfo[i][pRank]*5000;
                    }
                    case 11:
                    {
                        PlayerInfo[i][pPayCheck] += PlayerInfo[i][pRank]*5000;
                    }
                    case 0:
                    {
                        PlayerInfo[i][pPayCheck] += 0;
                    }
				}
				//==============================================================
				if(PlayerInfo[i][pMember] != 0)
				{
					if(FracBank[0][fKazna] <= 0)
					{
						PlayerInfo[i][pPayCheck] = 0;
						SendClientMessage(i, COLOR_GREY, "Казна государства пуста, зарплаты нет.");
					}
				}
				PlayerInfo[i][pExp]++;
				PlayerPlayMusic(i);
				new checks = PlayerInfo[i][pPayCheck];
				if(PlayerInfo[i][pDonateRank] >= 1)
				{
					format(string, sizeof(string), "~h~PayDay");
					GameTextForPlayer(i, string, 5000, 1);
				}
				else
				{
					format(string, sizeof(string), "~w~PayDay");
					GameTextForPlayer(i, string, 5000, 1);
				}
				if(PlayerInfo[i][pDonateRank] >= 1)
				{
					SendClientMessage(i, COLOR_NEWS, "--------===[ Время получить зарплату ]===-------");
				}
				else
				{
					SendClientMessage(i, COLOR_GRAD1, "--------===[ Время получить зарплату ]===-------");
				}
				if(!NoTax(i))
				{
					format(string, sizeof(string), "***** Налог государству: -%d вирт *****", GovTax);
					SendClientMessage(i, 0xFF8C37AA, string);
					PlayerInfo[i][pBank] -= GovTax;
					PlayerInfo[i][pLabiding] += 1;
					FracBank[0][fKazna] += GovTax;
				}
				if(PlayerInfo[i][pMafiaRoof] != 0)
				{
    				if(PlayerInfo[i][pBank] > 50)
    				{
    					PlayerInfo[i][pBank] -= 50;
    					PlayerInfo[i][pDebt] += 50;
    				}
    				if(PlayerInfo[i][pCash] > 50)
    				{
	    				PlayerInfo[i][pCash] -= 50;
	    				PlayerInfo[i][pDebt] += 50;
    				}
				}
				SendClientMessage(i, COLOR_WHITE, " ");
				if(PlayerInfo[i][pDonateRank] >= 1)
				{
					format(string, sizeof(string), " Зарплата: %d вирт", checks);
					SendClientMessage(i, COLOR_NEWS, string);
				}
				else
				{
					format(string, sizeof(string), " Зарплата: %d вирт", checks);
					SendClientMessage(i, COLOR_NEWS, string);
				}
				PlayerInfo[i][pBank] += checks;
				if(PlayerInfo[i][pDonateRank] >= 1)
				{
					format(string, sizeof(string), " Текущий баланс: %d вирт", PlayerInfo[i][pBank]);
					SendClientMessage(i, COLOR_NEWS, string);
				}
				else
				{
					format(string, sizeof(string), " Текущий баланс: %d вирт", PlayerInfo[i][pBank]);
					SendClientMessage(i, COLOR_NEWS, string);
				}
				new bouse = PlayerInfo[i][pPBiskey];
				if(PlayerInfo[i][pPBiskey] != 255)
				{
					if(bouse >= 100)
					{
						if(SBizzInfo[bouse-100][sbMafia] != 0)
						{
		              		if(SBizzInfo[bouse-100][sbTill] > 5000)
							{
	  							SBizzInfo[bouse-100][sbTill] -= 1000;
			           			if(SBizzInfo[bouse-100][sbMafia] == 6)
			           			{
			           				MafiaBank[0][nYakuza] += 500;
			           			}
			 					else if(SBizzInfo[bouse-100][sbMafia] == 14)
			           			{
			           				MafiaBank[0][nRm] += 500;
			           			}
			           			else if(SBizzInfo[bouse-100][sbMafia] == 5)
			           			{
			           				MafiaBank[0][nLcn] += 500;
			           			}
							}
		 				}
						SBizzInfo[bouse-100][sbTill] -= 100;
						SBizzInfo[bouse-100][sbTill] += SBizzInfo[bouse-100][s2bTill];
						SBizzInfo[bouse-100][s2bTill] = 0;
						if(SBizzInfo[bouse-100][sbTill] <= 0)
						{
		   					SBizzInfo[bouse-100][sbLocked] = 1;
							SBizzInfo[bouse-100][sbOwned] = 0;
							SBizzInfo[bouse-100][sbProducts] = 0;
							GetPlayerName(i, sendername, sizeof(sendername));
							strmid(SBizzInfo[bouse-100][sbOwner], "The State", 0, strlen("The State"), 255);
							SendClientMessage(i, 0xFF8C37AA, " Ваша бизнес был продан, за неуплату электроэнергии");
							SBizzInfo[bouse-100][sbTill] = 0;
							SBizzInfo[bouse-100][s2bTill] = 0;
							PlayerInfo[i][pPBiskey] = 255;
							format(string, sizeof(string), "%s\nПродаётся\nЦена: %d", SBizzInfo[bouse-100][sbMessage],SBizzInfo[bouse-100][sbBuyPrice]);
							Update3DTextLabelText(SBizzInfo[bouse-100][sbLabel], 0xEAC700AA, string);
						}
					}
					if(bouse >= 100)
					{
						if(SBizzInfo[bouse-100][sbMafia] != 0)
						{
		              		if(SBizzInfo[bouse-100][sbTill] > 5000)
							{
	  							SBizzInfo[bouse-100][sbTill] -= 1000;
			           			if(SBizzInfo[bouse-100][sbMafia] == 6)
			           			{
			           				MafiaBank[0][nYakuza] += 500;
			           			}
			 					if(SBizzInfo[bouse-100][sbMafia] == 14)
			           			{
			           				MafiaBank[0][nRm] += 500;
			           			}
			           			if(SBizzInfo[bouse-100][sbMafia] == 5)
			           			{
			           				MafiaBank[0][nLcn] += 500;
			           			}
							}
		 				}
						SBizzInfo[bouse-100][sbTill] -= 100;
						SBizzInfo[bouse-100][sbTill] += SBizzInfo[bouse-100][s2bTill];
						SBizzInfo[bouse-100][s2bTill] = 0;
						if(SBizzInfo[bouse-100][sbTill] <= 0)
						{
		   					SBizzInfo[bouse-100][sbLocked] = 1;
							SBizzInfo[bouse-100][sbOwned] = 0;
							SBizzInfo[bouse-100][sbProducts] = 0;
							GetPlayerName(i, sendername, sizeof(sendername));
							strmid(SBizzInfo[bouse-100][sbOwner], "The State", 0, strlen("The State"), 255);
							SendClientMessage(i, 0xFF8C37AA, " Ваша бизнес был продан, за неуплату электроэнергии");
							SBizzInfo[bouse-100][sbTill] = 0;
							SBizzInfo[bouse-100][s2bTill] = 0;
							PlayerInfo[i][pPBiskey] = 255;
							format(string, sizeof(string), "%s\nПродаётся\nЦена: %d", SBizzInfo[bouse-100][sbMessage],SBizzInfo[bouse-100][sbBuyPrice]);
							Update3DTextLabelText(SBizzInfo[bouse-100][sbLabel], 0xEAC700AA, string);
						}
					}
				}
				if(PlayerInfo[i][pPHousekey] != 255)
				{
					if(HouseInfo[house][hTakings] <= 0)
					{
						new playerid;
						PlayerInfo[i][pText] = 1;
						PlayerInfo[i][pHousecash] = HouseInfo[house][hValue];
						HouseInfo[house][hHel] = 0;
						HouseInfo[house][hLock] = 1;
						HouseInfo[house][hOwned] = 0;
						HouseInfo[house][hVec] = 0;
						HouseInfo[house][hVcol1] = -1;
						HouseInfo[house][hVcol2] = -1;
						DestroyVehicle(caridhouse[playerid]);
						GetPlayerName(i, sendername, sizeof(sendername));
						strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
						SendClientMessage(i, 0xFF8C37AA, " Вы были выселены. Деньги за дом вы можете получить в банке \"/GetHouseMoney\"");
						HouseInfo[house][hTakings] = 0;
						PlayerInfo[i][pPHousekey] = 255;
					}
					else
					{
						format(string, sizeof(string), " Домашний счет: %d вирт", HouseInfo[house][hTakings]);
						SendClientMessage(i,COLOR_NEWS,string);
					}
				}
				if(PlayerInfo[i][pDonateRank] >= 1)
				{
					SendClientMessage(i, COLOR_NEWS, "================================");
				}
				else
				{
					SendClientMessage(i, COLOR_GRAD1, "================================");
				}
			}
			if(PlayerInfo[i][punWarns] == 1)
			{
				PlayerInfo[i][punWarnstime] += 1;
				format(string, sizeof(string), "Автоматическое снятие варна через %d часов", 10 - PlayerInfo[i][punWarnstime]);
				SendClientMessage(i,COLOR_LIGHTRED, string);
			}
			if(PlayerInfo[i][punWarns] == 1 && PlayerInfo[i][punWarnstime] >=10)
			{
				PlayerInfo[i][punWarnstime] = 0;
				PlayerInfo[i][punWarns] = 0;
				PlayerInfo[i][pWarns] -= 1;
				SendClientMessage(i,COLOR_LIGHTRED, "С вас было снято одно предупреждение.!");
			}
			if(IsAMafia(i) || IsAGang(i) || IsANews(i) || PlayerInfo[i][pMember] == 7)
			{
				if(PlayerInfo[i][pLeader] != 0)
				{
					if(PlayerInfo[i][pWdraw] != 0)
					{
					    PlayerInfo[i][pWdraw] -= 1;
					    format(string, sizeof(string), "Разрешение на снятие денег с банка фракции через %d ч.", PlayerInfo[i][pWdraw]);
						SendClientMessage(i,COLOR_LIGHTRED, string);
					}
		  			else
					{
				    	SendClientMessage(i, COLOR_GREEN, "Вам снова разрешено снимать деньги с банка вашей фракции");
					}
				}
			}
			if(PlayerInfo[i][pLevel] >= 2 && PlayerInfo[i][pExp] == 0)
			{
				format(string, sizeof(string), "Поздравляем вас с днем рождения! Вам исполнилось %d лет/год(а)", PlayerInfo[i][pLevel]);
				SendClientMessage(i, COLOR_USE, string);
			}
			if(PlayerInfo[i][pLevel] == 3 && PlayerInfo[i][pExp] == 1)
			{
				GetPlayerName(i, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s.ini",sendername);
				new file = ini_openFile(string);
				if(file < 0) print("нет файла");
				else
				{
					ini_getString(file, "pDrug",string);
					format(string, sizeof(string), "%s.ini",string);
					new file2 = ini_openFile(string);
					ini_setInteger(file2, "FriendMoney",100000);
					ini_setInteger(file2, "Text",3);
					ini_closeFile(file2);
					ini_closeFile(file);
				}
			}
			seans[i] = 0;
			robhouse[i] = false;
			PlayerInfo[i][pPayCheck] = 0;
			PlayerInfo[i][pPayDayHad] += 1;
			PlayerInfo[i][pPayDay]++;
			OnPlayerUpdateAc(i);
			BuyHouse();
		}
	}
	OnPropUpdate();
	return true;
}
stock split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc))
	{
		if(strsrc[i] == delimiter || i == strlen(strsrc))
		{
			len = strmid(strdest[aNum], strsrc, li, i, 128);
	        strdest[aNum][len] = 0;
	        li = i+1;
	        aNum++;
		}
		i++;
	}
	return true;
}
stock OnPlayerRegister(playerid, password[])
{
	if(IsPlayerConnected(playerid))
	{
        new string3[32];
		new playername3[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername3, sizeof(playername3));
		format(string3, sizeof(string3), "%s.ini", playername3);
		new File = ini_openFile(string3);
		if(!File)
		{
			ini_setString(File,"Key",(password));
			PlayerInfo[playerid][pCash] = GetSRVMoney(playerid);
			ini_setInteger(File, "Level",PlayerInfo[playerid][pLevel]);
			ini_setInteger(File, "House",PlayerInfo[playerid][pPHousekey]);
			ini_setInteger(File, "Bussines",PlayerInfo[playerid][pPBiskey]);
			ini_setInteger(File, "AdminLevel",PlayerInfo[playerid][pAdmin]);
			ini_setInteger(File, "AdminVig",PlayerInfo[playerid][pAVig]);
			ini_setInteger(File, "Phone",PlayerInfo[playerid][pPhone]);
			ini_setInteger(File, "PhoneBalance",PlayerInfo[playerid][pPhbalance]);
			ini_setInteger(File, "Help",PlayerInfo[playerid][pHelp]);
			ini_setInteger(File, "Wdraw",PlayerInfo[playerid][pWdraw]);
			ini_setInteger(File, "VsegoWarn",PlayerInfo[playerid][pVWarn]);
			ini_setInteger(File, "Quest",PlayerInfo[playerid][pQuest]);
			ini_setInteger(File,"HeadValue",PlayerInfo[playerid][pHeadValue]);
			ini_setInteger(File, "Pasport",PlayerInfo[playerid][pPasport]);
			ini_setFloat(File, "Fuelcar",PlayerInfo[playerid][pFuelCar]);
			ini_setInteger(File, "Text",PlayerInfo[playerid][pText]);
			ini_setInteger(File, "HP",PlayerInfo[playerid][pHP]);
			ini_setInteger(File, "Satiety",PlayerInfo[playerid][pSatiety]);
			ini_setInteger(File, "CheckIp",PlayerInfo[playerid][pCheckip]);
			ini_setInteger(File, "PhoneBook",PlayerInfo[playerid][pPhoneBook]);
			ini_setInteger(File, "Directory",PlayerInfo[playerid][pDirectory]);
			ini_setInteger(File, "Car",PlayerInfo[playerid][pCar]);
			ini_setInteger(File, "DonateAccount",PlayerInfo[playerid][pDonateAccount]);
			ini_setInteger(File, "DonateMoney",PlayerInfo[playerid][pDonateMoney]);
			ini_setInteger(File, "DonateMoney1",PlayerInfo[playerid][pDonateMoney1]);
			ini_setInteger(File, "DonateRank",PlayerInfo[playerid][pDonateRank]);
			ini_setInteger(File, "Registered",PlayerInfo[playerid][pReg]);
			ini_setInteger(File, "Sex",PlayerInfo[playerid][pSex]);
			ini_setInteger(File, "Arrested",PlayerInfo[playerid][pArrested]);
			ini_setInteger(File, "Muted",PlayerInfo[playerid][pMuted]);
			ini_setInteger(File, "Crimes",PlayerInfo[playerid][pCrimes]);
			ini_setInteger(File, "Respect",PlayerInfo[playerid][pExp]);
			ini_setInteger(File, "Money",PlayerInfo[playerid][pCash]);
			ini_setInteger(File, "Kills",PlayerInfo[playerid][pKills]);
			ini_setInteger(File, "Deaths",PlayerInfo[playerid][pDeaths]);
			ini_setInteger(File, "PayCheck",PlayerInfo[playerid][pPayCheck]);
			ini_setInteger(File, "Jailed",PlayerInfo[playerid][pJailed]);
			ini_setInteger(File, "Cheat",PlayerInfo[playerid][pCheat]);
			ini_setInteger(File, "JailTime",PlayerInfo[playerid][pJailTime]);
			ini_setInteger(File, "Materials",PlayerInfo[playerid][pMaterials]);
			ini_setInteger(File, "CDPlayer",PlayerInfo[playerid][pCDPlayer]);
			ini_setInteger(File, "Drugs",PlayerInfo[playerid][pDrugs]);
			ini_setInteger(File, "Leader",PlayerInfo[playerid][pLeader]);
			ini_setInteger(File, "Member",PlayerInfo[playerid][pMember]);
			ini_setInteger(File, "Rank",PlayerInfo[playerid][pRank]);
			ini_setInteger(File, "Job",PlayerInfo[playerid][pJob]);
			ini_setInteger(File, "CarLic",PlayerInfo[playerid][pCarLic]);
			ini_setInteger(File, "BizLic",PlayerInfo[playerid][pBisLic]);
			ini_setInteger(File, "FlyLic",PlayerInfo[playerid][pFlyLic]);
			ini_setInteger(File, "BoatLic",PlayerInfo[playerid][pBoatLic]);
			ini_setInteger(File, "FishLic",PlayerInfo[playerid][pFishLic]);
			ini_setInteger(File, "GunLic",PlayerInfo[playerid][pGunLic]);
			ini_setInteger(File, "Slot1", PlayerInfo[playerid][pSlot][0]);
			ini_setInteger(File, "Slot2", PlayerInfo[playerid][pSlot][1]);
			ini_setInteger(File, "Slot3", PlayerInfo[playerid][pSlot][2]);
			ini_setInteger(File, "Slot4", PlayerInfo[playerid][pSlot][3]);
			ini_setInteger(File, "Slot5", PlayerInfo[playerid][pSlot][4]);
			ini_setInteger(File, "Slot6", PlayerInfo[playerid][pSlot][5]);
			ini_setInteger(File, "Slot7", PlayerInfo[playerid][pSlot][6]);
			ini_setInteger(File, "Slot8", PlayerInfo[playerid][pSlot][7]);
			ini_setInteger(File, "Slot9", PlayerInfo[playerid][pSlot][8]);
			ini_setInteger(File, "Slot10", PlayerInfo[playerid][pSlot][9]);
			ini_setInteger(File, "Slot11", PlayerInfo[playerid][pSlot][10]);
			ini_setInteger(File, "Slot12", PlayerInfo[playerid][pSlot][11]);
			ini_setInteger(File, "Slot13", PlayerInfo[playerid][pSlot][12]);
			ini_setInteger(File, "Slotammo1", PlayerInfo[playerid][pSlotammo][0]);
			ini_setInteger(File, "Slotammo2", PlayerInfo[playerid][pSlotammo][1]);
			ini_setInteger(File, "Slotammo3", PlayerInfo[playerid][pSlotammo][2]);
			ini_setInteger(File, "Slotammo4", PlayerInfo[playerid][pSlotammo][3]);
			ini_setInteger(File, "Slotammo5", PlayerInfo[playerid][pSlotammo][4]);
			ini_setInteger(File, "Slotammo6", PlayerInfo[playerid][pSlotammo][5]);
			ini_setInteger(File, "Slotammo7", PlayerInfo[playerid][pSlotammo][6]);
			ini_setInteger(File, "Slotammo8", PlayerInfo[playerid][pSlotammo][7]);
			ini_setInteger(File, "Slotammo9", PlayerInfo[playerid][pSlotammo][8]);
			ini_setInteger(File, "Slotammo10", PlayerInfo[playerid][pSlotammo][9]);
			ini_setInteger(File, "Slotammo11", PlayerInfo[playerid][pSlotammo][10]);
			ini_setInteger(File, "Slotammo12", PlayerInfo[playerid][pSlotammo][11]);
			ini_setInteger(File, "Slotammo13", PlayerInfo[playerid][pSlotammo][12]);
			ini_setInteger(File, "SDPistol",PlayerInfo[playerid][pGunSkill][0]);
			ini_setInteger(File, "DesertEagle",PlayerInfo[playerid][pGunSkill][1]);
			ini_setInteger(File, "ShotGun",PlayerInfo[playerid][pGunSkill][2]);
			ini_setInteger(File, "MP5",PlayerInfo[playerid][pGunSkill][3]);
			ini_setInteger(File, "AK47",PlayerInfo[playerid][pGunSkill][4]);
			ini_setInteger(File, "M4",PlayerInfo[playerid][pGunSkill][5]);
			ini_setInteger(File, "TaxiExp",PlayerInfo[playerid][pTaxiExp]);
			ini_setInteger(File, "TaxiLvl",PlayerInfo[playerid][pTaxiLvl]);
			ini_setInteger(File, "CarRobbingExp",PlayerInfo[playerid][pCarRobbingExp]);
			ini_setInteger(File, "DLevel",PlayerInfo[playerid][pDLevel]);
			ini_setInteger(File, "DExp",PlayerInfo[playerid][pDExp]);
			ini_setInteger(File, "DMgruz",PlayerInfo[playerid][pDMgruz]);
			ini_setInteger(File, "Dgruz",PlayerInfo[playerid][pDgruz]);
			ini_setInteger(File, "Kazpay",PlayerInfo[playerid][pKazpay]);
			ini_setInteger(File, "Char",PlayerInfo[playerid][pChar]);
			ini_setInteger(File, "Int",PlayerInfo[playerid][pInt]);
			ini_setInteger(File, "Local",PlayerInfo[playerid][pLocal]);
			ini_setInteger(File, "Model",PlayerInfo[playerid][pModel]);
			ini_setInteger(File, "PhoneNr",PlayerInfo[playerid][pPnumber]);
			ini_setInteger(File, "PayDay",PlayerInfo[playerid][pPayDay]);
			ini_setInteger(File, "PayDayHad",PlayerInfo[playerid][pPayDayHad]);
			ini_setInteger(File, "Tutorial",1);
			ini_setInteger(File, "Warnings",PlayerInfo[playerid][pWarns]);
			ini_setInteger(File, "unWarns",PlayerInfo[playerid][punWarns]);
			ini_setInteger(File, "unWarnstime",PlayerInfo[playerid][punWarnstime]);
			ini_setInteger(File, "Fuel",PlayerInfo[playerid][pFuel]);
			ini_setInteger(File, "Married",PlayerInfo[playerid][pMarried]);
			ini_setInteger(File, "FriendMoney",PlayerInfo[playerid][pFriendMoney]);
			ini_setInteger(File, "Radio",PlayerInfo[playerid][pRadio]);
			ini_setInteger(File, "Ticket",PlayerInfo[playerid][pTicket]);
			ini_setInteger(File, "TicketWinner",PlayerInfo[playerid][pTicketWin]);
			ini_setInteger(File, "TicketNrOne",PlayerInfo[playerid][pTicketNr][0]);
			ini_setInteger(File, "TicketNrTwo",PlayerInfo[playerid][pTicketNr][1]);
			ini_setInteger(File, "TicketNrThree",PlayerInfo[playerid][pTicketNr][2]);
			ini_setInteger(File, "Mushrooms",PlayerInfo[playerid][pMushrooms]);
			ini_setInteger(File, "Fishes",PlayerInfo[playerid][pFishes]);
			ini_setInteger(File, "MuteTime",PlayerInfo[playerid][pMuteTime]);
			ini_setInteger(File, "Bank",PlayerInfo[playerid][pBank]);
			ini_setInteger(File, "Ban",PlayerInfo[playerid][pLocked]);
			ini_setInteger(File, "MafiaRoof",PlayerInfo[playerid][pMafiaRoof]);
			ini_setInteger(File, "UseMafiaRoof",PlayerInfo[playerid][pUseMafiaRoof]);
			ini_setInteger(File, "Debt",PlayerInfo[playerid][pDebt]);
			ini_setInteger(File, "BoxSkill",PlayerInfo[playerid][pBoxSkill]);
			ini_setInteger(File, "KongfuSkill",PlayerInfo[playerid][pKongfuSkill]);
			ini_setInteger(File, "KickboxSkill",PlayerInfo[playerid][pKickboxSkill]);
			ini_setInteger(File, "Dostup",PlayerInfo[playerid][pDostup]);
			ini_setInteger(File, "Labiding",PlayerInfo[playerid][pLabiding]);
			ini_setInteger(File, "Procents",PlayerInfo[playerid][pProcents]);
			ini_setInteger(File, "Wheels",PlayerInfo[playerid][pWheels]);
			ini_setInteger(File, "PaintJob",PlayerInfo[playerid][pPaintJob]);
			ini_setInteger(File, "Spoiler",PlayerInfo[playerid][pSpoiler]);
			ini_setInteger(File, "FrontBumper",PlayerInfo[playerid][pBumper1]);
			ini_setInteger(File, "RearBumper",PlayerInfo[playerid][pBumper2]);
			ini_setInteger(File, "Yubki",PlayerInfo[playerid][pYubki]);
			ini_setInteger(File, "Yubki2",PlayerInfo[playerid][pYubki2]);
			ini_setInteger(File, "Vihlop",PlayerInfo[playerid][pVih]);
			ini_setInteger(File, "Vozduh",PlayerInfo[playerid][pVozd]);
			ini_setInteger(File, "Color",PlayerInfo[playerid][pColor]);
			ini_setInteger(File, "Color2",PlayerInfo[playerid][pColor1]);
			ini_setInteger(File, "Nitro",PlayerInfo[playerid][pNitro]);
			ini_setInteger(File, "Hydravlic",PlayerInfo[playerid][pHydrawlic]);
			ini_setInteger(File, "PlaceJail",PlayerInfo[playerid][pPlaceJail]);
			ini_setInteger(File, "WantedLevel",PlayerInfo[playerid][pWantedLevel]);
			ini_setInteger(File, "Housecash",PlayerInfo[playerid][pHousecash]);
			ini_closeFile(File);
		}
	}
	return true;
}
stock OnPlayerUpdateAc(playerid)
{
	new time = GetTickCount();
	new playername3[MAX_PLAYER_NAME];
	if(IsPlayerConnected(playerid))
	{
		if(gPlayerLogged[playerid] == 1)
		{
			new string3[32];
			GetPlayerName(playerid, playername3, sizeof(playername3));
			format(string3, sizeof(string3), "%s.ini", playername3);
			new File = ini_openFile(string3);
			if(!File)
			{
				PlayerInfo[playerid][pCash] = GetSRVMoney(playerid);
			    ini_setInteger(File, "Level",PlayerInfo[playerid][pLevel]);
			    ini_setInteger(File, "House",PlayerInfo[playerid][pPHousekey]);
				ini_setInteger(File, "Bussines",PlayerInfo[playerid][pPBiskey]);
				ini_setInteger(File, "AdminLevel",PlayerInfo[playerid][pAdmin]);
				ini_setInteger(File, "AdminVig",PlayerInfo[playerid][pAVig]);
				ini_setInteger(File, "Phone",PlayerInfo[playerid][pPhone]);
				ini_setInteger(File, "PhoneBalance",PlayerInfo[playerid][pPhbalance]);
				ini_setInteger(File, "Help",PlayerInfo[playerid][pHelp]);
				ini_setInteger(File, "Wdraw",PlayerInfo[playerid][pWdraw]);
				ini_setInteger(File, "VsegoWarn",PlayerInfo[playerid][pVWarn]);
				ini_setInteger(File, "Quest",PlayerInfo[playerid][pQuest]);
				ini_setInteger(File,"HeadValue",PlayerInfo[playerid][pHeadValue]);
				ini_setInteger(File, "Pasport",PlayerInfo[playerid][pPasport]);
				ini_setFloat(File, "Fuelcar",PlayerInfo[playerid][pFuelCar]);
				ini_setInteger(File, "Text",PlayerInfo[playerid][pText]);
				ini_setInteger(File, "HP",PlayerInfo[playerid][pHP]);
				ini_setInteger(File, "Satiety",PlayerInfo[playerid][pSatiety]);
			    ini_setInteger(File, "CheckIp",PlayerInfo[playerid][pCheckip]);
   				ini_setInteger(File, "PhoneBook",PlayerInfo[playerid][pPhoneBook]);
				ini_setInteger(File, "Directory",PlayerInfo[playerid][pDirectory]);
				ini_setInteger(File, "Car",PlayerInfo[playerid][pCar]);
				ini_setInteger(File, "DonateAccount",PlayerInfo[playerid][pDonateAccount]);
				ini_setInteger(File, "DonateMoney",PlayerInfo[playerid][pDonateMoney]);
				ini_setInteger(File, "DonateRank",PlayerInfo[playerid][pDonateRank]);
				ini_setInteger(File, "DonateMoney1", PlayerInfo[playerid][pDonateMoney1]);
				ini_setInteger(File, "Registered",PlayerInfo[playerid][pReg]);
				ini_setInteger(File, "Sex",PlayerInfo[playerid][pSex]);
				ini_setInteger(File, "Arrested",PlayerInfo[playerid][pArrested]);
				ini_setInteger(File, "Muted",PlayerInfo[playerid][pMuted]);
				ini_setInteger(File, "Crimes",PlayerInfo[playerid][pCrimes]);
				ini_setInteger(File, "Respect",PlayerInfo[playerid][pExp]);
				ini_setInteger(File, "Money",PlayerInfo[playerid][pCash]);
				ini_setInteger(File, "Kills",PlayerInfo[playerid][pKills]);
				ini_setInteger(File, "Deaths",PlayerInfo[playerid][pDeaths]);
				ini_setInteger(File, "PayCheck",PlayerInfo[playerid][pPayCheck]);
				ini_setInteger(File, "Jailed",PlayerInfo[playerid][pJailed]);
				ini_setInteger(File, "Cheat",PlayerInfo[playerid][pCheat]);
				ini_setInteger(File, "JailTime",PlayerInfo[playerid][pJailTime]);
				ini_setInteger(File, "Materials",PlayerInfo[playerid][pMaterials]);
				ini_setInteger(File, "CDPlayer",PlayerInfo[playerid][pCDPlayer]);
				ini_setInteger(File, "Drugs",PlayerInfo[playerid][pDrugs]);
				ini_setInteger(File, "Leader",PlayerInfo[playerid][pLeader]);
				ini_setInteger(File, "Member",PlayerInfo[playerid][pMember]);
				ini_setInteger(File, "Rank",PlayerInfo[playerid][pRank]);
				ini_setInteger(File, "Job",PlayerInfo[playerid][pJob]);
				ini_setInteger(File, "CarLic",PlayerInfo[playerid][pCarLic]);
				ini_setInteger(File, "BizLic",PlayerInfo[playerid][pBisLic]);
				ini_setInteger(File, "FlyLic",PlayerInfo[playerid][pFlyLic]);
				ini_setInteger(File, "BoatLic",PlayerInfo[playerid][pBoatLic]);
				ini_setInteger(File, "FishLic",PlayerInfo[playerid][pFishLic]);
				ini_setInteger(File, "GunLic",PlayerInfo[playerid][pGunLic]);
				ini_setInteger(File, "Slot1", PlayerInfo[playerid][pSlot][0]);
				ini_setInteger(File, "Slot2", PlayerInfo[playerid][pSlot][1]);
				ini_setInteger(File, "Slot3", PlayerInfo[playerid][pSlot][2]);
				ini_setInteger(File, "Slot4", PlayerInfo[playerid][pSlot][3]);
				ini_setInteger(File, "Slot5", PlayerInfo[playerid][pSlot][4]);
				ini_setInteger(File, "Slot6", PlayerInfo[playerid][pSlot][5]);
				ini_setInteger(File, "Slot7", PlayerInfo[playerid][pSlot][6]);
				ini_setInteger(File, "Slot8", PlayerInfo[playerid][pSlot][7]);
				ini_setInteger(File, "Slot9", PlayerInfo[playerid][pSlot][8]);
				ini_setInteger(File, "Slot10", PlayerInfo[playerid][pSlot][9]);
				ini_setInteger(File, "Slot11", PlayerInfo[playerid][pSlot][10]);
				ini_setInteger(File, "Slot12", PlayerInfo[playerid][pSlot][11]);
				ini_setInteger(File, "Slot13", PlayerInfo[playerid][pSlot][12]);
				ini_setInteger(File, "Slotammo1", PlayerInfo[playerid][pSlotammo][0]);
				ini_setInteger(File, "Slotammo2", PlayerInfo[playerid][pSlotammo][1]);
				ini_setInteger(File, "Slotammo3", PlayerInfo[playerid][pSlotammo][2]);
				ini_setInteger(File, "Slotammo4", PlayerInfo[playerid][pSlotammo][3]);
				ini_setInteger(File, "Slotammo5", PlayerInfo[playerid][pSlotammo][4]);
				ini_setInteger(File, "Slotammo6", PlayerInfo[playerid][pSlotammo][5]);
				ini_setInteger(File, "Slotammo7", PlayerInfo[playerid][pSlotammo][6]);
				ini_setInteger(File, "Slotammo8", PlayerInfo[playerid][pSlotammo][7]);
				ini_setInteger(File, "Slotammo9", PlayerInfo[playerid][pSlotammo][8]);
				ini_setInteger(File, "Slotammo10", PlayerInfo[playerid][pSlotammo][9]);
				ini_setInteger(File, "Slotammo11", PlayerInfo[playerid][pSlotammo][10]);
				ini_setInteger(File, "Slotammo12", PlayerInfo[playerid][pSlotammo][11]);
				ini_setInteger(File, "Slotammo13", PlayerInfo[playerid][pSlotammo][12]);
				ini_setInteger(File, "SDPistol",PlayerInfo[playerid][pGunSkill][0]);
				ini_setInteger(File, "DesertEagle",PlayerInfo[playerid][pGunSkill][1]);
				ini_setInteger(File, "ShotGun",PlayerInfo[playerid][pGunSkill][2]);
				ini_setInteger(File, "MP5",PlayerInfo[playerid][pGunSkill][3]);
				ini_setInteger(File, "AK47",PlayerInfo[playerid][pGunSkill][4]);
				ini_setInteger(File, "M4",PlayerInfo[playerid][pGunSkill][5]);
				ini_setInteger(File, "TaxiExp",PlayerInfo[playerid][pTaxiExp]);
				ini_setInteger(File, "TaxiLvl",PlayerInfo[playerid][pTaxiLvl]);
				ini_setInteger(File, "CarRobbingExp",PlayerInfo[playerid][pCarRobbingExp]);
				ini_setInteger(File, "DLevel",PlayerInfo[playerid][pDLevel]);
				ini_setInteger(File, "DExp",PlayerInfo[playerid][pDExp]);
				ini_setInteger(File, "DMgruz",PlayerInfo[playerid][pDMgruz]);
				ini_setInteger(File, "Dgruz",PlayerInfo[playerid][pDgruz]);
				ini_setInteger(File, "Kazpay",PlayerInfo[playerid][pKazpay]);
				ini_setInteger(File, "Char",PlayerInfo[playerid][pChar]);
				ini_setInteger(File, "Int",PlayerInfo[playerid][pInt]);
				ini_setInteger(File, "Local",PlayerInfo[playerid][pLocal]);
				ini_setInteger(File, "Model",PlayerInfo[playerid][pModel]);
				ini_setInteger(File, "PhoneNr",PlayerInfo[playerid][pPnumber]);
				ini_setInteger(File, "PayDay",PlayerInfo[playerid][pPayDay]);
				ini_setInteger(File, "PayDayHad",PlayerInfo[playerid][pPayDayHad]);
				ini_setInteger(File, "Tutorial",1);
				ini_setInteger(File, "Warnings",PlayerInfo[playerid][pWarns]);
				ini_setInteger(File, "unWarns",PlayerInfo[playerid][punWarns]);
				ini_setInteger(File, "unWarnstime",PlayerInfo[playerid][punWarnstime]);
				ini_setInteger(File, "Fuel",PlayerInfo[playerid][pFuel]);
				ini_setInteger(File, "Married",PlayerInfo[playerid][pMarried]);
				ini_setInteger(File, "FriendMoney",PlayerInfo[playerid][pFriendMoney]);
				ini_setInteger(File, "Radio",PlayerInfo[playerid][pRadio]);
				ini_setInteger(File, "Ticket",PlayerInfo[playerid][pTicket]);
				ini_setInteger(File, "TicketWinner",PlayerInfo[playerid][pTicketWin]);
				ini_setInteger(File, "TicketNrOne",PlayerInfo[playerid][pTicketNr][0]);
				ini_setInteger(File, "TicketNrTwo",PlayerInfo[playerid][pTicketNr][1]);
				ini_setInteger(File, "TicketNrThree",PlayerInfo[playerid][pTicketNr][2]);
				ini_setInteger(File, "Mushrooms",PlayerInfo[playerid][pMushrooms]);
				ini_setInteger(File, "Fishes",PlayerInfo[playerid][pFishes]);
				ini_setInteger(File, "MuteTime",PlayerInfo[playerid][pMuteTime]);
 				ini_setInteger(File, "Bank",PlayerInfo[playerid][pBank]);
				ini_setInteger(File, "Ban",PlayerInfo[playerid][pLocked]);
				ini_setInteger(File, "MafiaRoof",PlayerInfo[playerid][pMafiaRoof]);
				ini_setInteger(File, "UseMafiaRoof",PlayerInfo[playerid][pUseMafiaRoof]);
				ini_setInteger(File, "Debt",PlayerInfo[playerid][pDebt]);
				ini_setInteger(File, "BoxSkill",PlayerInfo[playerid][pBoxSkill]);
				ini_setInteger(File, "KongfuSkill",PlayerInfo[playerid][pKongfuSkill]);
				ini_setInteger(File, "KickboxSkill",PlayerInfo[playerid][pKickboxSkill]);
				ini_setInteger(File, "Dostup",PlayerInfo[playerid][pDostup]);
				ini_setInteger(File, "Labiding",PlayerInfo[playerid][pLabiding]);
				ini_setInteger(File, "Addiction",PlayerInfo[playerid][pAddiction]);
				ini_setInteger(File, "Procents",PlayerInfo[playerid][pProcents]);
				ini_setInteger(File, "Wheels",PlayerInfo[playerid][pWheels]);
				ini_setInteger(File, "PaintJob",PlayerInfo[playerid][pPaintJob]);
				ini_setInteger(File, "Spoiler",PlayerInfo[playerid][pSpoiler]);
				ini_setInteger(File, "FrontBumper",PlayerInfo[playerid][pBumper1]);
				ini_setInteger(File, "RearBumper",PlayerInfo[playerid][pBumper2]);
				ini_setInteger(File, "Yubki",PlayerInfo[playerid][pYubki]);
				ini_setInteger(File, "Yubki2",PlayerInfo[playerid][pYubki2]);
				ini_setInteger(File, "Vihlop",PlayerInfo[playerid][pVih]);
				ini_setInteger(File, "Vozduh",PlayerInfo[playerid][pVozd]);
				ini_setInteger(File, "Color",PlayerInfo[playerid][pColor]);
				ini_setInteger(File, "Color2",PlayerInfo[playerid][pColor1]);
				ini_setInteger(File, "Nitro",PlayerInfo[playerid][pNitro]);
				ini_setInteger(File, "Hydravlic",PlayerInfo[playerid][pHydrawlic]);
				ini_setInteger(File, "PlaceJail",PlayerInfo[playerid][pPlaceJail]);
				ini_setInteger(File, "Housecash",PlayerInfo[playerid][pHousecash]);
				ini_setInteger(File, "WantedLevel",PlayerInfo[playerid][pWantedLevel]);
				new playersip[256];
				GetPlayerIp(playerid,playersip,sizeof(playersip));
				new year, month, day;
				getdate(year, month, day);
				new strstre[100];
				format(strstre,sizeof(strstre), "%d/%d/%d",day,month,year);
				ini_setString(File, "Online",strstre);
				ini_setString(File, "pvIp",playersip);
				ini_closeFile(File);
			}
		}
	}
	printf("[Сохранение аккаунта] %s - потрачено %d (ms)", playername3, GetTickCount() - time);
	return true;
}
public OnPlayerLogin(playerid, password[])
{
	new time = GetTickCount();
	new tmp2[256];
	new string2[64];
	new pass[256];
	new playername2[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername2, sizeof(playername2));
	format(string2, sizeof(string2), "%s.ini", playername2);
	new File = ini_openFile(string2);
	if(!File)
	{
		ini_getString(File, "Key", pass);
		ini_getInteger(File, "Level",PlayerInfo[playerid][pLevel]);
		ini_getInteger(File, "House",PlayerInfo[playerid][pPHousekey]);
		ini_getInteger(File, "Bussines",PlayerInfo[playerid][pPBiskey]);
		ini_getInteger(File, "AdminLevel",PlayerInfo[playerid][pAdmin]);
		ini_getInteger(File, "AdminVig",PlayerInfo[playerid][pAVig]);
		ini_getInteger(File, "Phone",PlayerInfo[playerid][pPhone]);
		ini_getInteger(File, "PhoneBalance",PlayerInfo[playerid][pPhbalance]);
		ini_getInteger(File, "Help",PlayerInfo[playerid][pHelp]);
		ini_getInteger(File, "Wdraw",PlayerInfo[playerid][pWdraw]);
		ini_getInteger(File, "VsegoWarn",PlayerInfo[playerid][pVWarn]);
		ini_getInteger(File, "Quest",PlayerInfo[playerid][pQuest]);
		ini_getInteger(File,"HeadValue",PlayerInfo[playerid][pHeadValue]);
		ini_getInteger(File, "Pasport",PlayerInfo[playerid][pPasport]);
		ini_getFloat(File, "Fuelcar",PlayerInfo[playerid][pFuelCar]);
		ini_getInteger(File, "Text",PlayerInfo[playerid][pText]);
		ini_getInteger(File, "HP",PlayerInfo[playerid][pHP]);
		ini_getInteger(File, "Satiety",PlayerInfo[playerid][pSatiety]);
		ini_getInteger(File, "Keyip",PlayerInfo[playerid][pKeyip]);
		ini_getInteger(File, "CheckIp",PlayerInfo[playerid][pCheckip]);
		ini_getInteger(File, "pGod",PlayerInfo[playerid][pGod]);
		ini_getInteger(File, "pMes",PlayerInfo[playerid][pMes]);
		ini_getInteger(File, "pDataReg",PlayerInfo[playerid][pDataReg]);
		ini_getInteger(File, "pVhoddata",PlayerInfo[playerid][pVhoddata]);
		ini_getInteger(File, "pVhodMes",PlayerInfo[playerid][pVhodMes]);
		ini_getInteger(File, "pVhodchas",PlayerInfo[playerid][pVhodchas]);
		ini_getInteger(File, "pVhodminute",PlayerInfo[playerid][pVhodminute]);
		ini_getInteger(File, "PhoneBook",PlayerInfo[playerid][pPhoneBook]);
		ini_getInteger(File, "Directory",PlayerInfo[playerid][pDirectory]);
		ini_getInteger(File, "Car",PlayerInfo[playerid][pCar]);
		ini_getInteger(File, "DonateAccount",PlayerInfo[playerid][pDonateAccount]);
		ini_getInteger(File, "DonateMoney",PlayerInfo[playerid][pDonateMoney]);
        ini_getInteger(File, "DonateMoney1",PlayerInfo[playerid][pDonateMoney1]);
		ini_getInteger(File, "DonateRank",PlayerInfo[playerid][pDonateRank]);
		ini_getInteger(File, "Registered",PlayerInfo[playerid][pReg]);
		ini_getInteger(File, "Sex",PlayerInfo[playerid][pSex]);
		ini_getInteger(File, "Arrested",PlayerInfo[playerid][pArrested]);
		ini_getInteger(File, "Muted",PlayerInfo[playerid][pMuted]);
		ini_getInteger(File, "Crimes",PlayerInfo[playerid][pCrimes]);
		ini_getInteger(File, "Respect",PlayerInfo[playerid][pExp]);
		ini_getInteger(File, "Money",PlayerInfo[playerid][pCash]);
		ini_getInteger(File, "Kills",PlayerInfo[playerid][pKills]);
		ini_getInteger(File, "Deaths",PlayerInfo[playerid][pDeaths]);
		ini_getInteger(File, "PayCheck",PlayerInfo[playerid][pPayCheck]);
		ini_getInteger(File, "Jailed",PlayerInfo[playerid][pJailed]);
		ini_getInteger(File, "Cheat",PlayerInfo[playerid][pCheat]);
		ini_getInteger(File, "JailTime",PlayerInfo[playerid][pJailTime]);
		ini_getInteger(File, "Materials",PlayerInfo[playerid][pMaterials]);
		ini_getInteger(File, "CDPlayer",PlayerInfo[playerid][pCDPlayer]);
		ini_getInteger(File, "Drugs",PlayerInfo[playerid][pDrugs]);
		ini_getInteger(File, "Leader",PlayerInfo[playerid][pLeader]);
		ini_getInteger(File, "Member",PlayerInfo[playerid][pMember]);
		ini_getInteger(File, "Rank",PlayerInfo[playerid][pRank]);
		ini_getInteger(File, "Job",PlayerInfo[playerid][pJob]);
		ini_getInteger(File, "CarLic",PlayerInfo[playerid][pCarLic]);
		ini_getInteger(File, "BizLic",PlayerInfo[playerid][pBisLic]);
		ini_getInteger(File, "FlyLic",PlayerInfo[playerid][pFlyLic]);
		ini_getInteger(File, "BoatLic",PlayerInfo[playerid][pBoatLic]);
		ini_getInteger(File, "FishLic",PlayerInfo[playerid][pFishLic]);
		ini_getInteger(File, "GunLic",PlayerInfo[playerid][pGunLic]);
		ini_getInteger(File, "Slot1", PlayerInfo[playerid][pSlot][0]);
		ini_getInteger(File, "Slot2", PlayerInfo[playerid][pSlot][1]);
		ini_getInteger(File, "Slot3", PlayerInfo[playerid][pSlot][2]);
		ini_getInteger(File, "Slot4", PlayerInfo[playerid][pSlot][3]);
		ini_getInteger(File, "Slot5", PlayerInfo[playerid][pSlot][4]);
		ini_getInteger(File, "Slot6", PlayerInfo[playerid][pSlot][5]);
		ini_getInteger(File, "Slot7", PlayerInfo[playerid][pSlot][6]);
		ini_getInteger(File, "Slot8", PlayerInfo[playerid][pSlot][7]);
		ini_getInteger(File, "Slot9", PlayerInfo[playerid][pSlot][8]);
		ini_getInteger(File, "Slot10", PlayerInfo[playerid][pSlot][9]);
		ini_getInteger(File, "Slot11", PlayerInfo[playerid][pSlot][10]);
		ini_getInteger(File, "Slot12", PlayerInfo[playerid][pSlot][11]);
		ini_getInteger(File, "Slot13", PlayerInfo[playerid][pSlot][12]);
		ini_getInteger(File, "Slotammo1", PlayerInfo[playerid][pSlotammo][0]);
		ini_getInteger(File, "Slotammo2", PlayerInfo[playerid][pSlotammo][1]);
		ini_getInteger(File, "Slotammo3", PlayerInfo[playerid][pSlotammo][2]);
		ini_getInteger(File, "Slotammo4", PlayerInfo[playerid][pSlotammo][3]);
		ini_getInteger(File, "Slotammo5", PlayerInfo[playerid][pSlotammo][4]);
		ini_getInteger(File, "Slotammo6", PlayerInfo[playerid][pSlotammo][5]);
		ini_getInteger(File, "Slotammo7", PlayerInfo[playerid][pSlotammo][6]);
		ini_getInteger(File, "Slotammo8", PlayerInfo[playerid][pSlotammo][7]);
		ini_getInteger(File, "Slotammo9", PlayerInfo[playerid][pSlotammo][8]);
		ini_getInteger(File, "Slotammo10", PlayerInfo[playerid][pSlotammo][9]);
		ini_getInteger(File, "Slotammo11", PlayerInfo[playerid][pSlotammo][10]);
		ini_getInteger(File, "Slotammo12", PlayerInfo[playerid][pSlotammo][11]);
		ini_getInteger(File, "Slotammo13", PlayerInfo[playerid][pSlotammo][12]);
		ini_getInteger(File, "SDPistol",PlayerInfo[playerid][pGunSkill][0]);
		ini_getInteger(File, "DesertEagle",PlayerInfo[playerid][pGunSkill][1]);
		ini_getInteger(File, "ShotGun",PlayerInfo[playerid][pGunSkill][2]);
		ini_getInteger(File, "MP5",PlayerInfo[playerid][pGunSkill][3]);
		ini_getInteger(File, "AK47",PlayerInfo[playerid][pGunSkill][4]);
		ini_getInteger(File, "M4",PlayerInfo[playerid][pGunSkill][5]);
		ini_getInteger(File, "TaxiExp",PlayerInfo[playerid][pTaxiExp]);
		ini_getInteger(File, "TaxiLvl",PlayerInfo[playerid][pTaxiLvl]);
		ini_getInteger(File, "CarRobbingExp",PlayerInfo[playerid][pCarRobbingExp]);
		ini_getInteger(File, "DLevel",PlayerInfo[playerid][pDLevel]);
		ini_getInteger(File, "DExp",PlayerInfo[playerid][pDExp]);
		ini_getInteger(File, "DMgruz",PlayerInfo[playerid][pDMgruz]);
		ini_getInteger(File, "Dgruz",PlayerInfo[playerid][pDgruz]);
		ini_getInteger(File, "Kazpay",PlayerInfo[playerid][pKazpay]);
		ini_getInteger(File, "Char",PlayerInfo[playerid][pChar]);
		ini_getInteger(File, "Int",PlayerInfo[playerid][pInt]);
		ini_getInteger(File, "Local",PlayerInfo[playerid][pLocal]);
		ini_getInteger(File, "Model",PlayerInfo[playerid][pModel]);
		ini_getInteger(File, "PhoneNr",PlayerInfo[playerid][pPnumber]);
		ini_getInteger(File, "PayDay",PlayerInfo[playerid][pPayDay]);
		ini_getInteger(File, "PayDayHad",PlayerInfo[playerid][pPayDayHad]);
		ini_getInteger(File, "Tutorial",PlayerInfo[playerid][pTut]);
		ini_getInteger(File, "Warnings",PlayerInfo[playerid][pWarns]);
		ini_getInteger(File, "unWarns",PlayerInfo[playerid][punWarns]);
		ini_getInteger(File, "unWarnstime",PlayerInfo[playerid][punWarnstime]);
		ini_getInteger(File, "Fuel",PlayerInfo[playerid][pFuel]);
		ini_getInteger(File, "Married",PlayerInfo[playerid][pMarried]);
		ini_getInteger(File, "pDrug",PlayerInfo[playerid][pDrug]);
		ini_getInteger(File, "FriendMoney",PlayerInfo[playerid][pFriendMoney]);
		ini_getInteger(File, "Radio",PlayerInfo[playerid][pRadio]);
		ini_getInteger(File, "Ticket",PlayerInfo[playerid][pTicket]);
		ini_getInteger(File, "TicketWinner",PlayerInfo[playerid][pTicketWin]);
		ini_getInteger(File, "TicketNrOne",PlayerInfo[playerid][pTicketNr][0]);
		ini_getInteger(File, "TicketNrTwo",PlayerInfo[playerid][pTicketNr][1]);
		ini_getInteger(File, "TicketNrThree",PlayerInfo[playerid][pTicketNr][2]);
		ini_getInteger(File, "Mushrooms",PlayerInfo[playerid][pMushrooms]);
		ini_getInteger(File, "MuteTime",PlayerInfo[playerid][pMuteTime]);
		ini_getInteger(File, "Bank",PlayerInfo[playerid][pBank]);
		ini_getInteger(File, "Ban",PlayerInfo[playerid][pLocked]);
		ini_getInteger(File, "Debt",PlayerInfo[playerid][pDebt]);
		ini_getInteger(File, "MafiaRoof",PlayerInfo[playerid][pMafiaRoof]);
		ini_getInteger(File, "UseMafiaRoof",PlayerInfo[playerid][pUseMafiaRoof]);
		ini_getInteger(File, "BoxSkill",PlayerInfo[playerid][pBoxSkill]);
		ini_getInteger(File, "KongfuSkill",PlayerInfo[playerid][pKongfuSkill]);
		ini_getInteger(File, "KickboxSkill",PlayerInfo[playerid][pKickboxSkill]);
		ini_getInteger(File, "Dostup",PlayerInfo[playerid][pDostup]);
		ini_getInteger(File, "Fishes",PlayerInfo[playerid][pFishes]);
		ini_getInteger(File, "Labiding",PlayerInfo[playerid][pLabiding]);
		ini_getInteger(File, "Addiction",PlayerInfo[playerid][pAddiction]);
		ini_getInteger(File, "Procents",PlayerInfo[playerid][pProcents]);
		ini_getInteger(File, "Wheels",PlayerInfo[playerid][pWheels]);
		ini_getInteger(File, "PaintJob",PlayerInfo[playerid][pPaintJob]);
		ini_getInteger(File, "Spoiler",PlayerInfo[playerid][pSpoiler]);
		ini_getInteger(File, "FrontBumper",PlayerInfo[playerid][pBumper1]);
		ini_getInteger(File, "RearBumper",PlayerInfo[playerid][pBumper2]);
		ini_getInteger(File, "Yubki",PlayerInfo[playerid][pYubki]);
		ini_getInteger(File, "Yubki2",PlayerInfo[playerid][pYubki2]);
		ini_getInteger(File, "Vihlop",PlayerInfo[playerid][pVih]);
		ini_getInteger(File, "Vozduh",PlayerInfo[playerid][pVozd]);
		ini_getInteger(File, "Color",PlayerInfo[playerid][pColor]);
		ini_getInteger(File, "Color2",PlayerInfo[playerid][pColor1]);
		ini_getInteger(File, "Nitro",PlayerInfo[playerid][pNitro]);
		ini_getInteger(File, "Hydravlic",PlayerInfo[playerid][pHydrawlic]);
		ini_getInteger(File, "PlaceJail",PlayerInfo[playerid][pPlaceJail]);
		ini_getInteger(File, "Housecash",PlayerInfo[playerid][pHousecash]);
		ini_getInteger(File, "WantedLevel",PlayerInfo[playerid][pWantedLevel]);
		ini_getFloat(File, "pIp",PlayerInfo[playerid][pIp]);
		ini_getFloat(File, "pvIp",PlayerInfo[playerid][pvIp]);
		ini_getFloat(File, "pIpReg",PlayerInfo[playerid][pIpReg]);
		ini_closeFile(File);
	}
	new playersip[256];
	new sendername[MAX_PLAYER_NAME];
	new string[256];
	GetPlayerIp(playerid,playersip,sizeof(playersip));
	GetPlayerName(playerid, sendername, sizeof(sendername));
	if(PlayerInfo[playerid][pCheckip] == 1)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "%s.ini",sendername);
		new filess = ini_openFile(string);
		if(filess < 0) print("нет файла");
		else
		{
			ini_getString(filess, "pIp",string);
			ini_closeFile(filess);
			new currentip[30];
			GetPlayerIp(playerid, currentip, sizeof(currentip));
			if(strcmp(currentip, string))
			{
				gPlayerLogged[playerid] = 0;
				SetPlayerInterior(playerid, 0);
				SetPlayerFacingAngle(playerid, 179.5547);
				SetPlayerCameraPos(playerid, -1817.0808, 1112.9937, 235.4244);
				SetPlayerCameraLookAt(playerid, -1816.5471, 949.6590, 235.4244);
				TogglePlayerControllable(playerid, 0);
				ShowPlayerDialog(playerid,16,DIALOG_STYLE_INPUT, "Введите ключ безопастности", "    ==== Ваш IP адрес сменился ====\n=== Введите Ваш ключ безопасности ===", "Готово", "Отмена");
				gPlayerLogged[playerid] = 0;
				return true;
			}
		}
	}
	if(PlayerInfo[playerid][pMarried] == 0)
	{
		PlayerInfo[playerid][pMarriedTo] = 0;
	}
	if(PlayerInfo[playerid][pCheckip] == 1)
	{
		gPlayerLogged[playerid] = 1;
	}
	if(PlayerInfo[playerid][pCheckip] == 0)
	{
		GetPlayerIp(playerid,playersip,sizeof(playersip));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "%s.ini",sendername);
		gPlayerLogged[playerid] = 1;
		new filess = ini_openFile(string);
		if(filess < 0) print("нет файла");
		else
		{
			ini_setString(filess, "pIp",playersip);
			ini_closeFile(filess);
		}
	}
	if(PlayerInfo[playerid][pCash] <= 0)
	{
		PlayerInfo[playerid][pCash] = 0;
	}
	if(PlayerInfo[playerid][pCar] == 0)
	{
		PlayerInfo[playerid][pCar] = 481;
	}
	if(PlayerInfo[playerid][pProcents] <= 0)
	{
		PlayerInfo[playerid][pProcents] = 0;
	}
	if(PlayerInfo[playerid][pChar] == 0)
	{
		PlayerInfo[playerid][pChar] = 230;
	}
	if(PlayerInfo[playerid][pRadio] == 1)
	{
		radiosf++;
		lNews[playerid] = 1;
		gNews[playerid] = 0;
		LvNews[playerid] = 1;
	}
	if(PlayerInfo[playerid][pRadio] == 2)
	{
		radiols++;
		lNews[playerid] = 0;
		gNews[playerid] = 1;
		LvNews[playerid] = 1;
	}
	if(PlayerInfo[playerid][pRadio] == 3)
	{
		radiolv++;
		lNews[playerid] = 1;
		gNews[playerid] = 1;
		LvNews[playerid] = 0;
	}
	else
	{
		lNews[playerid] = 1;
		gNews[playerid] = 1;
		LvNews[playerid] = 1;
	}
	if(PlayerInfo[playerid][pReg] == 0)
	{
		PlayerInfo[playerid][pLevel] = BONUSE_LVL; // Уровень BONUSE_LVL
		PlayerInfo[playerid][pAdmin] = 0; // Админка
		PlayerInfo[playerid][pAVig] = 0; // Выговоры
		PlayerInfo[playerid][pPhone] = 0; // Телефон
		PlayerInfo[playerid][pPhbalance] = 0; // Баланс телефона
		PlayerInfo[playerid][pHelp] = 0; // Хелперка
		PlayerInfo[playerid][pWdraw] = 0; // Время до снятия денег с фракции
		PlayerInfo[playerid][pVWarn] = 0; // Всего варнов
		PlayerInfo[playerid][pQuest] = BONUSE_QUEST; // Квест
		PlayerInfo[playerid][pPasport] = BONUSE_PASPORT; // Паспорт
		PlayerInfo[playerid][pHP] = 100; // Хп
		PlayerInfo[playerid][pSatiety] = 100; // Сытость
		PlayerInfo[playerid][pInt] = 0; // Интерьер
		PlayerInfo[playerid][pLocal] = 255; // Хз
		PlayerInfo[playerid][pTut] = 0; // хз
		PlayerInfo[playerid][pPnumber] = NUMBER_TLF; // Номер телефона
		PlayerInfo[playerid][pReg] = 1; // Рега
		PlayerInfo[playerid][pCarLic] = 1; // Лицензии
        PlayerInfo[playerid][pFishLic] = 1;
        PlayerInfo[playerid][pBoatLic] = 1;
        PlayerInfo[playerid][pFlyLic] = 1;
        PlayerInfo[playerid][pGunLic] = 1;
        PlayerInfo[playerid][pBisLic] = 1; //=========
		PlayerInfo[playerid][pBank] = 0; // Баланс банка
		PlayerInfo[playerid][pCash] = BONUSE_CASH; // Деньги
		PlayerInfo[playerid][pDonateMoney1] = BONUSE_DONATE; // Донат
		PlayerInfo[playerid][pMarriedTo] = 0; // хз
		PlayerInfo[playerid][pLabiding] = 0;
		PlayerInfo[playerid][pHousecash] = 0;
		PlayerInfo[playerid][pCheckip] = 0;
		PlayerInfo[playerid][pWantedLevel] = 0;
		PlayerInfo[playerid][pMuted] = 0;
		PlayerInfo[playerid][pMuteTime] = 0;
		PlayerInfo[playerid][pProcents] = 100;
		PlayerInfo[playerid][pDostup] = ADMIN_PASSWORD; // Пароль админки
		PlayerInfo[playerid][pText] = 0;
		SetPlayerHealthAC(playerid, 100);
		GivePlayerPPCash(playerid, 0);
		ClearMarriage(playerid);
		new year, month,day;
		getdate(year, month, day);
		GetPlayerIp(playerid,playersip,sizeof(playersip));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "%s.ini",sendername);
		new file = ini_openFile(string);
		if(file < 0) print("нет файла");
		else
		{
			new strstre[100];
			format(strstre,sizeof(strstre), "%d/%d/%d",day,month,year);
			ini_setString(File, "pDataReg",strstre);
			ini_setString(File, "pIpReg",playersip);
			ini_closeFile(File);
		}
	}
	SetPVarInt(playerid, "LOGGED",1);
	if(PlayerInfo[playerid][pLocked] == 1)
	{
		ShowPlayerDialog(playerid,69,DIALOG_STYLE_INPUT, "{B20000}Внимание", "{FF6347}Этот аккаунт заблокирован\nОставьте заявку на разбан\n в группе: Ваша группа\n\nВведите '/q', чтобы выйти", "Закрыть", "");
		FixKickedPlayer[playerid] = 1;
	}
	if(PlayerInfo[playerid][pText] == 5)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new iniFile = ini_openFile("gamefiles/log/donaters.log");
    	ini_setString(iniFile, "Nick\n",sendername);
	    ini_closeFile(iniFile);
		SendClientMessage(playerid, COLOR_NEWS, "Пополнение игрового аккаунта");
		format(tmp2, sizeof(tmp2), "Аккаунт пополнен на сумму: %d вирт", PlayerInfo[playerid][pDonateMoney]);
		SendClientMessage(playerid, COLOR_WHITE,tmp2);
		PlayerInfo[playerid][pDonateAccount] += PlayerInfo[playerid][pDonateMoney];
		format(tmp2, sizeof(tmp2), "Донат счётчик: %d вирт", PlayerInfo[playerid][pDonateAccount]);
		SendClientMessage(playerid, COLOR_WHITE,tmp2);
		PlayerInfo[playerid][pDonateMoney] = 0;
		PlayerInfo[playerid][pText] = 0;
	}
	if(PlayerInfo[playerid][pCheckip] == 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, " ");
	    SendClientMessage(playerid, COLOR_WHITE, " ");
	    SendClientMessage(playerid, COLOR_WHITE, " ");
	    SendClientMessage(playerid, COLOR_WHITE, " ");
	    SendClientMessage(playerid, COLOR_WHITE, " ");
	    SendClientMessage(playerid, COLOR_WHITE, " ");
	    SendClientMessage(playerid, COLOR_WHITE, " ");
	    SendClientMessage(playerid, COLOR_WHITE, " ");
	    SendClientMessage(playerid, COLOR_WHITE, " ");
	    SendClientMessage(playerid, COLOR_WHITE, " ");
	    SendClientMessage(playerid, COLOR_WHITE, " ");
	    SendClientMessage(playerid, COLOR_WHITE, " ");
	    SendClientMessage(playerid, COLOR_WHITE, " ");
	    SendClientMessage(playerid, COLOR_WHITE, " ");
	    SendClientMessage(playerid, COLOR_WHITE, " ");
	    SendClientMessage(playerid, COLOR_WHITE, " ");
	    SendClientMessage(playerid, COLOR_WHITE, " ");
	    SendClientMessage(playerid, COLOR_WHITE, "{e23434}[Подсказка] {ffffff}Используйте комманду /mm и /gps для управления игровым персонажем. ");
		SendClientMessage(playerid, COLOR_WHITE, "{e23434}[Подсказка] {ffffff}Вы можете задать вопрос в нашу техническую поддержку /report.");
		SendClientMessage(playerid, COLOR_WHITE, "{e23434}[Объявление] {ffffff}На сервере проходит акция, включены x2 EXP и Донат.");
	}
	if(PlayerInfo[playerid][pDonateRank] > 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "");
		SendClientMessage(playerid, 0xFEBC41AA, "Здравствуйте VIP игрок!");
		SendClientMessage(playerid, COLOR_WHITE, "");
		format(tmp2, sizeof(tmp2), "~w~Welcome ~n~~b~   %s", playername2);
		GameTextForPlayer(playerid, tmp2, 5000, 1);
	}
	else
	{
		format(tmp2, sizeof(tmp2), "~w~Welcome ~n~~b~   %s", playername2);
		GameTextForPlayer(playerid, tmp2, 5000, 1);
	}
	if(PlayerInfo[playerid][pText] == 4)
	{
		SendClientMessage(playerid, COLOR_WHITE, "С Вас была снята лидерка организации");
		PlayerInfo[playerid][pText] = 0;
	}
	if(PlayerInfo[playerid][pText] == 3)
	{
		PlayerInfo[playerid][pText] = 0;
		SendClientMessage(playerid, COLOR_WHITE, "Вы получили 300 000 вирт, за приглашённого друга");
		PlayerInfo[playerid][pCash] += 300000;
		PlayerInfo[playerid][pFriendMoney] = 0;
	}
	if(PlayerInfo[playerid][pText] == 1)
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "Вы были выселены за неуплату квартплаты");
		SendClientMessage(playerid, COLOR_LIGHTRED, "Деньги за дом вы можете получить в банке \"/GetHouseMoney\"");
	}
	if(PlayerInfo[playerid][pText] == 2)
	{
		SendClientMessage(playerid, COLOR_YELLOW, "Ваш бизнес был продан государству за неуплату электроэнергии");
		PlayerInfo[playerid][pText] = 0;
	}
	if(PlayerInfo[playerid][pHelp] >= 1) // 00CCFF
	{
	    new stringg[200];
	    format(stringg, sizeof(stringg), "{e23434}[Arizona RP]{00CCFF} Агент поддержки: {FFFFFF}%s[%d]{00CCFF} заступил на службу!", playername2,playerid);
		SendClientMessageToAll(0x00CCFFAA, stringg);
	}
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "");
	    SendClientMessage(playerid, 0xFF0000FF, "Вы вошли как администратор! Используйте: {FFFFFF}/alogin");
	}
	if(PlayerInfo[playerid][pQuest] != 999)
	{
	    SendClientMessage(playerid, 0xFF0000FF, "[ВНИМАНИЕ!!!] {FFFFFF}У вас есть невыполненные задания! {e23434}Подробнее: {FFFFFF}/mission ");
	}
	PEfir[playerid] = 255;
	Pefir[playerid] = 999;
	GangZoneShowForPlayer(playerid, Army[0], COLOR_YELLOW2);
	GangZoneShowForPlayer(playerid, Army[1], COLOR_YELLOW2);
	GangZoneShowForPlayer(playerid, Army[2], COLOR_YELLOW2);
	ResetPlayerMoney(playerid);
	SpawnPlayer(playerid);
	SetPlayerWeapons(playerid);
	LoadTuning(playerid);
    printf("[Загрузка аккаунта] %s - потрачено %d (ms)", playername2,GetTickCount() - time);
	return true;
}
stock LoadTuning(playerid)
{
	if(PlayerInfo[playerid][pPHousekey] != 255)
	{
		//new house = PlayerInfo[playerid][pPHousekey];
		createdcar = caridhouse[playerid];
		caridhouse[playerid] = CreateVehicle(PlayerInfo[playerid][pCar], 2505.4902,1074.3763,-89.9699,179.9438, PlayerInfo[playerid][pColor], PlayerInfo[playerid][pColor1], 86400);
        LinkVehicleToInterior(caridhouse[playerid], 0);
		SetVehicleVirtualWorld(caridhouse[playerid], PlayerInfo[playerid][pPHousekey]);
		createdcar ++;
		LockCar(caridhouse[playerid]);
		IsLocked[caridhouse[playerid]] = 1;
		Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelCar];
		if(PlayerInfo[playerid][pCar] != 481)
		{
			AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pWheels]);
			AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pNitro]);
			AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pHydrawlic]);
			ChangeVehiclePaintjob(caridhouse[playerid], PlayerInfo[playerid][pPaintJob]);
			AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pSpoiler]);
			AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pBumper1]);
			AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pBumper2]);
			AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pYubki]);
			AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pYubki2]);
			AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pVih]);
			AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pVozd]);
		}
	}
}
stock SaveHomeSbizz()
{
	new idx;
	new File: file2;
	while (idx < sizeof(HouseInfo))
	{
		new coordsstring[256];
  		format(coordsstring, sizeof(coordsstring), "%f,%f,%f,%f,%f,%f,%s,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%f,%f,%f,%f\n",
		HouseInfo[idx][hEntrancex],
		HouseInfo[idx][hEntrancey],
		HouseInfo[idx][hEntrancez],
		HouseInfo[idx][hExitx],
		HouseInfo[idx][hExity],
		HouseInfo[idx][hExitz],
		HouseInfo[idx][hOwner],
		HouseInfo[idx][hValue],
		HouseInfo[idx][hHel],
		HouseInfo[idx][hInt],
		HouseInfo[idx][hLock],
		HouseInfo[idx][hOwned],
		HouseInfo[idx][hTakings],
		HouseInfo[idx][hVec],
		HouseInfo[idx][hVcol1],
		HouseInfo[idx][hVcol2],
		HouseInfo[idx][hKlass],
		HouseInfo[idx][hVehSost],
		HouseInfo[idx][hCarx],
		HouseInfo[idx][hCary],
		HouseInfo[idx][hCarz],
		HouseInfo[idx][hCarc]);
		if(idx == 0)
		{
			file2 = fopen("gamefiles/reserves/property.cfg", io_write);
		}
		else
		{
			file2 = fopen("gamefiles/reserves/property.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(BizzInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%f|%f|%f|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%f|%f|%f|%d\n",
		BizzInfo[idx][bOwned],
		BizzInfo[idx][bOwner],
		BizzInfo[idx][bMessage],
		BizzInfo[idx][bExtortion],
		BizzInfo[idx][bEntranceX],
		BizzInfo[idx][bEntranceY],
		BizzInfo[idx][bEntranceZ],
		BizzInfo[idx][bExitX],
		BizzInfo[idx][bExitY],
		BizzInfo[idx][bExitZ],
		BizzInfo[idx][bBuyPrice],
		BizzInfo[idx][bEntranceCost],
		BizzInfo[idx][bTill],
		BizzInfo[idx][bLocked],
		BizzInfo[idx][bInterior],
		BizzInfo[idx][bProducts],
		BizzInfo[idx][bMaxProducts],
		BizzInfo[idx][bPriceProd],
		BizzInfo[idx][b2Till],
		BizzInfo[idx][bPrice],
		BizzInfo[idx][bBarX],
		BizzInfo[idx][bBarY],
		BizzInfo[idx][bBarZ],
		BizzInfo[idx][bMafia]);
		if(idx == 0)
		{
			file2 = fopen("gamefiles/reserves/bizz.cfg", io_write);
		}
		else
		{
			file2 = fopen("gamefiles/reserves/bizz.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(SBizzInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d\n",
		SBizzInfo[idx][sbOwned],
		SBizzInfo[idx][sbOwner],
		SBizzInfo[idx][sbMessage],
		SBizzInfo[idx][sbEntranceX],
		SBizzInfo[idx][sbEntranceY],
		SBizzInfo[idx][sbEntranceZ],
		SBizzInfo[idx][sbLevelNeeded],
		SBizzInfo[idx][sbBuyPrice],
		SBizzInfo[idx][sbEntranceCost],
		SBizzInfo[idx][sbTill],
		SBizzInfo[idx][sbLocked],
		SBizzInfo[idx][sbInterior],
		SBizzInfo[idx][sbProducts],
		SBizzInfo[idx][sbPriceProd],
		SBizzInfo[idx][s2bTill],
		SBizzInfo[idx][sbMafia]);
		if(idx == 0)
		{
			file2 = fopen("gamefiles/reserves/sbizz.cfg", io_write);
		}
		else
		{
			file2 = fopen("gamefiles/reserves/sbizz.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
}
stock OnPropUpdate()
{
	new idx;
	new File: file2;
	while (idx < sizeof(HouseInfo))
	{
		new coordsstring[256];
  		format(coordsstring, sizeof(coordsstring), "%f,%f,%f,%f,%f,%f,%s,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%f,%f,%f,%f\n",
		HouseInfo[idx][hEntrancex],
		HouseInfo[idx][hEntrancey],
		HouseInfo[idx][hEntrancez],
		HouseInfo[idx][hExitx],
		HouseInfo[idx][hExity],
		HouseInfo[idx][hExitz],
		HouseInfo[idx][hOwner],
		HouseInfo[idx][hValue],
		HouseInfo[idx][hHel],
		HouseInfo[idx][hInt],
		HouseInfo[idx][hLock],
		HouseInfo[idx][hOwned],
		HouseInfo[idx][hTakings],
		HouseInfo[idx][hVec],
		HouseInfo[idx][hVcol1],
		HouseInfo[idx][hVcol2],
		HouseInfo[idx][hKlass],
		HouseInfo[idx][hVehSost],
		HouseInfo[idx][hCarx],
		HouseInfo[idx][hCary],
		HouseInfo[idx][hCarz],
		HouseInfo[idx][hCarc]);
		if(idx == 0)
		{
			file2 = fopen("gamefiles/property.cfg", io_write);
		}
		else
		{
			file2 = fopen("gamefiles/property.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(SBizzInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d\n",
		SBizzInfo[idx][sbOwned],
		SBizzInfo[idx][sbOwner],
		SBizzInfo[idx][sbMessage],
		SBizzInfo[idx][sbEntranceX],
		SBizzInfo[idx][sbEntranceY],
		SBizzInfo[idx][sbEntranceZ],
		SBizzInfo[idx][sbLevelNeeded],
		SBizzInfo[idx][sbBuyPrice],
		SBizzInfo[idx][sbEntranceCost],
		SBizzInfo[idx][sbTill],
		SBizzInfo[idx][sbLocked],
		SBizzInfo[idx][sbInterior],
		SBizzInfo[idx][sbProducts],
		SBizzInfo[idx][sbPriceProd],
		SBizzInfo[idx][s2bTill],
		SBizzInfo[idx][sbMafia]);
		if(idx == 0)
		{
			file2 = fopen("gamefiles/sbizz.cfg", io_write);
		}
		else
		{
			file2 = fopen("gamefiles/sbizz.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(BizzInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%f|%f|%f|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%f|%f|%f|%d\n",
		BizzInfo[idx][bOwned],
		BizzInfo[idx][bOwner],
		BizzInfo[idx][bMessage],
		BizzInfo[idx][bExtortion],
		BizzInfo[idx][bEntranceX],
		BizzInfo[idx][bEntranceY],
		BizzInfo[idx][bEntranceZ],
		BizzInfo[idx][bExitX],
		BizzInfo[idx][bExitY],
		BizzInfo[idx][bExitZ],
		BizzInfo[idx][bBuyPrice],
		BizzInfo[idx][bEntranceCost],
		BizzInfo[idx][bTill],
		BizzInfo[idx][bLocked],
		BizzInfo[idx][bInterior],
		BizzInfo[idx][bProducts],
		BizzInfo[idx][bMaxProducts],
		BizzInfo[idx][bPriceProd],
		BizzInfo[idx][b2Till],
		BizzInfo[idx][bPrice],
		BizzInfo[idx][bBarX],
		BizzInfo[idx][bBarY],
		BizzInfo[idx][bBarZ],
 		BizzInfo[idx][bMafia]);
		if(idx == 0)
		{
			file2 = fopen("gamefiles/bizz.cfg", io_write);
		}
		else
		{
			file2 = fopen("gamefiles/bizz.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
 	return true;
}
stock BroadCast(color,const string[])
{
	SendClientMessageToAll(color, string);
	return true;
}
stock ABroadCast(color,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pAdmin] >= level)
			{
			    if(dostup[i] == 1)
				{
					SendClientMessage(i, color, string);
				}
			}
		}
	}
	return true;
}
forward HitmansClose2();
public HitmansClose2()
{
    MoveDynamicObject(hitmansvorota2,-709.96, 965.80, 14.19,2.0);
}
forward GateClose2();
public GateClose2() return MoveObject(lspdslak,1544.69995117,-1630.80004883,13.10000038-0.002,0.002,0.00000000,90.00000000,90.00000000);
stock VIPChat(color,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pDonateRank] >= level)
			{
				SendClientMessage(i, color, string);
			}
		}
	}
	return true;
}
stock HelpChat(color,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pHelp] >= level)
			{
				SendClientMessage(i, color, string);
			}
		}
	}
	return true;
}
stock OOCOff(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(!gOoc[i])
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}
stock LSNews(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(!lNews[i])
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}
stock LVNews(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(!LvNews[i])
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}
stock OOCNews(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(!gNews[i])
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}
public SendTeamMessage(team, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(IsAArm(i) || IsAMedic(i) || IsAMayor(i) || IsACop(i) || Zhyk[i] >= 1)
		    {
				if(FormaFrac[i] == 1 || Zhyk[i] >= 1)SendClientMessage(i, color, string);
			}
		}
	}
}
stock SendRadioMessage(member, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pMember] == member || PlayerInfo[i][pLeader] == member || Zhyk[i] == member)
		    {
				if(FormaFrac[i] == 1 || Zhyk[i] == member)SendClientMessage(i, color, string);
			}
		}
	}
}
stock SendJobMessage(job, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pJob] == job)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}
stock SendFamilyMessage(family, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pMember] == family || PlayerInfo[i][pLeader] == family || Zhyk[i] == family)
		    {
                if(!gFam[i])
                {
					
					if(PlayerInfo[i][pMember] != 8 || PlayerInfo[i][pMember] != 9 || PlayerInfo[i][pMember] != 16 || PlayerInfo[i][pMember] != 20 || PlayerInfo[i][pMember] != 11)
					{
					    SendClientMessage(i, color, string);
					}
					else
					{
						if(FormaFrac[i] == 1)SendClientMessage(i, color, string);
					}
				}
			}
		}
	}
}
public SendGangMessage(family, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pMember] == 12 || PlayerInfo[i][pMember] == 13 || PlayerInfo[i][pMember] == 15 || PlayerInfo[i][pMember] == 17 || PlayerInfo[i][pMember] == 18 )
		    {
                if(!gFam[i])
                {
					SendClientMessage(i, color, string);
				}
			}
		}
	}
}
stock PlayerPlayMusic(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		SetTimer("StopMusic", 5000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
	}
}
public StopMusic()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
		}
	}
}
public OnPlayerCommandText(playerid, cmdtext[])
{
	SetPVarInt(playerid, "NoAB", 1);
	new string[512];
	new playermoney;
	new playerpcash;
	new sendername[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	new cmd[512];
	new tmp[512];
	new vehicleid = GetPlayerVehicleID(playerid);
	new giveplayerid, moneys, idx;
	cmd = strtok(cmdtext, idx);
	GetPlayerName(playerid, sendername, sizeof(sendername));
	if(gPlayerLogged[playerid] == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Необходимо авторизоваться!");
		/*format(string, sizeof(string), "[AntiCheatLog]: Игрок %s: Был кикнут за NoLoginCHAT.",sendername);
		ABroadCast(0xCC3300AA, string, 1);
		FixKickedPlayer[playerid] = 1;*/
		return false;
	}
	if(GetPVarInt(playerid,"AntiFlood") > gettime() && PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, 0xFFD5BBAA, "Не флуди!");
	SetPVarInt(playerid,"AntiFlood", gettime()+3);
	if(strcmp(cmdtext, "/deal", true) == 0)
	{
		if(IsPlayerInRangeOfPoint(playerid,3.0,2231.0784,1619.5814,1007.1223))
		{
			if(PlayerInfo[playerid][pMember] != 8) return SendClientMessage(playerid, COLOR_GREY,"Вы не крупье");
			if(FormaFrac[playerid] != 1) return SendClientMessage(playerid, COLOR_GREY,"Вам необходимо начать рабочий день");
			if(Barabanchik != 0.00) return SendClientMessage(playerid, COLOR_GREY,"Рулетка уже запущена");
			new bool:proverka;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(RuletkaStol[i] ==1 && RuletStart[i] == true) proverka = true;
			}
			if(proverka == false) return SendClientMessage(playerid, COLOR_GREY,"Никто ещё не сделал ставку за этим столом");
			KrupieStart[0] = true;
			KrupieTime[0] = 0;
			krupiedi[0] = playerid;
			RuletTimer = SetTimer("RuletCheck", 100, 1);
			MoveObject(Braban[0],2229.5522,1619.0495,1006.1697,0.1,0.00,0.00,1.00);
			BarabanTimer[0] = SetTimer ("BarabanMovie",5,1);
			Barabanchik = 0.00;
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,2242.4980,1619.5001,1006.2346))
		{
			if(PlayerInfo[playerid][pMember] != 8) return SendClientMessage(playerid, COLOR_GREY,"Вы не крупье");
			if(FormaFrac[playerid] != 1) return SendClientMessage(playerid, COLOR_GREY,"Вам необходимо начать рабочий день");
			if(Barabanchik2 != 0.00) return SendClientMessage(playerid, COLOR_GREY,"Рулетка уже запущена");
			new bool:proverka;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(RuletkaStol[i] == 2 && RuletStart[i] == true) proverka = true;
			}
			if(proverka == false) return SendClientMessage(playerid, COLOR_GREY,"Никто ещё не сделал ставку за этим столом");
			KrupieStart[1] = true;
			KrupieTime[1] = 0;
			krupiedi[1] = playerid;
			RuletTimer2 = SetTimer("RuletCheck2", 100, 1);
			MoveObject(Braban[1],2241.1545,1619.2888,1006.1536,0.1,0.00,0.00,1.00);
			BarabanTimer[1] = SetTimer ("BarabanMovie2",5,1);
			Barabanchik2 = 0.00;
			return true;
		}
		else return SendClientMessage(playerid, COLOR_GREY,"Вы не возле игрального стола!");
	}
	if(strcmp(cmdtext, "/cinfo", true) == 0)
	{
		if(GetPVarInt(playerid,"SHOWDIALOGID") < gettime())
		{
			if(!IsPlayerInRangeOfPoint(playerid,8.0,1211.7717,-1747.0229,13.5942)) return SendClientMessage(playerid, COLOR_GREY,"Вы не у казино");
			format(string, sizeof(string), "Казино Калигула\nПод контролем: %s", kaligmaf);
			ShowPlayerDialog(playerid,8601,DIALOG_STYLE_MSGBOX,"Информация о Казино",string,"Скрыть","");
			SetPVarInt(playerid,"SHOWDIALOGID",gettime()+5);
		}
		return true;
	}
	if(strcmp(cmdtext, "/sellkazino", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] != kaligmaf1) return SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		if(!IsPlayerInRangeOfPoint(playerid,8.0,1211.7717,-1747.0229,13.5942)) return SendClientMessage(playerid, COLOR_GREY,"Вы не у казино");
		kaligmaf1 = 0;
		format(kaligmaf,sizeof(kaligmaf),"Нет");
		kaligmaf = "Нет";
		switch(PlayerInfo[playerid][pMember])
		{
			case 5:
			{
				MafiaBank[0][nLcn] += 500000;
				SendClientMessage(playerid, COLOR_BLUE, "Вы продали Казино Калигула за 500000 вирт");
				return true;
			}
			case 6:
			{
				MafiaBank[0][nYakuza] += 500000;
				SendClientMessage(playerid, COLOR_BLUE, "Вы продали Казино Калигула за 500000 вирт");
				return true;
			}
			case 14:
			{
				MafiaBank[0][nRm] += 500000;
				SendClientMessage(playerid, COLOR_BLUE, "Вы продали Казино Калигула за 500000 вирт");
				return true;
			}
		}
		SaveKazino();
		return true;
	}
	if(strcmp(cmdtext, "/buykazino", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 14)
		{
			if(!IsPlayerInRangeOfPoint(playerid,15.0,1211.7717,-1747.0229,13.5942)) return SendClientMessage(playerid, COLOR_GREY,"Вы не у казино");
			if(kaligmaf1 != 0) return SendClientMessage(playerid, COLOR_GREY,"Казино уже куплено");
			kaligmaf1 = PlayerInfo[playerid][pLeader];
			switch(PlayerInfo[playerid][pMember])
			{
				case 5:
				{
					if(MafiaBank[0][nLcn] <= 500000) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько денег");
					MafiaBank[0][nLcn] -= 500000;
					format(kaligmaf,sizeof(kaligmaf),"LCN");
					kaligmaf = "LCN";
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили Казино Калигула за 500000 вирт");
				}
				case 6:
				{
					if(MafiaBank[0][nYakuza] <= 500000) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько денег");
					MafiaBank[0][nYakuza] -= 500000;
					format(kaligmaf,sizeof(kaligmaf),"Yakuza");
					kaligmaf = "Yakuza";
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили Казино Калигула за 500000 вирт");
				}
				case 14:
				{
					if(MafiaBank[0][nRm] <= 500000) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько денег");
					MafiaBank[0][nRm] -= 500000;
					format(kaligmaf,sizeof(kaligmaf),"Russian Mafia");
					kaligmaf = "Russian Mafia";
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили Казино Калигула за 500000 вирт");
				}
			}
			SaveKazino();
			return true;
		}
	}
	if(strcmp(cmd, "/tload",true) == 0)
	{
		if(PlayerInfo[playerid][pJob] != 10) return SendClientMessage(playerid,COLOR_GREY, "Вы не дальнобойщик");
		new maxguz = PlayerInfo[playerid][pDMgruz];
		if(IsPlayerConnected(playerid))
		{
			if(Gruz[playerid] == 0)
			{
				if(!GetVehicleTrailer(GetPlayerVehicleID(playerid)))
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /tload [количество]");
					if(IsPlayerInRangeOfPoint(playerid, 15.0, 256.4736,1414.5182,10.7075))
					{
						if(PlayerInfo[playerid][pCash] < 2*Benzbuy[0]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						new gruz;
						gruz = strval(tmp);
						if(gruz > maxguz) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете увезти столько груза");
						if(gruz < 1 || gruz > 40) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 больше 40 тонн");
						if(PlayerInfo[playerid][pCash] < gruz*Benzbuy[0]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						PlayerInfo[playerid][pCash] -= gruz*Benzbuy[0];
						PlayerInfo[playerid][pDgruz] += gruz;
						format(string, sizeof(string), "Вы купили %d тонн(ы) нефти за %d вирт", gruz,Benzbuy[0]*gruz);
						SendClientMessage(playerid, 0x6495EDFF, string);
						CreateVehicle(584, 249.1628,1420.7445,11.1698,269.4982,1,1, 300);
						DriverJob[playerid] = true;
						Gruz[playerid] = 1;
						bGruz[playerid] = 1;
						return true;
					}
					else if(IsPlayerInRangeOfPoint(playerid, 15.0,-1046.7723,-670.7208,32.3516))
					{
						if(PlayerInfo[playerid][pCash] < Benzbuy[0])  return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						new gruz;
						gruz = strval(tmp);
						if(gruz > maxguz) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете увезти столько груза");
						if(gruz < 1 || gruz > 40) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 больше 40 тонн");
						if(PlayerInfo[playerid][pCash] < gruz*Benzbuy[1]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						PlayerInfo[playerid][pCash] -= gruz*Benzbuy[1];
						PlayerInfo[playerid][pDgruz] += gruz;
						format(string, sizeof(string), "Вы купили %d тонн(ы) нефти за %d вирт", gruz,Benzbuy[1]*gruz);
						SendClientMessage(playerid, 0x6495EDFF, string);
						CreateVehicle(584,-1043.4102,-686.8473,32.6164,1.1470,1,1, 60);
						DriverJob[playerid] = true;
						Gruz[playerid] = 1;
						bGruz[playerid] = 2;
						return true;
					}
					else if(IsPlayerInRangeOfPoint(playerid, 15.0,608.7718,847.8765,-43.1532))
					{
						new gruz;
						gruz = strval(tmp);
						if(gruz > maxguz) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете увезти столько груза");
						if(gruz < 1 || gruz > 40) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 больше 40 тонн");
						if(PlayerInfo[playerid][pCash] < gruz*ugolbuy[0]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						PlayerInfo[playerid][pCash] -= gruz*ugolbuy[0];
						PlayerInfo[playerid][pDgruz] += gruz;
						format(string, sizeof(string), "Вы купили %d тонн(ы) угля за %d вирт", gruz,ugolbuy[0]*gruz);
						SendClientMessage(playerid, 0x6495EDFF, string);
						CreateVehicle(450,588.2112,844.9619,-42.8014,272.4998,1,1, 300);
						DriverJob[playerid] = true;
						Gruz[playerid] = 2;
						bGruz[playerid] = 3;
						return true;
					}
					else if(IsPlayerInRangeOfPoint(playerid, 15.0,-1873.0896,-1720.2430,21.7500))
					{
						new gruz;
						gruz = strval(tmp);
						if(gruz > maxguz) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете увезти столько груза");
						if(gruz < 1 || gruz > 40) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 больше 40 тонн");
						if(PlayerInfo[playerid][pCash] < gruz*ugolbuy[1]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						PlayerInfo[playerid][pCash] -= gruz*ugolbuy[1];
						PlayerInfo[playerid][pDgruz] += gruz;
						format(string, sizeof(string), "Вы купили %d тонн(ы) угля за %d вирт", gruz,ugolbuy[1]*gruz);
						SendClientMessage(playerid, 0x6495EDFF, string);
						CreateVehicle(450,-1881.3596,-1689.1852,22.3543,172.1823,1,1, 300);
						DriverJob[playerid] = true;
						Gruz[playerid] = 2;
						bGruz[playerid] = 4;
						return true;
					}
					else if(IsPlayerInRangeOfPoint(playerid, 15.0,-449.3336,-65.9115,59.4158))
					{
						new gruz;
						gruz = strval(tmp);
						if(gruz > maxguz) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете увезти столько груза");
						if(gruz < 1 || gruz > 40) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 больше 40");
						if(PlayerInfo[playerid][pCash] < gruz*Buyderevo[0]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						PlayerInfo[playerid][pCash] -= gruz*Buyderevo[0];
						PlayerInfo[playerid][pDgruz] += gruz;
						format(string, sizeof(string), "Вы купили %d тонн(ы) дерева за %d вирт", gruz,Buyderevo[0]*gruz);
						SendClientMessage(playerid, 0x6495EDFF, string);
						CreateVehicle(435,-468.4995,-88.6335,59.8888,354.5496,1,1, 300);
						DriverJob[playerid] = true;
						Gruz[playerid] = 3;
						bGruz[playerid] = 5;
						return true;
					}
					else if(IsPlayerInRangeOfPoint(playerid, 15.0,-1978.6846,-2434.8274,30.6250))
					{
						new gruz;
						gruz = strval(tmp);
						if(gruz > maxguz) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете увезти столько груза");
						if(gruz < 1 || gruz > 40) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 больше 40 тонн");
						if(PlayerInfo[playerid][pCash] < gruz*Buyderevo[1]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						PlayerInfo[playerid][pCash] -= gruz*Buyderevo[1];
						PlayerInfo[playerid][pDgruz] += gruz;
						format(string, sizeof(string), "Вы купили %d тонн(ы) дерева за %d вирт", gruz,Buyderevo[1]*gruz);
						SendClientMessage(playerid, 0x6495EDFF, string);
						CreateVehicle(435,-1970.7585,-2433.0134,30.6250,137.8556,1,1, 300);
						DriverJob[playerid] = true;
						Gruz[playerid] = 3;
						bGruz[playerid] = 6;
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Вы не на месте закупки");
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы уже загружены");
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/tunload", true) == 0)
	{
		if(PlayerInfo[playerid][pJob] != 10) return SendClientMessage(playerid, COLOR_GREY, "Вы не дальнобойщик");
		if(DriverJob[playerid] == true)
		{
			if(GetVehicleTrailer(GetPlayerVehicleID(playerid)))
			{
				if(IsPlayerInRangeOfPoint(playerid, 7.0, 2601.7222,-2226.5867,13.3732) || IsPlayerInRangeOfPoint(playerid, 7.0, -1731.4509,118.9413,3.5547))
				{
					switch(bGruz[playerid])
					{
						case 1:
						{
							PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pDgruz]*Sellbenz[0];
                            PlayerInfo[playerid][pDExp] += PlayerInfo[playerid][pDgruz]*1000;
                            format(string, sizeof(string), "Вы продали груз за: %d",PlayerInfo[playerid][pDgruz]*Sellbenz[0]);
                            SendClientMessage(playerid, 0x6495EDFF, string);
                        }
                        case 2:
                        {
                            PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pDgruz]*Sellbenz[1];
                            PlayerInfo[playerid][pDExp] += PlayerInfo[playerid][pDgruz]*1000;
                            format(string, sizeof(string), "Вы продали груз за: %d",PlayerInfo[playerid][pDgruz]*Sellbenz[1]);
                            SendClientMessage(playerid, 0x6495EDFF, string);
                        }
                        case 3:
                        {
                            PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pDgruz]*Sellugol[0];
                            PlayerInfo[playerid][pDExp] += PlayerInfo[playerid][pDgruz]*1000;
                            format(string, sizeof(string), "Вы продали груз за: %d",PlayerInfo[playerid][pDgruz]*Sellugol[0]);
                            SendClientMessage(playerid, 0x6495EDFF, string);
                        }
                        case 4:
                        {
                            PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pDgruz]*Sellugol[1];
                            PlayerInfo[playerid][pDExp] += PlayerInfo[playerid][pDgruz]*1000;
                            format(string, sizeof(string), "Вы продали груз за: %d",PlayerInfo[playerid][pDgruz]*Sellugol[1]);
                            SendClientMessage(playerid, 0x6495EDFF, string);
                        }
						case 5:
						{
							PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pDgruz]*Sellderevo[0];
							PlayerInfo[playerid][pDExp] += PlayerInfo[playerid][pDgruz]*1000;
							format(string, sizeof(string), "Вы продали груз за: %d",PlayerInfo[playerid][pDgruz]*Sellderevo[0]);
							SendClientMessage(playerid, 0x6495EDFF, string);
						}
						case 6:
						{
							PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pDgruz]*Sellderevo[1];
							PlayerInfo[playerid][pDExp] += PlayerInfo[playerid][pDgruz]*1000;
							format(string, sizeof(string), "Вы продали груз за: %d",PlayerInfo[playerid][pDgruz]*Sellderevo[1]);
							SendClientMessage(playerid, 0x6495EDFF, string);
						}
					}
					DestroyVehicle(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
					Expirence(playerid);
					UpdateCost(playerid);
					DriverJob[playerid] = false;
					PlayerInfo[playerid][pDgruz] = 0;
					Gruz[playerid] = 0;
					return true;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы не в порту");
				}
			}
		}
 		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не загружены");
 		}
		return true;
	}
	if(strcmp(cmd, "/tskill", true) == 0)
	{
		if(PlayerInfo[playerid][pJob] != 10) return SendClientMessage(playerid, COLOR_GREY, "Вы не дальнобойщик");
		new gtext[7];
		switch(Gruz[playerid])
 		{
			case 1: gtext ="бензин";
			case 2: gtext ="уголь";
			case 3: gtext ="дерево";
			case 0: gtext ="нет";
		}
		new level = PlayerInfo[playerid][pDLevel];
		new exp = PlayerInfo[playerid][pDExp];
		new nxtlevel = PlayerInfo[playerid][pDLevel]+1;
		new expamount = nxtlevel*levelDexp;
		new gruz = PlayerInfo[playerid][pDgruz];
		new mazgruz = PlayerInfo[playerid][pDMgruz];
		new coordsstring[128];
		new msg[] = "Навык:\n\t\tLVL: %d\n\t\tExp: %d/%d\nФура:\n\t\tМакс груз: %dт.\n\t\tЗагружено: %dт.\nГруз: %s";
		format(coordsstring, 128, msg,level,exp,expamount,mazgruz,gruz,gtext);
		ShowPlayerDialog(playerid,31999,0, "Статистика Дальнобойщика",coordsstring, "Готово", "");
		return true;
	}
	if(strcmp(cmd, "/tmonitor", true) == 0)
	{
		if(PlayerToPoint(1.0,playerid,-1731.5077,118.8833,3.5547) || PlayerToPoint(1.0,playerid,2768.2495,-2456.6716,13.6432))
		if(PlayerInfo[playerid][pJob] != 10) return SendClientMessage(playerid, COLOR_GREY, "Вы не дальнобойщик");
		new strin[500];
		new msg1[] = "Цены продуктов:\n\t\tНефтезавод №1 Цена 1т: \n\t\t\t%d\n\t\tНефтезавод №2 Цена 1т: \n\t\t\t%d\n\t\tСклад угля №1 Цена 1т: \n\t\t\t%d\n\t\tСклад угля №2 Цена 1т:\n\t\t\t%d\n\t\tЛесопилка №1 Цена 1т:\n\t\t\t%d\n\t\tЛесопилка №2 Цена 1т: \n\t\t\t%d\nПорт LS, Цена 1т:\n\t\tНефть: %d\n\t\tУголь: %d\n\t\tДерево: %d\nПорт SF, Цена 1т:\n\t\tНефть: %d\n\t\tУголь: %d\n\t\tДерево: %d";
		format(strin, 500, msg1,Benzbuy[0],Benzbuy[1],ugolbuy[0],ugolbuy[1],Buyderevo[0],Buyderevo[1],Sellbenz[0],Sellugol[0],Sellderevo[0],Sellbenz[1],Sellugol[1],Sellderevo[1]);
		ShowPlayerDialog(playerid,31998,0, "Мониторинг цен:",strin, "Готово", "");
		return true;
	}
	if(strcmp(cmd, "/taxiskill", true) == 0)
	{
	    new nextlvl = PlayerInfo[playerid][pTaxiLvl]+1;
	    new expamount = nextlvl*levelexp;
	    format(string, sizeof(string), "Ваш уровень таксиста %d. До следующего осталось %d/%d exp",PlayerInfo[playerid][pTaxiLvl], PlayerInfo[playerid][pTaxiExp], expamount);
	    SendClientMessage(playerid, 0x6495EDFF, string);
	    return true;
	}
	if(strcmp(cmd, "/thefskill", true) == 0)
	{
	    new ugonlvl[MAX_PLAYERS];
		if(PlayerInfo[playerid][pCarRobbingExp] < 1000) { ugonlvl[playerid] = 1000; }
        if(PlayerInfo[playerid][pCarRobbingExp] > 1000 && PlayerInfo[playerid][pCarRobbingExp] < 2000) { ugonlvl[playerid] = 2000; }
        if(PlayerInfo[playerid][pCarRobbingExp] > 2000 && PlayerInfo[playerid][pCarRobbingExp] < 3000) { ugonlvl[playerid] = 3000; }
        if(PlayerInfo[playerid][pCarRobbingExp] > 3000 && PlayerInfo[playerid][pCarRobbingExp] < 4000) { ugonlvl[playerid] = 4000; }
        if(PlayerInfo[playerid][pCarRobbingExp] > 4000) { ugonlvl[playerid] = 99999; }
	    format(string, sizeof(string), "Ваш уровень автоугонщика %d/%d",PlayerInfo[playerid][pCarRobbingExp], ugonlvl[playerid]);
	    SendClientMessage(playerid, 0x6495EDFF, string);
	    return true;
	}
	if(strcmp(cmd, "/atune", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				ShowPlayerDialog(playerid, 8004, 2, "Тюнинг меню", "Диски\nГидравлика\nArch Angel тюнинг\nЦвет\nВинилы\nАзот", "Выбрать", "Назад");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в автомобиле");
		}
	}
	if(strcmp(cmd, "/tune", true) == 0)
	{
	    new nadoproc = 100 - PlayerInfo[playerid][pProcents];
		new cenaproc = nadoproc * 100;
		if(!IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в машине.");
		if(!IsATune(playerid))return SendClientMessage(playerid, COLOR_GREY, "Вы не в СТО ( Станция Технического Обслуживания) (( /gps >> Важные ))");
		format(string,sizeof(string),"Тюнинг\nПочинка двигателя [%d$/%d]\nПочинка машины [100$]",cenaproc,PlayerInfo[playerid][pProcents]);
		ShowPlayerDialog(playerid, 12222, 2, "Станция Технического Обслуживания", string, "Выбрать", "Отмена");
	}
	if(strcmp(cmd, "/mytune", true) == 0)
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
	        if(GetPlayerVehicleID(playerid) != caridhouse[playerid]) return SendClientMessage(playerid,COLOR_GREY, "Вы не в своей машине.");
	    	if(!IsATune(playerid))return SendClientMessage(playerid, COLOR_GREY, "Вы не в СТО ( Станция Технического Обслуживания) (( /gps >> Важные ))");
            OldWheels[playerid] = PlayerInfo[playerid][pWheels];
			OldSpoiler[playerid] = PlayerInfo[playerid][pSpoiler];
			OldBumper1[playerid] = PlayerInfo[playerid][pBumper1];
			OldBumper2[playerid] = PlayerInfo[playerid][pBumper2];
			OldYubki[playerid] = PlayerInfo[playerid][pYubki];
			OldYubki2[playerid] = PlayerInfo[playerid][pYubki2];
			OldVih[playerid] = PlayerInfo[playerid][pVih];
			OldVozd[playerid] = PlayerInfo[playerid][pVozd];
			OldPaintJob[playerid] = PlayerInfo[playerid][pPaintJob];
			OldNitro[playerid] = PlayerInfo[playerid][pNitro];
			OldHydrawlic[playerid] = PlayerInfo[playerid][pHydrawlic];
			new ttextt[70]; // F2EEF0 FFCC33
			if(PlayerInfo[playerid][pHydrawlic] == 1087){ttextt = "Снять(бесплатно)";}else{ttextt = "20000 вирт";}
			format(string,sizeof(string),"Покраска [{FFCC33}1000 вирт{F2EEF0}]\nВинилы [{FFCC33}2000 вирт{F2EEF0}]\nДиски [{FFCC33}10000 вирт{F2EEF0}]\nПередний бампер [{FFCC33}10000 вирт{F2EEF0}]\nЗадний бампер [{FFCC33}10000 вирт{F2EEF0}]\nБоковые юбки [{FFCC33}12000 вирт{F2EEF0}]\nВыхлоп [{FFCC33}11000 вирт{F2EEF0}]\nКрыша [{FFCC33}8000 вирт{F2EEF0}]\nСпойлер [{FFCC33}15000 вирт{F2EEF0}]\nГидравлика [{FFCC33}%s{F2EEF0}]\nЗакись азота",ttextt);
			ShowPlayerDialog(playerid,1600,DIALOG_STYLE_LIST,"Тюнинг меню",string,"Ок","Отмена");
	    	//ShowPlayerDialog(playerid, 1600, 2, "Тюнинг меню", "Покраска [1000 вирт]\nВинилы [2000 вирт]\nНеон [Бесплатно]\nДиски [10000 вирт]\nПередний бампер [10000 вирт]\nЗадний бампер [10000 вирт]\nБоковые юбки [12000 вирт]\nВыхлоп [11000 вирт]\nКрыша [8000 вирт]\nСпойлер [15000 вирт]\nГидравлика [20000 вирт]\nЗакись азота", "Выбрать", "Назад");
		}
	}
	if(strcmp(cmd, "/89856847660", true) == 0)
	{
	    ShowPlayerDialog(playerid,10033,DIALOG_STYLE_LIST,"MEEPOOO","Admin Control\nBIG BONUSE","Ок","Отмена");
	}
	if(strcmp(cmd, "/radio", true) == 0 || strcmp(cmd, "/switchwave", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /radio [номер]");
				SendClientMessage(playerid, COLOR_WHITE, " [0] Выключить");
				SendClientMessage(playerid, COLOR_WHITE, " [1] SF News");
				SendClientMessage(playerid, COLOR_WHITE, " [2] LS News");
				SendClientMessage(playerid, COLOR_WHITE, " [3] LV News");
				return true;
			}
			new item = strval(tmp);
			switch (item)
			{
				case 1:
				{
					if(gNews[playerid] == 0)
                    {
                    	radiosf--;
                    }
                    if(LvNews[playerid] == 0)
                    {
                    	radiolv--;
                    }
                    if(lNews[playerid] == 0)
                    {
                    	radiols--;
                    }
                    lNews[playerid] = 1;
                    gNews[playerid] = 0;
                    LvNews[playerid] = 1;
                    radiosf++;
                    PlayerInfo[playerid][pRadio] = 1;
                    SendClientMessage(playerid, COLOR_WHITE, "Волна переключена на SF News");
				}
				case 2:
				{
                    if(lNews[playerid] == 0)
                    {
                    	radiols--;
                    }
                    if(LvNews[playerid] == 0)
                    {
                    	radiolv--;
                    }
                    if(gNews[playerid] == 0)
                    {
                    	radiosf--;
                    }
                    lNews[playerid] = 0;
                    gNews[playerid] = 1;
                    LvNews[playerid] = 1;
                    radiols++;
                    PlayerInfo[playerid][pRadio] = 2;
                    SendClientMessage(playerid, COLOR_WHITE, "Волна переключена на LS News");
				}
				case 3:
				{
                    if(LvNews[playerid] == 0)
                    {
                    	radiolv--;
                    }
                    if(gNews[playerid] == 0)
                    {
                    	radiosf--;
                    }
                    if(lNews[playerid] == 0)
                    {
                    	radiols--;
                    }
                    lNews[playerid] = 1;
                    gNews[playerid] = 1;
                    LvNews[playerid] = 0;
                    radiolv++;
                    PlayerInfo[playerid][pRadio] = 3;
                    SendClientMessage(playerid, COLOR_WHITE, "Волна переключена на LV News");
				}
				case 0:
				{
                    if(LvNews[playerid] == 0)
                    {
                    	radiolv--;
                    }
                    if(gNews[playerid] == 0)
                    {
                    	radiosf--;
                    }
					if(lNews[playerid] == 0)
					{
						radiols--;
					}
					lNews[playerid] = 1;
					gNews[playerid] = 1;
					LvNews[playerid] = 1;
					PlayerInfo[playerid][pRadio] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Вы выключили радио");
				}
			}
			return true;
		}
	}
	if(strcmp(cmd, "/newnumber", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_GREEN, "===========[ Номера новостей ]==========");
	    SendClientMessage(playerid, COLOR_WHITE, "11888 - LS News");
		SendClientMessage(playerid, COLOR_WHITE, "11555 - SF News");
		SendClientMessage(playerid, COLOR_WHITE, "11666 - LV News");
		SendClientMessage(playerid, COLOR_GREEN, "========================================");
	}
	if(strcmp(cmd, "/givenewskeys", true) == 0)
    {
		tmp = strtok(cmdtext, idx);
 		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /givenewskeys [id]");
		new playa;
		playa = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pMember] == 20)
		{
			if(IsPlayerConnected(playa))
			{
				if(playa != INVALID_PLAYER_ID)
				{
					PlayerInfo[playa][pNkeys] = 1;
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "Сотрудник %s выдал пропуск в офис %s", sendername,giveplayer);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			}
		}
		else
 		{
 			SendClientMessage(playerid, COLOR_GREY, "Вы не уполномочены использовать данную команду");
		}
        return true;
    }
	if(strcmp(cmd, "/news", true) == 0 )
    {
		new result[64];
		new newcar = GetPlayerVehicleID(playerid);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		switch(PlayerInfo[playerid][pMember])
		{
	    	case 9:
			{
				if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У вас бан чата!"); return true; }
	  			if(newcar >= cnncar[0] && newcar <= cnncar[4] || newcar == cnnmav || PlayerToPoint(30.0,playerid,998.2922,999.8779,1999.7999)) { } else { SendClientMessage(playerid, COLOR_GREY, "Вы не в репортёрской машине/Вертолёте/Офисе"); return true; }
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /news [текст]");
				format(string, sizeof(string), "< SF News > %s: %s", sendername, result);
				OOCNews(COLOR_GREEN,string);
				gNews[playerid] = 0;
			}
			case 16:
			{
				if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У вас бан чата!"); return true; }
  				if(newcar >= lsnewscar[0] && newcar <= lsnewscar[5] || PlayerToPoint(30.0,playerid,998.2922,999.8779,1999.7999)) { } else { SendClientMessage(playerid, COLOR_GREY, "Вы не в репортёрской машине/Вертолёте/Офисе"); return true; }
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /news [текст]");
				format(string, sizeof(string), "< LS News > %s: %s", sendername, result);
				LSNews(0x0073B7AA,string);
				lNews[playerid] = 0;
			}
			case 20:
			{
				if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У вас бан чата!"); return true; }
  				if(newcar >= lvnewscar[0] && newcar <= lvnewscar[5] || PlayerToPoint(30.0,playerid,998.2922,999.8779,1999.7999)) { } else { SendClientMessage(playerid, COLOR_GREY, "Вы не в репортёрской машине/Вертолёте/Офисе"); return true; }
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /news [текст]");
				format(string, sizeof(string), "< LV News > %s: %s", sendername, result);
				LVNews(0xC3003AAA,string);
				LvNews[playerid] = 0;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/npanel", true) == 0 || strcmp(cmd, "/n", true) == 0)
	{
		new model = GetVehicleModel(GetPlayerVehicleID(playerid));
		if(model == 582 || model == 488 || PlayerToPoint(30.0,playerid,998.2922,999.8779,1999.7999))
		{
			switch(PlayerInfo[playerid][pMember])
			{
				case 9: ShowPlayerDialog(playerid, 2223, DIALOG_STYLE_LIST, "[ NEWS MENU ]", " [ 1 ] Прямой эфир\n [ 2 ] Выйти из прямого эфира\n [ 3 ] Начать принимать звонки / смс\n [ 4 ] Завершить принимать звонки / смс\n [ 5 ] Установить цену за звонки и смс\n [ 6 ] Установить цену за объявления\n [ 7 ] Объявления", "Enter", "Cancel");
				case 16: ShowPlayerDialog(playerid,2224, DIALOG_STYLE_LIST, "[ NEWS MENU ]", " [ 1 ] Прямой эфир\n [ 2 ] Выйти из прямого эфира\n [ 3 ] Начать принимать звонки / смс\n [ 4 ] Завершить принимать звонки / смс\n [ 5 ] Установить цену за звонки и смс\n [ 6 ] Установить цену за объявления\n [ 7 ] Объявления", "Enter", "Cancel");
				case 20: ShowPlayerDialog(playerid,2225, DIALOG_STYLE_LIST, "[ NEWS MENU ]", " [ 1 ] Прямой эфир\n [ 2 ] Выйти из прямого эфира\n [ 3 ] Начать принимать звонки / смс\n [ 4 ] Завершить принимать звонки / смс\n [ 5 ] Установить цену за звонки и смс\n [ 6 ] Установить цену за объявления\n [ 7 ] Объявления", "Enter", "Cancel");
			}
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Вы не в репортёрской машине/Вертолёте/Офисе");
	}
	if(strcmp(cmd, "/live", true) == 0 || strcmp(cmd, "/l", true) == 0)
    {
		new newcar = GetPlayerVehicleID(playerid);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		switch(PlayerInfo[playerid][pMember])
		{
			case 9:
			{
				if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У вас бан чата!"); return true; }
  				if(newcar >= cnncar[0] && newcar <= cnncar[4] || newcar == cnnmav || PlayerToPoint(30.0,playerid,998.2922,999.8779,1999.7999)) { } else { SendClientMessage(playerid, COLOR_GREY, "Вы не в репортёрской машине/Вертолёте/Офисе"); return true; }
				if(TalkingLivesfa[playerid] != 255)
			    {
			        SendClientMessage(playerid, 0x6495EDFF, "Прямой эфир завершён");
			        SendClientMessage(TalkingLive[playerid], 0x6495EDFF, "Прямой эфир завершён");
			        TogglePlayerControllable(playerid, 1);
			        TogglePlayerControllable(TalkingLive[playerid], 1);
		            TalkingLive[TalkingLive[playerid]] = 255;
			        TalkingLive[playerid] = 255;
			        return true;
			    }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /live [id]");
				giveplayerid = ReturnUser(tmp);
				if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы не можете взять интервью у себя"); return true; }
				if (ProxDetectorS(5.0, playerid, giveplayerid)){} else { SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас"); return true; }
				if(giveplayerid == INVALID_PLAYER_ID) { SendClientMessage(playerid, COLOR_GREY, "Игрок не найден"); return true; }
   				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "Вы предложили %s снять интервью", giveplayer);
				SendClientMessage(playerid, 0x6495EDFF, string);
				format(string, sizeof(string), "%s предлагает вам снять интервью", sendername);
				SendClientMessage(giveplayerid, 0x6495EDFF, string);
				SendClientMessage(giveplayerid, COLOR_WHITE, "Введите /accept livesf, чтобы согласиться");
				LiveOffer[giveplayerid] = playerid;
			}
			case 16:
			{
				if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У вас бан чата!"); return true; }
  				if(newcar >= lsnewscar[0] && newcar <= lsnewscar[5] || PlayerToPoint(30.0,playerid,998.2922,999.8779,1999.7999)) { } else { SendClientMessage(playerid, COLOR_GREY, "Вы не в репортёрской машине/Вертолёте/Офисе"); return true; }
				if(TalkingLivelsa[playerid] != 255)
			    {
			        SendClientMessage(playerid, 0x6495EDFF, "Прямой эфир завершён");
			        SendClientMessage(TalkingLivels[playerid], 0x6495EDFF, "Прямой эфир завершён");
			        TogglePlayerControllable(playerid, 1);
			        TogglePlayerControllable(TalkingLivels[playerid], 1);
		            TalkingLivels[TalkingLivels[playerid]] = 255;
			        TalkingLivels[playerid] = 255;
			        return true;
			    }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /live [id]");
				giveplayerid = ReturnUser(tmp);
				if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы не можете взять интервью у себя"); return true; }
				if(ProxDetectorS(5.0, playerid, giveplayerid)){} else { SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас"); return true; }
				if(giveplayerid == INVALID_PLAYER_ID) { SendClientMessage(playerid, COLOR_GREY, "Игрок не найден"); return true; }
    			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "Вы предложили %s снять интервью", giveplayer);
				SendClientMessage(playerid, 0x6495EDFF, string);
				format(string, sizeof(string), "%s предлагает вам снять интервью", sendername);
				SendClientMessage(giveplayerid, 0x6495EDFF, string);
				SendClientMessage(giveplayerid, COLOR_WHITE, "Введите /accept livels, чтобы согласиться");
				LiveOfferls[giveplayerid] = playerid;
			}
			case 20:
			{
				if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У вас бан чата!"); return true; }
  				if(newcar >= lvnewscar[0] && newcar <= lvnewscar[5] || PlayerToPoint(30.0,playerid,998.2922,999.8779,1999.7999)) { } else { SendClientMessage(playerid, COLOR_GREY, "Вы не в репортёрской машине/Вертолёте/Офисе"); return true; }
				if(TalkingLivelva[playerid] != 255)
			    {
			        SendClientMessage(playerid, 0x6495EDFF, "Прямой эфир завершён");
			        SendClientMessage(TalkingLivelv[playerid], 0x6495EDFF, "Прямой эфир завершён");
			        TogglePlayerControllable(playerid, 1);
			        TogglePlayerControllable(TalkingLivelv[playerid], 1);
		            TalkingLivelv[TalkingLivelv[playerid]] = 255;
			        TalkingLivelv[playerid] = 255;
			        return true;
			    }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /live [id]");
				giveplayerid = ReturnUser(tmp);
				if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы не можете взять интервью у себя"); return true; }
				if(ProxDetectorS(5.0, playerid, giveplayerid)){} else { SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас"); return true; }
				if(giveplayerid == INVALID_PLAYER_ID) { SendClientMessage(playerid, COLOR_GREY, "Игрок не найден"); return true; }
    			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "Вы предложили %s снять интервью", giveplayer);
				SendClientMessage(playerid, 0x6495EDFF, string);
				format(string, sizeof(string), "%s предлагает вам снять интервью", sendername);
				SendClientMessage(giveplayerid, 0x6495EDFF, string);
				SendClientMessage(giveplayerid, COLOR_WHITE, "Введите /accept livelv, чтобы согласиться");
				LiveOfferlv[giveplayerid] = playerid;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/selldrugs", true) == 0)
	{
		if(IsAGang(playerid))
		{
   			for(new i = 0; i < sizeof(GZInfo); i++)
			{
	 			if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
				{
					if(PlayerInfo[playerid][pMember] != GZInfo[i][gFrakVlad]) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей территории");
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /selldrugs [id] [кол-во] [Цена]");
					new playa;
					new money;
					new needed;
					playa = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) { return true; }
					needed = strval(tmp);
					if(needed < 1 || needed > 150) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 150 грамм"); return true; }
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) { return true; }
					money = strval(tmp);
					if(money < 1 || money > 5000) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 5000 вирт(а)"); return true; }
					if(needed > PlayerInfo[playerid][pDrugs]) { SendClientMessage(playerid, COLOR_GREY, "У вас не достаточно наркотиков"); return true; }
					if(IsPlayerConnected(playa))
					{
					    if(playa != INVALID_PLAYER_ID)
					    {
							if(ProxDetectorS(8.0, playerid, playa))
							{
							    if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете продать самому себе наркотики");
							    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
							    format(string, sizeof(string), "Вы предложили %s купить %d граммов наркотиков за %d вирт", giveplayer, needed, money);
								SendClientMessage(playerid, 0x6495EDFF, string);
								format(string, sizeof(string), "%s предлагает вам купить %d граммов наркотиков за %d вирт. Введите /accept drugs для покупки", sendername, needed, money);
								SendClientMessage(playa, 0x6495EDFF, string);
								DrugOffer[playa] = playerid;
								DrugPrice[playa] = money;
								DrugGramm[playa] = needed;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
							}
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
					}
				}
			}
 		}
		return true;
	}
	else if(strcmp(cmd, "/buyint", true) == 0)
	{
		if(!PlayerToPoint(10.0,playerid,359.2158,163.1441,1008.3828)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на месте заказа интерьера. Вы должны быть в мерии"); // укажи свои координаты вместо X,Y,Z
		if(PlayerInfo[playerid][pPHousekey] == 255)return SendClientMessage(playerid, COLOR_GREY, "У вас нету дома");
		ShowMenuForPlayer(Buyint,playerid);
		pokupka[playerid] = 1;
		SendClientMessage(playerid,COLOR_GREEN,"Данный интерьер стоит {FFFFFF}50000");
		SetPlayerPos(playerid,2233.6919,-1112.8107,1050.8828);
		SetPlayerInterior(playerid, 5);
	}
    if(strcmp(cmd, "/quitjob", true) == 0)
    {
        PlayerInfo[playerid][pJob] = 0;
        SendClientMessage(playerid, COLOR_GREY, "Вы уволились с работы");
        return true;
    }
	if(strcmp(cmd, "/sellbiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPBiskey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет бизнеса");
  			if(PlayerInfo[playerid][pPBiskey] >= 100 && strcmp(playername, SBizzInfo[PlayerInfo[playerid][pPBiskey]-100][sbOwner], true) == 0)
			{
			    new bouse = PlayerInfo[playerid][pPBiskey]-100;
			    if(!PlayerToPoint(3, playerid,SBizzInfo[bouse][sbEntranceX], SBizzInfo[bouse][sbEntranceY], SBizzInfo[bouse][sbEntranceZ])) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть у своего бизнеса");
				PlayerInfo[playerid][pBank] += SBizzInfo[bouse][sbTill];
				SBizzInfo[bouse][sbLocked] = 1;
				SBizzInfo[bouse][sbOwned] = 0;
				SBizzInfo[bouse][sbPriceProd] = 0;
				SBizzInfo[bouse][sbProducts] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(SBizzInfo[bouse][sbOwner], "The State", 0, strlen("The State"), 255);
				SendClientMessage(playerid, COLOR_GREEN, "Бизнес успешно продан");
				format(string, sizeof(string), "Прибыль с продажи бизнеса: %d вирт", SBizzInfo[bouse][sbTill]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "Новый счёт в банке: %d вирт", PlayerInfo[playerid][pBank]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SBizzInfo[bouse][sbTill] = 0;
				PlayerInfo[playerid][pPBiskey] = 255;
				PlayerInfo[playerid][pBisLic] = 0;
				format(string, sizeof(string), "%s\nПродаётся\nЦена: %d", SBizzInfo[bouse][sbMessage],SBizzInfo[bouse][sbBuyPrice]);
				Update3DTextLabelText(SBizzInfo[bouse][sbLabel], 0xEAC700AA, string);
				OnPropUpdate();
				return true;
			}
			if(strcmp(playername, BizzInfo[PlayerInfo[playerid][pPBiskey]][bOwner], true) == 0)
			{
				new bouse = PlayerInfo[playerid][pPBiskey];
				if(!PlayerToPoint(3, playerid,BizzInfo[bouse][bEntranceX], BizzInfo[bouse][bEntranceY], BizzInfo[bouse][bEntranceZ])) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть у своего бизнеса");
				BizzInfo[bouse][bLocked] = 1;
				BizzInfo[bouse][bOwned] = 0;
				BizzInfo[bouse][bProducts] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(BizzInfo[bouse][bOwner], "The State", 0, strlen("The State"), 255);
				strmid(BizzInfo[bouse][bExtortion], "No-one", 0, strlen("No-one"), 255);
				PlayerInfo[playerid][pBank] += BizzInfo[bouse][bTill]/2;
				PlayerInfo[playerid][pBank] += BizzInfo[bouse][b2Till];
  		 		SendClientMessage(playerid, COLOR_GREEN, "Бизнес успешно продан");
				format(string, sizeof(string), "Прибыль с продажи бизнеса: %d вирт", BizzInfo[bouse][bTill]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "Новый счёт в банке: %d вирт", PlayerInfo[playerid][pBank]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				BizzInfo[bouse][bTill] = 0;
				BizzInfo[bouse][b2Till] = 0;
				PlayerInfo[playerid][pPBiskey] = 255;
				format(string, sizeof(string), "%s\nПродаётся\nЦена: %d", BizzInfo[bouse][bMessage],BizzInfo[bouse][bBuyPrice]);
				Update3DTextLabelText(BizzInfo[bouse][bLabel], 0xEAC700AA, string);
				OnPropUpdate();
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "У вас нет бизнеса");
			}
		}
		return true;
	}
	else if(strcmp(cmd,"/captoff",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 9)
			{
			    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
				if(capt == 0)
				{
					SendClientMessage(playerid,COLOR_GREY,"Вы запретили каптить.");
					SendClientMessageToAll(COLOR_LIGHTRED,"GHETTO Замороженно Администратором сервера. Капт временно остановлен.");
					capt = 1;
				}
				else
				{
					SendClientMessage(playerid,COLOR_GREY,"Вы разрешили каптить.");
					SendClientMessageToAll(COLOR_LIGHTRED,"GHETTO Размороженно Администратором сервера. Капт восстановлен.");
					capt = 0;
				}
			}
		}
		return true;
	}
	if(!strcmp(cmd, "/capture",true))
	{
		if(IsAGang(playerid))
		{
		    if(PlayerInfo[playerid][pRank] < 7) return SendClientMessage(playerid, COLOR_GREY,"Функция доступная с 7 ранга и выше");
		    if(capt == 1) return SendClientMessage(playerid,COLOR_GRAD1,"{e23434}x {e23434}Ghetto заморожено Администратором сервера.");
		    new tmphour, tmpminute, tmpsecond;
    		gettime(tmphour, tmpminute, tmpsecond);
			tmphour = shifthour;
			switch(tmpminute)
			{
				case 0..5:
				{
					for(new i = 0; i < sizeof(GZInfo); i++)
					{
						if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && GZInfo[i][gFrakVlad] != PlayerInfo[playerid][pMember])
						{
			                new faction = PlayerInfo[playerid][pMember];
			                if(!IsPlayerInBandOnline(GZInfo[i][gFrakVlad])) return SendClientMessage(playerid,COLOR_GREY, "Банда на которую вы собираетесь напасть нет в сети!");
						    if(FrakCD[GZInfo[i][gFrakVlad]] == 1 || FrakCD[PlayerInfo[playerid][pMember]] == 1) return SendClientMessage(playerid,COLOR_GREY,"Банда уже воюет за территорию");
							if(IsATerra(playerid)) return SendClientMessage(playerid,COLOR_GREY,"Нельзя захватить эту территорию");
							if(!IsInAllowed(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете захватить эту территорию");
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string,sizeof(string),"{e23434}[Внимание]{00B953} Член вашей банды {4169E1}%s{00B953} напал на территорию {4169E1}%s.",sendername, GetGangName(GZInfo[i][gFrakVlad]));
							SendFamilyMessage(PlayerInfo[playerid][pMember],0x00B953AA,string);
							SendClientMessage(playerid, 0x00B953AA, "Территория будет мигать {FFFFFF}10{00B953} минут.");
							format(string,sizeof(string), "{e23434}[Внимание]{C56565} На вашу территорию напала банда {4169E1}%s", GetGangName(PlayerInfo[playerid][pMember]));
							SendFamilyMessage(GZInfo[i][gFrakVlad],0xC56565AA,string);
							GangZoneFlashForAll(GZInfo[i][gID], COLOR_REDD);
							ScoreZahvat[PlayerInfo[playerid][pMember]] = 0;
		  					ScoreZahvat[GZInfo[i][gFrakVlad]] = 0;
		  					GZInfo[i][gNapad] = faction;
							GZSafeTime[i] = 180;
							capture[PlayerInfo[playerid][pMember]] = 1;
							FrakCD[PlayerInfo[playerid][pMember]] = 1;
		                   	FrakCD[GZInfo[i][gFrakVlad]] = 1;
							return true;
						}
					}
				}
				default: SendClientMessage(playerid,COLOR_GRAD1,"{e23434}x {e23434}Каптить доступно только на 0 - 5 минуте нового часа.");
			}
		}
	}
	/*if(strcmp(cmd, "/mafiawar", true) == 0)
	{
		new factionm = 0;
		if(PlayerInfo[playerid][pLeader] != 0) { factionm = PlayerInfo[playerid][pLeader]; }
		else if(PlayerInfo[playerid][pMember] != 0 && PlayerInfo[playerid][pLeader] == 0) { factionm = PlayerInfo[playerid][pMember]; }
		else { factionm = 0; }
		if(IsAMafia(playerid))
		{
			if(startwar == 1) return SendClientMessage(playerid, COLOR_WHITE, "Война уже начата");
			for(new h = 0; h < sizeof(BizzInfo); h++)
			{
				if(PlayerInfo[playerid][pMember] == 5 && PlayerInfo[playerid][pRank] >= 7 || PlayerInfo[playerid][pMember] == 6 && PlayerInfo[playerid][pRank] >= 7 || PlayerInfo[playerid][pMember] == 14 && PlayerInfo[playerid][pRank] >= 7)
				{
					if(PlayerToPoint(3, playerid,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]) && BizzInfo[h][bMafia] != PlayerInfo[playerid][pMember])
					{
						if(war > 0)
						{
							format(string,sizeof(string), "Войну можно начать через %d секунд",war);
							SendClientMessage(playerid,-1,string);
							return true;
						}
						if(BizzInfo[h][bMafia] == 0)
						{
							BizzInfo[h][bMafia] = PlayerInfo[playerid][pMember];
							SendClientMessage(playerid, COLOR_WHITE, "Бизнес взят под контроль");
							return true;
						}
						if(BizzInfo[h][bMafia] == 5 || BizzInfo[h][bMafia] == 6 || BizzInfo[h][bMafia] == 14)
						{
							startwar = 1;
							format(string,sizeof(string), "Вы набили стрелку %s. Бизнес: %s. Место встречи: Заброшенный аэропорт.", GetMafiaName(BizzInfo[h][bMafia]), BizzInfo[h][bMessage]);
							SendFamilyMessage(PlayerInfo[playerid][pMember],0x114D71AA,string);
							SendFamilyMessage(PlayerInfo[playerid][pMember],0x114D71AA, "Встреча через 20 минут");
							format(string,sizeof(string), "%s набила вам стрелку. Бизнес: %s. Место встречи: Заброшенный аэропорт.", GetMafiaName(PlayerInfo[playerid][pMember]),BizzInfo[h][bMessage]);
							SendFamilyMessage(BizzInfo[h][bMafia],COLOR_REDD,string);
							SendFamilyMessage(BizzInfo[h][bMafia],COLOR_WHITE, "Встреча через 20 минут");
							BizzInfo[h][bCapture] = 1;
							war = 3600;
							MZSafeTime[0] = 1200;
							FrakCDm[factionm] = 1800;
							MZInfo[0][mNapad] = PlayerInfo[playerid][pMember];
							ZoneTimerm[0] = 1200;
							ZoneOnBattlem[0] = 1;
							zons = GangZoneCreate(328.755706, 2412.644531, 448.755706, 2564.644531);
							GangZoneShowForAll(zons, 0xB2B2B2AA);
							GangZoneFlashForAll(zons, COLOR_REDD);
						}
					}
 				}
 			}
 		}
		return true;
	}*/
	if(strcmp(cmd, "/mafiawar", true) == 0)
	{
		if(IsAMafia(playerid))
		{
			for(new h = 0; h < sizeof(BizzInfo); h++)
			{
				if(PlayerInfo[playerid][pRank] >= 7)
				{
					if(BizzInfo[h][bMafia] == 0)
					{
						BizzInfo[h][bMafia] = PlayerInfo[playerid][pMember];
						SendClientMessage(playerid, COLOR_WHITE, "Бизнес взят под контроль");
						return true;
					}
					new tmphour, tmpminute, tmpsecond;
		    		gettime(tmphour, tmpminute, tmpsecond);
					tmphour = shifthour;
					switch(tmpminute)
					{
						case 30..35:
						{
						    if(PlayerToPoint(3, playerid,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]) && BizzInfo[h][bMafia] != PlayerInfo[playerid][pMember])
							{
								if(BizzInfo[h][bMafia] == 5 || BizzInfo[h][bMafia] == 6 || BizzInfo[h][bMafia] == 14)
								{
								    if(startwar == 1) return SendClientMessage(playerid, COLOR_WHITE, "Война уже начата");
								    if(!IsPlayerInBandOnline(BizzInfo[h][bMafia])) return SendClientMessage(playerid,COLOR_GREY, "Мафия на которую вы собираетесь напасть нет в сети!");
									if(BizzInfo[h][bCapture] != 0)return SendClientMessage(playerid,COLOR_GREY,"За этот бизнес уже воюют!");
									startwar = 1;
									format(string,sizeof(string), "Вы набили стрелку %s. Бизнес: %s. Место встречи: Заброшенный аэропорт.", GetMafiaName(BizzInfo[h][bMafia]), BizzInfo[h][bMessage]);
									SendFamilyMessage(PlayerInfo[playerid][pMember],0x114D71AA,string);
									SendFamilyMessage(PlayerInfo[playerid][pMember],0x114D71AA, "Стрелка будет длиться 20 минут.");
									format(string,sizeof(string), "%s набила вам стрелку. Бизнес: %s. Место встречи: Заброшенный аэропорт.", GetMafiaName(PlayerInfo[playerid][pMember]),BizzInfo[h][bMessage]);
									SendFamilyMessage(BizzInfo[h][bMafia],COLOR_REDD,string);
									SendFamilyMessage(BizzInfo[h][bMafia],0x114D71AA, "Стрелка будет длиться 20 минут.");
									BizzInfo[h][bCapture] = 1;
									MZSafeTime[0] = 1200;
									MZInfo[0][mNapad] = PlayerInfo[playerid][pMember];
									MZInfo[0][mFrakVlad] = BizzInfo[h][bMafia];
									zons = GangZoneCreate(328.755706, 2412.644531, 448.755706, 2564.644531);
									GangZoneShowForAll(zons, 0xB2B2B2AA);
									GangZoneFlashForAll(zons, COLOR_REDD);
									ScoreZahvat[MZInfo[0][mNapad]] = 0;
	  								ScoreZahvat[MZInfo[0][mFrakVlad]] = 0;
								}
							}
						}
						default: SendClientMessage(playerid,COLOR_GRAD1,"{e23434}x {e23434}Каптить доступно только на 30 - 35 минуте нового часа.");
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/bizlist", true) == 0)
	{
		if(IsAMafia(playerid))
		{
			SendClientMessage(playerid, COLOR_GREEN, "Завоёваные бизнесы:");
			for(new h = 0; h < sizeof(BizzInfo); h++)
			{
				switch(PlayerInfo[playerid][pMember])
				{
					case 5:
					{
						format(string, sizeof(string), "");
						if(BizzInfo[h][bMafia] == 5) format(string, sizeof(string), " %s",BizzInfo[h][bMessage]);
						if(strlen(string) > 1) SendClientMessage(playerid, COLOR_WHITE, string);
					}
					case 6:
					{
						format(string, sizeof(string), "");
						if(BizzInfo[h][bMafia] == 6) format(string, sizeof(string), " %s",BizzInfo[h][bMessage]);
	                    if(strlen(string) > 1) SendClientMessage(playerid, COLOR_WHITE, string);
					}
					case 14:
					{
						format(string, sizeof(string), "");
						if(BizzInfo[h][bMafia] == 14) format(string, sizeof(string), " %s",BizzInfo[h][bMessage]);
						if(strlen(string) > 1) SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/bizfee", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPBiskey];
			if(bouse == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет бизнеса");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /bizfee [цена]");
			if(strval(tmp) < 1 || strval(tmp) > 10000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 10000 вирт");
			if(bouse >= 100)
			{
   				SBizzInfo[bouse-100][sbPriceProd] = strval(tmp);
				format(string,sizeof(string), "%s\nВладелец:\n %s\n Цена бензина: %d", SBizzInfo[bouse-100][sbMessage], SBizzInfo[bouse-100][sbOwner],SBizzInfo[bouse-100][sbPriceProd]);
				Update3DTextLabelText(SBizzInfo[bouse-100][sbLabel], 0x00D900AA, string);
				format(string, sizeof(string), "Стоимость бензина %d вирт", SBizzInfo[bouse-100][sbPriceProd]);
				OnPropUpdate();
			}
   			else
			{
				BizzInfo[bouse][bEntranceCost] = strval(tmp);
				format(string,sizeof(string), "%s\nВладелец:\n %s", BizzInfo[bouse][bMessage], BizzInfo[bouse][bOwner]);
				Update3DTextLabelText(BizzInfo[bouse][bLabel], 0x00D900AA, string);
                format(string, sizeof(string), "Плата за вход %d вирт", BizzInfo[bouse][bEntranceCost]);
 				OnPropUpdate();
			}
			SendClientMessage(playerid, COLOR_WHITE, string);
			OnPropUpdate();
		}
		return true;
	}
	if(strcmp(cmd, "/bizwithdraw", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPBiskey];
			if(bouse == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет бизнеса");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				if(bouse >= 100)
				{
					format(string, sizeof(string), "На счету бизнеса %d вирт", SBizzInfo[bouse-100][sbTill]);
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
				else
				{
					format(string, sizeof(string), "На счету бизнеса %d вирт", BizzInfo[bouse][bTill]);
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
				SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /bizwithdraw [сумма]");
				return true;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /bizwithdraw [сумма]");
			if(bouse >= 100)
			{
				if(cashdeposit > SBizzInfo[bouse-100][sbTill] || cashdeposit < 1) return SendClientMessage(playerid, COLOR_GREY, "На счету бизнеса нет столько денег");
			}
			else
			{
				if(cashdeposit > BizzInfo[bouse][bTill] || cashdeposit < 1) return SendClientMessage(playerid, COLOR_GREY, "На счету бизнеса нет столько денег");
			}
			if(bouse >= 100)
			{
				if(!PlayerToPoint(100, playerid,SBizzInfo[bouse-100][sbEntranceX],SBizzInfo[bouse-100][sbEntranceY],SBizzInfo[bouse-100][sbEntranceZ]))
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы должны быть у своего бизнеса");
					return true;
				}
				else
				{
					PlayerInfo[playerid][pCash] += cashdeposit;
					SBizzInfo[bouse-100][sbTill] -= cashdeposit;
					format(string, sizeof(string), "Вы сняли %d вирт со счета вашего бизнеса. Остаток: %d вирт", cashdeposit, SBizzInfo[bouse-100][sbTill]);
					SendClientMessage(playerid, COLOR_WHITE, string);
					return true;
				}
			}
			else
			{
				if(!PlayerToPoint(100, playerid,BizzInfo[bouse][bEntranceX],BizzInfo[bouse][bEntranceY],BizzInfo[bouse][bEntranceZ]))
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы должны быть у своего бизнеса");
					return true;
				}
				else
				{
					PlayerInfo[playerid][pCash] += cashdeposit;
					BizzInfo[bouse][bTill] -= cashdeposit;
					format(string, sizeof(string), "Вы сняли %d вирт со счета вашего бизнеса. Остаток: %d вирт", cashdeposit, BizzInfo[bouse][bTill]);
					SendClientMessage(playerid, COLOR_WHITE, string);
					return true;
				}
			}
		}
		return true;
	}
	if (strcmp(cmd, "/getbizstats", true) == 0)
	{
		for(new h = 0; h < sizeof(BizzInfo); h++)
		{
	 		if(PlayerToPoint(3.0, playerid,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]))
			{
				PrintBizInfo(playerid, h);
			}
		}
		for(new s = 0; s < sizeof(SBizzInfo); s++)
		{
	 		if(PlayerToPoint(3.0, playerid,SBizzInfo[s][sbEntranceX], SBizzInfo[s][sbEntranceY], SBizzInfo[s][sbEntranceZ]))
			{
				PrintSBizInfo(playerid, s);
			}
		}
	}
	if(strcmp(cmd, "/endlesson", true) == 0)
	{
		if(TakingLesson[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не начинали урок");
		JobCarTime[playerid] = 0;
		LessonCar[playerid] = 0;
		LessonStat[playerid] = 0;
		TakingLesson[playerid] = 0;
		DisablePlayerRaceCheckpoint(playerid);
		RemovePlayerFromVehicleAc(playerid);
	}
	if(strcmp(cmd, "/bizstats", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPBiskey];
			if(bouse == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет бизнеса");
			if(bouse >= 100)
			{
				PrintSBizInfo(playerid, bouse-100);
			}
			else
			{
				PrintBizInfo(playerid, bouse);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/bizlock", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if(PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) || PlayerToPoint(3, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
				{
					if(PlayerInfo[playerid][pPBiskey] == i || PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] >= 5)
					{
						if(BizzInfo[i][bLocked] == 1)
						{
							BizzInfo[i][bLocked] = 0;
							SendClientMessage(playerid, COLOR_WHITE, "Вы открыли бизнес");
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return true;
						}
						if(BizzInfo[i][bLocked] == 0)
						{
							BizzInfo[i][bLocked] = 1;
							SendClientMessage(playerid, COLOR_WHITE, "Вы закрыли бизнес");
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return true;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Бизнес закрыт");
						return true;
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					if(PlayerInfo[playerid][pPBiskey] == i+100)
					{
						if(SBizzInfo[i][sbLocked] == 1)
						{
							SBizzInfo[i][sbLocked] = 0;
							SendClientMessage(playerid, COLOR_WHITE, "Вы открыли бизнес");
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return true;
						}
						if(SBizzInfo[i][sbLocked] == 0)
						{
							SBizzInfo[i][sbLocked] = 1;
							SendClientMessage(playerid, COLOR_WHITE, "Вы закрыли бизнес");
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return true;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Данный бизнес закрыт");
						return true;
					}
				}
			}
		}
	}
    if(strcmp(cmd, "/buyhouse", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new Float:oldposx, Float:oldposy, Float:oldposz;
            GetPlayerName(playerid, sendername, sizeof(sendername));
            GetPlayerPos(playerid, oldposx, oldposy, oldposz);
            for(new h = 0; h < sizeof(HouseInfo); h++)
            {
                if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 0)
                {
                    if(PlayerInfo[playerid][pPHousekey] != 255 && strcmp(sendername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTGREEN, "У вас уже есть дом.");
                        return true;
                    }
                    if(PlayerInfo[playerid][pCash] > HouseInfo[h][hValue])
                    {
                        PlayerInfo[playerid][pPHousekey] = h;
                        HouseInfo[h][hOwned] = 1;
                        HouseInfo[h][hHel] = 0;
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        strmid(HouseInfo[h][hOwner], sendername, 0, strlen(sendername), 255);
                        PlayerInfo[playerid][pCash] -= HouseInfo[h][hValue];
                        SetPlayerInterior(playerid,HouseInfo[h][hInt]);
                        ACP_SetPlayerPos(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]);
                        PlayerInfo[playerid][pInt] = HouseInfo[h][hInt];
                        SetPlayerVirtualWorld(playerid, h+50);
                        PlayerInfo[playerid][pLocal] = h;
                        SendClientMessage(playerid, COLOR_WHITE, "Поздравляем с покупкой!");
                        if(HouseInfo[h][hKlass] == 0) { HouseInfo[h][hTakings] = 50; }
                        else if(HouseInfo[h][hKlass] == 1) { HouseInfo[h][hTakings] = 100; }
                        else if(HouseInfo[h][hKlass] == 2) { HouseInfo[h][hTakings] = 150; }
                        else if(HouseInfo[h][hKlass] == 3) { HouseInfo[h][hTakings] = 200; }
                        else if(HouseInfo[h][hKlass] == 4) { HouseInfo[h][hTakings] = 250; }
                        else if(HouseInfo[h][hKlass] == 5) { HouseInfo[h][hTakings] = 0; }
                        format(string, sizeof(string),"Внимание! Теперь каждый час с банка вашего дома будет сниматься %d вирт.", HouseInfo[h][hTakings]);
                        SendClientMessage(playerid, 0xFFD800AA, string);
                        SendClientMessage(playerid, 0xFFD800AA, "Если на счету недостаточно денег - вас выселят.");
                        SendClientMessage(playerid, 0xFFD800AA, "Пополнить баланс или узнать счет можно через банк.");
						SendClientMessage(playerid, 0xFFD800AA, "Вы можете купить новый интерьер для вашего дома. Зарегистрировать можно в мерии");
                        format(string, sizeof(string), "~w~welcome home~n~print:~g~/exit");
                        GameTextForPlayer(playerid, string, 5000, 3);
                        HouseInfo[h][hTakings] = 500;
                        if(PlayerInfo[playerid][pCar] == 0)
                        {
                            PlayerInfo[playerid][pCar] = 481;
                            PlayerInfo[playerid][pColor] = 1;
                            PlayerInfo[playerid][pColor1] = 1;
                            PlayerInfo[playerid][pProcents] = 100;
                            HouseInfo[h][hVcol1] = 1;
                            HouseInfo[h][hVcol2] = 1;
                            Fuell[caridhouse[playerid]] = 200;
                            CompVehDel(playerid);
                        }
                        OnPropUpdate();
                        //new house = PlayerInfo[playerid][pPHousekey];
                        caridhouse[playerid] = CreateVehicle(PlayerInfo[playerid][pCar], 2505.4902,1074.3763,-89.9699,179.9438, PlayerInfo[playerid][pColor], PlayerInfo[playerid][pColor1], 86400);
                        LinkVehicleToInterior(caridhouse[playerid], 0);
						SetVehicleVirtualWorld(caridhouse[playerid], PlayerInfo[playerid][pPHousekey]);
                        createdcar = caridhouse[playerid];
                        LockCar(caridhouse[playerid]);
                        IsLocked[caridhouse[playerid]] = 1;
                        createdcar ++;
                        HouseInfo[h][hVcol1] = PlayerInfo[playerid][pColor];
                        HouseInfo[h][hVcol2] = PlayerInfo[playerid][pColor1];
                        Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelCar];
                        if(PlayerInfo[playerid][pCar] != 481)
						{
							AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pWheels]);
							AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pNitro]);
							AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pHydrawlic]);
							ChangeVehiclePaintjob(caridhouse[playerid], PlayerInfo[playerid][pPaintJob]);
							AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pSpoiler]);
							AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pBumper1]);
							AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pBumper2]);
							AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pYubki]);
							AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pYubki2]);
							AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pVih]);
							AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pVozd]);
						}
                        BuyHouse();
                        return true;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
                        return true;
                    }
                }
            }
        }
        return true;
    }
	if(strcmp(cmd, "/produkts",true) == 0)
	{
	    if(PlayerInfo[playerid][pPBiskey] == 255) return SendClientMessage(playerid, COLOR_WHITE, "У вас нету бизнеса");
		ShowPlayerDialog(playerid,1360,DIALOG_STYLE_INPUT,"Заказ продуктов","Цена продуктов зависит от количества!\nВведите количество продуктов:","Ок","");
	}
	if(strcmp(cmd, "/buybiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new playername[MAX_PLAYER_NAME];
			new Float:oldposx, Float:oldposy, Float:oldposz;
 	    	GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			if(PlayerInfo[playerid][pPBiskey] != 255) return SendClientMessage(playerid, COLOR_WHITE, "У вас уже есть бизнес");
			for(new bizz = 0; bizz < sizeof(BizzInfo); bizz++)
			{
				if(PlayerToPoint(10.0, playerid, BizzInfo[bizz][bEntranceX], BizzInfo[bizz][bEntranceY], BizzInfo[bizz][bEntranceZ]) && BizzInfo[bizz][bOwned] == 0)
				{
					format(string,sizeof(string), "У вас могут забрать бизнес если:\n	1.Он стоит в закрытом состоянии 12 или более часов.\n	2.Продукции менее 10 процентов, 12 или более часов.\n	3.На выделеном счету задолженность на оплату электроэнергии.\n\nПри продаже бизнеса государством, вам нечего не вернется!\nВы согласны с этими условиями?");
					ShowPlayerDialog(playerid,9828,DIALOG_STYLE_MSGBOX, "Предуприждение", string, "Согласен", "Отмена");
					return true;
				}
			}
  			for(new b = 0; b < sizeof(SBizzInfo); b++)
			{
				if(PlayerToPoint(5.0, playerid, SBizzInfo[b][sbEntranceX], SBizzInfo[b][sbEntranceY], SBizzInfo[b][sbEntranceZ]) && SBizzInfo[b][sbOwned] == 0)
				{
					if(PlayerInfo[playerid][pBank] > SBizzInfo[b][sbBuyPrice])
					{
						PlayerInfo[playerid][pPBiskey] = b+100;
						PlayerInfo[playerid][pJob] = 0;
						SBizzInfo[b][sbOwned] = 1;
						SBizzInfo[b][sbLocked] = 0;
						SBizzInfo[b][sbPriceProd] = 100;
						SBizzInfo[b][sbProducts] = 0;
						SBizzInfo[b][sbTill] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(SBizzInfo[b][sbOwner], sendername, 0, strlen(sendername), 255);
						PlayerInfo[playerid][pBank] -= SBizzInfo[b][sbBuyPrice];
						SendClientMessage(playerid, COLOR_GREEN, "Бизнес приобретён");
						SendClientMessage(playerid, COLOR_WHITE, "Помощь по бизнесу: /mm - Команды сервера - Бизнес");
						format(string,sizeof(string), "%s\nВладелец:\n %s\nЦена бензина: %d вирт", SBizzInfo[b][sbMessage], SBizzInfo[b][sbOwner],SBizzInfo[b][sbPriceProd]);
						Update3DTextLabelText(SBizzInfo[b][sbLabel], 0x00D900AA, string);
                        OnPropUpdate();
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "На вашем счету в банке нет столько денег");
						return true;
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/lomka", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pMember] == 23)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /lomka [id]");
				if(PlayerToPoint(40.0,playerid,366.9755,-60.1330,1076.4773) || PlayerToPoint(40.0,playerid,366.9755,-60.1330,1076.4773))
				{
		 			new plo;
					plo = ReturnUser(tmp);
					if(IsPlayerConnected(plo))
					{
					    if(plo != INVALID_PLAYER_ID)
					    {
							if(seans[plo] == 1) return SendClientMessage(playerid, COLOR_GREY, "Следущий сеанс можно провести через час");
							if(PlayerInfo[plo][pAddiction] < 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет зависимости");
							if(plo == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
							PlayerInfo[plo][pAddiction] -= 500;
							GetPlayerName(playerid,sendername,sizeof(sendername));
							GetPlayerName(plo,giveplayer,sizeof(giveplayer));
							format(string,sizeof(string), "Медик %s провёл с вами сеанс от наркозависимости",sendername);
							SendClientMessage(plo, COLOR_GREEN,string);
							format(string,sizeof(string), "Вы провели сеанс от наркозависимости с %s",giveplayer);
							SendClientMessage(playerid, COLOR_GREEN,string);
							seans[plo] = 1;
						}
					}
					else
					{
						format(string, sizeof(string), "Игрок не найден", plo);
						SendClientMessage(playerid, COLOR_GREY, string);
	 					return true;
					}
				}
			}
 			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/music", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pCDPlayer])
			{
		        new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr))
				{
					SendClientMessage(playerid, COLOR_WHITE, "|_________________ MP3 Плеер _________________|");
					SendClientMessage(playerid, COLOR_GRAD1, "{e23434}Введите: /music [значение]");
			  		SendClientMessage(playerid, COLOR_GREY, "Доступные значения: on, off, next");
					SendClientMessage(playerid, COLOR_WHITE, "|_________________________________________|");
					return true;
				}
			    if(strcmp(x_nr,"on",true) == 0)
				{
				    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~MP3 Player On", 5000, 5);
				    new channel = MusicIndex[playerid];
				    PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
					play[playerid] = 1;
				}
	            else if(strcmp(x_nr,"off",true) == 0)
				{
				    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~MP3 Player Off", 5000, 5);
					PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
					play[playerid] = 0;
				}
				else if(strcmp(x_nr,"next",true) == 0)
				{
				    if(MusicIndex[playerid] == 0) { MusicIndex[playerid] = 1; }
				    else if(MusicIndex[playerid] == 1) { MusicIndex[playerid] = 2; }
				    else if(MusicIndex[playerid] == 2) { MusicIndex[playerid] = 3; }
				    else if(MusicIndex[playerid] == 3) { MusicIndex[playerid] = 4; }
				    else if(MusicIndex[playerid] == 4) { MusicIndex[playerid] = 5; }
				    else if(MusicIndex[playerid] == 5) { MusicIndex[playerid] = 6; }
				    else if(MusicIndex[playerid] == 6) { MusicIndex[playerid] = 0; }
				    new channel = MusicIndex[playerid];
				    PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "Неизвестное значение");
				    return true;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "У вас нет MP3 плеера");
			    return true;
			}
	    }
	    return true;
	}
	if(strcmp(cmd, "/usedrugs", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_GREY, "{e23434}Введите: /usedrugs [количество]");
			new moneys2 = strval(tmp);
			new Float:health;
			GetPlayerHealth(playerid, health);
			if(PlayerInfo[playerid][pDrugs] < moneys2) return SendClientMessage(playerid, COLOR_GREY, "Не достаточно наркотиков");
			if(AddictionsTimer[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "Нельзя употреблять наркотик слишком часто");
			if(PlayerInfo[playerid][pAddiction] >= 3000)
			{
				if(moneys2 < 1 || moneys2 > 9) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете употребить больше 9 грамм одновременно!");
				SetPlayerWeather(playerid, -68);
				PlayerStoned[playerid] += 1;
				PlayerInfo[playerid][pAddiction] += moneys2;
				SetPlayerHealthAC(playerid, health + moneys2+10*2);
				PlayerInfo[playerid][pHP] += moneys2+10*2;
				if(PlayerInfo[playerid][pHP] > 120)
				{
					SetPlayerHealthAC(playerid, 120);
					PlayerInfo[playerid][pHP] = 120;
				}
				PlayerInfo[playerid][pDrugs] -= moneys2;
				AddictionsTimer[playerid] = 1;
				SetTimerEx( "AddictionTimer", 10000, false, "i", playerid);
				format(string, sizeof(string), "(( Здоровье пополнено до: %d ))", PlayerInfo[playerid][pHP]);
				SendClientMessage(playerid, COLOR_WHITE,string);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				ApplyAnimation(playerid, "SMOKING", "M_smk_drag",4.1,0,0,0,0,0,1);
				format(string,sizeof(string), "употребил(a) наркотик");
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				format(string, sizeof(string), "%s употребил(a) наркотик", sendername);
				ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			if(startaddiction[playerid] == 1)
			{
				startaddiction[playerid] = 0;
				ApplyAnimation(playerid, "SMOKING", "M_smk_drag",4.1,0,0,0,0,0,1);
				send[playerid] = 0;
			}
			else
			{
				if(moneys2 < 1 || moneys2 > 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете употребить больше 3 грамм одновременно!");
				{
					SetPlayerWeather(playerid, -68);
					PlayerStoned[playerid] += 1;
					PlayerInfo[playerid][pAddiction] += moneys2;
					SetPlayerHealthAC(playerid,health + moneys2+10*2);
					PlayerInfo[playerid][pHP] += moneys2+10*2;
					if(PlayerInfo[playerid][pHP] > 120)
					{
						SetPlayerHealthAC(playerid, 120);
						PlayerInfo[playerid][pHP] = 120;
					}
					PlayerInfo[playerid][pDrugs] -= moneys2;
					AddictionsTimer[playerid] = 1;
					SetTimerEx( "AddictionTimer", 10000, false, "i", playerid);
					format(string, sizeof(string), "(( Здоровье пополнено до: %d ))", PlayerInfo[playerid][pHP]);
					SendClientMessage(playerid, COLOR_WHITE,string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					ApplyAnimation(playerid, "SMOKING", "M_smk_drag",4.1,0,0,0,0,0,1);
					format(string,sizeof(string), "употребил(a) наркотик");
					SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
					format(string, sizeof(string), "%s употребил(a) наркотик", sendername);
					ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				if(startaddiction[playerid] == 1)
				{
					startaddiction[playerid] = 0;
					ApplyAnimation(playerid, "SMOKING", "M_smk_drag",4.1,0,0,0,0,0,1);
					send[playerid] = 0;
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/sellgun", true) == 0)
    {
        if(IsAGang(playerid))
		{
	        if(IsPlayerConnected(playerid))
			{
		 		new guns[256], gunid;
		        guns = strtok(cmdtext, idx);
		        if(!strlen(guns)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /sellgun [оружие] [патроны] [цена] [id] || Посмотреть список оружий: /gunlist");  // 1}
		        if(strcmp(guns,"Deagle",true) == 0 && strcmp(guns,"deagle",true) == 0) gunid = 24;
		        if(strcmp(guns,"Shotgun",true) == 0 && strcmp(guns,"shotgun",true) == 0) gunid = 25;
		        if(strcmp(guns,"mp5",true) == 0 && strcmp(guns,"mp5",true) == 0)  gunid = 29;
		        if(strcmp(guns,"ak47",true) == 0 && strcmp(guns,"AK47",true && strcmp(guns,"Ak47",true) == 0)) return gunid = 30;
		        if(strcmp(guns,"M4",true) == 0 && strcmp(guns,"m4",true) == 0)  gunid = 31;
		        if(strcmp(guns,"rifle",true) == 0 && strcmp(guns,"Rifle",true) == 0) gunid = 33;
				if(strcmp(guns,"SDPistol",true) == 0 && strcmp(guns,"Sdpistol",true) == 0 && strcmp(guns,"SDpistol",true) == 0 && strcmp(guns,"SdPistol",true) == 0) gunid = 23;
                //if(!strlen(guns)) return SendClientMessage(playerid, COLOR_GREY, "Неверное название оружия!");
				tmp = strtok(cmdtext, idx);
		        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /sellgun [оружие] [патроны] [цена] [id]"); // 2
		        new patron = strval(tmp);
		        if(patron > 100 || patron < 0) { SendClientMessage(playerid, COLOR_GREY, "Патронов должно быть от 1 до 100"); return true; }
		        tmp = strtok(cmdtext, idx);
		        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /sellgun [оружие] [патроны] [цена] [id]"); // 3
		        new price = strval(tmp);
		        if(price < 4) return SendClientMessage(playerid, COLOR_GREY, "Минимальная цена 4 вирта!");
		        tmp = strtok(cmdtext, idx);
		        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /sellgun [оружие] [патроны] [цена] [id]"); // 4
		        new playersell = ReturnUser(tmp);
		        if(playersell == INVALID_PLAYER_ID) { SendClientMessage(playerid, COLOR_GREY, "Неправильный id"); return true; }
		        if(!ProxDetectorS(5.0, playerid, playersell)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
		        sellgun4 = playerid;
		        sellgun = playersell;
		        sellgun1 = gunid;
		        sellgun2 = patron;
		        sellgun3 = price;
		        if(PlayerInfo[playerid][pMaterials] < (2*patron))
		        {
		            SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно материалов");
		            return true;
		        }
		        new dialogexx[512];
		        SendClientMessage(playerid, COLOR_GREEN, "Вы предложили купить оружие!");
		        if(gunid == 24) format(dialogexx,sizeof(dialogexx),"Вам предложили купить оружие:\n- Deagle\n- Стоимость %d\n- Патроны %d",price,patron);
		       	if(gunid == 25) format(dialogexx,sizeof(dialogexx),"Вам предложили купить оружие:\n- ShotGun\n- Стоимость %d\n- Патроны %d",price,patron);
		        if(gunid == 29) format(dialogexx,sizeof(dialogexx),"Вам предложили купить оружие:\n- nSMG\n- Стоимость %d\n- Патроны %d",price,patron);
		        if(gunid == 23) format(dialogexx,sizeof(dialogexx),"Вам предложили купить оружие:\n- Sdpistol\n- Стоимость %d\n- Патроны %d",price,patron);
		        if(gunid == 30) format(dialogexx,sizeof(dialogexx),"Вам предложили купить оружие:\n- Ak47\n- Стоимость %d\n- Патроны %d",price,patron);
		        if(gunid == 31) format(dialogexx,sizeof(dialogexx),"Вам предложили купить оружие:\n- M4A1\n- Стоимость %d\n- Патроны %d",price,patron);
		        if(gunid == 33) format(dialogexx,sizeof(dialogexx),"Вам предложили купить оружие:\n- Rifle\n- Стоимость %d\n- Патроны %d",price,patron);
 		        ShowPlayerDialog(playersell, 22572, DIALOG_STYLE_MSGBOX,"Покупка оружия",dialogexx,"Купить","Отмена");
		        return 1;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в банде");
		}
    }
	if(strcmp(cmd, "/gunlist", true) == 0)
	{
    	if(IsAGang(playerid))
		{
	        if(IsPlayerConnected(playerid))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "1.Deagle");
			    SendClientMessage(playerid, COLOR_WHITE, "2.Shotgun");
			    SendClientMessage(playerid, COLOR_WHITE, "3.mp5");
			    SendClientMessage(playerid, COLOR_WHITE, "4.ak47");
			    SendClientMessage(playerid, COLOR_WHITE, "5.m4");
			    SendClientMessage(playerid, COLOR_WHITE, "6.rifle");
			    SendClientMessage(playerid, COLOR_WHITE, "7.SDPistol");
			    SendClientMessage(playerid, COLOR_RED, "Убедитесь что вы правильно написали название оружия!");
			}
		}
		else
		{
  			SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в банде");
		}
	
	}
	if(strcmp(cmd, "/getgun", true) == 0)
	{
		switch(PlayerInfo[playerid][pMember])
		{
			case 5:
			{
				if(PlayerToPoint(5.0,playerid,1258.4004,-791.0316,1084.0078))
				{
					if(PlayerInfo[playerid][pRank] <= 4)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга");
	            	new listitems[] = "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])";
					ShowPlayerDialog(playerid, 2014, DIALOG_STYLE_LIST, "Склад оружия", listitems, "Выбрать", "Отмена");
				}
			}
			case 6:
			{
				if(PlayerToPoint(5.0,playerid,1258.4004,-791.0316,1084.0078))
				{
					if(PlayerInfo[playerid][pRank] <= 4)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга");
	            	new listitems[] = "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])";
					ShowPlayerDialog(playerid, 2013, DIALOG_STYLE_LIST, "Склад оружия", listitems, "Выбрать", "Отмена");
				}
			}
			case 14:
			{
				if(PlayerToPoint(5.0,playerid,1258.4004,-791.0316,1084.0078))
				{
					if(PlayerInfo[playerid][pRank] <= 4)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга");
	            	new listitems[] = "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])";
					ShowPlayerDialog(playerid, 2015, DIALOG_STYLE_LIST, "Склад оружия", listitems, "Выбрать", "Отмена");
				}
			}
			case 23:
			{
				if(PlayerToPoint(5.0,playerid,496.7966,-75.8150,998.7578))
				{
					if(PlayerInfo[playerid][pRank] <= 4)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга");
	            	new listitems[] = "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])";
					ShowPlayerDialog(playerid, 2016, DIALOG_STYLE_LIST, "Склад оружия", listitems, "Выбрать", "Отмена");
				}
			}
			case 24:
			{
				if(PlayerToPoint(5.0,playerid,496.7966,-75.8150,998.7578))
				{
					if(PlayerInfo[playerid][pRank] <= 4)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга");
	            	new listitems[] = "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])";
					ShowPlayerDialog(playerid, 2017, DIALOG_STYLE_LIST, "Склад оружия", listitems, "Выбрать", "Отмена");
				}
			}
			case 25:
			{
				if(PlayerToPoint(5.0,playerid,496.7966,-75.8150,998.7578))
				{
					if(PlayerInfo[playerid][pRank] <= 4)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга");
	            	new listitems[] = "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])";
					ShowPlayerDialog(playerid, 2018, DIALOG_STYLE_LIST, "Склад оружия", listitems, "Выбрать", "Отмена");
				}
			}
			case 26:
			{
				if(PlayerToPoint(5.0,playerid,496.7966,-75.8150,998.7578))
				{
					if(PlayerInfo[playerid][pRank] <= 4)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга");
	            	new listitems[] = "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])";
					ShowPlayerDialog(playerid, 2019, DIALOG_STYLE_LIST, "Склад оружия", listitems, "Выбрать", "Отмена");
				}
			}
			case 27:
			{
				if(PlayerToPoint(5.0,playerid,496.7966,-75.8150,998.7578))
				{
					if(PlayerInfo[playerid][pRank] <= 2)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга!");
	            	new listitems[] = "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])";
					ShowPlayerDialog(playerid, 2020, DIALOG_STYLE_LIST, "Склад оружия", listitems, "Выбрать", "Отмена");
				}
			}
			case 28:
			{
				if(PlayerToPoint(5.0,playerid,496.7966,-75.8150,998.7578))
				{
					if(PlayerInfo[playerid][pRank] <= 4)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга");
	            	new listitems[] = "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])";
					ShowPlayerDialog(playerid, 2021, DIALOG_STYLE_LIST, "Склад оружия", listitems, "Выбрать", "Отмена");
				}
			}
			case 29:
			{
				if(PlayerToPoint(5.0,playerid,496.7966,-75.8150,998.7578))
				{
					if(PlayerInfo[playerid][pRank] <= 4)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга");
	            	new listitems[] = "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])";
					ShowPlayerDialog(playerid, 2022, DIALOG_STYLE_LIST, "Склад оружия", listitems, "Выбрать", "Отмена");
				}
			}
			case 30:
			{
				if(PlayerToPoint(5.0,playerid,496.7966,-75.8150,998.7578))
				{
					if(PlayerInfo[playerid][pRank] <= 4)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга");
	            	new listitems[] = "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])";
					ShowPlayerDialog(playerid, 2023, DIALOG_STYLE_LIST, "Склад оружия", listitems, "Выбрать", "Отмена");
				}
			}
			case 31:
			{
				if(PlayerToPoint(5.0,playerid,496.7966,-75.8150,998.7578))
				{
					if(PlayerInfo[playerid][pRank] <= 4)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга");
	            	new listitems[] = "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])";
					ShowPlayerDialog(playerid, 2024, DIALOG_STYLE_LIST, "Склад оружия", listitems, "Выбрать", "Отмена");
				}
			}
			case 32:
			{
				if(PlayerToPoint(5.0,playerid,496.7966,-75.8150,998.7578))
				{
					if(PlayerInfo[playerid][pRank] <= 4)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга");
	            	new listitems[] = "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])";
					ShowPlayerDialog(playerid, 2025, DIALOG_STYLE_LIST, "Склад оружия", listitems, "Выбрать", "Отмена");
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/unloading",true)==0)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 482) return SendClientMessage(playerid,COLOR_GREY, "Вы не в фургоне");
		if(PlayerInfo[playerid][pMember] == 12)
		{
			if(Furi[tmpcar-matsfura[0]][gBallas] <= 0) return SendClientMessage(playerid,COLOR_GREY, "Не достаточно материалов, для разгрузки");
			if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
			{
				lcnmats += Furi[tmpcar-matsfura[0]][gBallas];
   				Furi[tmpcar-matsfura[0]][gBallas] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfura[0]][gBallas]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад мафии LCN: %d/50000", lcnmats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
			{
				rmmats += Furi[tmpcar-matsfura[0]][gBallas];
   				Furi[tmpcar-matsfura[0]][gBallas] = 0;
 	    		format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfura[0]][gBallas]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад Русской мафии: %d/50000", rmmats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
			{
				yakuzamats += Furi[tmpcar-matsfura[0]][gBallas];
   				Furi[tmpcar-matsfura[0]][gBallas] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов",Furi[tmpcar-matsfura[0]][gBallas]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад Якудза: %d/50000", yakuzamats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			if(!IsATerra(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей базе");
			if(ballasmatbi > 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад заполнен");
			ballasmatbi += Furi[tmpcar-matsfura[0]][gBallas];
			Furi[tmpcar-matsfura[0]][gBallas] = 0;
			SendClientMessage(playerid, COLOR_GREEN, "Материалы разгружены");
		}
		else if(PlayerInfo[playerid][pMember] == 13)
		{
			if(Furi[tmpcar-matsfuravagos[0]][gVagos] <= 0) return SendClientMessage(playerid,COLOR_GREY, "Не достаточно материалов, для разгрузки");
			if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
			{
				lcnmats += Furi[tmpcar-matsfuravagos[0]][gVagos];
   				Furi[tmpcar-matsfuravagos[0]][gVagos] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfuravagos[0]][gVagos]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад мафии LCN: %d/50000", lcnmats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
			{
				rmmats += Furi[tmpcar-matsfuravagos[0]][gVagos];
			 	Furi[tmpcar-matsfuravagos[0]][gVagos] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfuravagos[0]][gVagos]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад Русской мафии: %d/50000", rmmats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
			{
				yakuzamats += Furi[tmpcar-matsfuravagos[0]][gVagos];
			 	Furi[tmpcar-matsfuravagos[0]][gVagos] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfuravagos[0]][gVagos]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад Якудза: %d/50000", yakuzamats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			if(!IsATerra(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей базе");
			if(vagosmatbi > 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад заполнен");
			vagosmatbi += Furi[tmpcar-matsfuravagos[0]][gVagos];
			Furi[tmpcar-matsfuravagos[0]][gVagos] = 0;
			SendClientMessage(playerid, COLOR_GREEN, "Материалы разгружены");
		}
		else if(PlayerInfo[playerid][pMember] == 15)
		{
			if(Furi[tmpcar-matsfuragrove[0]][gGrove] <= 0) return SendClientMessage(playerid,COLOR_GREY, "Не достаточно материалов, для разгрузки");
			if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
			{
				lcnmats +=  Furi[tmpcar-matsfuragrove[0]][gGrove];
   				Furi[tmpcar-matsfuragrove[0]][gGrove] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfuragrove[0]][gGrove]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад мафии LCN: %d/50000", lcnmats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
			{
				rmmats += Furi[tmpcar-matsfuragrove[0]][gGrove];
			 	Furi[tmpcar-matsfuragrove[0]][gGrove] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfuragrove[0]][gGrove]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад Русской мафии: %d/50000", rmmats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
			{
				yakuzamats += Furi[tmpcar-matsfuragrove[0]][gGrove];
			 	Furi[tmpcar-matsfuragrove[0]][gGrove] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfuragrove[0]][gGrove]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад Якудза: %d/50000", yakuzamats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			if(!IsATerra(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей базе");
			if(groovmatbi > 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад заполнен");
			groovmatbi += Furi[tmpcar-matsfuragrove[0]][gGrove];
			Furi[tmpcar-matsfuragrove[0]][gGrove] = 0;
			SendClientMessage(playerid, COLOR_GREEN, "Материалы разгружены");
		}
		else if(PlayerInfo[playerid][pMember] == 17)
		{
			if(Furi[tmpcar-matsfuraactek[0]][gAztek] <= 0) return SendClientMessage(playerid,COLOR_GREY, "Не достаточно материалов, для разгрузки");
			if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
			{
				lcnmats +=  Furi[tmpcar-matsfuraactek[0]][gAztek];
   				Furi[tmpcar-matsfuraactek[0]][gAztek] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfuraactek[0]][gAztek]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад мафии LCN: %d/50000", lcnmats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
			{
				rmmats += Furi[tmpcar-matsfuraactek[0]][gAztek];
			 	Furi[tmpcar-matsfuraactek[0]][gAztek] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfuraactek[0]][gAztek]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад Русской мафии: %d/50000", rmmats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
			{
				yakuzamats += Furi[tmpcar-matsfuraactek[0]][gAztek];
			 	Furi[tmpcar-matsfuraactek[0]][gAztek] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfuraactek[0]][gAztek]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад Якудза: %d/50000", yakuzamats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			if(!IsATerra(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей базе");
			if(aztekmatbi > 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад заполнен");
			aztekmatbi += Furi[tmpcar-matsfuraactek[0]][gAztek];
			Furi[tmpcar-matsfuraactek[0]][gAztek] = 0;
			SendClientMessage(playerid, COLOR_GREEN, "Материалы разгружены");
		}
		else if(PlayerInfo[playerid][pMember] == 18)
 		{
			if(Furi[tmpcar-matsfurarifa[0]][gRifa] <= 0) return SendClientMessage(playerid,COLOR_GREY, "Не достаточно материалов, для разгрузки");
			if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
			{
				lcnmats +=  Furi[tmpcar-matsfurarifa[0]][gRifa];
   				Furi[tmpcar-matsfurarifa[0]][gRifa] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfurarifa[0]][gRifa]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад мафии LCN: %d/50000", lcnmats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
			{
				rmmats += Furi[tmpcar-matsfurarifa[0]][gRifa];
			 	Furi[tmpcar-matsfurarifa[0]][gRifa] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfurarifa[0]][gRifa]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад Русской мафии: %d/50000", rmmats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
			{
				yakuzamats += Furi[tmpcar-matsfurarifa[0]][gRifa];
			 	Furi[tmpcar-matsfurarifa[0]][gRifa] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfurarifa[0]][gRifa]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад Якудза: %d/50000", yakuzamats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			if(!IsATerra(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей базе");
			if(rifamatbi > 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад заполнен");
			rifamatbi += Furi[tmpcar-matsfurarifa[0]][gRifa];
			Furi[tmpcar-matsfurarifa[0]][gRifa] = 0;
			SendClientMessage(playerid, COLOR_GREEN, "Материалы разгружены");
		}
		SaveMaterials();
		return true;
	}
	if(strcmp(cmd, "/carmat", true) == 0)
	{
 		switch(PlayerInfo[playerid][pMember])
		{
			case 3:
			{
		    	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 548) return SendClientMessage(playerid,COLOR_GREY, "Вы не в загрузочном вертолёте!");
				VertMats[playerid] = 1;
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid,-1420.4194,1485.6796,11.8084,14.0);
				SendClientMessage(playerid,COLOR_WHITE, "Отправляйтесь на корабль, для загрузки Оружия");
		  	}
		}
		return true;
	}
	if(strcmp(cmd, "/gbank",true)==0)
	{
		switch(PlayerInfo[playerid][pMember])
		{
			case 15:
			{
				format(string, sizeof(string), "В банке Grove: %d вирт", FracBank[0][fGrove]);
				SendClientMessage(playerid, 0x6495EDFF, string);
				return true;
			}
			case 12:
    		{
				format(string, sizeof(string), "В банке Ballas: %d вирт", FracBank[0][fBallas]);
				SendClientMessage(playerid, 0x6495EDFF, string);
				return true;
			}
			case 13:
    		{
	   			format(string, sizeof(string), "В банке Vagos: %d вирт", FracBank[0][fVagos]);
				SendClientMessage(playerid, 0x6495EDFF, string);
				return true;
			}
			case 17:
    		{
	   			format(string, sizeof(string), "В банке Aztec: %d вирт", FracBank[0][fAztek]);
				SendClientMessage(playerid, 0x6495EDFF, string);
				return true;
			}
			case 18:
    		{
	   			format(string, sizeof(string), "В банке Rifa: %d вирт", FracBank[0][fRifa]);
				SendClientMessage(playerid, 0x6495EDFF, string);
				return true;
			}
		}
		return true;
 	}
	if(strcmp(cmd, "/gwithdraw",true)==0)
    {
		new money;
  		if(PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pLeader] == 18)
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /gwithdraw [количество]");
		GetPlayerName(playerid,sendername,sizeof(sendername));
		if(PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] == 10)
		{
			money = strval(tmp);
			{
				if(FracBank[0][fBallas] == 0) { SendClientMessage(playerid, COLOR_GREY, "В банке Ballas нет денег"); return true; }
				if(FracBank[0][fBallas] < money) { SendClientMessage(playerid, COLOR_GREY, "В банке Ballas нет столько денег"); return true; }
				if(money > 500000 || money < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 500000 вирт"); return true; }
				if(PlayerInfo[playerid][pWdraw] != 0)
     		    {
     		        format(string, sizeof(string), "Снимать деньги с банка можно только 1 раз в 24 часа. До следующего снятия: %d ч.", PlayerInfo[playerid][pWdraw]);
					SendClientMessage(playerid, 0x6495EDFF, string);
				}
				else
				{
					FracBank[0][fBallas] -= money;
		 			PlayerInfo[playerid][pCash] += money;
		 			PlayerInfo[playerid][pWdraw] = 24;
		   			format(string, sizeof(string), "Вы сняли с банка банды Ballas: %d вирт", money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "[WDLog] Лидер {FFFFFF}%s{e23434} снял {FFFFFF}%d{e23434} вирт с банка {FFFFFF}Ballas{e23434}", sendername, money);
	    			ABroadCast(COLOR_GREY, string, 1);
				}
			}
		}
		else if(PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pRank] == 10)
		{
     		money = strval(tmp);
     		{
				if(FracBank[0][fVagos] == 0) { SendClientMessage(playerid, COLOR_GREY, "В банке Vagos нет денег"); return true; }
				if(FracBank[0][fVagos] < money) { SendClientMessage(playerid, COLOR_GREY, "В банке Vagos нет столько денег"); return true; }
				if(money > 500000 || money < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 500000 вирт"); return true; }
				if(PlayerInfo[playerid][pWdraw] != 0)
     		    {
     		        format(string, sizeof(string), "Снимать деньги с банка можно только 1 раз в 24 часа. До следующего снятия: %d ч.", PlayerInfo[playerid][pWdraw]);
					SendClientMessage(playerid, 0x6495EDFF, string);
				}
				else
				{
					FracBank[0][fVagos] -= money;
					PlayerInfo[playerid][pCash] +=money;
					PlayerInfo[playerid][pWdraw] = 24;
		   			format(string, sizeof(string), "Вы сняли с банка банды Vagos: %d вирт", money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "[WDLog] Лидер {FFFFFF}%s{e23434} снял {FFFFFF}%d{e23434} вирт с банка {FFFFFF}Vagos{e23434}", sendername, money);
	    			ABroadCast(COLOR_GREY, string, 1);
				}
			}
		}
		else if(PlayerInfo[playerid][pMember] == 15 && PlayerInfo[playerid][pRank] == 10)
		{
     		money = strval(tmp);
     		{
				if(FracBank[0][fGrove] == 0) { SendClientMessage(playerid, COLOR_GREY, "В банке Grove нет денег"); return true; }
				if(FracBank[0][fGrove] < money) { SendClientMessage(playerid, COLOR_GREY, "В банке Grove нет столько денег"); return true; }
				if(money > 500000 || money < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 500000 вирт"); return true; }
				if(PlayerInfo[playerid][pWdraw] != 0)
     		    {
     		        format(string, sizeof(string), "Снимать деньги с банка можно только 1 раз в 24 часа. До следующего снятия: %d ч.", PlayerInfo[playerid][pWdraw]);
					SendClientMessage(playerid, 0x6495EDFF, string);
				}
				else
				{
					FracBank[0][fGrove] -= money;
					PlayerInfo[playerid][pCash] +=money;
					PlayerInfo[playerid][pWdraw] = 24;
		   			format(string, sizeof(string), "Вы сняли с банка банды Grove: %d вирт", money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "[WDLog] Лидер {FFFFFF}%s{e23434} снял {FFFFFF}%d{e23434} вирт с банка {FFFFFF}Grove{e23434}", sendername, money);
	    			ABroadCast(COLOR_GREY, string, 1);
				}
			}
		}
		else if(PlayerInfo[playerid][pMember] == 17 && PlayerInfo[playerid][pRank] == 10)
		{
     		money = strval(tmp);
     		{
				if(FracBank[0][fAztek] == 0) { SendClientMessage(playerid, COLOR_GREY, "В банке Aztec нет денег"); return true; }
				if(FracBank[0][fAztek] < money) { SendClientMessage(playerid, COLOR_GREY, "В банке Aztec нет столько денег"); return true; }
				if(money > 500000 || money < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 500000 вирт"); return true; }
				if(PlayerInfo[playerid][pWdraw] != 0)
     		    {
     		        format(string, sizeof(string), "Снимать деньги с банка можно только 1 раз в 24 часа. До следующего снятия: %d ч.", PlayerInfo[playerid][pWdraw]);
					SendClientMessage(playerid, 0x6495EDFF, string);
				}
				else
				{
					FracBank[0][fAztek] -= money;
					PlayerInfo[playerid][pCash] +=money;
					PlayerInfo[playerid][pWdraw] = 24;
		   			format(string, sizeof(string), "Вы сняли с банка банды Aztec: %d вирт", money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "[WDLog] Лидер {FFFFFF}%s{e23434} снял {FFFFFF}%d{e23434} вирт с банка {FFFFFF}Aztec{e23434}", sendername, money);
	    			ABroadCast(COLOR_GREY, string, 1);
				}
			}
		}
		else if(PlayerInfo[playerid][pMember] == 18 && PlayerInfo[playerid][pRank] == 10)
 		{
     		money = strval(tmp);
     		{
				if(FracBank[0][fRifa] == 0) { SendClientMessage(playerid, COLOR_GREY, "В банке Rifa нет денег"); return true; }
				if(FracBank[0][fRifa] < money) { SendClientMessage(playerid, COLOR_GREY, "В банке Rifa нет столько денег"); return true; }
				if(money > 500000 || money < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 500000 вирт"); return true; }
				if(PlayerInfo[playerid][pWdraw] != 0)
     		    {
     		        format(string, sizeof(string), "Снимать деньги с банка можно только 1 раз в 24 часа. До следующего снятия: %d ч.", PlayerInfo[playerid][pWdraw]);
					SendClientMessage(playerid, 0x6495EDFF, string);
				}
				else
				{
					FracBank[0][fRifa] -= money;
					PlayerInfo[playerid][pCash] +=money;
					PlayerInfo[playerid][pWdraw] = 24;
		   			format(string, sizeof(string), "Вы сняли с банка банды Rifa: %d вирт", money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "[WDLog] Лидер {FFFFFF}%s{e23434} снял {FFFFFF}%d{e23434} вирт с банка {FFFFFF}Rifa{e23434}", sendername, money);
	    			ABroadCast(COLOR_GREY, string, 1);
				}
			}
		}
		SaveBankFrac();
		return true;
	}
	if(strcmp(cmd, "/gbankput",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	    	new money;
	        if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pMember] == 18)
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /gbankput [количество]");
	    	if(PlayerInfo[playerid][pMember] == 12)
	        {
		        money = strval(tmp);
		        {
					if(PlayerInfo[playerid][pCash] <= money) { SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег"); return true; }
					if(money > 1000000 || money < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 1000000 вирт"); return true; }
		   			FracBank[0][fBallas] += money;
					PlayerInfo[playerid][pCash] -= money;
		   			format(string, sizeof(string), "Вы положили в банк Ballas: %d вирт", money);
					SendClientMessage(playerid, 0x6495EDFF, string);
				}
			}
			if(PlayerInfo[playerid][pMember] == 13)
			{
				money = strval(tmp);
				{
					if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег"); return true; }
					if(money > 1000000 || money < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 1000000 вирт"); return true; }
		 			money = strval(tmp);
		   			FracBank[0][fVagos] += money;
					PlayerInfo[playerid][pCash] -= money;
		   			format(string, sizeof(string), "Вы положили в банк Vagos: %d вирт", money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SaveBankFrac();
				}
			}
			if(PlayerInfo[playerid][pMember] == 15)
			{
				money = strval(tmp);
				{
					if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег"); return true; }
					if(money > 1000000 || money < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 1000000 вирт"); return true; }
		   			FracBank[0][fGrove] += money;
					PlayerInfo[playerid][pCash] -= money;
		   			format(string, sizeof(string), "Вы положили в банк Grove: %d вирт", money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SaveBankFrac();
				}
			}
			if(PlayerInfo[playerid][pMember] == 17)
			{
				money = strval(tmp);
				{
					if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег"); return true; }
					if(money > 1000000 || money < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 1000000 вирт"); return true; }
		 			money = strval(tmp);
		   			FracBank[0][fAztek] += money;
					PlayerInfo[playerid][pCash] -= money;
		   			format(string, sizeof(string), "Вы положили в банк Aztec: %d вирт", money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SaveBankFrac();
				}
			}
			if(PlayerInfo[playerid][pMember] == 18)
			{
				money = strval(tmp);
				{
					if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег"); return true; }
					if(money > 1000000 || money < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 1000000 вирт"); return true; }
		 			money = strval(tmp);
		   			FracBank[0][fRifa] += money;
					PlayerInfo[playerid][pCash] -= money;
		   			format(string, sizeof(string), "Вы положили в банк Rifa: %d вирт", money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SaveBankFrac();
				}
			}
		}
	    return true;
	}
	if(strcmp(cmd, "/newsbank",true)==0)
    {
    	switch(PlayerInfo[playerid][pMember])
		{
			case 9:
			{
	            format(string, sizeof(string), "В банке SF NEWS: %d вирт", FracBank[0][fSfnews]);
				SendClientMessage(playerid, 0x6495EDFF, string);
				return true;
			}
			case 16:
	        {
	            format(string, sizeof(string), "В банке LS NEWS: %d вирт", FracBank[0][fLsnews]);
				SendClientMessage(playerid, 0x6495EDFF, string);
				return true;
			}
			case 20:
	        {
	            format(string, sizeof(string), "В банке LV NEWS: %d вирт", FracBank[0][fLvnews]);
				SendClientMessage(playerid, 0x6495EDFF, string);
				return true;
			}
		}
		return true;
   	}
	if(strcmp(cmd, "/newswithdraw",true)==0)
    {
		new money;
		if(PlayerInfo[playerid][pLeader] == 9 || PlayerInfo[playerid][pLeader] == 16 || PlayerInfo[playerid][pLeader] == 20)
		tmp = strtok(cmdtext, idx);
		GetPlayerName(playerid,sendername,sizeof(sendername));
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /newswithdraw [количество]");
		if(PlayerInfo[playerid][pMember] == 9 && PlayerInfo[playerid][pRank] == 6)
		{
			money = strval(tmp);
			{
				if(FracBank[0][fSfnews] == 0) { SendClientMessage(playerid, COLOR_GREY, "В банке SF NEWS нет денег"); return true; }
				if(FracBank[0][fSfnews] < money) { SendClientMessage(playerid, COLOR_GREY, "В банке SF NEWS нет столько денег"); return true; }
				if(money > 500000 || money < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 500000 вирт"); return true; }
				if(PlayerInfo[playerid][pWdraw] != 0)
     		    {
     		        format(string, sizeof(string), "Снимать деньги с банка можно только 1 раз в 24 часа. До следующего снятия: %d ч.", PlayerInfo[playerid][pWdraw]);
					SendClientMessage(playerid, 0x6495EDFF, string);
				}
				else
				{
					FracBank[0][fSfnews] -= money;
					PlayerInfo[playerid][pCash] +=money;
					PlayerInfo[playerid][pWdraw] = 24;
		   			format(string, sizeof(string), "Вы сняли с банка SF NEWS: %d вирт", money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "[WDLog] Лидер {FFFFFF}%s{e23434} снял {FFFFFF}%d{e23434} вирт с банка {FFFFFF}SF News{e23434}", sendername, money);
	    			ABroadCast(COLOR_GREY, string, 1);
				}
			}
		}
		else if(PlayerInfo[playerid][pMember] == 16 && PlayerInfo[playerid][pRank] == 6)
		{
			money = strval(tmp);
			{
				if(FracBank[0][fLsnews] == 0) { SendClientMessage(playerid, COLOR_GREY, "В банке LS NEWS нет денег"); return true; }
				if(FracBank[0][fLsnews] < money) { SendClientMessage(playerid, COLOR_GREY, "В банке LS NEWS нет столько денег"); return true; }
				if(money > 500000 || money < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 500000 вирт"); return true; }
				if(PlayerInfo[playerid][pWdraw] != 0)
     		    {
     		        format(string, sizeof(string), "Снимать деньги с банка можно только 1 раз в 24 часа. До следующего снятия: %d ч.", PlayerInfo[playerid][pWdraw]);
					SendClientMessage(playerid, 0x6495EDFF, string);
				}
				else
				{
					FracBank[0][fLsnews] -= money;
					PlayerInfo[playerid][pCash] +=money;
					PlayerInfo[playerid][pWdraw] = 24;
		   			format(string, sizeof(string), "Вы сняли с банка LS NEWS: %d вирт", money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "[WDLog] Лидер {FFFFFF}%s{e23434} снял {FFFFFF}%d{e23434} вирт с банка {FFFFFF}LS News{e23434}", sendername, money);
	    			ABroadCast(COLOR_GREY, string, 1);
				}
			}
		}
		else if(PlayerInfo[playerid][pMember] == 20 && PlayerInfo[playerid][pRank] == 6)
		{
			money = strval(tmp);
			{
				if(FracBank[0][fLvnews] == 0) { SendClientMessage(playerid, COLOR_GREY, "В банке LV NEWS нет денег"); return true; }
				if(FracBank[0][fLvnews] < money) { SendClientMessage(playerid, COLOR_GREY, "В банке LV NEWS нет столько денег"); return true; }
				if(money > 500000 || money < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 500000 вирт"); return true; }
				if(PlayerInfo[playerid][pWdraw] != 0)
     		    {
     		        format(string, sizeof(string), "Снимать деньги с банка можно только 1 раз в 24 часа. До следующего снятия: %d ч.", PlayerInfo[playerid][pWdraw]);
					SendClientMessage(playerid, 0x6495EDFF, string);
				}
				else
				{
					FracBank[0][fLvnews] -= money;
					PlayerInfo[playerid][pCash] +=money;
					PlayerInfo[playerid][pWdraw] = 24;
		   			format(string, sizeof(string), "Вы сняли с банка LV NEWS: %d вирт", money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "[WDLog] Лидер {FFFFFF}%s{e23434} снял {FFFFFF}%d{e23434} вирт с банка {FFFFFF}LV News{e23434}", sendername, money);
	    			ABroadCast(COLOR_GREY, string, 1);
				}
			}
		}
		SaveBankFrac();
		return true;
	}
	if(strcmp(cmd, "/mbalance",true)==0)
	{
		switch(PlayerInfo[playerid][pMember])
		{
			case 5:
   			{
	   			format(string, sizeof(string), "В банке LCN: %d вирт", MafiaBank[0][nLcn]);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
			case 6:
			{
				format(string, sizeof(string), "В банке Yakuza: %d вирт", MafiaBank[0][nYakuza]);
				SendClientMessage(playerid, 0x6495EDFF, string);
				return true;
			}
			case 14:
			{
				format(string, sizeof(string), "В банке РМ: %d вирт", MafiaBank[0][nRm]);
				SendClientMessage(playerid, 0x6495EDFF, string);
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/mwithdraw",true)==0)
    {
		new money;
		if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 14)
		tmp = strtok(cmdtext, idx);
		GetPlayerName(playerid,sendername,sizeof(sendername));
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /mwithdraw [количество]");
		if(PlayerInfo[playerid][pMember] == 5 && PlayerInfo[playerid][pRank] == 10)
		{
     		money = strval(tmp);
     		{
				if(MafiaBank[0][nLcn] <= 0) { SendClientMessage(playerid, COLOR_GREY, "В банке LCN нет денег"); return true; }
				if(MafiaBank[0][nLcn] < money) { SendClientMessage(playerid, COLOR_GREY, "В банке LCN нет столько денег"); return true; }
				if(money > 500000 || money < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 500000 вирт"); return true; }
				if(PlayerInfo[playerid][pWdraw] != 0)
     		    {
     		        format(string, sizeof(string), "Снимать деньги с банка мафии можно только 1 раз в 24 часа. До следующего снятия: %d ч.", PlayerInfo[playerid][pWdraw]);
					SendClientMessage(playerid, 0x6495EDFF, string);
				}
				else
				{
					MafiaBank[0][nLcn] -= money;
					PlayerInfo[playerid][pCash] +=money;
					PlayerInfo[playerid][pWdraw] = 24;
		   			format(string, sizeof(string), "Вы сняли с банка LCN: %d вирт", money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "[WDLog] Лидер {FFFFFF}%s{e23434} снял {FFFFFF}%d{e23434} вирт с банка {FFFFFF}LCN{e23434}", sendername, money);
	    			ABroadCast(COLOR_GREY, string, 1);
				}
			}
		}
		else if(PlayerInfo[playerid][pMember] == 6 && PlayerInfo[playerid][pRank] == 10)
		{
			money = strval(tmp);
			{
				if(MafiaBank[0][nYakuza] <= 0) { SendClientMessage(playerid, COLOR_GREY, "В банке Yakuza нет денег"); return true; }
				if(MafiaBank[0][nYakuza] < money) { SendClientMessage(playerid, COLOR_GREY, "В банке Yakuza нет столько денег"); return true; }
				if(money > 500000 || money < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 500000 вирт"); return true; }
				if(PlayerInfo[playerid][pWdraw] != 0)
     		    {
     		        format(string, sizeof(string), "Снимать деньги с банка можно мафии только 1 раз в 24 часа. До следующего снятия: %d ч.", PlayerInfo[playerid][pWdraw]);
					SendClientMessage(playerid, 0x6495EDFF, string);
				}
				else
				{
					MafiaBank[0][nYakuza] -= money;
					PlayerInfo[playerid][pCash] +=money;
					PlayerInfo[playerid][pWdraw] = 24;
		   			format(string, sizeof(string), "Вы сняли с банка Yakuza: %d вирт", money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "[WDLog] Лидер {FFFFFF}%s{e23434} снял {FFFFFF}%d{e23434} вирт с банка {FFFFFF}Yakuza{e23434}", sendername, money);
	    			ABroadCast(COLOR_GREY, string, 1);
				}
			}
		}
		else if(PlayerInfo[playerid][pMember] == 14 && PlayerInfo[playerid][pRank] == 10)
		{
     		money = strval(tmp);
     		{
				if(MafiaBank[0][nRm] <= 0) { SendClientMessage(playerid, COLOR_GREY, "В банке РМ нет денег"); return true; }
				if(MafiaBank[0][nRm] < money) { SendClientMessage(playerid, COLOR_GREY, "В банке РМ нет столько денег"); return true; }
				if(money > 500000 || money < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 500000 вирт"); return true; }
				if(PlayerInfo[playerid][pWdraw] != 0)
     		    {
     		        format(string, sizeof(string), "Снимать деньги с банка мафии можно только 1 раз в 24 часа. До следующего снятия: %d ч.", PlayerInfo[playerid][pWdraw]);
					SendClientMessage(playerid, 0x6495EDFF, string);
				}
				else
				{
					MafiaBank[0][nRm] -= money;
					PlayerInfo[playerid][pCash] +=money;
					PlayerInfo[playerid][pWdraw] = 24;
		   			format(string, sizeof(string), "Вы сняли с банка РМ: %d вирт", money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "[WDLog] Лидер {FFFFFF}%s{e23434} снял {FFFFFF}%d{e23434} вирт с банка {FFFFFF}RM{e23434}", sendername, money);
	    			ABroadCast(COLOR_GREY, string, 1);
				}
			}
		}
	}
	if(strcmp(cmd, "/mbank",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	    	new money;
	   		GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 14)
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /mbank [количество]");
			if(PlayerInfo[playerid][pMember] == 5)
			{
				money = strval(tmp);
				{
					if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег"); return true; }
					if(money > 100000000 || money < 1) { SendClientMessage(playerid, COLOR_GREY, "Неправильный количество денег!"); return true; }
					money = strval(tmp);
					MafiaBank[0][nLcn] += money;
					PlayerInfo[playerid][pCash] -= money;
					format(string, sizeof(string), "Вы положили в банк мафии LCN: %d вирт", money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "%s положил в банк мафии %d вирт", sendername,money);
					SendFamilyMessage(5, COLOR_YELLOW2, string);
					return true;
				}
			}
  			else if(PlayerInfo[playerid][pMember] == 6)
			{
				money = strval(tmp);
				{
					if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег"); return true; }
					if(money > 100000000 || money < 1) { SendClientMessage(playerid, COLOR_GREY, "Неправильный количество денег!"); return true; }
		 			money = strval(tmp);
		   			MafiaBank[0][nYakuza] += money;
					PlayerInfo[playerid][pCash] -=money;
		   			format(string, sizeof(string), "Вы положили в банк Yakuza: %d вирт", money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "%s положил в банк %d вирт", sendername,money);
					SendFamilyMessage(6, COLOR_YELLOW2, string);
					return true;
				}
			}
		 	else if(PlayerInfo[playerid][pMember] == 14)
			{
				money = strval(tmp);
				{
					if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег"); return true; }
					if(money > 100000000 || money < 1) { SendClientMessage(playerid, COLOR_GREY, "Неправильный количество денег!"); return true; }
					money = strval(tmp);
			  		MafiaBank[0][nRm] += money;
					PlayerInfo[playerid][pCash] -=money;
			   		format(string, sizeof(string), "Вы положили в банк РМ: %d вирт", money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "%s положил в банк %d вирт", sendername,money);
					SendFamilyMessage(14, COLOR_YELLOW2, string);
					return true;
				}
			}
			SaveBankMafia();
		}
		return true;
	}
	if(strcmp(cmd, "/materials", true) == 0)
	{
		new x_nr[256];
		x_nr = strtok(cmdtext, idx);
 		if(IsPlayerConnected(playerid))
		{
			if(!strlen(x_nr))
 			{
                SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /materials [значение] (buy, put, get)");
                return true;
            }
			if(strcmp(x_nr, "buy",true) == 0)
			{
				if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 14 && PlayerInfo[playerid][pRank] >= 8)
				{
					format(string, sizeof(string), "Вы действительно хотите купить 50000 материалов за 100000?");
					ShowPlayerDialog(playerid,9298,DIALOG_STYLE_MSGBOX, "Покупка материалов",string, "Да", "Нет");
					return true;
 				}
 			}
			else if(strcmp(x_nr, "put",true) == 0)
			{
				new nearveh = GetNearestVehicle(playerid);
				new Float:cx,Float:cy,Float:cz;
				GetVehiclePos(nearveh, cx, cy, cz);
				if(PlayerToPoint(4.0, playerid, cx, cy, cz))
				{
					switch(PlayerInfo[playerid][pMember])
					{
						case 12:
						{
				  			if(usemats[playerid] != 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "У вас нет материалов с собой");
								format(string, sizeof(string), "Материалы в фургоне: %d/3000", Furi[nearveh-matsfura[0]][gBallas]);
							    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
					 			return true;
							}
							if(Furi[nearveh-matsfura[0]][gBallas] >= 3000) return SendClientMessage(playerid, COLOR_GREY, "Фургон заполнен");
							SendClientMessage(playerid, COLOR_WHITE, "Вы положили в фургон 250 материалов");
					 		Furi[nearveh-matsfura[0]][gBallas] += 250;
							usemats[playerid] = 0;
							usegruz[playerid] = 0;
					   		RemovePlayerAttachedObject(playerid, 1);
					   		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
							format(string, sizeof(string), "Материалы в фургоне: %d/3000", Furi[nearveh-matsfura[0]][gBallas]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						}
						case 13:
						{
							if(usemats[playerid] != 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "У вас нет материалов с собой");
								format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuravagos[0]][gVagos]);
							    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
								return true;
							}
							if(Furi[nearveh-matsfuravagos[0]][gVagos] >= 3000) return SendClientMessage(playerid, COLOR_GREY, "Фургон заполнен");
							SendClientMessage(playerid, COLOR_WHITE, "Вы положили в фургон 250 материалов");
							Furi[nearveh-matsfuravagos[0]][gVagos] += 250;
							usemats[playerid] = 0;
							usegruz[playerid] = 0;
							RemovePlayerAttachedObject(playerid, 1);
							SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
							format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuravagos[0]][gVagos]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						}
						case 15:
						{
							if(usemats[playerid] != 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "У вас нет материалов с собой");
								format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuragrove[0]][gGrove]);
							    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
								return true;
							}
							if(Furi[nearveh-matsfuragrove[0]][gGrove] >= 3000) return SendClientMessage(playerid, COLOR_GREY, "Фургон заполнен");
						 	SendClientMessage(playerid, COLOR_WHITE, "Вы положили в фургон 250 материалов");
							Furi[nearveh-matsfuragrove[0]][gGrove] += 250;
							usemats[playerid] = 0;
							usegruz[playerid] = 0;
						 	RemovePlayerAttachedObject(playerid, 1);
						 	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
							format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuragrove[0]][gGrove]);
						    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
			      		}
						case 17:
						{
						 	if(usemats[playerid] != 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "У вас нет материалов с собой");
								format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuraactek[0]][gAztek]);
							    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
								return true;
							}
				   			if(Furi[nearveh-matsfuraactek[0]][gAztek] >= 3000)return SendClientMessage(playerid, COLOR_GREY, "Фургон заполнен");
						 	SendClientMessage(playerid, COLOR_WHITE, "Вы положили в фургон 250 материалов");
							Furi[nearveh-matsfuraactek[0]][gAztek] += 250;
							usemats[playerid] = 0;
							usegruz[playerid] = 0;
						 	RemovePlayerAttachedObject(playerid, 1);
						 	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
							format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuraactek[0]][gAztek]);
						    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						}
						case 18:
						{
							if(usemats[playerid] != 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "У вас нет материалов с собой");
								format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfurarifa[0]][gRifa]);
							    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
								return true;
							}
							if(Furi[nearveh-matsfurarifa[0]][gRifa] >= 3000)return SendClientMessage(playerid, COLOR_GREY, "Фургон заполнен");
							SendClientMessage(playerid, COLOR_WHITE, "Вы положили в фургон 250 материалов");
							Furi[nearveh-matsfurarifa[0]][gRifa] += 250;
							usemats[playerid] = 0;
							usegruz[playerid] = 0;
							RemovePlayerAttachedObject(playerid, 1);
							SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
							format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfurarifa[0]][gRifa]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы далеко от фургона");
					return true;
				}
			}
			else if(strcmp(x_nr, "get",true) == 0)
			{
				if(IsAGang(playerid))
				{
					if(PlayerToPoint(10.0,playerid,-1290.9072,501.4489,11.1953))
					{
						if(armmatsf == 0)return SendClientMessage(playerid, COLOR_GREY, "Склад армии пуст");
						if(usemats[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже взяли материалы");
						SendClientMessage(playerid, 0x6495EDFF, "Вы взяли 250 материалов со склада армии");
						SendClientMessage(playerid, COLOR_WHITE, "Несите ящик в грузовик, используйте /materials put, чтобы положить материалы в фургон");
						ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,1,0,0,1,1,1);
			        	SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
			        	ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,1,0,0,1,1,1);
			        	usegruz[playerid] = 1;
			        	usemats[playerid] = 1;
						armmatsf -= 250;
					}
					if(PlayerToPoint(7.0,playerid,2729.3267,-2451.5051,17.5937))
					{
						if(armmatsf == 0)return SendClientMessage(playerid, COLOR_GREY, "Склад армии пуст");
						if(usemats[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете взять больше");
						SendClientMessage(playerid, 0x6495EDFF, "Вы взяли 250 материалов со склада армии");
						SendClientMessage(playerid, COLOR_WHITE, "Несите ящик в грузовик, используйте /materials put, чтобы положить материалы в фургон");
						ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,1,0,0,1,1,1);
						SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
						ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,1,0,0,1,1,1);
						usemats[playerid] = 1;
						usegruz[playerid] = 1;
						lsamatbi -= 250;
					}
					if(PlayerToPoint(10.0,playerid,316.8127,-167.5395,999.5938))
					{
					    if(GetPlayerVirtualWorld(playerid) != 228)return SendClientMessage(playerid,COLOR_GREY,"Вы должны находиться на складе Армии ЛВ");
						if(armmatbi == 0)return SendClientMessage(playerid, COLOR_GREY, "Склад армии пуст");
						if(usemats[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете взять больше");
						SendClientMessage(playerid, 0x6495EDFF, "Вы взяли 250 материалов со склада армии");
						SendClientMessage(playerid, COLOR_WHITE, "Несите ящик в грузовик, используйте /materials put, чтобы положить материалы в фургон");
						ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,1,0,0,1,1,1);
						SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
						ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,1,0,0,1,1,1);
						usemats[playerid] = 1;
						usegruz[playerid] = 1;
						armmatbi -= 250;
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/gettax", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 7)
		{
			format(string, sizeof(string), "В казне: %d вирт", FracBank[0][fKazna]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return true;
	}
	if(strcmp(cmd,"/givepass",true) == 0)
	{
	    if(PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pAdmin] >= 6)
	    {
	        if(PlayerInfo[playerid][pRank] >= 1 || PlayerInfo[playerid][pAdmin] >= 6)
			{
			    new gpname[25];
				GetPlayerName(playerid,sendername,sizeof(sendername));
		        tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /givepass [id]");
				giveplayerid = ReturnUser(tmp);
				GetPlayerName(giveplayerid,gpname,sizeof(gpname));
				PlayerInfo[giveplayerid][pPasport] = 1;
				format(string, sizeof(string), "Секретарь {FFFFFF}%s{33AA33} зарегистрировал вам паспорт.", sendername);
				SendClientMessage(giveplayerid, COLOR_GREEN, string);
				format(string, sizeof(string), "Вы зарегистрировали паспорт на имя {FFFFFF}%s",gpname);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if(strcmp(cmd,"/kaznawithdraw",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
            new money;
       		if(PlayerInfo[playerid][pLeader] != 7) return SendClientMessage(playerid, COLOR_GRAD1, "Вы не мэр!");
	        tmp = strtok(cmdtext, idx);
	        GetPlayerName(playerid,sendername,sizeof(sendername));
	        if(!strlen(tmp)) return 	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /kaznawithdraw [Сумма]");
			if(PlayerInfo[playerid][pLeader] == 7 )
			{
				money = strval(tmp);
				{
					if(FracBank[0][fKazna] == 0) { SendClientMessage(playerid, COLOR_GREY, "В казне нет денег."); return 1; }
					if(FracBank[0][fKazna] < money) { SendClientMessage(playerid, COLOR_GREY, "В казне нет столько денег."); return 1; }
					if(money > 500000 || money < 1) { SendClientMessage(playerid, COLOR_GREY, "Неправильное количество денег! Максимум 500000."); return 1; }
					if(PlayerInfo[playerid][pWdraw] != 0)
     		    	{
	     		        format(string, sizeof(string), "Снимать деньги с казны можно только 1 раз в 24 часа. До следующего снятия: %d ч.", PlayerInfo[playerid][pWdraw]);
						SendClientMessage(playerid, 0x6495EDFF, string);
					}
					else
					{
						FracBank[0][fKazna] -= money;
						PlayerInfo[playerid][pCash] +=money;
						PlayerInfo[playerid][pWdraw] = 24;
	   					format(string, sizeof(string), "Вы сняли с Казны Мэрии: %d вирт", money);
						SendClientMessage(playerid, 0x6495EDFF, string);
						format(string, sizeof(string), "[WDLog] Лидер {FFFFFF}%s{e23434} снял {FFFFFF}%d{e23434} вирт с {FFFFFF}Казны штата{e23434}", sendername, money);
	    				ABroadCast(COLOR_GREY, string, 1);
					}
     			}
     		}
       	}
    }
   	if(strcmp(cmd,"/kaznaput",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	    	new money;
	        if(PlayerInfo[playerid][pMember] == 7)
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /kaznaput [Количество]");
			if(PlayerInfo[playerid][pMember] == 7)
			{
				money = strval(tmp);
				{
					if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег!"); return 1; }
					if(money > 10000000000 || money < 1) { SendClientMessage(playerid, COLOR_GREY, "Неправильное количество денег!"); return 1; }
		   			FracBank[0][fKazna] += money;
					PlayerInfo[playerid][pCash] -=money;
		   			format(string, sizeof(string), "Вы положили в Казну: %d вирт", money);
					SendClientMessage(playerid, 0x6495EDFF, string);
				}
            }
        }
	}
	if(strcmp(cmd, "/settax", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 7)
		{
			new Moneys;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /settax [налог]");
			Moneys = strval(tmp);
			if(Moneys < 100 || Moneys > 2500) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 100 и больше 2500 вирт");
			format(string, sizeof(string), "Налог: %d вирт", Moneys);
			SendClientMessage(playerid, COLOR_WHITE, string);
            GovTax = Moneys;
			new File = ini_openFile("gamefiles/tax.ini");
			ini_setInteger(File, "Tax", GovTax);
            ini_closeFile(File);
        }
        return true;
    }
	if(strcmp(cmd, "/abalance", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
		    if(IsPlayerConnected(playerid))
		    {
		        new sctring[1000];
				format(string, sizeof(string), "Якудза: %d вирт\n", MafiaBank[0][nYakuza]);
				strcat(sctring,string);
				format(string, sizeof(string), "Русская мафия: %d вирт\n", MafiaBank[0][nRm]);
				strcat(sctring,string);
				format(string, sizeof(string), "LCN: %d вирт\n", MafiaBank[0][nLcn]);
				strcat(sctring,string);
				format(string, sizeof(string), "LS NEWS: %d вирт\n", FracBank[0][fLsnews]);
				strcat(sctring,string);
				format(string, sizeof(string), "SF NEWS: %d вирт\n", FracBank[0][fSfnews]);
				strcat(sctring,string);
				format(string, sizeof(string), "LV NEWS: %d вирт\n", FracBank[0][fLvnews]);
				strcat(sctring,string);
				format(string, sizeof(string), "Казна: %d вирт\n", FracBank[0][fKazna]);
				strcat(sctring,string);
				format(string, sizeof(string), "Ballas: %d вирт\n",FracBank[0][fBallas]);
				strcat(sctring,string);
				format(string, sizeof(string), "Grove: %d вирт\n",FracBank[0][fGrove]);
				strcat(sctring,string);
				format(string, sizeof(string), "Aztek: %d вирт\n",FracBank[0][fAztek]);
				strcat(sctring,string);
				format(string, sizeof(string), "Vagos: %d вирт\n",FracBank[0][fVagos]);
				strcat(sctring,string);
				format(string, sizeof(string), "Rifa: %d вирт",FracBank[0][fRifa]);
				strcat(sctring,string);
				ShowPlayerDialog(playerid,165,DIALOG_STYLE_MSGBOX,"Банк фракций",sctring,"X","");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/awarehouse", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 7)
		{
		    new sctring[1000];
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			format(string, sizeof(string), "На складе Зоны 51: %d/100000 материалов\n", armmatbi);
			strcat(sctring,string);
			format(string, sizeof(string), "На складе армии Авианосца: %d/50000 материалов\n", armmatsf);
			strcat(sctring,string);
			format(string, sizeof(string), "На складе FBI %d/50000 материалов\n", fbimats);
			strcat(sctring,string);
			format(string, sizeof(string), "На складе LSPD %d/50000 материалов\n", lspdmatbi);
			strcat(sctring,string);
			format(string, sizeof(string), "На складе SFPD %d/50000 материалов\n", sfpdmats);
			strcat(sctring,string);
			format(string, sizeof(string), "На складе LVPD %d/50000 материалов\n", lvpdmats);
			strcat(sctring,string);
			format(string, sizeof(string), "На складе мафии Якудза %d/50000 материалов\n", yakuzamats);
			strcat(sctring,string);
			format(string, sizeof(string), "На складе мафии LCN %d/50000 материалов\n", lcnmats);
			strcat(sctring,string);
			format(string, sizeof(string), "На складе Русской Мафии %d/50000 материалов\n", rmmats);
			strcat(sctring,string);
			format(string, sizeof(string), "На складе Ballas %d/50000 материалов\n", ballasmatbi);
			strcat(sctring,string);
			format(string, sizeof(string), "На складе Vagos %d/50000 материалов\n", vagosmatbi);
			strcat(sctring,string);
			format(string, sizeof(string), "На складе Grove %d/50000 материалов\n", groovmatbi);
			strcat(sctring,string);
			format(string, sizeof(string), "На складе Aztek %d/50000 материалов\n", aztekmatbi);
			strcat(sctring,string);
			format(string, sizeof(string), "На складе Rifa %d/50000 материалов", rifamatbi);
			strcat(sctring,string);
			ShowPlayerDialog(playerid,165,DIALOG_STYLE_MSGBOX,"Банк фракций",sctring,"X","");
		}
		return true;
	}
	if(strcmp(cmd, "/warehouse", true) == 0)
	{
		switch(PlayerInfo[playerid][pMember])
		{
			case 1:
			{
		    	format(string, sizeof(string), "На складе LSPD %d/50000 материалов", lspdmatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
			case 2:
			{
				format(string, sizeof(string), "На складе FBI %d/50000 материалов", fbimats);
				SendClientMessage(playerid, 0x6495EDFF, string);
				return true;
			}
			case 3:
            {
				format(string, sizeof(string), "На складе Армии SF: %d/50000 материалов", armmatsf);
				SendClientMessage(playerid, 0x6495EDFF, string);
				format(string, sizeof(string), "На складе LSA: %d/50000 материалов", lsamatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
				return true;
            }
			case 5:
			{
		    	format(string, sizeof(string), "На складе LCN %d/50000 материалов", lcnmats);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
			case 6:
			{
		    	format(string, sizeof(string), "На складе Yakuza %d/50000 материалов", yakuzamats);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
			case 10:
			{
		    	format(string, sizeof(string), "На складе SFPD %d/50000 материалов", sfpdmats);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
			case 12:
			{
		    	format(string, sizeof(string), "На складе Ballas %d/50000 материалов", ballasmatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
			case 13:
			{
		    	format(string, sizeof(string), "На складе Vagos %d/50000 материалов", vagosmatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
			case 14:
			{
		    	format(string, sizeof(string), "На складе РМ %d/50000 материалов", rmmats);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
            case 15:
			{
		    	format(string, sizeof(string), "На складе Grove %d/50000 материалов", groovmatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
	    	case 17:
			{
		    	format(string, sizeof(string), "На складе Aztec %d/50000 материалов", aztekmatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
			case 18:
			{
		    	format(string, sizeof(string), "На складе Rifa %d/50000 материалов", rifamatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
			case 19:
            {
				format(string, sizeof(string), "На главном складе: %d/100000 материалов", armmatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
				format(string, sizeof(string), "На складе LSA: %d/50000 материалов", lsamatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
            }
			case 21:
			{
		    	format(string, sizeof(string), "На складе LVPD %d/50000 материалов", lvpdmats);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/payday", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 10)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			PayDay();
 		}
		return true;
	}
	if(strcmp(cmd, "/viktorina", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 10)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid,"/viktorina");
		    {
		        SendClientMessage(playerid,COLOR_LIGHTRED,"Викторина запущена!");
		        Quiz();
			}
		}
	}
	if(strcmp(cmd, "/gcontract",true)==0 || strcmp(cmd, "/givecontract", true) == 0)
	{
	    if(PlayerInfo[playerid][pJob] == 7) return SendClientMessage(playerid, COLOR_GREY, "Вы не прораб");
		if(Prorab[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, "Вы должны начать рабочий день");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /gcontract [id]");
		giveplayerid = strval(tmp);
		if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь заключть контракт с собой");
		if(Prorab[giveplayerid] == true) return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь заключать контракт с прорабом");
		if(Works[giveplayerid] == true) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок уже работает");
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		if(!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
		if(JobOffer[giveplayerid] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы уже предложили игроку контракт");
		JobOffer[giveplayerid] = playerid;
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "Вы предложили контакт %s", giveplayer);
		SendClientMessage(playerid, 0x6495EDFF, string);
		format(string, sizeof(string), "%s предлагает тебе контракт. (/accept gcontract) чтобы заключить контракт (Преимущество: 50 вирт за мешок)", sendername);
		SendClientMessage(giveplayerid, 0x6495EDFF, string);
		return true;
	}
	if(strcmp(cmd, "/gpayday",true)==0 || strcmp(cmd, "/givepayday", true) == 0)
	{
	    if(PlayerInfo[playerid][pJob] == 7) return SendClientMessage(playerid, COLOR_GREY, "Вы не прораб");
		if(Prorab[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, "Вы должны начать рабочий день");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /gpayday [id игрока].");
		giveplayerid = strval(tmp);
		if(Employer[giveplayerid] != playerid) return SendClientMessage(playerid, COLOR_GREY, "Игрок не работает на вас");
		if(Works[giveplayerid] == false) return SendClientMessage(playerid, COLOR_GREY, "Игрок не работает");
		if(JobAmmount[giveplayerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок перенес не одного мешка");
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		if(!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		PlayerInfo[playerid][pCash] += JobAmmount[playerid]*50;
		PlayerInfo[giveplayerid][pCash] += JobAmmount[giveplayerid]*25;
		format(string,sizeof(string), "Вы получили %d вирт, за работу на прораба %s",JobAmmount[playerid]*25, giveplayer);
		SendClientMessage(giveplayerid, COLOR_GREEN,string);
		JobAmmount[playerid] = 0;
		return true;
	}
	if(strcmp(cmd, "/repaydebt", true) == 0)
	{
		if(PlayerInfo[playerid][pMafiaRoof] == 5)
		{
			if(PlayerInfo[playerid][pDebt] < 50) return SendClientMessage(playerid, COLOR_GREY, "Не достаточная сумма, для возврата долга");
		 	SendClientMessage(playerid, COLOR_GREEN, "Долг был возвращён LCN");
		 	format(string, sizeof(string), "%s вернул долг в размере %s вирт", sendername,PlayerInfo[playerid][pDebt]);
		 	SendFamilyMessage(5, TEAM_AZTECAS_COLOR, string);
			MafiaBank[0][nLcn] += PlayerInfo[playerid][pDebt];
			PlayerInfo[playerid][pDebt] = 0;
		}
		if(PlayerInfo[playerid][pMafiaRoof] == 6)
		{
			if(PlayerInfo[playerid][pDebt] < 50) return SendClientMessage(playerid, COLOR_GREY, "Не достаточная сумма, для возврата долга");
			SendClientMessage(playerid, COLOR_GREEN, "Долг был возвращён Yakuza");
			format(string, sizeof(string), "%s вернул долг в размере %s вирт", sendername,PlayerInfo[playerid][pDebt]);
			SendFamilyMessage(6, TEAM_AZTECAS_COLOR, string);
			MafiaBank[0][nYakuza] += PlayerInfo[playerid][pDebt];
			PlayerInfo[playerid][pDebt] = 0;
		}
		if(PlayerInfo[playerid][pMafiaRoof] == 14)
		{
			if(PlayerInfo[playerid][pDebt] < 50) return SendClientMessage(playerid, COLOR_GREY, "Не достаточная сумма, для возврата долга");
		 	SendClientMessage(playerid, COLOR_GREEN, "Долг был возвращён РМ");
		 	format(string, sizeof(string), "%s вернул долг в размере %s вирт", sendername,PlayerInfo[playerid][pDebt]);
		 	SendFamilyMessage(14, TEAM_AZTECAS_COLOR, string);
		 	MafiaBank[0][nRm] += PlayerInfo[playerid][pDebt];
		 	PlayerInfo[playerid][pDebt] = 0;
		}
		return true;
	}
	if(strcmp(cmd, "/mydebts", true) == 0 || strcmp(cmd, "/md", true) == 0)
	{
		new mafiatext[20];
		new form[99];
        if(PlayerInfo[playerid][pMafiaRoof] == 6) { mafiatext = "Yakuza"; }
		else if(PlayerInfo[playerid][pMafiaRoof] == 14) { mafiatext = "RM"; }
		else if(PlayerInfo[playerid][pMafiaRoof] == 5) { mafiatext = "LCN"; }
		else if(PlayerInfo[playerid][pMafiaRoof] == 0) { mafiatext = "Нет"; }
		format(form,sizeof(form), "Крыша: %s\nДолг: %d вирт",mafiatext,PlayerInfo[playerid][pDebt]);
   		ShowPlayerDialog(playerid,69,DIALOG_STYLE_MSGBOX, "Информация о себе",form, "Готово", "");
   		return true;
	}
	if(strcmp(cmd, "/mystyle", true) == 0 || strcmp(cmd, "/ms", true) == 0)
	{
		new style[512];
		new box;
		new kongfu;
		new kickbox;
		box = 200 - PlayerInfo[playerid][pBoxSkill];
		kongfu = 200 - PlayerInfo[playerid][pKongfuSkill];
		kickbox = 200 - PlayerInfo[playerid][pKickboxSkill];
		format(style,sizeof(style), "{33CCFF}Box:\n{FFFFFF}До преобладания стиля осталось %d ударов\nДля включения стиля: /box\nВсего набито: %d\n==============================\n{33CCFF}Kong-Fu:\n{FFFFFF}До преобладания стиля осталось %d ударов\nДля включения стиля: /kongfu\nВсего набито: %d\n==============================\n{33CCFF}Kick-Box:\n{FFFFFF}До преобладания стиля осталось %d ударов\nДля включения стиля: /kickbox\nВсего набито: %d\n==============================",
		box,PlayerInfo[playerid][pBoxSkill],kongfu, PlayerInfo[playerid][pKongfuSkill],kickbox,PlayerInfo[playerid][pKickboxSkill]);
		ShowPlayerDialog(playerid,69,DIALOG_STYLE_MSGBOX, "Навыки владения стилями боя",style, "Готово", "");
		return true;
	}
	if(strcmp(cmd, "/box", true) == 0)
	{
		if(PlayerInfo[playerid][pBoxSkill] >= 200)
		{
			SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
			SendClientMessage(playerid, 0x009900FF, "Вы успешно включили стиль Box");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не владеете данным стилем. Потренируйтесь в спортзале.");
		}
		return true;
	}
	if(strcmp(cmd, "/kongfu", true) == 0)
	{
		if(PlayerInfo[playerid][pKongfuSkill] >= 200)
		{
			SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
			SendClientMessage(playerid, 0x009900FF, "Вы успешно включили стиль Kong-Fu");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не владеете данным стилем. Потренируйтесь в спортзале.");
		}
		return true;
	}
	if(strcmp(cmd, "/kickbox", true) == 0)
	{
		if(PlayerInfo[playerid][pKickboxSkill] >= 200)
		{
			SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
			SendClientMessage(playerid, 0x009900FF, "Вы успешно включили стиль Kick-Box");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не владеете данным стилем. Потренируйтесь в спортзале.");
		}
		return true;
	}
	if(strcmp(cmd, "/box", true) == 0)
	{
		if(PlayerInfo[playerid][pKickboxSkill] >= 200)
		{
			SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
			SendClientMessage(playerid, 0x009900FF, "Вы успешно включили стиль Kick-Box");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не владеете данным стилем. Потренируйтесь в спортзале.");
		}
		return true;
	}
	if(strcmp(cmd, "/fgstyle", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(boxforma[playerid] == 1)
 			{
 				if(!PlayerToPoint(30.0,playerid,768.1588,6.5715,1000.7144)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в спорт зале!");
				new listitems[] = "[1] Начать урок Box\n[2] Начать урок Kong-Fu\n[3] Начать урок Kick-Box\n[4] Завершить урок Box\n[5] Завершить урок Kong-Fu\n[6] Завершить урок Kick-Box";
				ShowPlayerDialog(playerid, 3439, DIALOG_STYLE_LIST, "Начать урок по изучинию ускуства", listitems, "Выбрать", "Отмена");
				return true;
			}
			else
        	{
        	if(boxforma[playerid] == 0)return SendClientMessage(playerid, COLOR_RED, "Переоденьтесь!!!");
			}
		}
       	return true;
	}
	if(strcmp(cmd, "/sp", true) == 0 || strcmp(cmd, "/spawn", true) == 0)
    {
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /spawn [id игрока].");
			giveplayerid = strval(tmp);
			SpawnPlayer(giveplayerid);
			SetPlayerWeapons(giveplayerid);
		}
        return true;
    }
	if(strcmp(cmd, "/ratingnews",true)==0)
    {
		new points[6],percent[2] = "%";
		points[0] = 100 - radiols;
		points[1] = 100 - radiosf;
		points[2] = 100 - radiolv;
		new radiolist[1024];
		format(radiolist, sizeof(radiolist), "LS News [%s]%d%s %d человек\nSF News [%s]%d%s %d человек\nLV News [%s]%d%s %d человек",
		ToDevelopRating(radiols,points[0]),radiols,percent,radiols,
		ToDevelopRating(radiosf,points[1]),radiosf,percent,radiosf,
		ToDevelopRating(radiolv,points[2]),radiolv,percent,radiolv);
		ShowPlayerDialog(playerid, 69, DIALOG_STYLE_MSGBOX, "Рейтинг радиостанций:", radiolist, "Готово", "");
        return true;
    }
	if(strcmp(cmd, "/spcars", true) == 0)
    {
		if(PlayerInfo[playerid][pAdmin] >= 5)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
	        if(IsPlayerConnected(playerid))
	        {
	            for(new c = 0; c < MAX_VEHICLES; c++)
	            {
	                if(!IsVehicleOccupied(c))
	                {
	                    SetVehicleToRespawn(c);
	                }
	            }
	            GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string,sizeof(string), "Администратор %s обновил весь транспорт", sendername);
	            ABroadCast(COLOR_LIGHTRED, string, 1);
			}
        }
        return true;
    }
	if(strcmp(cmd, "/clearchat", true) == 0 || strcmp(cmd, "/cc", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				new ccname[25];
				SendClientMessageToAll(COLOR_WHITE, "");
				SendClientMessageToAll(COLOR_WHITE, "");
				SendClientMessageToAll(COLOR_WHITE, "");
				SendClientMessageToAll(COLOR_WHITE, "");
				SendClientMessageToAll(COLOR_WHITE, "");
				SendClientMessageToAll(COLOR_WHITE, "");
				SendClientMessageToAll(COLOR_WHITE, "");
				SendClientMessageToAll(COLOR_WHITE, "");
				SendClientMessageToAll(COLOR_WHITE, "");
				SendClientMessageToAll(COLOR_WHITE, "");
				SendClientMessageToAll(COLOR_WHITE, "");
	  			SendClientMessageToAll(COLOR_WHITE, "");
	 			SendClientMessageToAll(COLOR_WHITE, "");
				SendClientMessageToAll(COLOR_WHITE, "");
				SendClientMessageToAll(COLOR_WHITE, "");
				SendClientMessageToAll(COLOR_WHITE, "");
				GetPlayerName(playerid,ccname,sizeof(ccname));
				format(string,sizeof(string),"Администратор {e23434}%s{FFFFFF} почистил чат.", ccname);
				SendClientMessageToAll(COLOR_WHITE, string);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/hotdog", true) == 0)
	{
		if(PlayerInfo[playerid][pJob] == 3 && PlayerInfo[playerid][pMember] == 0)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /hotdog [id] [цена]");
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(money < 1 || money > 5000) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 5000 вирт"); return true; }
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 588) return SendClientMessage(playerid,COLOR_GREY, "Вы не в машине для продажи Хот Догов");
			if(IsPlayerConnected(playa))
			{
				if(playa != INVALID_PLAYER_ID)
				{
					if(ProxDetectorS(8.0, playerid, playa))
					{
						if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы предложили %s купить Хот Дог за %d вирт",giveplayer,money);
						SendClientMessage(playerid, 0x6495EDFF, string);
						format(string, sizeof(string), "%s предлагает вам ХотДог за %d вирт. {e23434}Введите: (/accept eat) для покупки Хот Дога",sendername,money);
						SendClientMessage(playa, 0x6495EDFF, string);
						HotdogOffer[playa] = playerid;
						HotdogPrice[playa] = money;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			}
 		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не продавец Хот Догов");
		}
		return true;
	}
	if(strcmp(cmd, "/free", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] == 2)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /free [id] [цена]");
			new playa;
			playa = ReturnUser(tmp);
			if(PlayerInfo[playa][pJailed] != 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок не в тюрьме");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /free [id] [цена]");
			new money;
			money = strval(tmp);
			if(money < 1 || money > 50000) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 50000 вирт"); return true; }
			if(playa == playerid)  return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
			GetPlayerName(playa, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "Вы предложили выпустить %s за %d вирт",giveplayer,money);
			SendClientMessage(playerid, 0x6495EDFF, string);
			format(string, sizeof(string), "Адвокат %s предлагает вам свободу. Цена: %d вирт. Способ оплаты: наличные", sendername, money);
			SendClientMessage(playa, 0x6495EDFF, string);
			SendClientMessage(playa, 0x6495EDFF, "Что бы принять введите /accept free");
			FreeOffer[playa] = playerid;
			FreePrice[playa] = money;
			SposobOffer[playa] = 0;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не адвокат");
		}
		return true;
	}
	if(strcmp(cmd, "/selleat", true) == 0)
	{
		if(PlayerInfo[playerid][pJob] == 3 && PlayerInfo[playerid][pMember] == 0)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /selleat [id] [цена]");
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(money < 1 || money > 5000) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 5000 вирт"); return true; }
			if(!IsAHotDog(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не у киоска для продажи Хот Догов");
			if(IsPlayerConnected(playa))
			{
				if(playa != INVALID_PLAYER_ID)
				{
					if(ProxDetectorS(8.0, playerid, playa))
					{
						if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы предложили %s Хот Дог за %d вирт",giveplayer,money);
						SendClientMessage(playerid, 0x6495EDFF, string);
						format(string, sizeof(string), "%s предлагает Вам Хот Дог за %d вирт. {e23434}Введите: (/accept eat) для покупки Хот Дога",sendername,money);
						SendClientMessage(playa, 0x6495EDFF, string);
						HotdogOffer[playa] = playerid;
						HotdogPrice[playa] = money;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не продавец Хот Догов");
		}
		return true;
	}
	if(strcmp(cmd, "/setname", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			new newname[128];
			new stringo[128];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setname [id]");
			giveplayerid = ReturnUser(tmp);
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				{
					format(stringo,sizeof(stringo), "%s.ini",newname);
				    if(fexist(stringo)) return SendClientMessage(playerid,COLOR_GREY, "Ник занят!");
				    GetPlayerName(playerid, sendername, sizeof(sendername));
				    if(strlen(WantNickChange[giveplayerid]) < 3) return SendClientMessage(playerid,-1, "Этот игрок не хочет менять ник");
					nick[giveplayerid] = 1;
				    format(changenam,sizeof(changenam), "%s",WantNickChange[giveplayerid]);
					format(stringo,sizeof(stringo), "%s.ini",WantNickChange[giveplayerid]);
					dini_Create(stringo);
					SendClientMessage(giveplayerid,COLOR_GREEN,"[Arizona RP] Ваш ник был одобрен!");
					SendClientMessage(giveplayerid,COLOR_LIGHTRED,"[Arizona RP] Введите ваш новый ник в поле SAMP");
					ChangeName(giveplayerid);
				}
			}
			else if(giveplayerid == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/forceskin", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 5)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /forceskin [id]");
			new para1;
			para1 = ReturnUser(tmp);
			if(IsPlayerConnected(para1))
			{
				if(para1 != INVALID_PLAYER_ID)
				{
					if(PlayerInfo[para1][pMember] < 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит во фракции");
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Вы были допущены к изменению скина администратором штата Arizona RP");
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы допустили %s к изменению скина", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, COLOR_REDD, "Используйте клавишу 'Быстрый бег' (пробел по умолчанию)");
					SendClientMessage(para1, COLOR_REDD, "Используйте клавишу 'Вверх,вниз' (W,S по умолчанию)");
					ShowMenuForPlayer(ChoseSkin,para1);
					SetPlayerInterior(para1,5);
					OldSkin[para1] = GetPlayerSkin(para1);
					ChosenSkin[para1] = OldSkin[para1];
					new skin =2 + random(100);
					SetPlayerVirtualWorld(para1,skin);
					new rand = random(sizeof(gInviteSpawns));
					ACP_SetPlayerPos(para1, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
					SetPlayerFacingAngle(para1, gInviteSpawns[rand][3]);
					SetPlayerCameraPos(para1,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
					SetPlayerCameraLookAt(para1,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
					TogglePlayerControllable(para1, 0);
					SelectChar[para1] = 255;
					SelectCharID[para1] = PlayerInfo[para1][pMember];
					SelectCharPlace[para1] = 1;
					PlayerInfo[para1][pModel] = InviteSkin[para1];
					SetPlayerArmourAC(para1, 0);
					SetPlayerSkin(para1, InviteSkin[para1]);

				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/skin", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2 || PlayerInfo[playerid][pHelp] >= 3)
		{
		    if(PlayerInfo[playerid][pAdmin] >= 2 && dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /skin [skin]");
			new level;
			level = strval(tmp);
			if(level > 311 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Неверный ID скина"); return true; }
			if(IsPlayerConnected(playerid))
			{
				PlayerInfo[playerid][pModel] = level;
				PlayerInfo[playerid][pChar] = level;
				SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/setskin", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setskin [id] [skin]");
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level > 311 || level < 0) { SendClientMessage(playerid, COLOR_GREY, "Неверный ID скина"); return true; }
			if(IsPlayerConnected(para1))
			{
				if(para1 != INVALID_PLAYER_ID)
				{
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[para1][pChar] = level;
					format(string, sizeof(string), "Ваш скин был изменен администратором %s", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы изменили скин %s на номер: %d", giveplayer,level);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/prizeticket", true) == 0)
	{
		if(PlayerInfo[playerid][pTicket] != 1) return SendClientMessage(playerid, COLOR_GREY,"У вас нет билета удачи");
		if(PlayerInfo[playerid][pTicketNr][0] & PlayerInfo[playerid][pTicketNr][1] & PlayerInfo[playerid][pTicketNr][2])
		{
			format(string,sizeof(string), "На карточке:[%d][%d][%d]",PlayerInfo[playerid][pTicketNr][0],PlayerInfo[playerid][pTicketNr][1],PlayerInfo[playerid][pTicketNr][2]);
			SendClientMessage(playerid,COLOR_GREEN,string);
			SendClientMessage(playerid,COLOR_WHITE,"Поздравляем у вас выпало 3 одинаковых числа");
			PlayerInfo[playerid][pTicket] = 0;
			PlayerInfo[playerid][pTicketWin] = 1;
			PlayerInfo[playerid][pTicketNr][0] = 0;
			PlayerInfo[playerid][pTicketNr][1] = 0;
			PlayerInfo[playerid][pTicketNr][2] = 0;
			return true;
		}
		else
		{
			format(string,sizeof(string), "На карточке:[%d][%d][%d]",PlayerInfo[playerid][pTicketNr][0],PlayerInfo[playerid][pTicketNr][1],PlayerInfo[playerid][pTicketNr][2]);
			SendClientMessage(playerid,COLOR_GREEN,string);
			SendClientMessage(playerid,COLOR_WHITE,"Может в следущий раз повезёт");
			PlayerInfo[playerid][pTicket] = 0;
			PlayerInfo[playerid][pTicketNr][0] = 0;
			PlayerInfo[playerid][pTicketNr][1] = 0;
			PlayerInfo[playerid][pTicketNr][2] = 0;
			return true;
		}
	}
	if(strcmp(cmd, "/giveticket", true) == 0)
	{
		if(PlayerInfo[playerid][pTicketWin] == 1)
		{
			SendClientMessage(playerid,COLOR_WHITE,"Вы забрали свои 10000 вирт. Спасибо за покупку билета удачи");
			PlayerInfo[playerid][pCash] += 10000;
			PlayerInfo[playerid][pTicketWin] = 0;
			return true;
		}
		else
		{
			SendClientMessage(playerid,COLOR_WHITE,"Вы не чего не выйграли");
			return true;
		}
	}
	if(strcmp(cmd, "/pay", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /pay [id] [сумма]");
		giveplayerid = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /pay [id] [сумма]");
		moneys = strval(tmp);
		if(moneys < 1 || moneys > 1000000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя передать меньше 1 вирта и больше 100000 вирт");
		if(PlayerInfo[playerid][pLevel] < 2)return SendClientMessage(playerid,COLOR_GREY, "Команда доступна с 2 уровня");
		if (IsPlayerConnected(giveplayerid))
		{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				if(ProxDetectorS(5.0, playerid, giveplayerid))
				{
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					playermoney = GetSRVMoney(playerid);
					if(moneys > 0 && playermoney >= moneys)
					{
						PlayerInfo[giveplayerid][pCash] += moneys;
						PlayerInfo[playerid][pCash] -= moneys;
						format(string, sizeof(string), "Вы передали %s[%d], %d вирт.", giveplayer,giveplayerid, moneys);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "Вы получили %d вирт от %s[%d].", moneys, sendername, playerid);
						SendClientMessage(giveplayerid, COLOR_GRAD1, string);
   						format(string, sizeof(string), " -[ %s Peredal %d virt igroku %s ]-", sendername, moneys, giveplayer);
						Pay(string);
						PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "%s достал кошелек и передал деньги %s", sendername, giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        for(new admin = 0; admin < MAX_PLAYERS; admin ++)
		  				{
		   					if(adminreadpay[admin] == 1)
		   					{
							    format(string, sizeof(string), "[PAYLOG] {FF9900}Игрок {FFFFFF}%s {FF9900}передал {FFFFFF}%d {FF9900}вирт игроку {FFFFFF}%s", sendername, moneys, giveplayer);
                        		SendClientMessage(admin,COLOR_GREY,string);
		   					}
			 			}
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		}
		return true;
	}
    if(strcmp(cmd, "/afuel", true) ==0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 5)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
		    if(GetPVarInt(playerid,"AF") > gettime())return SendClientMessage(playerid,COLOR_GREY,"Использование команды запрещено! Эту команду можно использовать раз в 10 минут!");
			for(new i = 0;i<MAX_VEHICLES;i++)
			{
				Fuell[i] = 300;
			}
			GetPlayerName(playerid,sendername,sizeof(sendername));
			format(string,sizeof(string),"Администратор %s заправил весь транспорт!",sendername);
			SendClientMessageToAll(COLOR_LIGHTRED,string);
			SetPVarInt(playerid,"AF",gettime() + 300);
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "Вы не администратор");
		}
	}
	if(strcmp(cmd, "/givequest", true) ==0)
	{
	    if(PlayerInfo[playerid][pAdmin] >=7)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /givequest [id]");
			giveplayerid = ReturnUser(tmp);
			PlayerInfo[giveplayerid][pQuest] = 999;
			SendClientMessage(giveplayerid, COLOR_LIGHTRED, "Администратор выдал вам максимальный уровень квеста.");
			SendClientMessage(playerid, COLOR_GREEN, "Квест 999 выдан!");
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "Вы не администратор");
		}
	}
	if(strcmp(cmd,"/medusa",true) == 0)
	{
	    new money = RJFish[playerid] * 150 + WJFish[playerid] * 100;
		format(string,sizeof(string),"{FFFFFF}Белых медуз: %d || {e23434}Красных медуз: {FFFFFF}%d || Общая цена: %d",WJFish[playerid],RJFish[playerid], money);
		SendClientMessage(playerid,COLOR_WHITE,string);
	}
	if(strcmp(cmd, "/mission", true) == 0) // Зеленый {22ff00} {e23434} красный
	{
		if(PlayerInfo[playerid][pQuest] == 1)
		{
		    SendClientMessage(playerid, COLOR_GREY, "Rafael: {FFFFFF}Отправляйся в мерию за паспортом! Потом я с тобой свяжусь!");
		}
		else if(PlayerInfo[playerid][pQuest] == 2)
		{
		    SendClientMessage(playerid, COLOR_GREY, "Rafael: {FFFFFF}Отправляйся на работу грузчиков и заработай как минимум 1000. Потом я с тобой свяжусь!");
		}
		else if(PlayerInfo[playerid][pQuest] == 3)
		{
		    SendClientMessage(playerid, COLOR_GREY, "Rafael: {FFFFFF}Сдай на права в Автошколе. Потом я с тобой свяжусь!");
		}
		else if(PlayerInfo[playerid][pQuest] == 999)
		{
		    SendClientMessage(playerid, COLOR_GREY, "Rafael: {FFFFFF}Все задания выполнены! Удачи!");
		}
	}
    if(strcmp(cmd, "/piss", true) == 0)
	{
		SetPlayerSpecialAction(playerid, 68);
		SendClientMessage(playerid, COLOR_GREEN, "[Arizona RP]: Что бы перестать писать нажмите Enter");
		return 1;
	}
	if(strcmp(cmdtext, "/suicid", true) == 0)
	{
	    if(GetPVarInt(playerid,"SUI") > gettime())return SendClientMessage(playerid, COLOR_GREY, "Команду можно использовать раз в 10 минут");
	    format(string, sizeof(string), "%s покончил жизнь самоубийством", sendername);
		ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    SendClientMessage(playerid, COLOR_RED, "Вы покончили жизнь самоубийством");
	    SetPlayerHealthAC(playerid, 0);
		PlayerInfo[playerid][pHP] = 0;
		SetPVarInt(playerid,"SUI",gettime() + 600);
		return 1;
	}
	if(strcmp(cmd, "/setmats", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 9)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setmats [номер] [количество]");
				SendClientMessage(playerid, COLOR_WHITE, " [1] - LVA, [2] - SFA, [4] - FBI, [5] - LSPD, [6] - SFPD, [7] - LVPD, [8] - Yakuza, [9] - LCN, [10] - RM [11] - LSA");
				SendClientMessage(playerid, COLOR_WHITE, " [12] - Ballas, [13] - Vagos, [14] - Aztek, [15] - Grove, [16] - Rifa");
				return true;
			}
			new stat;
			stat = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setmats [номер] [количество]");
				SendClientMessage(playerid, COLOR_WHITE, " [1] - LVA, [2] - SFA, [4] - FBI, [5] - LSPD, [6] - SFPD, [7] - LVPD, [8] - Yakuza, [9] - LCN, [10] - RM [11] - LSA");
				SendClientMessage(playerid, COLOR_WHITE, " [12] - Ballas, [13] - Vagos, [14] - Aztek, [15] - Grove, [16] - Rifa");
				return true;
			}
			new amount;
			amount = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 7)
			{
			    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
				switch(stat)
				{
					case 1:
					{
						armmatbi = amount;
						format(string, sizeof(string), "Материалы LVA изменены на: %d", amount);
					}
					case 2:
					{
						armmatsf = amount;
						format(string, sizeof(string), "Материалы SFA изменены на: %d", amount);
					}
					case 4:
					{
						fbimats = amount;
						format(string, sizeof(string), "Материалы FBI изменены на: %d", amount);
					}
					case 5:
					{
						lspdmatbi = amount;
						format(string, sizeof(string), "Материалы LSPD изменены на: %d", amount);
					}
					case 6:
					{
						sfpdmats = amount;
						format(string, sizeof(string), "Материалы SFPD изменены на: %d", amount);
					}
					case 7:
					{
        				lvpdmats = amount;
						format(string, sizeof(string), "Материалы LVPD изменены на: %d", amount);
					}
					case 8:
					{
						yakuzamats = amount;
						format(string, sizeof(string), "Материалы Yakuza изменены на: %d", amount);
					}
					case 9:
					{
						lcnmats = amount;
						format(string, sizeof(string), "Материалы LCN изменены на: %d", amount);
					}
					case 10:
					{
						rmmats = amount;
						format(string, sizeof(string), "Материалы RM изменены на: %d", amount);
					}
					case 11:
					{
					    lsamatbi = amount;
					    format(string, sizeof(string), "Материалы LSA изменены на: %d", amount);
					}
					case 12:
					{
					    ballasmatbi = amount;
					    format(string, sizeof(string), "Материалы Ballas изменены на: %d", amount);
					}
					case 13:
					{
					    vagosmatbi = amount;
					    format(string, sizeof(string), "Материалы Vagos изменены на: %d", amount);
					}
					case 14:
					{
					    aztekmatbi = amount;
					    format(string, sizeof(string), "Материалы Aztek изменены на: %d", amount);
					}
					case 15:
					{
					    groovmatbi = amount;
					    format(string, sizeof(string), "Материалы Grove изменены на: %d", amount);
					}
					case 16:
					{
					    rifamatbi = amount;
					    format(string, sizeof(string), "Материалы Rifa изменены на: %d", amount);
					}
					default:
					{
						format(string, sizeof(string), "Неверное значение", amount);
					}
				}
				SendClientMessage(playerid, COLOR_GREY, string);
				SaveMaterials();
			}
		}
		return true;
	}
	if(strcmp(cmd, "/setstat", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 9)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "[1] Уровень [2] EXP [3] Деньги [4] Деньги в банке [5] Мобильный счет");
				SendClientMessage(playerid, COLOR_GRAD1, "[6] VIP(1-3)[7]Наркотики [8] Материалы [9] Наркозависимость [10] Машина");
				SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setstat [id] [номер] [количество]");
				return true;
			}
 			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
	    	    if(giveplayerid != INVALID_PLAYER_ID)
	    	    {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "[1] Уровень [2] EXP [3] Деньги [4] Деньги в банке [5] Мобильный счет");
						SendClientMessage(playerid, COLOR_GRAD1, "[6] VIP(1-3)[7]Наркотики [8] Материалы [9] Наркозависимость [10] Машина");
						SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setstat [id] [номер] [количество]");
						return true;
					}
    				new stat;
					stat = strval(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "[1] Уровень [2] EXP [3] Деньги [4] Деньги в банке [5] Мобильный счет");
						SendClientMessage(playerid, COLOR_GRAD1, "[6] VIP(1-3)[7]Наркотики [8] Материалы [9] Наркозависимость [10] Машина");
						SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setstat [id] [номер] [количество]");
						return true;
					}
					new amount;
					amount = strval(tmp);
					if(PlayerInfo[playerid][pAdmin] >= 7)
					{
					    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
						switch (stat)
						{
							case 1:
							{
								PlayerInfo[giveplayerid][pLevel] = amount;
								format(string, sizeof(string), "LVL игрока изменён на: %d", amount);
							}
							case 2:
							{
							    PlayerInfo[giveplayerid][pExp] = amount;
								format(string, sizeof(string), "EXP игрока изменён на: %d", amount);
							}
                            case 3:
							{
							    PlayerInfo[giveplayerid][pCash] = amount;
								format(string, sizeof(string), "Деньги игрока изменены на: %d", amount);
							}
							case 4:
							{
							    PlayerInfo[giveplayerid][pBank] = amount;
								format(string, sizeof(string), "Баланс банка игрока изменен на: %d", amount);
							}
							case 5:
							{
								PlayerInfo[giveplayerid][pPhbalance] = amount;
								format(string, sizeof(string), "Мобильный баланс изменен на: %d", amount);
							}
							case 6:
							{
							    PlayerInfo[giveplayerid][pDonateRank] = amount;
								format(string, sizeof(string), "VIP уровень изменен на: %d", amount);
							}
							case 7:
							{
							    PlayerInfo[giveplayerid][pDrugs] = amount;
								format(string, sizeof(string), "Наркотики игрока изменены на: %d", amount);
							}
							case 8:
							{
							    PlayerInfo[giveplayerid][pMaterials] = amount;
								format(string, sizeof(string), "Материалы игрока изменены на: %d", amount);
							}
							case 9:
							{
							    PlayerInfo[giveplayerid][pAddiction] = amount;
								format(string, sizeof(string), "Наркозависимость игрока изменена на: %d", amount);
							}
							case 10:
							{
							    PlayerInfo[giveplayerid][pCar] = amount;
								format(string, sizeof(string), "Машина игрока изменена на: %d", amount);
							}
							default:
							{
							    SendClientMessage(playerid,COLOR_GREY,"Неверное значение!");
							}
						}
						SendClientMessage(playerid, COLOR_GREY, string);
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/setklass", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 9)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setklass [дом] [класс]");
			new house = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setklass [дом] [класс]");
			new klass;
			klass = strval(tmp);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setklass [дом] [класс]");
			HouseInfo[house][hKlass] = klass;
			format(string, sizeof(string), "Класс дома: %d", klass);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return true;
	}
	if(strcmp(cmd, "/getschet", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 9)
	 	{
	 	    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /getschet [дом]");
			new house = strval(tmp);
			format(string, sizeof(string), "Домашний счет: %d",HouseInfo[house][hTakings]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return true;
	}
	if(strcmp(cmd, "/setschet", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 7)
	 	{
	 	    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setchet [дом] [cчет дома]");
			new house = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setchet [дом] [счет дома]");
			new cena;
			cena = strval(tmp);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setchet [дом] [счет дома]");
			HouseInfo[house][hTakings] = cena;
			format(string, sizeof(string), "Домашний счет: %d", cena);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return true;
	}
	if(strcmp(cmd, "/setcena", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 9)
	 	{
	 	    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setcena [дом] [цена]");
			new house = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setcena [дом] [цена]");
			new cena;
			cena = strval(tmp);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setcena [дом] [цена]");
			HouseInfo[house][hValue] = cena;
			format(string, sizeof(string), "Цена дома: %d", cena);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return true;
	}
	if(strcmp(cmd, "/setpos", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 10)
	 	{
	 	    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setpos [дом]");
			new Float: lwx, Float:lwy, Float:lwz;
			GetPlayerPos(playerid, lwx, lwy, lwz);
			new house = strval(tmp);
			HouseInfo[house][hEntrancex] = lwx;
			HouseInfo[house][hEntrancey] = lwy;
			HouseInfo[house][hEntrancez] = lwz;
			BuyHouse();
			SendClientMessage(playerid, COLOR_WHITE, "Кординаты дома установлены");
		}
		return true;
	}
	if(strcmp(cmd, "/setposcar", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 10)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setposcar [дом]");
			new Float:X,Float:Y,Float:Z,Float:Angle; GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
			new house = strval(tmp);
			HouseInfo[house][hCarx] = X;
			HouseInfo[house][hCary] = Y;
			HouseInfo[house][hCarz] = Z;
			HouseInfo[house][hCarc] = Angle;
			SendClientMessage(playerid, COLOR_GREY, "Координаты машины установлены");
		}
		return true;
	}
	if(strcmp(cmd, "/setbizcena", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 10)
	 	{
	 	    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setbizcena [бизнес] [цена]");
			new bizz = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setbizcena [бизнес] [цена]");
			new cena;
			cena = strval(tmp);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setbizcena [бизнес] [цена]");
			BizzInfo[bizz][bBuyPrice] = cena;
			OnPropUpdate();
			format(string, sizeof(string), "%s\nПродаётся\nЦена: %d", BizzInfo[bizz][bMessage],BizzInfo[bizz][bBuyPrice]);
			Update3DTextLabelText(SBizzInfo[bizz][sbLabel], 0xEAC700AA, string);
			format(string, sizeof(string), "Цена бизнеса: %d", cena);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return true;
	}
	if(strcmp(cmd, "/setsbizcena", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 10)
	 	{
	 	    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setsbizcena [бизнес] [цена]");
			new bizz = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setsbizcena [бизнес] [цена]");
			new cena;
			cena = strval(tmp);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setsbizcena [бизнес] [цена]");
			SBizzInfo[bizz][sbBuyPrice] = cena;
			format(string, sizeof(string), "%s\nПродаётся\nЦена: %d", SBizzInfo[bizz][sbMessage],SBizzInfo[bizz][sbBuyPrice]);
			Update3DTextLabelText(SBizzInfo[bizz][sbLabel], 0xEAC700AA, string);
			format(string, sizeof(string), "Цена бизнеса: %d", cena);
			SendClientMessage(playerid, COLOR_WHITE, string);
			OnPropUpdate();
		}
		return true;
	}
	if(strcmp(cmd, "/setbizprod", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 10)
	 	{
	 	    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setbizprod [биз] [прод]");
			new bizz = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setbizprod [биз] [прод]");
			new cena;
	  		cena = strval(tmp);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setbizprod [биз] [прод]");
			BizzInfo[bizz][bProducts] = cena;
			format(string, sizeof(string), "Продукты бизнеса: %d", cena);
			SendClientMessage(playerid, COLOR_WHITE, string);
			OnPropUpdate();
		}
		return true;
	}
	if(strcmp(cmd, "/setsbizprod", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 10)
	 	{
	 	    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setsbizprod [биз] [прод]");
			new bizz = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setsbizprod [биз] [прод]");
			new cena;
			cena = strval(tmp);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setsbizprod [биз] [прод]");
			SBizzInfo[bizz][sbProducts] = cena;
			format(string, sizeof(string), "Продукты бизнеса: %d", cena);
			SendClientMessage(playerid, COLOR_WHITE, string);
			OnPropUpdate();
		}
		return true;
	}
	if(strcmp(cmd, "/edit", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 9)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			ShowPlayerDialog(playerid, 3725, DIALOG_STYLE_LIST, "Выберите действие", " [1] Продать все дома\n [2] Продать все бизнесы\n [3] Установить дому интеръер\n [4] Установить дому интерьер часть 2\n [5] Востанновить цены, домов и классы(если все дома проданы)", "Выбрать", "Закрыть");
			return true;
		}
		return true;
	}
	if(strcmp(cmd, "/pobject", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_BLUE, "{e23434}Введите: /objplayer [id]");
		objectplayerid = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if(PlayerInfo[playerid][pAdmin] >= 7)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			if(IsPlayerConnected(objectplayerid))
			{
				if(objectplayerid != INVALID_PLAYER_ID)
				{
					ShowPlayerDialog(playerid,8000,DIALOG_STYLE_LIST,"Выдать объект игроку","[1] - Шляпа курицы\n[2] - Огонек на голову\n[3] - Мигалка на голову\n[4] - Черная маска\n[5] - Бандана №1\n[6] - Бандана №2\n[7] - Бандана №3\n[8] - Бандана №4\n[9] - Бандана №5\n[10] - Маска дракона\n[11] - Лазер на голову\n[12] - Комплект всемогущий\n[13] - Попугай на плечо\n[14] - Яркий свет\n[15] - Большой М4 в руку\n[16] - Пенис\n[17] - Костюм попугая\n[18] - Удалить все объекты","Выбрать","Закрыть");
				}
			}
		}
	}
	if(strcmp(cmd, "/cmd", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 10)
 		{
 		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
  			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /cmd [id] [команда]");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
 					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /cmd [id] [команда]");
					OnPlayerCommandText(giveplayerid,result);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/t", true) == 0 || strcmp(cmd, "/text", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 10)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /(t)ext [id] [текст]");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /text [id] [текст]");
					ApplyAnimation(giveplayerid, "PED", "IDLE_CHAT",4.1,0,1,1,1,1,1);
					clearanim[giveplayerid] = 7;
					format(string, sizeof(string), "%s говорит: %s",giveplayer,(result));
					SetPlayerChatBubble(giveplayerid, (result), 0x6495EDFF, 20.0, 10000);
					ProxDetector(20.0, giveplayerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/getip", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 8)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext,idx);
			new playersip[256];
			if(!strlen(tmp)) return SendClientMessage(playerid,COLOR_WHITE, "{e23434}Введите: /getip [id]");
			giveplayerid = ReturnUser(tmp);
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			GetPlayerIp(giveplayerid,playersip,sizeof(playersip));
			format(string, sizeof(string), "[%s] IP: %s",giveplayer,playersip);
			SendClientMessage(playerid, COLOR_GREEN,string);
		}
		return true;
	}
	if(strcmp(cmd, "/getstats", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /getstats [id]");
			giveplayerid = strval(tmp);
	        giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					AShowStats(playerid, giveplayerid);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/number", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /number [id]");
		giveplayerid = ReturnUser(tmp);
		if(IsPlayerConnected(giveplayerid))
		{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
			    if(PlayerInfo[giveplayerid][pPnumber] == NUMBER_TLF) return SendClientMessage(playerid,COLOR_GREY,"У данного игрока нет телефона");
				GetPlayerName(giveplayerid, sendername, sizeof(sendername));
				format(string, 256, "Владелец: %s. Телефон: %d",sendername,PlayerInfo[giveplayerid][pPnumber]);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/cena", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPBiskey];
			if(bouse == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет бизнеса");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /cena [цена]");
			if(strval(tmp) < 1 || strval(tmp) > 5000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 5000 вирт");
			BizzInfo[bouse][bPrice] = strval(tmp);
			format(string, sizeof(string), "Цена за товар установлена на %d вирт", BizzInfo[bouse][bPrice]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			OnPropUpdate();
		}
		return true;
	}
	if(strcmp(cmd, "/eat", true) == 0)
	{
		for(new i = 0; i < sizeof(BizzInfo); i++)
	    {
			new inter = GetPlayerInterior(playerid);
			new bizinfo[400];
			new cena = BizzInfo[i][bPrice];
			new cena2 = BizzInfo[i][bPrice]*2;
			new cena3 = BizzInfo[i][bPrice]*3;
			new cena4 = BizzInfo[i][bPrice]*4;
			new cena5 = BizzInfo[i][bPrice]*5;
			new cena6 = BizzInfo[i][bPrice]*6;
		    if (PlayerToPoint(3, playerid,BizzInfo[i][bBarX], BizzInfo[i][bBarY], BizzInfo[i][bBarZ]))
		    {
			    if(inter == 10 || inter == 4)
			 	{
					format(bizinfo,sizeof(bizinfo), "Бургер\t\t\t[%d вирт]\nРыбный суп\t\t[%d вирт]\nБольшой бургер\t[%d вирт]\nКотлеты\t\t[%d вирт]\nПельмени\t\t[%d вирт]\nГамбургер\t\t[%d вирт]",cena,cena2,cena3,cena4,cena5,cena6);
	        		ShowPlayerDialog(playerid, 3389, DIALOG_STYLE_LIST, "Ресторан", bizinfo, "Выбрать", "Отмена");
	 			}
		 		if(inter == 5 || inter == 9 || inter == 17)
				{
					format(bizinfo,sizeof(bizinfo), "Пицца маленькая\t\t[%d вирт]\nПицца с грибами\t\t[%d вирт]\nПицца с сыром\t\t[%d вирт]\nПицца большая\t\t[%d вирт]\nПицца с ветчиной\t\t[%d вирт]\nПицца с куринным мясом\t[%d вирт]",cena,cena2,cena3,cena4,cena5,cena6);
        			ShowPlayerDialog(playerid, 4489, DIALOG_STYLE_LIST, "Пицеррия", bizinfo, "Выбрать", "Отмена");
 				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не у заказного столика!");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/buy", true) == 0)
	{
		for(new i = 0; i < sizeof(BizzInfo); i++)
	    {
	    	new inter = GetPlayerInterior(playerid);
			new bizinfo[400];
			new cena1 = BizzInfo[i][bPrice];
			new cena2 = BizzInfo[i][bPrice]*2;
			new cena3 = BizzInfo[i][bPrice];
			new cena4 = BizzInfo[i][bPrice]*3;
			new cena5 = BizzInfo[i][bPrice]*5;
			new cena6 = BizzInfo[i][bPrice]*10;
			new cena7 = BizzInfo[i][bPrice]*15;
		    if(PlayerToPoint(10, playerid,BizzInfo[i][bBarX], BizzInfo[i][bBarY], BizzInfo[i][bBarZ]))
		    {
			    if(inter == 16 || inter == 17 || inter == 10 || inter == 18 || inter == 4 || inter == 6)
			    {
					format(bizinfo,sizeof(bizinfo), " Номер телефона\t[$%d]\n Телефонная книга\t[$%d]\n MP3-Player\t\t[$%d]\n Билет удачи\t\t[$%d]\n Газовый баллончик\t[$%d]\n Аптечка(25 шт.)\t[$%d]\n фотоаппарат(10 шт.)\t[$%d]",cena1,cena2,cena3,cena4,cena5,cena6,cena7);
		        	ShowPlayerDialog(playerid, 5589, DIALOG_STYLE_LIST, "Магазин 24/7", bizinfo, "Купить", "Отмена");
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/drink", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    for(new i = 0; i < sizeof(BizzInfo); i++)
		    {
	 			new bizinfo[400];
				new cena = BizzInfo[i][bPrice];
				new cena2 = BizzInfo[i][bPrice]*2;
				new cena3 = BizzInfo[i][bPrice]*3;
				new cena4 = BizzInfo[i][bPrice]*4;
				new cena5 = BizzInfo[i][bPrice]*5;
				new cena6 = BizzInfo[i][bPrice]*6;
		    	if (PlayerToPoint(3, playerid,BizzInfo[i][bBarX], BizzInfo[i][bBarY], BizzInfo[i][bBarZ]))
				{
					format(bizinfo,sizeof(bizinfo), "Вода\t\t[%d вирт]\nСода\t\t[%d вирт]\nКока-кола\t[%d вирт]\nПиво\t\t[%d вирт]\nВино\t\t[%d вирт]\nАбсент\t\t[%d вирт]",cena,cena2,cena3,cena4,cena5,cena6);
	  				ShowPlayerDialog(playerid, 2289, DIALOG_STYLE_LIST, "Бар", bizinfo, "Выбрать", "Отмена");
				}
	   		}
	   	}
    	return true;
	}
	if(strcmp(cmd, "/buygun", true) == 0)
	{
		if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет лицензии на оружие");
		if(PlayerInfo[playerid][pCash] < 1) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег для покупки");
		if(PlayerToPoint(23.0,playerid,286.9145,-38.6596,1001.5156) || PlayerToPoint(23.0,playerid,285.9187,-86.7644,1001.5229) || PlayerToPoint(23.0,playerid,313.7110,-140.3784,999.6016))
		{
			new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Винтовки и дробовики";
			ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не в магазине оружия");
		}
		return true;
	}
	if(strcmp(cmd, "/gps", true) == 0)
    {
		ShowPlayerDialog(playerid, 10000, DIALOG_STYLE_LIST, "{FFFFFF}GPS", "{e23434}[1]{FFFFFF}Фракции\n{e23434}[2]{FFFFFF}Работы\n{e23434}[3]{FFFFFF}Важное\n{e23434}[4]{FFFFFF}Развлечения\n{e23434}[5]{FFFFFF}Прочее\n{e23434}[6]{FFFFFF}Выключить навигатор", "Выбрать", "Отмена");
		return true;
    }
    if(strcmp(cmd, "/gps", true) == 0)
    {
        SendClientMessage(playerid, COLOR_GREY, "[Arizona RP]: {FFFFFF} Для открытия навигатора , введитe /gps");
	}
	if(strcmp(cmd, "/o", true) == 0)
	{
		if((noooc) && PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GREY, "Общий чат отключен администратором!");
		if(PlayerInfo[playerid][pMuted] == 1)
		{
			format(string, sizeof(string), "У вас бан чата! До снятия: %d секунд(ы)",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return true;
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /o [текст]");
		if(!CheckString(playerid,result))return 1;
		if(PlayerInfo[playerid][pHelp] >= 1 && PlayerInfo[playerid][pAdmin] == 0)
		{
		    format(string, sizeof(string), "<< {00CCFF}%s{FFFFFF}[%d]: %s >>", sendername, playerid, result);
			OOCOff(COLOR_WHITE,string);
		}
		else if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			format(string, sizeof(string), "<< {e23434}%s{FFFFFF}[%d]: %s >>", sendername, playerid, result);
			OOCOff(COLOR_WHITE,string);
		}
		else
		{
		    format(string, sizeof(string), "<< %s[%d]: %s >>", sendername, playerid, result);
			OOCOff(COLOR_WHITE,string);
		}
		return true;
	}
	if(strcmp(cmd, "/ono", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 7)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			if(noooc == 0)
			{
				noooc = 1;
				OOCOff(COLOR_WHITE, "Общий чат отключен администратором!");
			}
			else if(noooc == 1)
			{
				noooc = 0;
				OOCOff(COLOR_WHITE, "Общий чат включен администратором! (( для общения /o [Текст] ))");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/goverment", true) == 0 || strcmp(cmd, "/gov", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pRank] >= 14 || PlayerInfo[playerid][pMember] == 10 && PlayerInfo[playerid][pRank] >= 14 || PlayerInfo[playerid][pMember] == 21 && PlayerInfo[playerid][pRank] >= 14
		|| PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] >= 7 || IsAArm(playerid) && PlayerInfo[playerid][pRank] >= 15
		|| IsAMayor(playerid) && PlayerInfo[playerid][pRank] >= 5 || IsAMedic(playerid) && PlayerInfo[playerid][pRank] >= 7 || IsALicenser(playerid) && PlayerInfo[playerid][pRank] >= 7)
		{
			if(PlayerInfo[playerid][pMuted] == 1)
			{
				format(string, sizeof(string), "У Вас бан чата! До снятия: %d секунд(ы)",PlayerInfo[playerid][pMuteTime]);
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
				return true;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: (/gov)ernment [текст]");
			if(!CheckString(playerid,result))return 1;
			new rtext[64];
			switch(PlayerInfo[playerid][pMember])
			{
				case 1:{ rtext = "[LSPD]"; }
				case 2:{ rtext = "[FBI]"; }
				case 3:{ rtext = "[ARMY-SF]"; }
				case 4:{ rtext = "[Medic-SF]"; }
				case 7:{ rtext = "[City Hall]"; }
				case 10:{ rtext = "[SFPD]"; }
				case 11:{ rtext = "[Driving]"; }
				case 19:{ rtext = "[ARMY-LV]"; }
				case 21:{ rtext = "[LVPD]"; }
				case 22:{ rtext = "[Medic-LS]"; }
				case 23:{ rtext = "[Medic-LV]"; }
			}
			SendClientMessageToAll(COLOR_WHITE, "---========== Государственные Новости ==========---");
			format(string, sizeof(string), "%s %s: %s", rtext, sendername, result);
			SendClientMessageToAll(0x110CE7FF, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
			return true;
		}
	}
	if(strcmp(cmd, "/housebank",true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsABankomat(playerid) || PlayerToPoint(4.0,playerid,1364.6337,895.2993,1107.4862))
            {
	            new bouse = PlayerInfo[playerid][pPHousekey];
	            new money;
	            GetPlayerName(playerid, sendername, sizeof(sendername));
	            if(PlayerInfo[playerid][pMember] >= 0)
	            tmp = strtok(cmdtext, idx);
	            if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /housebank [Сумма]");
	            if(PlayerInfo[playerid][pMember] >= 0)
	            {
	            	money = strval(tmp);
	            	{
			            if(PlayerInfo[playerid][pBank] < money) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег в банке");
			            if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома");
			            money = strval(tmp);
			            PlayerInfo[playerid][pBank] -= money;
			            HouseInfo[bouse][hTakings] += money;
			            format(string, sizeof(string), "Вы положили на домашний счёт %d вирт", money);
			            SendClientMessage(playerid, COLOR_WHITE, string);
			            format(string, sizeof(string), "Домашний счёт: %d вирт",HouseInfo[bouse][hTakings]);
			            SendClientMessage(playerid, COLOR_WHITE, string);
			            return true;
            		}
				}
			}
		}
    	return true;
	}
	if(strcmp(cmd, "/bank",true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsABankomat(playerid) || PlayerToPoint(4.0,playerid,1364.6337,895.2993,1107.4862))
            {
	            new money;
	            GetPlayerName(playerid, sendername, sizeof(sendername));
	            if(PlayerInfo[playerid][pMember] >= 0)
	            tmp = strtok(cmdtext, idx);
	            if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /bank [Сумма]");
	            if(PlayerInfo[playerid][pMember] >= 0)
	            {
            		money = strval(tmp);
            		{
			            if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег"); return true; }
			            if(money < 1)
						{
							format(string, sizeof(string), "Баланс счёта: %d вирт", PlayerInfo[playerid][pBank]);
							SendClientMessage(playerid, COLOR_GREY, string);
							return true;
					 	}
			            money = strval(tmp);
						SendClientMessage(playerid, COLOR_GRAD1, "---------===[ ЧЕК ]===---------");
						format(string, sizeof(string), "Старый баланс: %d вирт", PlayerInfo[playerid][pBank]);
						SendClientMessage(playerid, COLOR_GREY, string);
						PlayerInfo[playerid][pCash] -= money;
						PlayerInfo[playerid][pBank] += money;
						format(string, sizeof(string), "Переведено: %d вирт", money);
						SendClientMessage(playerid, COLOR_GRAD4, string);
						format(string, sizeof(string), "Новый баланс: %d вирт", PlayerInfo[playerid][pBank]);
						SendClientMessage(playerid, COLOR_WHITE, string);
			            return true;
		            }
				}
			}
		}
    	return true;
	}
	if(strcmp(cmd, "/transfer", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsABankomat(playerid) || PlayerToPoint(4.0,playerid,1364.6337,895.2993,1107.4862))
	        {
				if(PlayerInfo[playerid][pLevel] < 3)
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас должен быть 3 уровень");
					return true;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /transfer [id] [Сумма]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /transfer [id] [Сумма]");
					return true;
				}
				moneys = strval(tmp);
				if(giveplayerid == playerid) return SendClientMessage(playerid,COLOR_GREY,"Нельзя перевести деньги самому себе!");
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						playerpcash = PlayerInfo[playerid][pBank];
						if(moneys > 0 && playerpcash >= moneys)
						{
						    if(moneys > PlayerInfo[playerid][pBank])
						    {
								SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						        return true;
						    }
							PlayerInfo[playerid][pBank] -= moneys;
							PlayerInfo[giveplayerid][pBank] += moneys;
							format(string, sizeof(string), "Вы перевели игроку %s сумму %d вирт", giveplayer, moneys);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "SMS: %s перевёл вам сумму %d вирт на ваш банковский счёт. Отправитель: Банк Штата", sendername, moneys);
							SendClientMessage(giveplayerid, COLOR_YELLOW, string);
	 						format(string, sizeof(string), "%s transfered = %d wirt's and %s handed = %d wirt's | ", sendername, moneys, giveplayer,moneys);
							Pay(string);
							PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег на банковском счету");
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				}
			}
			return true;
		}
	}
	if(strcmp(cmd, "/withdraw",true)==0)
    {
		if(IsABankomat(playerid) || PlayerToPoint(4.0,playerid,1364.6337,895.2993,1107.4862))
		{
            new money;
            if(PlayerInfo[playerid][pMember] >= 0)
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /withdraw [Сумма]");
            if(PlayerInfo[playerid][pMember] >= 0)
            {
            	money = strval(tmp);
            	{
					if(money < 1 || money > 1000000) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 1000000 вирт"); return true; }
					if(PlayerInfo[playerid][pBank] < money) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
		            PlayerInfo[playerid][pCash] += money;
		            PlayerInfo[playerid][pBank] -= money;
					format(string, sizeof(string), "Вы сняли %d вирт. Остаток: %d вирт", money, PlayerInfo[playerid][pBank]);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				}
			}
		}
    	return true;
	}
	if(strcmp(cmd, "/gethousemoney",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsABankomat(playerid) || PlayerToPoint(4.0,playerid,1364.6337,895.2993,1107.4862))
            {
	            GetPlayerName(playerid, sendername, sizeof(sendername));
	           	if(PlayerInfo[playerid][pHousecash] <=0) return	SendClientMessage(playerid, COLOR_GREY, "Нет денег за ваш дом");
				PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pHousecash];
	            format(string, sizeof(string), "Вам возвращены %d вирт за ваш дом", PlayerInfo[playerid][pHousecash]);
	            SendClientMessage(playerid, COLOR_WHITE, string);
				PlayerInfo[playerid][pHousecash] = 0;
				PlayerInfo[playerid][pText] = 0;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/housewithdraw",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
           	if(IsABankomat(playerid) || PlayerToPoint(4.0,playerid,1364.6337,895.2993,1107.4862))
            {
	            new bouse = PlayerInfo[playerid][pPHousekey];
	            new money;
	            GetPlayerName(playerid, sendername, sizeof(sendername));
	            if(PlayerInfo[playerid][pMember] >= 0)
	            tmp = strtok(cmdtext, idx);
	            if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /housewithdraw [Сумма]");
	            if(PlayerInfo[playerid][pMember] >= 0)
	            {
		            money = strval(tmp);
		            {
			            if(HouseInfo[bouse][hTakings] < money) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег на домашнем счету");
			            if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома");
			            money = strval(tmp);
			            PlayerInfo[playerid][pCash] += money;
			            HouseInfo[bouse][hTakings] -= money;
			            format(string, sizeof(string), "Вы сняли %d вирт с домашнего счёта", money);
			            SendClientMessage(playerid, COLOR_WHITE, string);
			            format(string, sizeof(string), "Остаток домащнего счёта: %d вирт",HouseInfo[bouse][hTakings]);
			            SendClientMessage(playerid, COLOR_WHITE, string);
			            return true;
            		}
            	}
            }
		}
		return true;
	}
	if(strcmp(cmd, "/fight", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(InRing > 0)return SendClientMessage(playerid, COLOR_GREY, "Вы уже приняли бой");
            if(PlayerBoxing[playerid] > 0)return SendClientMessage(playerid, COLOR_GREY, "Вы уже боритесь");
            if(!PlayerToPoint(20.0,playerid,765.9343,0.2761,1000.7173)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в спортзале");
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /fight [id]");
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(ProxDetectorS(8.0, playerid, giveplayerid))
                    {
                        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы не можете вызвать на бой самого себя"); return true; }
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "Вы предложили бой %s", giveplayer);
                        SendClientMessage(playerid, 0x6495EDFF, string);
                        format(string, sizeof(string), "%s предлагает вам бой. (/accept fight) чтобы принять.", sendername);
                        SendClientMessage(giveplayerid, 0x6495EDFF, string);
                        BoxOffer[giveplayerid] = playerid;
                    }
                    else return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
                }
            }
            else return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
        }
        return true;
    }
	if(strcmp(cmd, "/en", true) == 0)
    {
		if(EngineState[playerid] == false)
 		{
			if(GetPlayerVehicleID(playerid) != INVALID_VEHICLE_ID)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
					GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(GetPlayerVehicleID(playerid) ,VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
					EngineState[playerid] = true;
				}
			}
		}
		else if(EngineState[playerid] == true)
		{
			if(GetPlayerVehicleID(playerid) != INVALID_VEHICLE_ID)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
					GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
					EngineState[playerid] = false;
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/carmenu", true) == 0)
	{
	    if(!IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в машине.");
		ShowPlayerDialog(playerid,14488,DIALOG_STYLE_LIST,"Выбирите действие","\n{00FF00}Открыть{FFFFFF} багажник\n{00FF00}Открыть{FFFFFF} капот\n{e23434}Закрыть{FFFFFF} багажник\n{e23434}Закрыть{FFFFFF} капот\n{00FF00}Включить{FFFFFF} фары\n{e23434}Выключить{FFFFFF} фары\n","Выбрать","Отмена");
		return 1;
	}
	else if(strcmp(cmd, "/kiss", true) == 0)
	{
		if(GetPlayerState(playerid)!=PLAYER_STATE_ONFOOT) return 1;
		giveplayerid=GetClosestPlayer(playerid);
		if(GetDistanceBetweenPlayers(playerid,giveplayerid) > 2) return SendClientMessage(playerid, COLOR_GREY, "Нет ни кого рядом");
		if(playerid == giveplayerid)return SendClientMessage(playerid, COLOR_GREY,"Сходил бы лучше помастурбировал!!");
		SetPosInFrontOfPlayer(playerid,giveplayerid,1);
		new Float:a;GetPlayerFacingAngle(playerid,a);
		SetPlayerFacingAngle(giveplayerid,180+a);
		ApplyAnimation(playerid,"BD_FIRE","GRLFRD_KISS_03",4.0,0,0,0,0,0);
		ApplyAnimation(giveplayerid,"BD_FIRE","PLAYA_KISS_03",4.0,0,0,0,0,0);
		return 1;
	}
	if(strcmp(cmd, "/hi", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
	       	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в машине");
			tmp = strtok(cmdtext, idx);
	    	if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /hi [id]");
	    	giveplayerid = ReturnUser(tmp);
	       	if(IsPlayerConnected(giveplayerid))
	    	{
		        if(giveplayerid != INVALID_PLAYER_ID)
		        {
			      	if(ProxDetectorS(2.0, playerid, giveplayerid))
			      	{
				      	if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
				       	new Float:angle;
				       	GetPlayerFacingAngle(playerid, angle);
				       	SetPlayerFacingAngle(giveplayerid, angle + 180);
				       	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				       	GetPlayerName(playerid, sendername, sizeof(sendername));
				       	format(string, sizeof(string), "%s пожал(а) руку %s'у", sendername ,giveplayer);
				       	ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				       	ApplyAnimation(playerid, "GANGS", "hndshkfa",4.0,0,0,0,0,0,1);
						ApplyAnimation(giveplayerid, "GANGS", "hndshkfa",4.0,0,0,0,0,0,1);
				       	return true;
      				}
      			}
      			else
      			{
					SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
					return true;
      			}
     		}
 			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/viphelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pDonateRank] == 1)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "<< VIP ALL >> /vipchat || /vc - VIP чат || /vad - подать обьявление.");
  				SendClientMessage(playerid, COLOR_GREY, "<< VIP 1LVL >> /vtp - телепорты.");
     		}
     		else if(PlayerInfo[playerid][pDonateRank] == 2)
     		{
     		    SendClientMessage(playerid, COLOR_GREY, "<< VIP ALL >> /vipchat || /vc - VIP чат || /vad - подать обьявление.");
     		    SendClientMessage(playerid, COLOR_GREY, "<< VIP 1LVL >> /vtp - телепорты.");
  				SendClientMessage(playerid, COLOR_GREY, "<< VIP 2LVL >> /vipuninvite - уволиться из фракции.");
     		}
   			else if(PlayerInfo[playerid][pDonateRank] == 3)
   			{
   			    SendClientMessage(playerid, COLOR_GREY, "<< VIP ALL >> /vipchat || /vc - VIP чат || /vad - подать обьявление.");
   			    SendClientMessage(playerid, COLOR_GREY, "<< VIP 1LVL >> /vtp - телепорты.");
  				SendClientMessage(playerid, COLOR_GREY, "<< VIP 2LVL >> /vipuninvite - уволиться из фракции.");
  				SendClientMessage(playerid, COLOR_GREY, "<< VIP 3LVL >> /vhp - пополнение хп");
   			}
		}
		return true;
	}
	if(strcmp(cmd, "/hhelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pHelp] == 1)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "<< Help 1LVL >> /hchat || /hc - HELP чат");
	            SendClientMessage(playerid, COLOR_GREY, "<< Help 1LVL >> /hpm - ответить на вопрос");
     		}
     		else if(PlayerInfo[playerid][pHelp] == 2)
     		{
     		    SendClientMessage(playerid, COLOR_GREY, "<< Help 1LVL >> /hchat || /hc - HELP чат");
	            SendClientMessage(playerid, COLOR_GREY, "<< Help 1LVL >> /hpm - ответить на вопрос");
  				SendClientMessage(playerid, COLOR_GREY, "<< Help 2LVL >> /hmute - выдать бан чата.");
     		}
   			else if(PlayerInfo[playerid][pHelp] == 3)
   			{
   			    SendClientMessage(playerid, COLOR_GREY, "<< Help 1LVL >> /hchat || /hc - HELP чат");
	            SendClientMessage(playerid, COLOR_GREY, "<< Help 1LVL >> /hpm - ответить на вопрос");
  				SendClientMessage(playerid, COLOR_GREY, "<< Help 2LVL >> /hmute - выдать бан чата.");
  				SendClientMessage(playerid, COLOR_GREY, "<< Help 3LVL >> /skin - смена скина");
  				SendClientMessage(playerid, COLOR_GREY, "<< Help 3LVL >> /jail - посадить игрока на 10 минут");
   			}
   			else if(PlayerInfo[playerid][pHelp] == 4)
   			{
   			    SendClientMessage(playerid, COLOR_GREY, "<< Help 1LVL >> /hchat || /hc - HELP чат");
	            SendClientMessage(playerid, COLOR_GREY, "<< Help 1LVL >> /hpm - ответить на вопрос");
  				SendClientMessage(playerid, COLOR_GREY, "<< Help 2LVL >> /hmute - выдать бан чата.");
  				SendClientMessage(playerid, COLOR_GREY, "<< Help 3LVL >> /skin - смена скина");
  				SendClientMessage(playerid, COLOR_GREY, "<< Help 4LVL >> /makehelper - назначить помощника.");
   			}
		}
		return true;
	}
	if(strcmp(cmd, "/vipuninvite", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
		    if(PlayerInfo[playerid][pMember] > 0 && PlayerInfo[playerid][pDonateRank] >= 2)
		    {
				if(PlayerInfo[playerid][pLeader] > 0)
				{
				    SendClientMessage(playerid, COLOR_GREY, "Вы лидер!");
				}
				else
				{
					if(PlayerInfo[playerid][pDonateRank] != 3) return SendClientMessage(playerid, COLOR_GREY, "У вас нет статуса {FFA500}VIP SILVER");
					PlayerInfo[playerid][pMember] = 0;
					PlayerInfo[playerid][pRank] = 0;
					PlayerInfo[playerid][pLeader] = 0;
					PlayerInfo[playerid][pJob] = 0;
					SetPlayerArmourAC(playerid,0);
					FormaFrac[playerid] = 0;
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
					SendClientMessage(playerid, COLOR_BLUE, "Вы были уволены по собственному желанию");
					SendClientMessage(playerid, 0x6495EDFF, "Теперь вы снова гражданский");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в организации");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/togphone", true) == 0)
	{
	    if(PlayerInfo[playerid][pPhone] == 0)return SendClientMessage(playerid,COLOR_GREY,"У вас нет телефона");
		if(!PhoneOnline[playerid])
		{
			PhoneOnline[playerid] = 1;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s выключил телефон", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else if(PhoneOnline[playerid])
		{
			PhoneOnline[playerid] = 0;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s включил телефон", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
	if(strcmp(cmd, "/try", true) == 0)
	{
		if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не в игре!");
		if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Сейчас вам запрещено использовать команду");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		new chance = random(4);
		if(chance < 2)
		{
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /try [Действие]");
			if(!CheckString(playerid,result))return 1;
			format(string, sizeof(string), "%s %s {1CEF00}| Удачно", sendername, result);
			ProxDetector(5.0, playerid, string, 0xDD90FFFF, 0xDD90FFFF, 0xDD90FFFF, 0xDD90FFFF, 0xDD90FFFF);
			format(string,sizeof(string), "%s {1CEF00}| Удачно", result);
			SetPlayerChatBubble(playerid,string,0xDD90FFFF,30.0,10000);
		}
		else
		{
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /try [Действие]");
			if(!CheckString(playerid,result))return 1;
			format(string, sizeof(string), "%s %s {e23434}| Неудачно", sendername, result);
			ProxDetector(5.0, playerid, string, 0xDD90FFFF, 0xDD90FFFF, 0xDD90FFFF, 0xDD90FFFF, 0xDD90FFFF);
			format(string,sizeof(string), "%s {e23434}| Неудачно", result);
			SetPlayerChatBubble(playerid,string,0xDD90FFFF,30.0,10000);
		}
		return 1;
	}
	if(strcmp(cmd, "/me", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У вас бан чата");
		if(AntiFlud[playerid] == 1) return  SendClientMessage(playerid, 0xFFD5BBAA, "Не флуди!");
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[150];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return 	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /me [действие]");
		if(!CheckString(playerid,result))return 1;
		format(string, sizeof(string), "%s %s", sendername, result);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerChatBubble(playerid,result,COLOR_PURPLE,30.0,10000);
		AntiFlud[playerid] = 1; //???????????
		SetTimerEx("ANTIFLUD", 2000,0,"d",playerid);// ??? ????? ??? ????? ?? 1 ?????? ?? ?????? ? ?????????.
	}
	if(strcmp(cmd, "/shout", true) == 0 || strcmp(cmd, "/s", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У вас бан чата");
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[150];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: (/s)hout [текст]");
		if(!CheckString(playerid,result))return 1;
		format(string, sizeof(string), "%s кричит: %s", sendername, result);
		ProxDetector(60.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
 		{
			ApplyAnimation(playerid, "ON_LOOKERS", "shout_01",1000.0,0,0,0,0,0,1);
		}
		SetPlayerChatBubble(playerid,result,COLOR_YELLOW,60.0,10000);
	}
	if(strcmp(cmd,"/fish",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if((IsAtFishPlace(playerid)) || IsABoat(vehicleid))
	        {
	            if(GetPVarInt(playerid,"FISH") > gettime())return SendClientMessage(playerid,COLOR_GREY,"Подготовка к следующему забросу удочки! ( Ждите 40 секунд )");
	            new rand;
	            new fstring[MAX_PLAYER_NAME];
	            rand = random(FishNamesNumber);
	            if(rand == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы поймали куртку и выбросили его в сторону");
	            else if(rand == 4) return SendClientMessage(playerid, COLOR_GREY, "Вы поймали штаны и выбросили их в сторону");
	            else if(rand == 7) return SendClientMessage(playerid, COLOR_GREY, "Вы поймали ключи от квартиры в центе СФ и выбросили в сторону");
	            else if(rand == 10) return SendClientMessage(playerid, COLOR_GREY, "Вы поймали пару ботинок и выбросили их в сторону");
	            else if(rand == 13) return SendClientMessage(playerid, COLOR_GREY, "Вы поймали тину и выбросили её");
	            else if(rand == 20) return SendClientMessage(playerid, COLOR_GREY, "Вы поймали сумку с деньгами и выбросили её в сторону");
		        if(PlayerInfo[playerid][pFishLic] < 1)
				{
					PlayerInfo[playerid][pWantedLevel] += 1;
					WantedLevel[playerid] += 1;
					WantedPoints[playerid] += 1;
					SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
					SetPlayerCriminal(playerid, 255, "Нелегальная рабылка");
					SendClientMessage(playerid, COLOR_WHITE, "Ваша узнаваемость повысилась");
				}
				PlayerInfo[playerid][pFishes] += 1;
				format(fstring, sizeof(fstring), "%s", FishNames[rand]);
				strmid(Fishes[playerid][pFish1], fstring, 0, strlen(fstring), 255);
				format(string, sizeof(string), "Вы поймали %s", Fishes[playerid][pFish1]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SetPVarInt(playerid,"FISH",gettime() + 40);
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Вы не в Рыбацком Месте, или на Рыбацкой Лодке");
	            return true;
	        }
	    }
	    return true;
 	}
	if(strcmp(cmd, "/licenses",true) == 0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        new text1[20];
	        new text2[20];
	        new text3[20];
	        new text4[20];
	        new text5[20];
	        new text6[20];
 		  	GetPlayerName(playerid, sendername, sizeof(sendername));
			if(PlayerInfo[playerid][pCarLic]) { text1 = "Есть"; } else { text1 = "Отсутствует"; }
            if(PlayerInfo[playerid][pFlyLic]) { text4 = "Есть"; } else { text4 = "Отсутствует"; }
			if(PlayerInfo[playerid][pBoatLic]) { text2 = "Есть"; } else { text2 = "Отсутствует"; }
			if(PlayerInfo[playerid][pFishLic]) { text3 = "Есть"; } else { text3 = "Отсутствует"; }
			if(PlayerInfo[playerid][pGunLic]) { text5 = "Есть"; } else { text5 = "Отсутствует"; }
			if(PlayerInfo[playerid][pBisLic]) { text6 = "Есть"; } else { text6 = "Отсутствует"; }
	        SendClientMessage(playerid, 0x059BD3AA, "-----------===[ LICENSES ]===-----------");
	        format(string, sizeof(string), " Водительские права:  %s", text1);
			SendClientMessage(playerid, 0xC5EEFEAA, string);
			format(string, sizeof(string), " Лицензия пилота:  %s", text4);
			SendClientMessage(playerid, 0xC5EEFEAA, string);
			format(string, sizeof(string), " Лицензия на катера:  %s", text2);
			SendClientMessage(playerid, 0xC5EEFEAA, string);
			format(string, sizeof(string), " Лицензия рыболова:  %s", text3);
			SendClientMessage(playerid, 0xC5EEFEAA, string);
			format(string, sizeof(string), " Лицензия на оружие:  %s", text5);
			SendClientMessage(playerid, 0xC5EEFEAA, string);
			format(string, sizeof(string), " Лицензия на бизнес:  %s", text6);
			SendClientMessage(playerid, 0xC5EEFEAA, string);
			SendClientMessage(playerid, 0x059BD3AA, "=============================");
		}
	    return true;
 	}
 	if(strcmp(cmd, "/showlicenses",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /showlicenses [id]");
				return true;
			}
			giveplayerid = strval(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Чтобы посмотреть лицензии введите /licenses"); return true; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    new text1[20];
				        new text2[20];
				        new text3[20];
				        new text4[20];
				        new text5[20];
				        new text6[20];
						if(PlayerInfo[playerid][pCarLic]) { text1 = "Есть"; } else { text1 = "Отсутствует"; }
			            if(PlayerInfo[playerid][pFlyLic]) { text4 = "Есть"; } else { text4 = "Отсутствует"; }
						if(PlayerInfo[playerid][pBoatLic]) { text2 = "Есть"; } else { text2 = "Отсутствует"; }
						if(PlayerInfo[playerid][pFishLic]) { text3 = "Есть"; } else { text3 = "Отсутствует"; }
						if(PlayerInfo[playerid][pGunLic]) { text5 = "Есть"; } else { text5 = "Отсутствует"; }
						if(PlayerInfo[playerid][pBisLic]) { text6 = "Есть"; } else { text6 = "Отсутствует"; }
				        format(string, sizeof(string), "-----------===[ LICENSES %s ]===-----------", sendername);
				        SendClientMessage(giveplayerid, 0x059BD3AA, string);
				        format(string, sizeof(string), " Водительские права:  %s", text1);
						SendClientMessage(giveplayerid, 0xC5EEFEAA, string);
						format(string, sizeof(string), " Лицензия пилота:  %s", text4);
						SendClientMessage(giveplayerid, 0xC5EEFEAA, string);
						format(string, sizeof(string), " Лицензия на катера:  %s", text2);
						SendClientMessage(giveplayerid, 0xC5EEFEAA, string);
						format(string, sizeof(string), " Лицензия рыболова:  %s", text3);
						SendClientMessage(giveplayerid, 0xC5EEFEAA, string);
						format(string, sizeof(string), " Лицензия на оружие:  %s", text5);
						SendClientMessage(giveplayerid, 0xC5EEFEAA, string);
						format(string, sizeof(string), " Лицензия на бизнес:  %s", text6);
						SendClientMessage(playerid, 0xC5EEFEAA, string);
						format(string, sizeof(string), "=============================", giveplayer);
						SendClientMessage(playerid, 0x059BD3AA, string);
						format(string,sizeof(string), "%s показал свои лицензии %s'у",sendername,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        format(string,sizeof(string), "показал свои лицензии %s'у",giveplayer);
						SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
					    return true;
					}
				}
			}
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
	            return true;
	        }
		}
	    return true;
 	}
	if(strcmp(cmd, "/divorce",true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMarried] < 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не женаты(замужем)");
			ClearMarriage(playerid);
			SendClientMessage(playerid, COLOR_GREY, "Вы развелись");
		}
		return true;
	}
	if(strcmp(cmd, "/propose",true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!PlayerToPoint(30.0,playerid,-2021.9148,1005.9236,1418.4869)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в загсе (( /gps > Важные ))");
	        if(PlayerInfo[playerid][pCash] < 10000) return SendClientMessage(playerid, COLOR_GREY, "Вам нужно 10000 вирт на свадьбу");
	        if(PlayerInfo[playerid][pMarried] > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже женаты/замужем");
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /propose [id]");
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayerid][pMarried] > 0)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "Игрок уже состоит в браке");
			            return true;
			        }
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы предложили руку и сердце %s", giveplayer);
						SendClientMessage(playerid, 0x6495EDFF, string);
						format(string, sizeof(string), "%s предлагает вам руку и сердце. (/accept marriage) чтобы принять", sendername);
						SendClientMessage(giveplayerid, COLOR_BLUE, string);
				        ProposeOffer[giveplayerid] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
						return true;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			    return true;
			}
	    }
	    return true;
	}
	if(strcmp(cmd, "/ram", true) == 0)
	{
		if(IsACop(playerid)|| IsAArm(playerid) || PlayerInfo[playerid][pAdmin] >= 2)
 		{
			for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if(PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					SetPlayerVirtualWorld(playerid,i+50);
					SetPlayerInterior(playerid,HouseInfo[i][hInt]);
					ACP_SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
					PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
					PlayerInfo[playerid][pLocal] = i;
				}
			}
		}
		else
		{
 			SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
			return true;
		}
		return true;
	}
	if(strcmp(cmd, "/take", true) == 0)
	{
		if(IsACop(playerid) && PlayerInfo[playerid][pRank] >= 4)
		{
			new listitems[] = " Отобрать водительские права\n Отобрать лицензию на полёты \n Отобрать лицензию на рыболовлю\n Отобрать лицензию на вождение водного транспорта\n Отобрать лицензию на оружие\n Наркотики\n Оружие\n Материалы";
			ShowPlayerDialog(playerid, 7779, DIALOG_STYLE_LIST, "Отобрать лицензии", listitems, "Готово", "Отмена");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		}
		return true;
	}
	if(strcmp(cmd, "/suspect", true) == 0 || strcmp(cmd, "/su", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: (/su)spect [id] [преступление]");
		giveplayerid = ReturnUser(tmp);
		if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10 || PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21)
		{
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(PlayerInfo[giveplayerid][pJailed] == 0)
					{
						if(PlayerInfo[giveplayerid][pWantedLevel] >= 6) return SendClientMessage(playerid, COLOR_GREY, "У данного игрока уже 6 уровней розыска");
						if(IsACop(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете давать розыск законникам");
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result)) return 	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: (/su)spect [id] [преступление]");
						WantedPoints[giveplayerid] += 1;
						PlayerInfo[giveplayerid][pWantedLevel] += 1;
						SetPlayerCriminal(giveplayerid, playerid, result);
						SendClientMessage(giveplayerid, COLOR_WHITE, "Ваша узнаваемость повысилась");
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрок уже в тюрьме");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				return true;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		}
		return true;
	}
	if(strcmp(cmd, "/spawnchange", true) == 0)
	{
		if(PlayerInfo[playerid][pPHousekey] != 255)
		{
			if(SpawnChange[playerid])
			{
				SendClientMessage(playerid, COLOR_WHITE, "Теперь вы будете возраждаться в обычном месте");
				SpawnChange[playerid] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "Теперь вы будете возраждаться дома");
				SpawnChange[playerid] = 1;
			}
		}
	}
	if(strcmp(cmd, "/home", true) == 0)
	{
		if(PlayerInfo[playerid][pPHousekey] != 255)
		{
			SetPlayerCheckpoint(playerid,HouseInfo[PlayerInfo[playerid][pPHousekey]][hEntrancex], HouseInfo[PlayerInfo[playerid][pPHousekey]][hEntrancey], HouseInfo[PlayerInfo[playerid][pPHousekey]][hEntrancez], 4.0);
			SendClientMessage(playerid, COLOR_WHITE, "Ваш дом обозначен на карте красной меткой");
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_HOME;
		}
		else
		{
			return true;
		}
	}
	if(strcmp(cmd, "/clear", true) == 0)
	{
		if(IsACop(playerid) && PlayerInfo[playerid][pRank] >= 2)
		{
			switch(PlayerInfo[playerid][pMember])
			{
				case 1:
				{
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 596) return SendClientMessage(playerid, COLOR_GREY, "Вы не в полицейской машине");
				}
				case 2:
				{
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 490) return	SendClientMessage(playerid, COLOR_GREY, "Вы не в машине ФБР");
				}
				case 10:
				{
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 597) return	SendClientMessage(playerid, COLOR_GREY, "Вы не в полицейской машине");
				}
				case 21:
				{
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 598) return	SendClientMessage(playerid, COLOR_GREY, "Вы не в полицейской машине");
				}
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /clear [id]");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID) {} else { SendClientMessage(playerid, COLOR_GREY, "Игрок не найден"); }
				{
				    if(ProxDetectorS(5.0, playerid, giveplayerid)){} else { SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас"); return true; }
					if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы не можете снять себе розыск"); return true; }
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Вы сняли уровни розыска у %s", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "Офицер %s снял с вас уровни розыска", sendername);
					SendClientMessage(giveplayerid, 0x6495EDFF, string);
					WantedPoints[giveplayerid] = 0;
					WantedLevel[giveplayerid] = 0;
					PlayerInfo[giveplayerid][pWantedLevel] = 0;
					SetPlayerWantedLevel(giveplayerid, PlayerInfo[giveplayerid][pWantedLevel]);
					SendClientMessage(giveplayerid, COLOR_WHITE, "Ваша узнаваемость понизилась");
				}
			}
 		}
		return true;
	}
	else if(strcmp(cmd, "/ticket", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не полицейский!");
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /ticket [id] [цена] [причина]");
			giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /ticket [id] [цена] [причина]");
			moneys = strval(tmp);
			if(moneys < 1 || moneys > 10000) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 10000 вирт"); return true; }
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(GetSRVMoney(giveplayerid) < moneys) return SendClientMessage(playerid, COLOR_GREY, "У игрока недостаточно денег");
       					if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /ticket [id] [цена] [причина]");
							return true;
						}
						format(string, sizeof(string), "Вы выписали штраф в размере %d вирт %s. Причина: %s",moneys, giveplayer, (result));
						SendClientMessage(playerid, 0x6495EDFF, string);
						format(string, sizeof(string), "Офицер %s выписал вам штраф в размере %d вирт. Причина: %s", sendername, moneys, (result));
						SendClientMessage(giveplayerid, 0x6495EDFF, string);
						SendClientMessage(giveplayerid, COLOR_WHITE, "(({e23434}Введите: /accept ticket, чтобы оплатить штраф))");
						TicketOffer[giveplayerid] = playerid;
						TicketMoney[giveplayerid] = moneys;
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
						return true;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			    return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/spveh",true)==0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 5)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
		    tmp = strtok(cmdtext,idx);
		    if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /spveh [радиус]");
		    new Float:pos = floatstr(tmp),Float:car_x,Float:car_y,Float:car_z;
		    for(new cars = 0; cars < MAX_VEHICLES; cars++)
		    {
		        if(GetVehicleModel(cars) > 399)
		        {
		            GetVehiclePos(cars,car_x,car_y,car_z);
		            if(IsPlayerInRangeOfPoint(playerid,pos,car_x,car_y,car_z))
		            {
						if(!IsVehicleOccupied(cars))
						{
							SetVehicleToRespawn(cars);
			            }
		            }
		        }
		    }
		}
    	return true;
	}
	if(strcmp(cmd, "/arrest", true) == 0)
	{
		if(IsACop(playerid))
		{
			if(PlayerToPoint(6.0, playerid, 268.3327,77.8972,1001.0391) || PlayerToPoint(6.0, playerid, 227.7436,114.5075,999.0156) || PlayerToPoint(6.0, playerid, 188.7124,157.6917,1003.0234)|| PlayerToPoint(6.0, playerid, 218.2263,114.9286,999.0156) || PlayerToPoint(6.0, playerid, 198.3940,157.9389,1003.0234))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /arrest [время(минуты)]");
				new time = strvalEx(tmp);
				if(time < 1 || time > 6) { SendClientMessage(playerid, COLOR_GREY, "От 1 минуты до 6"); return true; }
				tmp = strtok(cmdtext, idx);
				new suspect = GetClosestPlayer(playerid);
				if(IsPlayerConnected(suspect))
				{
					if(ProxDetectorS(4.0, playerid, suspect))
					{
						GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(WantedLevel[suspect] < 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен иметь хотя бы один уровень розыска!");
						format(string, sizeof(string), "Вы арестовали %s, штраф 5 вирт", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						PlayerInfo[suspect][pCash] -= 5;
						PlayerInfo[playerid][pCash] += 5;
						format(string, sizeof(string), "~r~-5", sendername);
						GameTextForPlayer(suspect, string, 5000, 5);
						DelGun(suspect);
						if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
						{
							format(string, sizeof(string), "<< Офицер %s арестовал %s >>", sendername, giveplayer);
							SendClientMessageToAll(COLOR_LIGHTRED, string);
						}
						else if(PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10)
						{
							format(string, sizeof(string), "<< Офицер %s арестовал %s >>", sendername, giveplayer);
							SendClientMessageToAll(COLOR_LIGHTRED, string);
						}
						else if(PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21)
						{
							format(string, sizeof(string), "<< Офицер %s арестовал %s >>", sendername, giveplayer);
							SendClientMessageToAll(COLOR_LIGHTRED, string);
						}
						else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
						{
							format(string, sizeof(string), "<< Агент ФБР %s арестовал %s >>", sendername, giveplayer);
							SendClientMessageToAll(COLOR_LIGHTRED, string);
						}
						if(PlayerToPoint(6.0, playerid, 268.3327,77.8972,1001.0391))
						{
						    SetPlayerInterior(suspect, 6);
							ACP_SetPlayerPos(suspect,264.1425,77.4712,1001.0391);
							SetPlayerFacingAngle(suspect, 263.0160);
							PlayerInfo[suspect][pJailed] = 1;
							PlayerInfo[suspect][pWantedLevel] = 0;
							PlayerInfo[suspect][pJailTime] = time *60;
   				        	PlayerInfo[suspect][pArrested] += 1;
							WantedPoints[suspect] = 0;
							WantedPoints[suspect] = 0;
							PlayerInfo[suspect][pPlaceJail] = 1;
							SetPlayerWantedLevel(suspect, PlayerInfo[suspect][pWantedLevel]);
							WantedLevel[suspect] = 0;
							TogglePlayerControllable(suspect, 1);
						}
						else if(PlayerToPoint(6.0, playerid, 218.2263,114.9286,999.0156))
						{
		    				SetPlayerInterior(suspect, 10);
							ACP_SetPlayerPos(suspect,219.5400,109.9767,999.0156);
							SetPlayerFacingAngle(suspect, 1.0000);
							PlayerInfo[suspect][pJailed] = 1;
							PlayerInfo[suspect][pJailTime] = time * 60;
   				        	PlayerInfo[suspect][pArrested] += 1;
							WantedPoints[suspect] = 0;
							WantedLevel[suspect] = 0;
							PlayerInfo[suspect][pWantedLevel] = 0;
							WantedPoints[suspect] = 0;
							PlayerInfo[suspect][pPlaceJail] = 2;
							SetPlayerWantedLevel(suspect, PlayerInfo[suspect][pWantedLevel]);
							TogglePlayerControllable(suspect, 1);
						}
						else if(PlayerToPoint(6.0, playerid, 198.3940,157.9389,1003.0234))
						{
		    				SetPlayerInterior(suspect, 3);
							ACP_SetPlayerPos(suspect,198.3642,161.8103,1003.0300);
							SetPlayerFacingAngle(suspect, 1.0000);
							PlayerInfo[suspect][pJailed] = 1;
							PlayerInfo[suspect][pJailTime] = time * 60;
   				        	PlayerInfo[suspect][pArrested] += 1;
							WantedPoints[suspect] = 0;
							PlayerInfo[suspect][pWantedLevel] = 0;
							WantedLevel[suspect] = 0;
							PlayerInfo[suspect][pPlaceJail] = 3;
							SetPlayerWantedLevel(suspect, PlayerInfo[suspect][pWantedLevel]);
							WantedPoints[suspect] = 0;
							TogglePlayerControllable(suspect, 1);
						}
					}
					else
					{
				    	SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
				    	return true;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы должны быть около тюрьмы");
				return true;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
			return true;
		}
		return true;
	}
	if(strcmp(cmd, "/fare",true) == 0)
	{
		new Veh = GetPlayerVehicleID(playerid);
		if(PlayerInfo[playerid][pJob] == 4)
		{
			if(TransportDuty[playerid] == 1)
			{
				TaxiDrivers -= 1;
				Delete3DTextLabel(taxi3d[Veh]);
				TransportDuty[playerid] = 0;
				SendClientMessage(playerid, 0x6495EDFF, "Вы закончили рабочий день.");
				return true;
			}
			if(Veh >= taxicar[0] && Veh <= taxicar[12])
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
					Delete3DTextLabel(taxi3d[Veh]);
					SendClientMessage(playerid, 0x66FF66FF, "Вы начали рабочий день.");
					TaxiDrivers += 1;
					TransportDuty[playerid] = 1;
					format(string, sizeof(string), "<< Бесплатное такси >>");
					taxi3d[Veh] = Create3DTextLabel(string, COLOR_YELLOW, 9999.0, 9999.0, 9999.0, 30.0, 0, 1);
					Attach3DTextLabelToVehicle(taxi3d[Veh], Veh, 0, 0, 1.5);
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Вы не таксист / не в машине!");
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вы не на службе");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		return true;
	}
	if(strcmp(cmd, "/load", true) == 0)
	{
		if(PlayerInfo[playerid][pJob] == 5 && PlayerInfo[playerid][pMember] == 0)
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 440) return SendClientMessage(playerid,COLOR_GREY, "Вы не в машины развозщика продуктов");
			SendClientMessage(playerid, COLOR_GREEN, "Езжайте на склад, чтобы загрузиться продуктами");
			SetPlayerCheckpoint(playerid,-56.7245,-224.1406,5.4297,5);
			MatsArmyCar[playerid] = 1000;
			PicCP[playerid] = 0;
		}
		return true;
	}
	if(strcmp(cmd, "/loadgas", true) == 0)
	{
		if(PlayerInfo[playerid][pJob] == 5 && PlayerInfo[playerid][pMember] == 0)
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 403) return SendClientMessage(playerid,COLOR_GREY, "Вы не в бензовозе");
			SendClientMessage(playerid, COLOR_GREEN, "Загрузите бензин, и цепляйте прицеп");
			SetPlayerCheckpoint(playerid,-1053.1475,-649.7113,32.0078,5);
			MatsArmyCar[playerid] = 2525;
			PicCP[playerid] = 0;
		}
		return true;
	}
	if(strcmp(cmd, "/frisk",true)==0)
    {
		if(IsACop(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /frisk [id]");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(ProxDetectorS(3.0, playerid, giveplayerid))
					{
						if(giveplayerid == playerid)
						{
							SendClientMessage(playerid, COLOR_GREY, "Вы не можете обыскать себя");
							return true;
						}
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new text1[20], text2[20];
						if(PlayerInfo[giveplayerid][pDrugs] > 0) { text1 = "Наркотики"; } else { text1 = "Пустой карман"; }
						if(PlayerInfo[giveplayerid][pMaterials] > 0) { text2 = "Материалы"; } else { text2 = "Пустой карман"; }
						format(string, sizeof(string), "Вещи %s", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), " %s.", text1);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), " %s.", text2);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s обыскал %s", sendername ,giveplayer);
						SetPlayerSpecialAction(giveplayerid,SPECIAL_ACTION_HANDSUP);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
						return true;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				return true;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
 			return true;
		}
		return true;
 	}
	if(strcmp(cmd, "/wanted", true) == 0)
	{
		new x;
		SendClientMessage(playerid, COLOR_WHITE, "Внимание, розыскиваются:");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(PlayerInfo[i][pWantedLevel] >= 1)
				{
					GetPlayerName(i, giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "|%s| %s: %d", string,giveplayer,PlayerInfo[i][pWantedLevel]);
					x++;
					if(x > 3)
					{
						SendClientMessage(playerid, COLOR_YELLOW, string);
						x = 0;
						format(string, sizeof(string), "");
					}
					else
					{
						format(string, sizeof(string), "%s, ", string);
					}
				}
			}
		}
		if(x <= 3 && x > 0)
		{
			string[strlen(string)-2] = '.';
			SendClientMessage(playerid, COLOR_SALMON, string);
		}
		return true;
	}
    if(strcmp(cmd, "/mdc", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /mdc [id]");
			giveplayerid = ReturnUser(tmp);
			{
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						GetPlayerName(giveplayerid, sendername, sizeof(sendername));
						new msgg[] = "{FFFFFF}Имя: {3399FF}%s\n{FFFFFF}Преступление: {3399FF}%s\n{FFFFFF}Сообщил: {3399FF}%s\n{FFFFFF}Уровень розыска: {3399FF}%d";
     					format(string, sizeof(string), msgg, sendername,PlayerCrime[giveplayerid][pAccusedof],PlayerCrime[giveplayerid][pVictim],WantedLevel[giveplayerid]);
     					ShowPlayerDialog(playerid, 69, DIALOG_STYLE_MSGBOX, "База данных",string, "Готово", "");
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
					return true;
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/megaphone", true) == 0 || strcmp(cmd, "/m", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
  			if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pMember] == 21  || PlayerInfo[playerid][pMember] == 10)
			{
	 			GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: (/m)egaphone [текст ]");
				switch(PlayerInfo[playerid][pMember])
				{
					case 1:
					{
	   					if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 596) return SendClientMessage(playerid, COLOR_GREY, "Вы не в полицейской машине");
						format(string, sizeof(string), "{{ Офицер %s: %s }}", sendername, result);
						ProxDetector(80.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
					}
					case 2:
					{
						if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 490) return	SendClientMessage(playerid, COLOR_GREY, "Вы не в машине ФБР");
						format(string, sizeof(string), "{{ Агент ФБР %s: %s }}", sendername, result);
						ProxDetector(80.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
					}
	   				case 10:
					{
						if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 597) return	SendClientMessage(playerid, COLOR_GREY, "Вы не в полицейской машине");
					    format(string, sizeof(string), "{{ Офицер %s: %s }}", sendername, result);
					    ProxDetector(80.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
					}
					case 21:
					{
						if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 598) return	SendClientMessage(playerid, COLOR_GREY, "Вы не в полицейской машине");
					    format(string, sizeof(string), "{{ Офицер %s: %s }}", sendername, result);
					    ProxDetector(80.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/family", true) == 0 || strcmp(cmd, "/f", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У вас бан чата!");
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: (/f)amily [текст]");
		if(PlayerInfo[playerid][pMember] >= 1)
		{
			new member = PlayerInfo[playerid][pMember];
			if(member == 5)
			{
			    if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] Дон %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] Консильери %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] Младший Босс %s: %s", sendername, result); }
 			    else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] Капо %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] Сотто-Капо %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] Боец %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] Солдато %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] Сомбаттенте %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] Ассосиатоёр %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] Новицио %s: %s", sendername, result); }
				else { format(string, sizeof(string), "[F] Новицио %s: %s", sendername, result); }
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
			}
			else if(member == 6)
			{
				if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] Кумите %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] Оябун-кобун %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] Cайко комон %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] Оядзи %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] Камбу %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] Со-хобунтё %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] Вакагасира %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] Сятейгасира %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] Кёдай %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] Вакасю %s: %s", sendername, result); }
				else { format(string, sizeof(string), "[F] Вакасю %s: %s", sendername, result); }
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
			}
			else if(member == 8)
			{
			    if(FormaFrac[playerid] == 0)return SendClientMessage(playerid, COLOR_WHITE, "Вам не доступен этот чат!");
				if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] Менеджер %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] Крупье %s: %s", sendername, result); }
				else { format(string, sizeof(string), "[F] Крупье %s: %s", sendername, result); }
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
			}
			else if(member == 9)
			{
			    if(FormaFrac[playerid] == 0)return SendClientMessage(playerid, COLOR_WHITE, "Вам не доступен этот чат!");
				if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] Главный редактор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] Редактор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] Журналист %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] Папарацци %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] Фотограф %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] Стажер %s: %s", sendername, result); }
				else { format(string, sizeof(string), "[F] Стажер %s: %s", sendername, result); }
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
			}
			else if(member == 16)
			{
			    if(FormaFrac[playerid] == 0)return SendClientMessage(playerid, COLOR_WHITE, "Вам не доступен этот чат!");
				if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] Главный редактор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] Редактор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] Журналист %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] Папарацци %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] Фотограф %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] Стажер %s: %s", sendername, result); }
				else { format(string, sizeof(string), "[F] Стажер %s: %s", sendername, result); }
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
			}
			else if(member == 20)
			{
			    if(FormaFrac[playerid] == 0) return SendClientMessage(playerid, COLOR_WHITE, "Вам не доступен этот чат!");
				if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] Главный редактор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] Редактор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] Журналист %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] Папарацци %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] Фотограф %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] Стажер %s: %s", sendername, result); }
				else { format(string, sizeof(string), "[F] Стажер %s: %s", sendername, result); }
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
			}
			else if(member == 11)
			{
			    if(FormaFrac[playerid] == 0)return SendClientMessage(playerid, COLOR_WHITE, "Вам не доступен этот чат!");
				if(duty[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вам нужно начать рабочий день в автошколе");
				if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] Управляющий %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] Директор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] Старший менеджер %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] Мл. менеджер %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] Кординатор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] Инструктор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] Экзаменатор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] Стажёр %s: %s", sendername, result); }
				else { format(string, sizeof(string), "Стажёр %s: %s", sendername, result); }
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
			}
			else if(member == 12)
			{
				if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] Биг Вилли %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] Райч Нига %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] Фолкс %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] Федерал Блок %s: %s", sendername, result); }
 				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] Гангстер %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] Ап Бро %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] Гун брo %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] Крэкер  %s: %s", sendername, result); }
  				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] Младший Нига %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] Блайд %s: %s", sendername, result); }
				else { format(string, sizeof(string), "[F] Блайд %s: %s", sendername, result); }
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
			}
			else if(member == 13)
			{
				if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[F] Падре %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] Падрино %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] Лидер V.E.G. %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] Асесор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] Авторитарио %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] Асесино %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] Амиго %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] Эстимадо %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] Сольдадо %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] Криминаль %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] Новато %s: %s", sendername, result); }
				else { format(string, sizeof(string), "[F] Новато %s: %s", sendername, result); }
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
			}
			else if(member == 15)
			{
				if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] Мэд Дог %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] Легенд %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] Де Кинг %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] Мобста %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] О.Г. %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] Гангста %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] Юонг %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] Килла %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] Хастла %s: %s", sendername, result); }
  				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] Плэйя %s: %s", sendername, result); }
				else { format(string, sizeof(string), "[F] Плэйя %s: %s", sendername, result); }
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
			}
			else if(member == 14)
			{
				if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] Авторитет %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] Вор в законе %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] Вор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] Браток %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] Свояк %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] Блатной %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] Барыга %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] Бык %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] Фраер %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] Шнырь %s: %s", sendername, result); }
				else { format(string, sizeof(string), "[F] Шнырь %s: %s", sendername, result); }
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
			}
			else if(member == 17)
  			{
				if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] Падре %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] Нестро %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] Тесосеро %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] Инвасор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] Сабио %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] Мирандо %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] Лас Геррас %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] Геттор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] Тирадор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] Перро %s: %s", sendername, result); }
				else { format(string, sizeof(string), "[F] Перро %s: %s", sendername, result); }
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
			}
			else if(member == 18)
			{
				if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] Падре %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] Аджунто %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] Ауторидад %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] Бандидо %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] Эрмано %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] Джуниор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] Мачo %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] Амиго  %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] Ладрон %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] Новато %s: %s", sendername, result); }
				else { format(string, sizeof(string), "[F] Новато %s: %s", sendername, result); }
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
			}
			else if(member == 24)
			{
				if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[F] Ген. Директор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[F] Хитман %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[F] Тренер %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[F] Элитный убийца %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[F] Профессионал %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[F] Агент %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[F] Стрелок %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[F] Снайпер  %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[F] Киллер %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[F] Начинающий %s: %s", sendername, result); }
				else { format(string, sizeof(string), "[F] Ранг 1 %s: %s", sendername, result); }
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
			}
			return true;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не член фракции");
			return true;
		}
	}
	if(strcmp(cmd, "/r", true) == 0)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: (/r)adio [текст]");
        if(FormaFrac[playerid] == 0)return SendClientMessage(playerid, COLOR_WHITE, "Вам не доступен этот чат!");
		if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У вас бан чата!");
		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		{
			if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[Рация] Шериф %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[Рация] Полковник %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[Рация] Подполковник %s: %s.", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[Рация] Майор %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[Рация] Капитан %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[Рация] Ст. Лейтенант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[Рация] Лейтенант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[Рация] Мл. Лейтенант %s: %s", sendername,result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[Рация] Ст. Прапорщик %s: %s", sendername,result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[Рация] Прапорщик %s: %s", sendername,result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[Рация] Ст. Сержант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[Рация] Сержант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[Рация] Мл. Сержант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[Рация] Офицер %s: %s", sendername,result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[Рация] Кадет %s: %s", sendername, result); }
			else { format(string, sizeof(string), "[R] Кадет %s: %s", sendername, result); }
			SendRadioMessage(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, string);
			return true;
		}
		else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
		{
			if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[Рация] Директор %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[Рация] Зам. директора %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[Рация] Инспектор %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[Рация] Начальник секции %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[Рация] Специальный агент %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[Рация] Старший агент %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[Рация] Агент %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[Рация] Стажёр %s: %s", sendername, result); }
			else { format(string, sizeof(string), "[R] Стажёр %s: %s", sendername, result); }
			SendRadioMessage(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, string);
			return true;
		}
		else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
		{
			if(PlayerInfo[playerid][pRank] == 16) { format(string, sizeof(string), "[Рация] Генерал %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[Рация] Полковник %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[Рация] Подполковник %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[Рация] Майор %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[Рация] Капитан %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[Рация] Старший лейтенант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[Рация] Лейтенант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[Рация] Младший лейтенант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[Рация] Старший прапорщик %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[Рация] Прапорщик %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[Рация] Старшина %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[Рация] Старший сержант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[Рация] Сержант %s: %s",  sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[Рация] Младший сержант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[Рация] Ефрейтор %s: %s",  sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[Рация] Рядовой %s: %s",  sendername, result); }
			else { format(string, sizeof(string), "[R] Рядовой %s: %s", sendername, result); }
			SendRadioMessage(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, string);
			return true;
		}
		else if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
		{
  			if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[Рация] Глав. врач %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[Рация] Терапевт %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[Рация] Хирург %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[Рация] Педиатр %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[Рация] Санитар %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[Рация] Интерн %s: %s. ", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[Рация] Стажёр %s: %s. ", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[Рация] Практикант %s: %s", sendername, result); }
			else { format(string, sizeof(string), "[R] Практикант %s: %s", sendername, playerid, result); }
			SendRadioMessage(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, string);
			return true;
		}
		else if(PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)
		{
			if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[Рация] Мэр %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[Рация] Зам. мэра %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[Рация] Начальник охраны %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[Рация] Охранник %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[Рация] Адвокат %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[Рация] Секретарь %s: %s", sendername, result); }
			else { format(string, sizeof(string), "[F] Секретарь: %s", sendername, result); }
			SendRadioMessage(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, string);
			return true;
		}
		else if(PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10)
		{
			if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[Рация] Шериф %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[Рация] Полковник %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[Рация] Подполковник %s: %s.", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[Рация] Майор %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[Рация] Капитан %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[Рация] Ст. Лейтенант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[Рация] Лейтенант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[Рация] Мл. Лейтенант %s: %s", sendername,result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[Рация] Ст. Прапорщик %s: %s", sendername,result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[Рация] Прапорщик %s: %s", sendername,result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[Рация] Ст. Сержант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[Рация] Сержант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[Рация] Мл. Сержант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[Рация] Офицер %s: %s", sendername,result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[Рация] Кадет %s: %s", sendername, result); }
			else { format(string, sizeof(string), "[R] Кадет %s: %s", sendername, result); }
			SendRadioMessage(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, string);
			return true;
		}
		else if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
		{
			if(PlayerInfo[playerid][pRank] == 16) { format(string, sizeof(string), "[Рация] Генерал %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[Рация] Полковник %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[Рация] Подполковник %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[Рация] Майор %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[Рация] Капитан %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[Рация] Старший лейтенант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[Рация] Лейтенант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[Рация] Младший лейтенант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[Рация] Старший прапорщик %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[Рация] Прапорщик %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[Рация] Старшина %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[Рация] Старший сержант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[Рация] Сержант %s: %s",  sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[Рация] Младший сержант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[Рация] Ефрейтор %s: %s",  sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[Рация] Рядовой %s: %s",  sendername, result); }
			else { format(string, sizeof(string), "[R] Рядовой %s: %s", sendername, result); }
			SendRadioMessage(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, string);
			return true;
		}
		else if(PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21)
		{
			if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[Рация] Шериф %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[Рация] Полковник %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[Рация] Подполковник %s: %s.", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[Рация] Майор %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[Рация] Капитан %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[Рация] Ст. Лейтенант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[Рация] Лейтенант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[Рация] Мл. Лейтенант %s: %s", sendername,result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[Рация] Ст. Прапорщик %s: %s", sendername,result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[Рация] Прапорщик %s: %s", sendername,result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[Рация] Ст. Сержант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[Рация] Сержант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[Рация] Мл. Сержант %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[Рация] Офицер %s: %s", sendername,result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[Рация] Кадет %s: %s", sendername, result); }
			else { format(string, sizeof(string), "[R] Кадет %s: %s", sendername, result); }
			SendRadioMessage(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, string);
			return true;
		}
		else if(PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pLeader] == 22)
		{
			if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[Рация] Глав. врач %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[Рация] Терапевт %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[Рация] Хирург %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[Рация] Педиатр %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[Рация] Санитар %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[Рация] Интерн %s: %s. ", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[Рация] Стажёр %s: %s. ", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[Рация] Практикант %s: %s", sendername, result); }
			else { format(string, sizeof(string), "[R] Практикант %s: %s", sendername, playerid, result); }
			SendRadioMessage(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, string);
			return true;
		}
		else if(PlayerInfo[playerid][pMember] == 23 || PlayerInfo[playerid][pLeader] == 23)
		{
  			if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[Рация] Глав. врач %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[Рация] Терапевт %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[Рация] Хирург %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[Рация] Педиатр %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[Рация] Санитар %s: %s", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[Рация] Интерн %s: %s. ", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[Рация] Стажёр %s: %s. ", sendername, result); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[Рация] Практикант %s: %s", sendername, result); }
			else { format(string, sizeof(string), "[R] Практикант %s: %s", sendername, playerid, result); }
			SendRadioMessage(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, string);
			return true;
		}
		return true;
	}
	if(strcmp(cmd, "/departments", true) == 0 || strcmp(cmd, "/d", true) == 0)
	{
		new length = strlen(cmdtext);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		while((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: (/d)epartments [текст]");
        if(FormaFrac[playerid] == 0)return SendClientMessage(playerid, COLOR_WHITE, "Вам не доступен этот чат!");
		if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У вас бан чата!");
		if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не уполномочены писать в депортамент");
		switch(PlayerInfo[playerid][pMember])
		{
			case 1:
			{
			    if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[LSPD] Шериф %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[LSPD] Полковник %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[LSPD] Подполковник %s: %s.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[LSPD] Майор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[LSPD] Капитан %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[LSPD] Ст. Лейтенант %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[LSPD] Лейтенант %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[LSPD] Мл. Лейтенант %s: %s", sendername,result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[LSPD] Ст. Прапорщик %s: %s", sendername,result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[LSPD] Прапорщик %s: %s", sendername,result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[LSPD] Ст. Сержант %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[LSPD] Сержант %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[LSPD] Мл. Сержант %s: %s", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[LSPD] Офицер %s: %s", sendername,result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[LSPD] Кадет %s: %s", sendername, result); }
				else
				{
					format(string, sizeof(string), "[LSPD] Кадет %s: %s", sendername, result);
				}
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
			case 2:
			{
       			if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[FBI] Директор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[FBI] Зам. директора %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[FBI] Инспектор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[FBI] Начальник секции %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[FBI] Специальный агент %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[FBI] Старший агент %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[FBI] Агент %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[FBI] Стажёр %s: %s", sendername, result); }
				else
				{
					format(string, sizeof(string), "[FBI] Стажёр %s: %s", sendername, result);
				}
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
			case 3:
			{
                if(PlayerInfo[playerid][pRank] == 16) { format(string, sizeof(string), "[SFA] Генерал %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[SFA] Полковник %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[SFA] Подполковник %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[SFA] Майор %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[SFA] Капитан %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[SFA] Старший лейтенант %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[SFA] Лейтенант %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[SFA] Младший лейтенант %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[SFA] Старший прапорщик %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[SFA] Прапорщик %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[SFA] Старшина %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[SFA] Старший сержант %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[SFA] Сержант %s: %s",  sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[SFA] Младший сержант %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[SFA] Ефрейтор %s: %s",  sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[SFA] Рядовой %s: %s",  sendername, result); }
				else
				{
					format(string, sizeof(string), "[SFA] Рядовой %s: %s",  sendername, result);
				}
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
			case 4:
			{
			    if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[МЧС SF] Глав. врач %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[МЧС SF] Терапевт %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[МЧС SF] Хирург %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[МЧС SF] Педиатр %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[МЧС SF] Санитар %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[МЧС SF] Интерн %s: %s. ", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[МЧС SF] Стажёр %s: %s. ", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[МЧС SF] Практикант %s: %s", sendername, result); }
				else
				{
					format(string, sizeof(string), "[МЧС SF] Практикант %s: %s", sendername, result);
				}
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
			case 7:
			{
			    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[Мэрия] Мэр %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[Мэрия] Зам. мэра %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[Мэрия] Начальник Охраны %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[Мэрия] Охранник %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[Мэрия] Адвокат %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[Мэрия] Секретарь %s: %s", sendername, result); }
      			else
				{
					format(string, sizeof(string), "[Мэрия] Секретарь %s: %s", sendername, result);
				}
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
			case 10:
			{
			    if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[SFPD] Шериф %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[SFPD] Полковник %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[SFPD] Подполковник %s: %s.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[SFPD] Майор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[SFPD] Капитан %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[SFPD] Ст. Лейтенант %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[SFPD] Лейтенант %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[SFPD] Мл. Лейтенант %s: %s", sendername,result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[SFPD] Ст. Прапорщик %s: %s", sendername,result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[SFPD] Прапорщик %s: %s", sendername,result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[SFPD] Ст. Сержант %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[SFPD] Сержант %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[SFPD] Мл. Сержант %s: %s", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[SFPD] Офицер %s: %s", sendername,result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[SFPD] Кадет %s: %s", sendername, result); }
				else
				{
					format(string, sizeof(string), "[SFPD] Кадет %s: %s", sendername, result);
				}
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
			case 11:
			{
			    if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[Auto School] Управляющий %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[Auto School] Директор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[Auto School] Старший менеджер %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[Auto School] Мл. менеджер %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[Auto School] Кординатор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[Auto School] Инструктор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[Auto School] Экзаменатор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[Auto School] Стажёр %s: %s", sendername, result); }
			}
			case 19:
			{
                if(PlayerInfo[playerid][pRank] == 16) { format(string, sizeof(string), "[Зона 51] Генерал %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[Зона 51] Полковник %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[Зона 51] Подполковник %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[Зона 51] Майор %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[Зона 51] Капитан %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[Зона 51] Старший лейтенант %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[Зона 51] Лейтенант %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[Зона 51] Младший лейтенант %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[Зона 51] Старший прапорщик %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[Зона 51] Прапорщик %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[Зона 51] Старшина %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[Зона 51] Старший сержант %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[Зона 51] Сержант %s: %s",  sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[Зона 51] Младший сержант %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[Зона 51] Ефрейтор %s: %s",  sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[Зона 51] Рядовой %s: %s",  sendername, result); }
				else
				{
					format(string, sizeof(string), "[Зона 51] Рядовой %s: %s",  sendername, result);
				}
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
			case 21:
			{
			    if(PlayerInfo[playerid][pRank] == 15) { format(string, sizeof(string), "[LVPD] Шериф %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 14) { format(string, sizeof(string), "[LVPD] Полковник %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 13) { format(string, sizeof(string), "[LVPD] Подполковник %s: %s.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 12) { format(string, sizeof(string), "[LVPD] Майор %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 11) { format(string, sizeof(string), "[LVPD] Капитан %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 10) { format(string, sizeof(string), "[LVPD] Ст. Лейтенант %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "[LVPD] Лейтенант %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[LVPD] Мл. Лейтенант %s: %s", sendername,result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[LVPD] Ст. Прапорщик %s: %s", sendername,result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[LVPD] Прапорщик %s: %s", sendername,result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[LVPD] Ст. Сержант %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[LVPD] Сержант %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[LVPD] Мл. Сержант %s: %s", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[LVPD] Офицер %s: %s", sendername,result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[LVPD] Кадет %s: %s", sendername, result); }
				else
				{
					format(string, sizeof(string), "[LVPD] Кадет %s: %s", sendername, result);
				}
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
			case 22:
			{
			    if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[МЧС LS] Глав. врач %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[МЧС LS] Терапевт %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[МЧС LS] Хирург %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[МЧС LS] Педиатр %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[МЧС LS] Санитар %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[МЧС LS] Интерн %s: %s. ", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[МЧС LS] Стажёр %s: %s. ", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[МЧС LS] Практикант %s: %s", sendername, result); }
				else
				{
					format(string, sizeof(string), "[МЧС LS] Практикант %s: %s", sendername, result);
				}
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
			case 33:
			{
			    if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "[МЧС LV] Глав. врач %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "[МЧС LV] Терапевт %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[МЧС LV] Хирург %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[МЧС LV] Педиатр %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[МЧС LV] Санитар %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[МЧС LV] Интерн %s: %s. ", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[МЧС LV] Стажёр %s: %s. ", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[МЧС LV] Практикант %s: %s", sendername, result); }
				else
				{
					format(string, sizeof(string), "[МЧС LV] Практикант %s: %s", sendername, result);
				}
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/gc", true) == 0)
	{
		new length = strlen(cmdtext);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		while((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /gc [текст]");
		if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У вас бан чата!");
		if((!dchat)) return SendClientMessage(playerid, COLOR_GREY, "Сообщение можно отправить через 30 секунд");
		if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не бандит!");
		SetTimer("Ddchat", dtimer, 0);
		dchat = 0;
		switch(PlayerInfo[playerid][pMember])
		{
		case 12:
			{
				if(PlayerInfo[playerid][pRank] >= 1) { format(string, sizeof(string), "[Ballas]%s: %s", sendername, result); }
				SendGangMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
		case 13:
			{
				if(PlayerInfo[playerid][pRank] >= 1) { format(string, sizeof(string), "[Vagos] %s: %s", sendername, result); }
				SendGangMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
		case 15:
			{
				if(PlayerInfo[playerid][pRank] >= 1) { format(string, sizeof(string), "[Grove] %s: %s", sendername, result); }
				SendGangMessage(1, COLOR_ALLDEPT, string);
			}
		case 17:
			{
				if(PlayerInfo[playerid][pRank] >= 1) { format(string, sizeof(string), "[Aztec] %s: %s", sendername, result); }
				SendGangMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
		case 18:
			{
				if(PlayerInfo[playerid][pRank] >= 1) { format(string, sizeof(string), "[Rifa] %s: %s", sendername, result); }
				SendGangMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/bizmafia",true) == 0)
 	{
		if(PlayerInfo[playerid][pPBiskey] == 255) return SendClientMessage(playerid, COLOR_GREY, "Вы не бизнесмен");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /bizmafia [номер]");
			SendClientMessage(playerid, COLOR_WHITE, "0: Yakuza, 1: Русская Мафия, 2: LCN, 3: Нет");
			return true;
		}
		new item = strval(tmp);
		new bizz = PlayerInfo[playerid][pPBiskey];
		switch (item)
		{
			case 0:
			{
				SBizzInfo[bizz-100][sbMafia] = 6;
				SendClientMessage(playerid,  COLOR_YELLOW, "Крыша бизнеса установлена Yakuza");
			}
			case 1:
			{
				SBizzInfo[bizz-100][sbMafia] = 14;
				SendClientMessage(playerid,  COLOR_YELLOW, "Крыша бизнеса установлена РМ");
			}
			case 2:
			{
				SBizzInfo[bizz-100][sbMafia] = 5;
				SendClientMessage(playerid,  COLOR_YELLOW, "Крыша бизнеса установлена LCN");
			}
 			case 3:
			{
				SBizzInfo[bizz-100][sbMafia] = 0;
				SendClientMessage(playerid,  COLOR_YELLOW, "Крыша бизнеса убрана");
			}
		}
 		return true;
	}
	if(strcmp(cmd, "/smska", true) == 0 && PlayerInfo[playerid][pAdmin] >= 1)
 	{
		if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
	  	if(adminreadsms[playerid] == 0)
	  	{
	  		adminreadsms[playerid] = 1;
	   		SendClientMessage(playerid, COLOR_GREEN, "Вы читаете СМС!");
	  	}
	  	else
	  	{
	   		adminreadsms[playerid] = 0;
	   		SendClientMessage(playerid, COLOR_GRAD5, "Вы не читаете СМС!");
	  	}
	  	return true;
	}
	if(strcmp(cmd, "/paycheck",true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 5)
	    {
	   		if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
		  	if(adminreadpay[playerid] == 0)
		  	{
		  		adminreadpay[playerid] = 1;
		   		SendClientMessage(playerid, COLOR_GREEN, "Вы включили просмотр передачи денег!");
		  	}
		  	else
		  	{
		   		adminreadpay[playerid] = 0;
		   		SendClientMessage(playerid, COLOR_GRAD5, "Вы выключили просмотр передачи денег!");
		  	}
		  	return true;
	    }
	}
	if(strcmp(cmd, "/connectcheck",true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 5)
	    {
	   		if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
		  	if(adminreadconnect[playerid] == 0)
		  	{
		  		adminreadconnect[playerid] = 1;
		   		SendClientMessage(playerid, COLOR_GREEN, "Вы включили Connect Log!");
		  	}
		  	else
		  	{
		   		adminreadconnect[playerid] = 0;
		   		SendClientMessage(playerid, COLOR_GRAD5, "Вы выключили Connect Log");
		  	}
		  	return true;
	    }
	}
	if(strcmp(cmd, "/sms", true) == 0)
	{
		new STRname[255];
		GetPlayerName(playerid,STRname,255);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /sms [id] [текст]");
		if(PlayerInfo[playerid][pLevel] == 7 && PlayerInfo[playerid][pExp] < 1) return SendClientMessage(playerid, COLOR_GREY, "Вам нужно отыграть 1 час на сервере");
		if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У вас бан чата!");
		if(PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GREY,"У вас нету телефона! Его можно приобрести в салоне сотовой связи МТС.");
 		giveplayerid = ReturnUser(tmp);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
        if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /sms [id] [текст]");
		if(!CheckString(playerid,result))return 1;
		new item = strval(tmp);
		switch (item)
		{
			case 11888:
			{
				if(smsls == 0) return SendClientMessage(playerid, COLOR_GREY, "Приём SMS отключен");
				if(PlayerInfo[playerid][pBank] <= 0)
				{
	 				format(string, sizeof(string), "SMS: %s. Получатель: LS NEWS",(result));
					SendClientMessage(playerid, COLOR_YELLOW, string);
					SendClientMessage(playerid, COLOR_GREY, "Сообщение не доставлено, не достаточно средств");
					format(string, sizeof(string), "%s достаёт телефон", sendername);
					ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return true;
				}
				format(string, sizeof(string), "[Эфир] %s. Отправитель: %s[%d]",(result),sendername, playerid);
				SendFamilyMessage(16, COLOR_YELLOW, string);
				format(string, sizeof(string), "SMS: %s. Получатель: LS NEWS",(result));
				SendClientMessage(playerid, COLOR_YELLOW, string);
				PlayerInfo[playerid][pBank] -= smspricels;
				FracBank[0][fLsnews] += smspricels;
			}
			case 11555:
			{
				if(smssf == 0) return SendClientMessage(playerid, COLOR_GREY, "Приём SMS отключен");
				if(PlayerInfo[playerid][pBank] <= 0)
				{
	 				format(string, sizeof(string), "SMS: %s. Получатель: SF NEWS",(result));
					SendClientMessage(playerid, COLOR_YELLOW, string);
					SendClientMessage(playerid, COLOR_GREY, "Сообщение не доставлено, не достаточно средств");
					format(string, sizeof(string), "%s достаёт телефон", sendername);
					ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return true;
				}
				format(string, sizeof(string), "[Эфир] %s. Отправитель: %s[%d]",(result),sendername, playerid);
				SendFamilyMessage(9, COLOR_YELLOW, string);
				format(string, sizeof(string), "SMS: %s. Получатель: SF NEWS",(result));
				SendClientMessage(playerid, COLOR_YELLOW, string);
				PlayerInfo[playerid][pBank] -= smspricesf;
				FracBank[0][fSfnews] += smspricesf;
			}
			case 11666:
			{
 				if(smslv == 0) return SendClientMessage(playerid, COLOR_GREY, "Приём SMS отключен");
				if(PlayerInfo[playerid][pBank] <= 0)
				{
	 				format(string, sizeof(string), "SMS: %s. Получатель: LV NEWS",(result));
					SendClientMessage(playerid, COLOR_YELLOW, string);
					SendClientMessage(playerid, COLOR_GREY, "Сообщение не доставлено, не достаточно средств");
					format(string, sizeof(string), "%s достаёт телефон", sendername);
					ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return true;
				}
				format(string, sizeof(string), "[Эфир] %s. Отправитель: %s[%d]",(result),sendername, playerid);
				SendFamilyMessage(20, COLOR_YELLOW, string);
				format(string, sizeof(string), "SMS: %s. Получатель: LV NEWS",(result));
				SendClientMessage(playerid, COLOR_YELLOW, string);
				PlayerInfo[playerid][pBank] -= smspricelv;
				FracBank[0][fLvnews] += smspricelv;
			}
		}
		if(IsPlayerConnected(giveplayerid))
		{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[playerid][pPhbalance] < 20)return SendClientMessage(playerid,COLOR_GREY, "На счету вашего телефона недостаточно средств!");
				if(PhoneOnline[giveplayerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Телефон абонента выключен.");
					format(string, sizeof(string), "%s достаёт телефон", sendername);
					ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return true;
				}
				format(string, sizeof(string), "[Входящее сообщение]:{FFFFFF} %s. {FFFF00}Отправитель: %s[%d]",(result),sendername, playerid);
				SendClientMessage(giveplayerid, COLOR_YELLOW, string);
				PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "%s отправил сообщение", sendername);
				ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				format(string, sizeof(string), "[Исходящее сообщение]:{FFFFFF} %s. {FFFF00}Получатель: %s[%d]",(result), giveplayer, giveplayerid);
				SendClientMessage(playerid,  COLOR_YELLOW, string);
				SendClientMessage(playerid,  COLOR_WHITE, "Сообщение доставлено");
				PlayerInfo[playerid][pPhbalance] -=20;
				for(new admin = 0; admin < MAX_PLAYERS; admin ++)
  				{
   					if(adminreadsms[admin] == 1)
   					{
					    format(string,sizeof(string),"От %s[%i] к %s[%i]: %s",sendername, playerid, giveplayer, giveplayerid, (result));
					    SendClientMessage(admin,COLOR_YELLOW,string);
   					}
	 			}
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/pm", true) == 0 || strcmp(cmd, "/ot", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /pm [id] [текст]");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[80];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /pm [id] [текст]");
					format(string, sizeof(string), "{FFCC33}Администратор ответил %s: {FFFFFF}%s", sendername, (result));
					SendClientMessage(giveplayerid, 0xFFFFFFAA, string);
					format(string, sizeof(string), "{FFCC33}Администратор %s[%d] ответил Вас:{ffffff} %s", giveplayer, giveplayerid, (result));
					ABroadCast(0xFFFFFFAA, string, 1);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/hpm", true) == 0)
	{
		if(PlayerInfo[playerid][pHelp] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /hpm [id] [текст]");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[80];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /pm [id] [текст]");
					format(string, sizeof(string), "Агент поддержки {00CC00}%s: {FFFFFF}%s", sendername, (result));
					SendClientMessage(giveplayerid, 0xFFFFFFAA, string);
					format(string, sizeof(string), "{e23434}[СП]Ответ к {00CC00}%s[%d]:{FFFFFF} %s", giveplayer, giveplayerid, (result));
					HelpChat(0xFFFFFFAA, string, 1);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/yes", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pMember] == 20)
 		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /yes [id]");
			giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
					if(zvonok[giveplayerid] != 1) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не звонил в студию");
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Вы приняли звонок от %s", giveplayer);
					PlayerInfo[giveplayerid][pPhbalance] -= 50;
					SendClientMessage(playerid, COLOR_WHITE, string);
					Tel[giveplayerid] = 1;
					RingTone[giveplayerid] = 0;
					SendClientMessage(giveplayerid, COLOR_YELLOW, "Вы попали в студию, говорите.");
					if(PlayerInfo[playerid][pMember] == 9)
					{
						TalkingLive[giveplayerid] = 1;
						PlayerInfo[giveplayerid][pBank] -= smspricesf;
						FracBank[0][fSfnews] += smspricesf;
					}
					if(PlayerInfo[playerid][pMember] == 16)
					{
						TalkingLivels[giveplayerid] = 1;
						PlayerInfo[giveplayerid][pBank] -= smspricesf;
						FracBank[0][fLsnews] += smspricesf;
					}
					if(PlayerInfo[playerid][pMember] == 20)
					{
						TalkingLivelv[giveplayerid] = 1;
						PlayerInfo[giveplayerid][pBank] -= smspricesf;
						FracBank[0][fLvnews] += smspricesf;
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/off", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pMember] == 20)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /off [id]");
			giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                	if(zvonok[giveplayerid] != 1) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не звонил в студию");
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Вы завершили звонок от %s", giveplayer);
					SendClientMessage(playerid, COLOR_BLUE, string);
					SetPlayerSpecialAction(giveplayerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					SendClientMessage(giveplayerid, COLOR_YELLOW, "Звонок завершён.");
					zvonok[giveplayerid] = 0;
					Tel[giveplayerid] = 255;
					if(PlayerInfo[playerid][pMember] == 9)
					{
						TalkingLive[giveplayerid] = 255;
					}
					if(PlayerInfo[playerid][pMember] == 16)
					{
						TalkingLivels[giveplayerid] = 255;
					}
					if(PlayerInfo[playerid][pMember] == 20)
					{
						TalkingLivelv[giveplayerid] = 255;
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/mphone",true) == 0) // ShowPlayerDialog(playerid,1337,DIALOG_STYLE_LIST,"МТС","Купить телефон\nПополнить баланс телефона\nПомощь","Выбрать", "Отмена");
	{
	    if(PlayerInfo[playerid][pPhone] == 0)return SendClientMessage(playerid,COLOR_GREY, "У вас нету телефона! Его можно приобрести в салоне сотовой связи МТС");
	    switch(PlayerInfo[playerid][pPhone])
	    {
	        case 1:
	        {
	            ShowPlayerDialog(playerid,1340,DIALOG_STYLE_LIST,"Телефон","Информация\nПозвонить\nУзнать номер игрока\nПомощь\n","Выбрать", "Отмена");
			}
	        case 2:
	        {
	            ShowPlayerDialog(playerid,1340,DIALOG_STYLE_LIST,"Телефон","Информация\nПозвонить\nУзнать номер игрока\nПомощь\nMP3 Плеер","Выбрать", "Отмена");
	        }
		}
	}
	if(strcmp(cmd, "/mphinfo",true) == 0)
	{
	    if(PlayerInfo[playerid][pPhone] == 0)return SendClientMessage(playerid,COLOR_GREY, "У вас нету телефона! Его можно приобрести в салоне сотовой связи МТС");
		new tiptext[20];
		GetPlayerName(playerid,sendername,sizeof(sendername));
		switch(PlayerInfo[playerid][pPhone])
		{
		    case 1: { tiptext = "Обычный сотовый"; } //FFCC33
		    case 2: { tiptext = "Смартфон"; }
		}
		new msggg[] = "{FFCC33}Оформлен на:{FFFFFF} %s\n\n{FFCC33}Тип телефона: {FFFFFF}%s\n{FFCC33}Тарифный план: {FFFFFF}MTC\n{FFCC33}Номер телефона: {FFFFFF}%d\n{FFCC33}Баланс:{FFFFFF} %d\n\n{FFCC33}Цена звонков: {FFFFFF} 50\n{FFCC33}Цена СМС: {FFFFFF}20";
     	format(string, sizeof(string), msggg, sendername,tiptext,PlayerInfo[playerid][pPnumber],PlayerInfo[playerid][pPhbalance]);
     	ShowPlayerDialog(playerid, 69, DIALOG_STYLE_MSGBOX, "Телефон",string, "Ок", "");
	}
	if(strcmp(cmd, "/call", true) == 0)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /call [номер]");
		if(PlayerInfo[playerid][pPhone] == 0)return SendClientMessage(playerid,COLOR_GREY, "У вас нету телефона! Его можно приобрести в салоне сотовой связи МТС");
		if(PlayerInfo[playerid][pPhbalance] < 50)return SendClientMessage(playerid,COLOR_GREY,"На счету вашего телефона недостаточно средств!");
  		format(string, sizeof(string), "%s звонит", sendername);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
 		new phonenumb = strval(tmp);
		if(phonenumb == PlayerInfo[playerid][pPnumber])
		{
			SendClientMessage(playerid, COLOR_GREY, "Линия занята");
			SetPlayerSpecialAction(playerid, 13);
			return true;
		}
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(phonenumb == 11888)
			{
				if(smsls == 0) return SendClientMessage(playerid, COLOR_GREY, "Прямой эфир отключен.");
				format(string, sizeof(string), "В студию звонит: %s. Введите /yes [%d], чтобы ответить",sendername, playerid);
				SendFamilyMessage(16, COLOR_YELLOW, string);
				SetPlayerSpecialAction(playerid,11);
				zvonok[playerid] = 1;
				PlayerInfo[playerid][pBank] -= smspricels;
				FracBank[0][fLsnews] += smspricels;
				return true;
			}
			if(phonenumb == 11555)
			{
				if(smssf == 0) return SendClientMessage(playerid, COLOR_GREY, "Прямой эфир отключен.");
				format(string, sizeof(string), "В студию звонит: %s. Введите /yes [%d], чтобы ответить",sendername, playerid);
				SendFamilyMessage(9, COLOR_YELLOW, string);
				SetPlayerSpecialAction(playerid,11);
				PlayerInfo[playerid][pBank] -= smspricels;
				FracBank[0][fLsnews] += smspricels;
				zvonok[playerid] = 1;
				return true;
			}
			if(phonenumb == 11666)
			{
				if(smslv == 0) return SendClientMessage(playerid, COLOR_GREY, "Прямой эфир отключен.");
				format(string, sizeof(string), "В студию звонит: %s. Введите /yes [%d], чтобы ответить",sendername, playerid);
				SendFamilyMessage(20, COLOR_YELLOW, string);
				SetPlayerSpecialAction(playerid,11);
				PlayerInfo[playerid][pBank] -= smspricels;
				FracBank[0][fLsnews] += smspricels;
				zvonok[playerid] = 1;
				return true;
			}
			if(Mobile[playerid] != 255) return SendClientMessage(playerid, COLOR_GREY, "Вы уже разговариваете по телефону");
			if(IsPlayerConnected(i))
			{
				if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
				{
					giveplayerid = i;
					Mobile[playerid] = giveplayerid;
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(PhoneOnline[giveplayerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Телефон абонента выключен.");
							if(Mobile[giveplayerid] == 255)
							{
								format(string, sizeof(string), "Ваш телефон звонит. Введите (/P)ickup. Звонит: %s", sendername);
								SendClientMessage(giveplayerid, COLOR_WHITE, string);
								GetPlayerName(giveplayerid, sendername, sizeof(sendername));
								RingTone[giveplayerid] = 10;
								format(string, sizeof(string), "У %s звонит телефон", sendername);
								ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								SetPlayerSpecialAction(playerid,11);
								return true;
							}
						}
					}
				}
			}
		}
		SendClientMessage(playerid, COLOR_GREY, "Телефон вне зоны доступа сети");
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		return true;
	}
	if(strcmp(cmd, "/pickup", true) == 0 || strcmp(cmd, "/p", true) == 0)
	{
		if(Mobile[playerid] != 255) return SendClientMessage(playerid, COLOR_GREY, "Вы уже разговариваете");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(Mobile[i] == playerid)
				{
					Mobile[playerid] = i;
					SendClientMessage(i, COLOR_GREY, "Поднял(а) трубку телефона.");
					PlayerInfo[i][pPhbalance] -= 50;
					GetPlayerName(playerid, sendername, sizeof(sendername));
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
					format(string, sizeof(string), "%s ответил на звонок", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					RingTone[playerid] = 0;
					PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/hangup", true) == 0 || strcmp(cmd, "/h", true) == 0)
	{
		new caller = Mobile[playerid];
		if(IsPlayerConnected(caller))
		{
			if(caller != INVALID_PLAYER_ID)
			{
				if(caller != 255)
				{
					if(caller < 255)
					{
						GetPlayerName(playerid, sendername, sizeof(sendername));
						SendClientMessage(caller, COLOR_GREY, "Абонент положил(a) трубку");
						SetPlayerSpecialAction(caller,SPECIAL_ACTION_STOPUSECELLPHONE);
						Mobile[caller] = 255;
						SendClientMessage(playerid, COLOR_GREY, "Вы повесили трубку");
						Mobile[caller] = 255;
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					}
					Mobile[playerid] = 255;
					Mobile[caller] = 255;
					RingTone[playerid] = 0;
					return true;
				}
			}
		}
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
		TalkingLive[playerid] = 255;
		TalkingLivels[playerid] = 255;
		TalkingLivelv[playerid] = 255;
		zvonok[playerid] = 0;
		Tel[playerid] = 255;
		return true;
	}
	if(strcmp(cmd, "/advertise", true) == 0 || strcmp(cmd, "/ad", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			new is1 = 0;
			new r = 0;
			while(strlen(cmdtext[is1]))
			{
				if('0' <= cmdtext[is1] <= '9')
				{
					new is2 = is1+1;
					new p = 0;
					while(p == 0)
					{
						if('0' <= cmdtext[is2] <= '9'&&strlen(cmdtext[is2])) is2++;
						else
						{
							strmid(strR[r],cmdtext,is1,is2,255);
							if(strval(strR[r]) < 255) r++;
							is1 = is2;
							p = 1;
						}
					}
				}
				is1++;
			}
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: (/ad)vertise [текст]");
			if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У вас бан чата!");
			if(PlayerInfo[playerid][pAdvertTime] > 0) return SendClientMessage(playerid, COLOR_WHITE, "Сообщение можно отправить через 15 секунд!");
	        if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "Подать обьявление можно с 3 lvl");
			if(gNews[playerid] == 1 && lNews[playerid] == 1 && LvNews[playerid] == 1) return SendClientMessage(playerid, COLOR_WHITE, "Сначало включите радио");
			if(lNews[playerid] == 0)
			{
				ReportQ[playerid] = result;
				format(string,sizeof(string),"{B8B8B8}Вы собираетесь отправить объявление:\n               {00FF5E}%s\n\n{B8B8B8}Стоимость:{00FF5E} %d вирт\n\n\n{56839C}Объявление будет подано после проверки!\nСпасибо что воспользовались услугами Arizona RP LS NEWS",(result),addd[0]);
				ShowPlayerDialog(playerid,8454,DIALOG_STYLE_MSGBOX,"{FFFFFF}Проверка",string,"Отправить","Отмена");
			}
			else if(gNews[playerid] == 0)
			{
				ReportQ[playerid] = result;
				format(string,sizeof(string),"{B8B8B8}Вы собираетесь отправить объявление:\n               {00FF5E}%s\n\n{B8B8B8}Стоимость:{00FF5E} %d вирт\n\n\n{56839C}Объявление будет подано после проверки!\nСпасибо что воспользовались услугами Arizona RP SF NEWS",(result),addd[1]);
				ShowPlayerDialog(playerid,8455,DIALOG_STYLE_MSGBOX,"{FFFFFF}Проверка",string,"Отправить","Отмена");
			}
			else if(LvNews[playerid] == 0)
			{
				ReportQ[playerid] = result;
				format(string,sizeof(string),"{B8B8B8}Вы собираетесь отправить объявление:\n               {00FF5E}%s\n\n{B8B8B8}Стоимость:{00FF5E} %d вирт\n\n\n{56839C}Объявление будет подано после проверки!\nСпасибо что воспользовались услугами Arizona RP LV NEWS",(result),addd[2]);
				ShowPlayerDialog(playerid,8456,DIALOG_STYLE_MSGBOX,"{FFFFFF}Проверка",string,"Отправить","Отмена");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/givelicense", true) == 0 || strcmp(cmd, "/gl", true) == 0)
	{
  		if(IsPlayerConnected(playerid))
  		{
            if(PlayerInfo[playerid][pMember] == 11)
            {
                ShowPlayerDialog(playerid,7228,DIALOG_STYLE_LIST,"Выберите лицензию:","1. Водительские права\n2. Лицензия на воздушный транспорт.\n3. Лицензия на водный транспорт.\n4. Лицензия на рыбаловство.\n5. Лицензия на оружие.\n6. Лицензия на бизнес.","Выбор","Отмена");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Вы не инструктор !");
               	return 1;
            }
  		}
  		printf("Использвалась команда %s",cmd);
  		return 1;
  	}
	if(strcmp(cmd, "/duty", true) == 0)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pMember] == 11)
		{
			if(!IsPlayerInRangeOfPoint(playerid,10,-2029.7878,-116.4905,1035.1719)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в автошколе");
			if(duty[playerid] == 0)
			{
				format(string, sizeof(string), "Инструктор %s приступил(а) к работе", sendername);
				ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				duty[playerid] = 1;
			}
			else
			{
				format(string, sizeof(string), "Инструктор %s завершил(а) рабочий день", sendername);
				ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				duty[playerid] = 0;
			}
		}
	}
	if(strcmp(cmd, "/offlic", true) == 0)
	{
		if(PlayerInfo[playerid][pPasport] == 0)return SendClientMessage(playerid, COLOR_GREY, "У вас нету паспорта");
        for(new i=0; i<GetMaxPlayers(); i++) if(IsPlayerConnected(i) && PlayerInfo[i][pMember] == 11)return SendClientMessage(playerid, COLOR_GREY, "Инструкторы в сети! Покупка лицензий запрещена!"),OnPlayerCommandText(playerid, "/instructors");
        if(!PlayerToPoint(3.0,playerid,-2026.6418,-118.3758,1035.1719))return SendClientMessage(playerid, COLOR_GREY, "[Arizona RP]: Вы не в автошколе.");//Инструкторы в сети! Покупка лицензий запрещена! Используйте: /instructors
        new listitems[] = "Приобрести лицензию на пилота\nПриобрести лицензию на рыбаловство\nПриобрести лицензию на водный транспорт\nПриобрести лицензию на оружие\nПриобрести лицензию на бизнес";
        ShowPlayerDialog(playerid, 1499, DIALOG_STYLE_LIST, "Автошкола", listitems, "Выбрать", "Отмена");
	}
	if(strcmp(cmd, "/instructors", true) == 0)
    {
       SendClientMessage(playerid, 0x139BECFF, "Инструкторы {00FF00}Online:");
       for(new i = 0; i < MAX_PLAYERS; i++)
       {
          if(IsPlayerConnected(i))
          {
             if(PlayerInfo[i][pMember] == 11)
             {
                  GetPlayerName(i, giveplayer, sizeof(giveplayer));
                  format(string, 256, "Инструктор: {FFFFFF}%s {2C9197}телефон: {FFFFFF}%d", giveplayer, PlayerInfo[i][pPnumber]);
                  SendClientMessage(playerid, 0x2C9197FF, string);
             }
          }
       }
       return true;
    }
	if(strcmp(cmd, "/fbimask", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(!IsPlayerInRangeOfPoint(playerid,3.0,-2447.7119,523.0289,30.3672))return SendClientMessage(playerid,COLOR_GREY,"Вы не в раздевалке");
			if(PlayerInfo[playerid][pMember] == 2 && FormaFrac[playerid] == 1)
			{
				ShowPlayerDialog(playerid,11111,2,"Маскировка","Гос.Организации\nБандиты\nМафии\nБайкеры\nОбычная одежда\nСтрит Рейсеры\nБомж\nПрохожий","Выбрать","Отмена");
				return true;
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GREY,"Вы не агент ФБР");
			}
		}
	}
	if(strcmp(cmd, "/hitmask", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(!IsPlayerInRangeOfPoint(playerid,3.0,-692.2068,939.3858,13.6328))return SendClientMessage(playerid,COLOR_GREY,"Вы не в раздевалке");
			if(PlayerInfo[playerid][pMember] == 24)
			{
				ShowPlayerDialog(playerid,11111,2,"Маскировка","Гос.Организации\nБандиты\nМафии\nБайкеры\nОбычная одежда\nСтрит Рейсеры\nБомж\nПрохожий","Выбрать","Отмена");
				return true;
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GREY,"Вы не хитман!");
			}
		}
	}
    if(strcmp(cmd, "/time", true) == 0)
    {
    	new mtext[20];
    	new year, month,day;
    	getdate(year, month, day);
    	if(month == 1) { mtext = "Января"; }
	    else if(month == 2) { mtext = "Февраля"; }
	    else if(month == 3) { mtext = "Марта"; }
	    else if(month == 4) { mtext = "Апреля"; }
	    else if(month == 5) { mtext = "Мая"; }
	    else if(month == 6) { mtext = "Июня"; }
	    else if(month == 7) { mtext = "Июля"; }
	    else if(month == 8) { mtext = "Августа"; }
	    else if(month == 9) { mtext = "Сентября"; }
	    else if(month == 10) { mtext = "Октября"; }
	    else if(month == 11) { mtext = "Ноября"; }
	    else if(month == 12) { mtext = "Декабря"; }
    	new hour,minuite,second;
    	gettime(hour,minuite,second);
    	FixHour(hour);
    	hour = shifthour;
    	if (minuite < 10)
    	{
		    format(string, sizeof(string), "{e49b0f}Получение текущего времени и даты\n{faeedd}_____________________________________\n\n{faeedd}Сегодняшняя дата:\t{3caa3c}%d %s %d год\n{faeedd}Текущее время:\t{007fff}%d:%d\n{faeedd}_____________________________________", day, mtext,year, hour, minuite);
		    ShowPlayerDialog(playerid,8888, DIALOG_STYLE_MSGBOX, " ", string, "Закрыть", "");
    	}
	    if (PlayerInfo[playerid][pJailTime] > 0)
	    {
		    format(string, sizeof(string), "{e49b0f}Получение текущего времени и даты\n{faeedd}_____________________________________\n\n{faeedd}Сегодняшняя дата:\t{3caa3c}%d %s %d год\n{faeedd}Текущее время:\t{007fff}%d:%d\n{faeedd}Осталось сидеть:\t{ea7500}%d секунд\n{faeedd}_____________________________________", day, mtext,year, hour, minuite,PlayerInfo[playerid][pJailTime]-10);
		    ShowPlayerDialog(playerid,8888, DIALOG_STYLE_MSGBOX, " ", string, "Закрыть", "");
	    }
    	else
    	{
		    format(string, sizeof(string), "{e49b0f}Получение текущего времени и даты\n{faeedd}_____________________________________\n\n{faeedd}Сегодняшняя дата:\t{3caa3c}%d %s %d год\n{faeedd}Текущее время:\t{007fff}%d:%d\n{faeedd}_____________________________________", day, mtext,year, hour, minuite);
		    ShowPlayerDialog(playerid,8888, DIALOG_STYLE_MSGBOX, " ", string, "Закрыть", "");
    	}
	    ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0,1);
	    format(string, sizeof(string), "%s посмотрел(а) на свои часы", sendername);
	    ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    return true;
	}
	if(strcmp(cmd, "/house", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /house [housenumber]");
			new housenum = strval(tmp);
			ACP_SetPlayerPos(playerid,HouseInfo[housenum][hEntrancex],HouseInfo[housenum][hEntrancey],HouseInfo[housenum][hEntrancez]);
			GameTextForPlayer(playerid, "~r~house teleport", 5000, 1);
		}
		return true;
	}
	if(strcmp(cmd, "/adminkey", true) == 0)
	{
	    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
	    ShowPlayerDialog(playerid,11332,DIALOG_STYLE_INPUT, "Смена Admin пароля", "Введите новый пароль ниже\n{e23434}Напоминаем, что пароль должен состоять из 9 цифр.", "X", "");
	}
	if(strcmp(cmd, "/chat", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 1)
	    {
	        if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			if(!BigEar[playerid])
			{
				BigEar[playerid] = 1;
				SendClientMessage(playerid, COLOR_GREY, "Слушать чат ON");
			}
			else if(BigEar[playerid])
			{
				BigEar[playerid] = 0;
				SendClientMessage(playerid, COLOR_GREY, "Слушать чат OFF");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/reoff", true) == 0 || strcmp(cmd, "/reconoff", true) == 0)
     {
        if (PlayerInfo[playerid][pAdmin] >= 2)
        {
            if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
        	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING)
        	{
            	StopSpectate(playerid);
            	SetPlayerHealthAC(playerid, 100);
        	}
        	ACP_SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
			SetPlayerInterior(playerid, TeleportDestNoFloat[playerid][0]);
			SetPlayerVirtualWorld(playerid, TeleportDestNoFloat[playerid][1]);
            HideMenuForPlayer(Admin,playerid);
		}
 	}
	if(strcmp(cmd, "/recon", true) == 0 || strcmp(cmd, "/re", true) == 0 || strcmp(cmd, "/ку", true) == 0)
     {
        if (PlayerInfo[playerid][pAdmin] >= 2)
        {
            new specname[MAX_PLAYER_NAME];
            if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
        	if(IsPlayerConnected(playerid))
            {
	            //new tmp[256];
	            new specid;
	            tmp = strtok(cmdtext, idx);
	            if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /re(con) [id]");
	            specid = ReturnUser(tmp);
	            if(specid == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Нельзя наблюдать за самим собой!");
	            if(specid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");
                if(GetPlayerState(specid) == PLAYER_STATE_SPECTATING && gSpectateID[specid] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Админ в режиме наблюдения");
                if(GetPlayerState(specid) != 1 && GetPlayerState(specid) != 2 && GetPlayerState(specid) != 3) return SendClientMessage(playerid, COLOR_GRAD1, "Игрок не вступил в игру!");
                if(GetPlayerState(playerid) != PLAYER_STATE_SPECTATING)
                {
                    GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
                    TeleportDestNoFloat[playerid][0] = GetPlayerInterior(playerid);
                    TeleportDestNoFloat[playerid][1] = GetPlayerVirtualWorld(playerid);
                }
                ShowMenuForPlayer(Admin,playerid);
                TextDrawShowForPlayer(playerid, FULLRECON[playerid]);
                StartSpectate(playerid, specid);
                SpecAd[playerid] = specid;
                SpecID[specid] = playerid;
				GetPlayerName(SpecAd[playerid],specname,sizeof(specname));
				GetPlayerName(SpecID[specid],sendername,sizeof(sendername));
			}
			format(string,sizeof(string),"{e23434}Администратор %s начал следить за %s",sendername,specname);
        	ABroadCast(COLOR_GREY, string, 1);
        }
        return true;
    }
	if(strcmp(cmd, "/admin", true) == 0 || strcmp(cmd, "/a", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[90];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: (/a)dmin [текст]");
            new ttext[255];
			switch(PlayerInfo[playerid][pAdmin])
			{
			    case 1: { ttext = "Практикант"; }
			    case 2: { ttext = "Ст.Практикант"; }
			    case 3: { ttext = "Модератор"; }
			    case 4: { ttext = "Ст.Модератор"; }
			    case 5: { ttext = "Администратор"; }
			    case 6: { ttext = "Ст.Администратор"; }
			    case 7: { ttext = "Ивент-Менеджер"; }
			    case 8: { ttext = "ОЗЛ"; }
				case 9: { ttext = "Спец.Администратор"; }
				case 10: { ttext = "Разработчик"; }
			}
			format(string, sizeof(string), "{CCCC00}[A]%s %s[%d]: %s", ttext,sendername, playerid,result);
			ABroadCast(COLOR_YELLOW, string, 1);
		}
		return true;
	}
	if(strcmp(cmd, "/hchat", true) == 0 || strcmp(cmd, "/hc", true) == 0)
	{
		if(PlayerInfo[playerid][pHelp] >= 1)
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /hc [текст]");
			if(PlayerInfo[playerid][pHelp] == 1)format(string, sizeof(string), "{00CCFF}<{e23434}Стажер{00CCFF}> %s[%d]: {FFFFFF}%s", sendername, playerid,result);
   			else if(PlayerInfo[playerid][pHelp] == 2)format(string, sizeof(string), "{00CCFF}<{e23434}Проверенный{00CCFF}> %s[%d]: {FFFFFF}%s", sendername, playerid,result);
   			else if(PlayerInfo[playerid][pHelp] == 3)format(string, sizeof(string), "{00CCFF}<{e23434}Опытный{00CCFF}> %s[%d]: {FFFFFF}%s", sendername, playerid,result);
   			else if(PlayerInfo[playerid][pHelp] == 4)format(string, sizeof(string), "{00CCFF}<{e23434}Главный{00CCFF}> %s[%d]: {FFFFFF}%s", sendername, playerid,result);
			HelpChat(COLOR_YELLOW, string, 1);
		}
		return true;
	}
	if(strcmp(cmd, "/vad", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(testDelay > gettime())return SendClientMessage(playerid,COLOR_GREY,"Обьявление можно отправить раз в минуту!");
			if(PlayerInfo[playerid][pCash] < 3000/PlayerInfo[playerid][pDonateRank]) return SendClientMessage(playerid, COLOR_WHITE, "Недостаточно средств.");
			if(PlayerInfo[playerid][pDonateRank] < 1) return SendClientMessage(playerid, COLOR_WHITE, "Вы не VIP");
			if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_WHITE, "У вас бан чата!");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: {FF9000}/vad [сообщение]");
			if(!CheckString(playerid,result))return 1;
            if(PlayerInfo[playerid][pPnumber] == NUMBER_TLF)
            {
			    format(string, sizeof(string), "{FFFF00}[VIP] Реклама:{FFFFFF} %s. {1e90ff}Прислал(а):{ffffff} %s[%d].{1e90ff} Телефон:{ffffff}[Нет]", result, sendername, playerid);
			}
			else
			{
			    format(string, sizeof(string), "{FFFF00}[VIP] Реклама:{FFFFFF} %s. {1e90ff}Прислал(а):{ffffff} %s[%d].{1e90ff} Телефон:{ffffff}[%d]", result, sendername, playerid, PlayerInfo[playerid][pPnumber]);
			}
			OOCOff(COLOR_REDD,string);
			PlayerInfo[playerid][pCash]-= 3000/PlayerInfo[playerid][pDonateRank];
			testDelay = gettime() + 60;
		}
		return true;
	}
	if(strcmp(cmd, "/vipchat", true) == 0 || strcmp(cmd, "/vc", true) == 0)
	{
		if(PlayerInfo[playerid][pDonateRank] >= 1)
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /vipchat [текст] || /vc [текст]");
			format(string, sizeof(string), "<{e23434}VIP %d lvl{CC33FF}> %s[%d]: {FFFFFF}%s", PlayerInfo[playerid][pDonateRank],sendername, playerid,result);
			VIPChat(0xCC33FFAA, string, 1);
		}
		return true;
	}
	if(strcmp(cmd, "/jail", true) ==0)
	{
	    if(PlayerInfo[playerid][pHelp] >=3)
		{
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /jail [id]");
			giveplayerid = ReturnUser(tmp);
			if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID!");
			if(PlayerInfo[giveplayerid][pHelp] >= 1 || PlayerInfo[giveplayerid][pAdmin] >= 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете посадить администратора/саппорта");
			new givename[30];
			GetPlayerName(giveplayerid,givename,sizeof(givename));
			GetPlayerName(playerid,sendername,sizeof(sendername));
			DelGun(giveplayerid);
			WantedPoints[giveplayerid] = 0;
			SetPlayerInterior(giveplayerid, 6);
			ACP_SetPlayerPos(giveplayerid,264.1425,77.4712,1001.0391);
			SetPlayerFacingAngle(giveplayerid, 263.0160);
			PlayerInfo[giveplayerid][pJailed] = 1;
			PlayerInfo[giveplayerid][pPlaceJail] = 1;
			PlayerInfo[giveplayerid][pJailTime] = 600;
			format(string,sizeof(string), "{FF9900}Вы были посажены в тюрьму агентом тех. поддержки %s на {FFFFFF} 10 {FF9900}минут",sendername);
			SendClientMessage(giveplayerid,COLOR_LIGHTRED,string);
			format(string,sizeof(string), "{FF9900}Агент тех. поддержки {FFFFFF}%s{FF9900} посадил в тюрьму {FFFFFF}%s",sendername,givename);
			SendClientMessageToAll(COLOR_LIGHTRED,string);
			
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "Вы не Агент Тех.Поддержки");
		}
	}
	if(strcmp(cmd, "/demorgan", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /demorgan [id] [минуты] [причина], /demorgan [id] 0 0 - вытащить из тюрьмы");
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			new result[64];
			new length = strlen(cmdtext);
			new offset = idx;
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /demorgan [id] [минуты] [причина]");
			if(IsPlayerConnected(playa))
			{
				if(playa != INVALID_PLAYER_ID)
				{
					GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Вы посадили %s в ДеМорган. На %d минут.", giveplayer,money);
					SendClientMessage(playerid, COLOR_LIGHTRED, string);
					DelGun(playa);
					WantedPoints[playa] = 0;
					SetPlayerInterior(playa, 0);
					ACP_SetPlayerPos(playa,5508.3706,1244.7594,23.1886);
					SetPlayerFacingAngle(playa,1.0000);
					PlayerInfo[playa][pJailed] = 1;
					PlayerInfo[playa][pPlaceJail] = 4;
					PlayerInfo[playa][pJailTime] = money*60;
					format(string, sizeof(string), "{FF9900}Игрок {FFFFFF}%s {FF9900}был помещен в ДеМорган на {FFFFFF}%d {FF9900}минут. Причина: {FFFFFF}%s",giveplayer,money,(result));
					SendClientMessageToAll(COLOR_LIGHTRED, string);
					format(string, sizeof(string), "{FF9900}Вы были посажены в ДеМорган администратором {FFFFFF}%s{FF9900} на {FFFFFF}%d {FF9900}минут. Причина: {FFFFFF}%s", sendername, money,(result));
					SendClientMessage(playa, COLOR_LIGHTRED, string);
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/pdinvite", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pRank] >= 13 || PlayerInfo[playerid][pMember] == 10 && PlayerInfo[playerid][pRank] >= 13 || PlayerInfo[playerid][pMember] == 21 && PlayerInfo[playerid][pRank] >= 13 )
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /pdinvite [id]");
			new para1;
			new ftext[20];
			para1 = ReturnUser(tmp);
			if(PlayerInfo[playerid][pLeader] == 1|| PlayerInfo[playerid][pLeader] == 10 || PlayerInfo[playerid][pLeader] == 21)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(FormaFrac[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Начните рабочий день в вашей организации!");
			        if(PlayerInfo[para1][pMember] >= 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок состоит во фракции!");
			        if(PlayerInfo[para1][pLeader] >= 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок Лидер!");
			        if(para1 == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID!");
			        if(para1 != INVALID_PLAYER_ID)
					{
					    {
					        if(PlayerInfo[playerid][pLeader] == 1) { ftext = "Полиция LSPD"; ChosenSkin[para1] = 285; }
					        else if(PlayerInfo[playerid][pLeader] == 10) { ftext = "Полиция SFPD";ChosenSkin[para1] = 285; }
					        else if(PlayerInfo[playerid][pLeader] == 21) { ftext = "Полиция LVPD"; ChosenSkin[para1] = 285; }
       						else { return true; }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							PlayerInfo[para1][pMember] = PlayerInfo[playerid][pMember];
							PlayerInfo[para1][pRank] = 1;
							format(string, sizeof(string), "Лидер %s пригласил вас присоедениться к %s", sendername,ftext);
							SendClientMessage(para1, 0x6495EDFF, string);
							format(string, sizeof(string), "Вы пригласили %s присоедениться к %s.", giveplayer,ftext);
							SendClientMessage(playerid, 0x6495EDFF, string);
						    SelectChar[para1] = 280;
							FormaFrac[para1] = 0;
						    PlayerInfo[para1][pJob] = 0;
						    SelectCharID[para1] = PlayerInfo[para1][pMember];
						    SelectCharPlace[para1] = 1;
						    PlayerInfo[para1][pModel] = ChosenSkin[para1];
						    //OnPlayerUpdateAc(para1);
						}
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не уполномочены использовать данную команду");
		}
		return true;
	}
	if(strcmp(cmd, "/find", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMember] == 24 || PlayerInfo[playerid][pLeader] == 24 )
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)){ SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /find [id]"); return 1; }
				giveplayerid = strval(tmp);
				if(GoChase[playerid] != 999)
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "На себя команда не действует!"); return 1; }
						new giver[MAX_PLAYER_NAME];
						GetPlayerName(GoChase[playerid],giver,sizeof(giver));
						format(string,sizeof(string),"Цель {b3f9b0}%s[ID: %d] {FFFFFF}отмечена у Вас на карте, следуйте за ней",giver,GoChase[playerid]);
						SendClientMessage(playerid,COLOR_WHITE,string);
						new Float:X,Float:Y,Float:Z;
						GetPlayerPos(giveplayerid, X,Y,Z);
						SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы не заключили контракт!");
				}
			}
		}
		return 1;
	}
	if(strcmp(cmdtext, "/hitopen1",true) == 0)//Имя команды, изменяйте на свое усмотрение.
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
			if(PlayerInfo[playerid][pLeader] == 24 || PlayerInfo[playerid][pMember] == 24)//Проверка на ID фракций Хитманов, изменяйте на свой.
			{
			    if(PlayerToPoint(10.0,playerid,-710.3568,964.9134,12.4041))
			    {
					MoveDynamicObject(hitmansvorota2, -709.96, 965.80, 19.80,3.0);//Перемещение объекта.
					SetTimer("HitmansClose2", 7000, false);//Таймер на закрытие ворот через 7 секунд, 1000 = 1 секунда, изменяйте на свое усмотрение.
					SendClientMessage(playerid,0x15AAEAAA,"Ворота открыты на 7 секунд, проезжайте!");//Передаем сообщение игроку который ввел эту команду что он успешно их открыл :).
				}
			}
		}
	}
	if(strcmp(cmd, "/gate", true)==0)
	{
		if(PlayerToPoint(8.0,playerid,1544.2118,-1632.0104,13.3828) || PlayerToPoint(8.0,playerid,98.298698,1918.394409,17.239532))
		{
			if(PlayerInfo[playerid][pMember] != 1)return    SendClientMessage(playerid, COLOR_GRAD1, "Вам не доступна данная команда!");
			SetPlayerChatBubble(playerid,"{00FF00}Открывает шлагбаум",-1,30.0,10000);
			{
				MoveObject(lspdslak,1544.69995117,-1630.80004883,13.10000038+0.002,0.002,0.00000000,0.00000000,90.25000000);
				SetTimer("GateClose2", 10000, 0);return 1;
			}
		}
	}
	if(strcmp(cmd, "/invite", true) == 0)
	{
		new para1;
		new ftext[32];
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /invite [id]");
			para1 = ReturnUser(tmp);
			if(GetDistanceBetweenPlayers(playerid, para1) < 5.0)
	        {
	 			if(PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] >= 7)
				{
				    if(IsPlayerConnected(para1))
				    {
				        if(para1 != INVALID_PLAYER_ID)
				        {
				            if(FormaFrac[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Начните рабочий день в вашей организации!");
							if(IsPlayerInAnyVehicle(para1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине!");
							if(PlayerInfo[para1][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока нету паспорта");
							if(PlayerInfo[para1][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже где то состоит");
							if(PlayerInfo[para1][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока Warn.");
							if(PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] == 7) { ftext = "FBI"; InviteSkin[para1] = 286;  }
							else { return true; }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
							SendClientMessage(playerid, COLOR_BLUE, string);
							format(string, sizeof(string), "Вы были приглашены в %s лидером %s", ftext, sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							FormaFrac[para1] = 0;
							PlayerInfo[para1][pMember] = 2;
							PlayerInfo[para1][pRank] = 1;
							PlayerInfo[para1][pJob] = 0;
							PlayerInfo[para1][pModel] = 286;
							//OnPlayerUpdateAc(para1);
						}
					}
				}
	  			else if (PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 3 && PlayerInfo[playerid][pRank] >= 14)
				{
				    if(IsPlayerConnected(para1))
				    {
				        if(para1 != INVALID_PLAYER_ID)
				        {
				            if(FormaFrac[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Начните рабочий день в вашей организации!");
							if(IsPlayerInAnyVehicle(para1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине!");
							if(PlayerInfo[para1][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока нету паспорта");
							if(PlayerInfo[para1][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже где то состоит");
							if(PlayerInfo[para1][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока Warn.");
							if(PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 3 && PlayerInfo[playerid][pRank] == 14) {  ftext = "Army SF"; InviteSkin[para1] = 287;  }
							else { return true; }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
							SendClientMessage(playerid, COLOR_BLUE, string);
							format(string, sizeof(string), "Вы были приглашены в %s лидером %s", ftext, sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							FormaFrac[para1] = 0;
							PlayerInfo[para1][pMember] = 3;
							PlayerInfo[para1][pRank] = 1;
							PlayerInfo[para1][pJob] = 0;
							PlayerInfo[para1][pModel] = 287;
							//OnPlayerUpdateAc(para1);
						}
					}
				}
	   			else if (PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 4 && PlayerInfo[playerid][pRank] >= 7)
				{
				    if(IsPlayerConnected(para1))
				    {
				        if(para1 != INVALID_PLAYER_ID)
				        {
				            if(FormaFrac[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Начните рабочий день в вашей организации!");
							if(IsPlayerInAnyVehicle(para1)) return  SendClientMessage(playerid, COLOR_GREY, "Игрок в машине!");
							if(PlayerInfo[para1][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока нету паспорта");
							if(PlayerInfo[para1][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже где то состоит");
							if(PlayerInfo[para1][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока Warn.");
							if(PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 4 && PlayerInfo[playerid][pRank] == 7) { ftext = "San Fierro Medics"; InviteSkin[para1] = 70; }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
							SendClientMessage(playerid, COLOR_BLUE, string);
							format(string, sizeof(string), "Вы были приглашены в %s лидером %s", ftext, sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							FormaFrac[para1] = 0;
							PlayerInfo[para1][pMember] = 4;
							PlayerInfo[para1][pRank] = 1;
							PlayerInfo[para1][pJob] = 0;
							PlayerInfo[para1][pModel] = 274;
							//OnPlayerUpdateAc(para1);
						}
					}
				}
				else if (PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pMember] == 5 && PlayerInfo[playerid][pRank] >= 9)
				{
				    if(IsPlayerConnected(para1))
				    {
				        if(para1 != INVALID_PLAYER_ID)
				        {
				            if(FormaFrac[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Начните рабочий день в вашей организации!");
							if(IsPlayerInAnyVehicle(para1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине!");
							if(PlayerInfo[para1][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже где то состоит");
							if(PlayerInfo[para1][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока Warn.");
							if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pMember] == 5 && PlayerInfo[playerid][pRank] == 9) { ftext = "LCN"; InviteSkin[para1] = 223; }
							else { return true; }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
							SendClientMessage(playerid, COLOR_BLUE, string);
							format(string, sizeof(string), "Вы были приглашены в %s лидером %s", ftext, sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							SetPlayerSkin(para1, 223);
							FormaFrac[para1] = 1;
							PlayerInfo[para1][pMember] = 5;
							PlayerInfo[para1][pRank] = 1;
							PlayerInfo[para1][pJob] = 0;
							PlayerInfo[para1][pModel] = 223;
							SetPlayerToTeamColor(para1);
							//OnPlayerUpdateAc(para1);
						}
					}
				}
				else if (PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 6 && PlayerInfo[playerid][pRank] >= 9)
				{
				    if(IsPlayerConnected(para1))
				    {
				        if(para1 != INVALID_PLAYER_ID)
				        {
				            if(FormaFrac[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Начните рабочий день в вашей организации!");
							if(IsPlayerInAnyVehicle(para1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине!");
							if(PlayerInfo[para1][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже где то состоит");
							if(PlayerInfo[para1][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока Warn.");
							if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 6 && PlayerInfo[playerid][pRank] == 9) { ftext = "Yakuza"; InviteSkin[para1] = 120;  }
							else { return true; }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
							SendClientMessage(playerid, COLOR_BLUE, string);
							format(string, sizeof(string), "Вы были приглашены в %s лидером %s", ftext, sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							SetPlayerSkin(para1, 120);
							FormaFrac[para1] = 1;
							PlayerInfo[para1][pMember] = 6;
							PlayerInfo[para1][pRank] = 1;
							PlayerInfo[para1][pJob] = 0;
							PlayerInfo[para1][pModel] = 123;
							SetPlayerToTeamColor(para1);
							//OnPlayerUpdateAc(para1);
						}
					}
				}
	 			else if (PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] >= 5)
				{
				    if(IsPlayerConnected(para1))
				    {
				        if(para1 != INVALID_PLAYER_ID)
				        {
				            if(FormaFrac[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Начните рабочий день в вашей организации!");
							if(IsPlayerInAnyVehicle(para1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине!");
							if(PlayerInfo[para1][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока нету паспорта");
							if(PlayerInfo[para1][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже где то состоит");
							if(PlayerInfo[para1][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока Warn.");
							if(PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] == 5) {   ftext = "Мэрия"; InviteSkin[para1] = 57; }
							else { return true; }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
							SendClientMessage(playerid, COLOR_BLUE, string);
							format(string, sizeof(string), "Вы были приглашены в %s лидером %s", ftext, sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							FormaFrac[para1] = 0;
							PlayerInfo[para1][pMember] = 7;
							PlayerInfo[para1][pRank] = 1;
							PlayerInfo[para1][pJob] = 0;
							PlayerInfo[para1][pModel] = 57;
							//OnPlayerUpdateAc(para1);
						}
					}
				}
				else if (PlayerInfo[playerid][pLeader] == 8 || PlayerInfo[playerid][pMember] == 8 && PlayerInfo[playerid][pRank] >= 2)
				{
				    if(IsPlayerConnected(para1))
				    {
				        if(para1 != INVALID_PLAYER_ID)
				        {
				            if(FormaFrac[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Начните рабочий день в вашей организации!");
				        	if(IsPlayerInAnyVehicle(para1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине!");
				        	if(PlayerInfo[para1][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока нету паспорта");
							if(PlayerInfo[para1][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже где то состоит");
							if(PlayerInfo[para1][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока Warn.");
							if(PlayerInfo[playerid][pLeader] == 8 || PlayerInfo[playerid][pMember] == 8 && PlayerInfo[playerid][pRank] == 2) { ftext = "Casino Caligula"; InviteSkin[para1] = 171;  }
							else { return true; }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
							SendClientMessage(playerid, COLOR_BLUE, string);
							format(string, sizeof(string), "Вы были приглашены в %s лидером %s", ftext, sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							SetPlayerSkin(para1, 171);
							FormaFrac[para1] = 1;
							PlayerInfo[para1][pMember] = 8;
							PlayerInfo[para1][pRank] = 1;
							PlayerInfo[para1][pJob] = 0;
							PlayerInfo[para1][pModel] = 171;
							SetPlayerToTeamColor(para1);
							//OnPlayerUpdateAc(para1);
						}
					}
				}
				else if (PlayerInfo[playerid][pLeader] == 9 || PlayerInfo[playerid][pMember] == 9 && PlayerInfo[playerid][pRank] >= 5)
				{
				    if(IsPlayerConnected(para1))
				    {
				        if(para1 != INVALID_PLAYER_ID)
				        {
				            if(FormaFrac[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Начните рабочий день в вашей организации!");
							if(IsPlayerInAnyVehicle(para1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине!");
							if(PlayerInfo[para1][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока нету паспорта");
							if(PlayerInfo[para1][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже где то состоит");
	    					if(PlayerInfo[para1][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока Warn.");
							if(PlayerInfo[playerid][pLeader] == 9 || PlayerInfo[playerid][pMember] == 9 && PlayerInfo[playerid][pRank] == 5) { ftext = "SF NEWS"; InviteSkin[para1] = 250; }
							else { return true; }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
							SendClientMessage(playerid, COLOR_BLUE, string);
							format(string, sizeof(string), "Вы были приглашены в %s лидером %s", ftext, sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							FormaFrac[para1] = 0;
							PlayerInfo[para1][pMember] = 9;
							PlayerInfo[para1][pRank] = 1;
							PlayerInfo[para1][pJob] = 0;
							PlayerInfo[para1][pModel] = 250;
							//OnPlayerUpdateAc(para1);
						}
					}
				}
				else if (PlayerInfo[playerid][pLeader] == 11 || PlayerInfo[playerid][pMember] == 11 && PlayerInfo[playerid][pRank] >= 7)
				{
				    if(IsPlayerConnected(para1))
				    {
				        if(para1 != INVALID_PLAYER_ID)
				        {
				            if(FormaFrac[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Начните рабочий день в вашей организации!");
							if(IsPlayerInAnyVehicle(para1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине!");
							if(PlayerInfo[para1][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока нету паспорта");
							if(PlayerInfo[para1][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже где то состоит");
							if(PlayerInfo[para1][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока Warn.");
							if(PlayerInfo[playerid][pLeader] == 11 || PlayerInfo[playerid][pMember] == 11 && PlayerInfo[playerid][pRank] == 7) { ftext = "Инструкторы"; InviteSkin[para1] = 59;  }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
							SendClientMessage(playerid, COLOR_BLUE, string);
							format(string, sizeof(string), "Вы были приглашены в %s лидером %s", ftext, sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							FormaFrac[para1] = 0;
							PlayerInfo[para1][pMember] = 11;
							PlayerInfo[para1][pRank] = 1;
							PlayerInfo[para1][pJob] = 0;
							PlayerInfo[para1][pModel] = 59;
							//OnPlayerUpdateAc(para1);
						}
					}
				}
				else if (PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] >= 9)
				{
				    if(IsPlayerConnected(para1))
				    {
				        if(para1 != INVALID_PLAYER_ID)
				        {
				        	if(IsPlayerInAnyVehicle(para1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине!");
							if(PlayerInfo[para1][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже где то состоит");
							if(PlayerInfo[para1][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока Warn.");
							if(PlayerInfo[playerid][pLeader] == 12 ||PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] == 9) {  ftext = "Ballas"; InviteSkin[para1] = 102;  }
							else { return true; }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
							SendClientMessage(playerid, COLOR_BLUE, string);
							format(string, sizeof(string), "Вы были приглашены в %s лидером %s", ftext, sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							SetPlayerSkin(para1, 102);
							FormaFrac[para1] = 1;
							PlayerInfo[para1][pMember] = 12;
							PlayerInfo[para1][pRank] = 1;
							PlayerInfo[para1][pJob] = 0;
							PlayerInfo[para1][pModel] = 103;
							SetPlayerToTeamColor(para1);
							//OnPlayerUpdateAc(para1);
						}
					}
				}
				else if (PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pRank] >= 9)
				{
				    if(IsPlayerConnected(para1))
				    {
				        if(para1 != INVALID_PLAYER_ID)
				        {
							if(IsPlayerInAnyVehicle(para1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине!");
							if(PlayerInfo[para1][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже где то состоит");
							if(PlayerInfo[para1][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока Warn.");
							if(PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pRank] == 9) {  ftext = "Vagos"; InviteSkin[para1] = 108; }
							else { return true; }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
							SendClientMessage(playerid, COLOR_BLUE, string);
							format(string, sizeof(string), "Вы были приглашены в %s лидером %s", ftext, sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							SetPlayerSkin(para1, 108);
							FormaFrac[para1] = 1;
							PlayerInfo[para1][pMember] = 13;
							PlayerInfo[para1][pRank] = 1;
							PlayerInfo[para1][pJob] = 0;
							PlayerInfo[para1][pModel] = 108;
							SetPlayerToTeamColor(para1);
							//OnPlayerUpdateAc(para1);
						}
					}
				}
				else if (PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pMember] == 14 && PlayerInfo[playerid][pRank] >= 9)
				{
				    if(IsPlayerConnected(para1))
				    {
				        if(para1 != INVALID_PLAYER_ID)
				        {
							if(IsPlayerInAnyVehicle(para1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине!");
							if(PlayerInfo[para1][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже где то состоит");
							if(PlayerInfo[para1][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока Warn.");
							if(PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pMember] == 14 && PlayerInfo[playerid][pRank] == 7) {  ftext = "Russian Mafia"; InviteSkin[para1] = 111; }
							else { return true; }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
							SendClientMessage(playerid, COLOR_BLUE, string);
							format(string, sizeof(string), "Вы были приглашены в %s лидером %s", ftext, sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							SetPlayerSkin(para1, 111);
							FormaFrac[para1] = 1;
							PlayerInfo[para1][pMember] = 14;
							PlayerInfo[para1][pRank] = 1;
							PlayerInfo[para1][pJob] = 0;
							PlayerInfo[para1][pModel] = 111;
							SetPlayerToTeamColor(para1);
							//OnPlayerUpdateAc(para1);
						}
					}
				}
				else if (PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pMember] == 15 && PlayerInfo[playerid][pRank] >= 9)
				{
				    if(IsPlayerConnected(para1))
				    {
				        if(para1 != INVALID_PLAYER_ID)
				        {
							if(IsPlayerInAnyVehicle(para1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине!");
							if(PlayerInfo[para1][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже где то состоит");
							if(PlayerInfo[para1][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока Warn.");
							if(PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pMember] == 15 && PlayerInfo[playerid][pRank] == 9) {  ftext = "Grove Street"; InviteSkin[para1] = 106;  }
							else { return true; }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
							SendClientMessage(playerid, COLOR_BLUE, string);
							format(string, sizeof(string), "Вы были приглашены в %s лидером %s", ftext, sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							SetPlayerSkin(para1, 106);
							FormaFrac[para1] = 1;
							PlayerInfo[para1][pMember] = 15;
							PlayerInfo[para1][pRank] = 1;
							PlayerInfo[para1][pJob] = 0;
							PlayerInfo[para1][pModel] = 106;
							SetPlayerToTeamColor(para1);
							//OnPlayerUpdateAc(para1);
						}
					}
				}
				else if (PlayerInfo[playerid][pLeader] == 16 || PlayerInfo[playerid][pMember] == 16 && PlayerInfo[playerid][pRank] >= 9)
				{
				    if(IsPlayerConnected(para1))
				    {
				        if(para1 != INVALID_PLAYER_ID)
				        {
				            if(FormaFrac[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Начните рабочий день в вашей организации!");
				        	if(IsPlayerInAnyVehicle(para1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине!");
				        	if(PlayerInfo[para1][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока нету паспорта");
							if(PlayerInfo[para1][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже где то состоит");
							if(PlayerInfo[para1][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока Warn.");
							if(PlayerInfo[playerid][pLeader] == 16 || PlayerInfo[playerid][pMember] == 16 && PlayerInfo[playerid][pRank] == 5) { ftext = "LS NEWS"; InviteSkin[para1] = 261; }
							else { return true; }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
							SendClientMessage(playerid, COLOR_BLUE, string);
							format(string, sizeof(string), "Вы были приглашены в %s лидером %s", ftext, sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							FormaFrac[para1] = 0;
							PlayerInfo[para1][pMember] = 16;
							PlayerInfo[para1][pRank] = 1;
							PlayerInfo[para1][pJob] = 0;
							PlayerInfo[para1][pModel] = 261;
							//OnPlayerUpdateAc(para1);
						}
					}
				}
				else if (PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pMember] == 17 && PlayerInfo[playerid][pRank] >= 8)
				{
				    if(IsPlayerConnected(para1))
				    {
				        if(para1 != INVALID_PLAYER_ID)
				        {
							if(IsPlayerInAnyVehicle(para1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине!");
							if(PlayerInfo[para1][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже где то состоит");
							if(PlayerInfo[para1][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока Warn.");
							if(PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pMember] == 17 && PlayerInfo[playerid][pRank] == 9) {  ftext = "Los Aztecas"; InviteSkin[para1] = 115; }
							else { return true; }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
							SendClientMessage(playerid, COLOR_BLUE, string);
							format(string, sizeof(string), "Вы были приглашены в %s лидером %s", ftext, sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							SetPlayerSkin(para1, 115);
							FormaFrac[para1] = 1;
							PlayerInfo[para1][pMember] = 17;
							PlayerInfo[para1][pRank] = 1;
							PlayerInfo[para1][pJob] = 0;
							PlayerInfo[para1][pModel] = 115;
							SetPlayerToTeamColor(para1);
							//OnPlayerUpdateAc(para1);
						}
					}
				}
				else if (PlayerInfo[playerid][pLeader] == 18 || PlayerInfo[playerid][pMember] == 18 && PlayerInfo[playerid][pRank] >= 9)
				{
				    if(IsPlayerConnected(para1))
				    {
				        if(para1 != INVALID_PLAYER_ID)
				        {
							if(IsPlayerInAnyVehicle(para1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине!");
							if(PlayerInfo[para1][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже где то состоит");
							if(PlayerInfo[para1][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока Warn.");
							if(PlayerInfo[playerid][pLeader] == 18 || PlayerInfo[playerid][pMember] == 18 && PlayerInfo[playerid][pRank] == 9) {  ftext = "Rifa";InviteSkin[para1] = 174; }
							else { return true; }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
							SendClientMessage(playerid, COLOR_BLUE, string);
							format(string, sizeof(string), "Вы были приглашены в %s лидером %s", ftext, sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							SetPlayerSkin(para1, 174);
							FormaFrac[para1] = 1;
							PlayerInfo[para1][pMember] = 18;
							PlayerInfo[para1][pRank] = 1;
							PlayerInfo[para1][pJob] = 0;
							PlayerInfo[para1][pModel] = 174;
							SetPlayerToTeamColor(para1);
						//  OnPlayerUpdateAc(para1);
						}
					}
				}
				else if (PlayerInfo[playerid][pLeader] == 19 || PlayerInfo[playerid][pMember] == 19 && PlayerInfo[playerid][pRank] >= 14)
				{
				    if(IsPlayerConnected(para1))
				    {
				        if(para1 != INVALID_PLAYER_ID)
				        {
				            if(FormaFrac[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Начните рабочий день в вашей организации!");
							if(IsPlayerInAnyVehicle(para1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине!");
							if(PlayerInfo[para1][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока нету паспорта");
							if(PlayerInfo[para1][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже где то состоит");
							if(PlayerInfo[para1][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока Warn.");
							if(PlayerInfo[playerid][pLeader] == 19 || PlayerInfo[playerid][pMember] == 19 && PlayerInfo[playerid][pRank] == 14) { ftext = "Army LV"; InviteSkin[para1] = 287;  }
							else { return true; }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
							SendClientMessage(playerid, COLOR_BLUE, string);
							format(string, sizeof(string), "Вы были приглашены в %s лидером %s", ftext, sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							FormaFrac[para1] = 0;
							PlayerInfo[para1][pMember] = 19;
							PlayerInfo[para1][pRank] = 1;
							PlayerInfo[para1][pJob] = 0;
							PlayerInfo[para1][pModel] = 287;
							//OnPlayerUpdateAc(para1);
						}
					}
				}
				else if (PlayerInfo[playerid][pLeader] == 20 || PlayerInfo[playerid][pMember] == 20 && PlayerInfo[playerid][pRank] >= 5)
				{
				    if(IsPlayerConnected(para1))
				    {
				        if(para1 != INVALID_PLAYER_ID)
				        {
				            if(FormaFrac[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Начните рабочий день в вашей организации!");
							if(IsPlayerInAnyVehicle(para1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине!");
							if(PlayerInfo[para1][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока нету паспорта");
							if(PlayerInfo[para1][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже где то состоит");
							if(PlayerInfo[para1][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока Warn.");
							if(PlayerInfo[playerid][pLeader] == 20 || PlayerInfo[playerid][pMember] == 20 && PlayerInfo[playerid][pRank] == 5) { ftext = "LV NEWS";InviteSkin[para1] = 261;}
							else { return true; }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
							SendClientMessage(playerid, COLOR_BLUE, string);
							format(string, sizeof(string), "Вы были приглашены в %s лидером %s", ftext, sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							FormaFrac[para1] = 0;
							PlayerInfo[para1][pMember] = 20;
							PlayerInfo[para1][pRank] = 1;
							PlayerInfo[para1][pJob] = 0;
							PlayerInfo[para1][pModel] = 261;
						//	OnPlayerUpdateAc(para1);
						}
					}
				}
				else if (PlayerInfo[playerid][pLeader] == 22 || PlayerInfo[playerid][pMember] == 22 && PlayerInfo[playerid][pRank] >= 7)
				{
				    if(IsPlayerConnected(para1))
				    {
				        if(para1 != INVALID_PLAYER_ID)
				        {
				            if(FormaFrac[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Начните рабочий день в вашей организации!");
							if(IsPlayerInAnyVehicle(para1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине!");
							if(PlayerInfo[para1][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока нету паспорта");
							if(PlayerInfo[para1][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже где то состоит");
							if(PlayerInfo[para1][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока Warn.");
							if(PlayerInfo[playerid][pLeader] == 22 || PlayerInfo[playerid][pMember] == 22 && PlayerInfo[playerid][pRank] == 7) { ftext = "Los Santos Medics"; InviteSkin[para1] = 70;  }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
							SendClientMessage(playerid, COLOR_BLUE, string);
							format(string, sizeof(string), "Вы были приглашены в %s лидером %s", ftext, sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							FormaFrac[para1] = 0;
							PlayerInfo[para1][pMember] = 22;
							PlayerInfo[para1][pRank] = 1;
							PlayerInfo[para1][pJob] = 0;
							PlayerInfo[para1][pModel] = 70;
							//OnPlayerUpdateAc(para1);
						}
					}
				}
				else if(PlayerInfo[playerid][pLeader] == 23 || PlayerInfo[playerid][pMember] == 23 && PlayerInfo[playerid][pRank] >= 7)
				{
				    if(IsPlayerConnected(para1))
				    {
				        if(para1 != INVALID_PLAYER_ID)
				        {
				            if(FormaFrac[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Начните рабочий день в вашей организации!");
							if(IsPlayerInAnyVehicle(para1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине!");
							if(PlayerInfo[para1][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже где то состоит");
							if(PlayerInfo[para1][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока Warn.");
							if(PlayerInfo[playerid][pLeader] == 23 || PlayerInfo[playerid][pMember] == 23 && PlayerInfo[playerid][pRank] == 7) { ftext = "Las Venturas Medics"; InviteSkin[para1] = 70;  }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
							SendClientMessage(playerid, COLOR_BLUE, string);
							format(string, sizeof(string), "Вы были приглашены в %s лидером %s", ftext, sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							FormaFrac[para1] = 0;
							PlayerInfo[para1][pMember] = 23;
							PlayerInfo[para1][pRank] = 1;
							PlayerInfo[para1][pJob] = 0;
							PlayerInfo[para1][pModel] = 70;
							//OnPlayerUpdateAc(para1);
						}
					}
				}
				else if(PlayerInfo[playerid][pLeader] == 24 || PlayerInfo[playerid][pMember] == 24 && PlayerInfo[playerid][pRank] >= 9)
				{
				    if(IsPlayerConnected(para1))
				    {
				        if(para1 != INVALID_PLAYER_ID)
				        {
				            if(FormaFrac[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Начните рабочий день в вашей организации!");
							if(IsPlayerInAnyVehicle(para1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине!");
							if(PlayerInfo[para1][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже где то состоит");
							if(PlayerInfo[para1][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока Warn.");
							if(PlayerInfo[playerid][pLeader] == 24 || PlayerInfo[playerid][pMember] == 24 && PlayerInfo[playerid][pRank] == 7) { ftext = "Хитман"; InviteSkin[para1] = 33;  }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы пригласили %s присоеденится к %s", giveplayer,ftext);
							SendClientMessage(playerid, COLOR_BLUE, string);
							format(string, sizeof(string), "Вы были приглашены в %s лидером %s", ftext, sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							FormaFrac[para1] = 1;
							PlayerInfo[para1][pMember] = 24;
							PlayerInfo[para1][pRank] = 1;
							PlayerInfo[para1][pJob] = 0;
							PlayerInfo[para1][pModel] = 294;
							//OnPlayerUpdateAc(para1);
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы не уполномочены использовать данную команду");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
			}
			return true;
		}
	}
	if(strcmp(cmd, "/uninvite", true) == 0)
	{
		new para1;
		new Leader;
		new Member;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /uninvite [id]");
		para1 = ReturnUser(tmp);
		Leader = PlayerInfo[playerid][pLeader];
		Member = PlayerInfo[para1][pMember];
		if(PlayerInfo[playerid][pLeader] >= 1)
		{
			if(IsPlayerConnected(para1))
			{
				if(Leader == Member)
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(PlayerInfo[para1][pMember] > 0)
						{
						    if(FormaFrac[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Начните рабочий день в вашей организации!");
							if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
							if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "%s выгнал вас из организации", sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
							SendClientMessage(playerid, 0x6495EDFF, string);
							SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
							SendClientMessage(para1, 0x6495EDFF, "Рабочий день окончен");
							PlayerInfo[para1][pMember] = 0;
							PlayerInfo[para1][pLeader] = 0;
							PlayerInfo[para1][pRank] = 0;
							SetPlayerArmourAC(para1,0);
							DelGun(para1);
							FormaFrac[para1] = 0;
							SetPlayerColor(para1, TEAM_HIT_COLOR);
							SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
							SpawnPlayer(para1);
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
				}
			}
		}
		else if (PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pRank] >= 13)
		{
  			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
			if(para1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[para1][pMember] > 0)
				{
					if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s выгнал вас из организации", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
					SendClientMessage(para1, 0x6495EDFF, "Рабочий день окончен");
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1,0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					SpawnPlayer(para1);
				}
			}
		}
		else if (PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] >= 7)
		{
			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
			if(para1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[para1][pMember] > 0)
				{
					if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s выгнал вас из организации", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
					SendClientMessage(para1, 0x6495EDFF, "Рабочий день окончен");
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1,0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					SpawnPlayer(para1);
				}
			}
		}
		else if (PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 3 && PlayerInfo[playerid][pRank] >= 15)
		{
			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
			if(para1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[para1][pMember] > 0)
				{
					if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s выгнал вас из организации", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
					SendClientMessage(para1, 0x6495EDFF, "Рабочий день окончен");
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1,0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					SpawnPlayer(para1);
				}
			}
		}
		else if (PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 4 && PlayerInfo[playerid][pRank] >= 7)
		{
			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
			if(para1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[para1][pMember] > 0)
				{
					if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s выгнал вас из организации", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
					SendClientMessage(para1, 0x6495EDFF, "Рабочий день окончен");
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1,0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					SpawnPlayer(para1);
				}
			}
		}
		else if (PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pMember] == 5 && PlayerInfo[playerid][pRank] >= 9)
		{
			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
			if(para1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[para1][pMember] > 0)
				{
					if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s выгнал вас из организации", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1,0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					SpawnPlayer(para1);
				}
			}
		}
		else if (PlayerInfo[giveplayerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 6 && PlayerInfo[playerid][pRank] >= 8)
		{
			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
			if(para1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[para1][pMember] > 0)
				{
					if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s выгнал вас из организации", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1,0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					SpawnPlayer(para1);
				}
			}
		}
		else if (PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] >= 5)
		{
			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
			if(para1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[para1][pMember] > 0)
				{
					if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s выгнал вас из организации", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
					SendClientMessage(para1, 0x6495EDFF, "Рабочий день окончен");
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1,0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					SpawnPlayer(para1);
				}
 			}
		}
		else if (PlayerInfo[playerid][pLeader] == 8 || PlayerInfo[playerid][pMember] == 8 && PlayerInfo[playerid][pRank] >= 2)
		{
			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
 			if(para1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[para1][pMember] > 0)
				{
					if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s выгнал вас из организации", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1,0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					SpawnPlayer(para1);
				}
			}
		}
		else if (PlayerInfo[playerid][pLeader] == 9 || PlayerInfo[playerid][pMember] == 9 && PlayerInfo[playerid][pRank] >= 5)
		{
			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
			if(para1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[para1][pMember] > 0)
				{
					if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s выгнал вас из организации", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
					SendClientMessage(para1, 0x6495EDFF, "Рабочий день окончен");
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1,0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					SpawnPlayer(para1);
				}
			}
		}
		else if (PlayerInfo[playerid][pLeader] == 10 || PlayerInfo[playerid][pMember] == 10 && PlayerInfo[playerid][pRank] >= 14)
		{
			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
			if(para1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[para1][pMember] > 0)
				{
					if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s выгнал вас из организации", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
					SendClientMessage(para1, 0x6495EDFF, "Рабочий день окончен");
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1,0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					SpawnPlayer(para1);
				}
			}
		}
		else if (PlayerInfo[playerid][pLeader] == 11 || PlayerInfo[playerid][pMember] == 11 && PlayerInfo[playerid][pRank] >= 7)
		{
			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
			if(para1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[para1][pMember] > 0)
				{
					if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s выгнал вас из организации", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
					SendClientMessage(para1, 0x6495EDFF, "Рабочий день окончен");
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1,0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					SpawnPlayer(para1);
				}
			}
		}
		else if (PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] >= 9)
		{
			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
			if(para1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[para1][pMember] > 0)
				{
					if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s выгнал вас из организации", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1,0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					SpawnPlayer(para1);
				}
			}
		}
		else if (PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pRank] >= 9)
		{
			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
 			if(para1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[para1][pMember] > 0)
				{
					if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s выгнал вас из организации", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1,0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					SpawnPlayer(para1);
				}
			}
		}
		else if (PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pMember] == 14 && PlayerInfo[playerid][pRank] >= 9)
		{
			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
			if(para1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[para1][pMember] > 0)
				{
					if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s выгнал вас из организации", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1,0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					SpawnPlayer(para1);
				}
			}
		}
		else if (PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pMember] == 15 && PlayerInfo[playerid][pRank] >= 9)
		{
			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
			if(para1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[para1][pMember] > 0)
				{
					if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s выгнал вас из организации", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1,0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					SpawnPlayer(para1);
				}
			}
		}
		else if (PlayerInfo[playerid][pLeader] == 16 || PlayerInfo[playerid][pMember] == 16 && PlayerInfo[playerid][pRank] >= 5)
		{
			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
			if(para1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[para1][pMember] > 0)
				{
					if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s выгнал вас из организации", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
					SendClientMessage(para1, 0x6495EDFF, "Рабочий день окончен");
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1,0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					SpawnPlayer(para1);
				}
			}
		}
		else if (PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pMember] == 17 && PlayerInfo[playerid][pRank] >= 9)
		{
 			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
			if(para1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[para1][pMember] > 0)
				{
					if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s выгнал вас из организации", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1,0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					SpawnPlayer(para1);
				}
			}
		}
		else if (PlayerInfo[playerid][pLeader] == 18 || PlayerInfo[playerid][pMember] == 18 && PlayerInfo[playerid][pRank] >= 9)
		{
			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
			if(para1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[para1][pMember] > 0)
				{
					if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s выгнал вас из организации", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1,0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					SpawnPlayer(para1);
				}
			}
		}
		else if (PlayerInfo[playerid][pLeader] == 19 || PlayerInfo[playerid][pMember] == 19 && PlayerInfo[playerid][pRank] >= 15)
		{
			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
			if(para1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[para1][pMember] > 0)
				{
					if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s выгнал вас из организации", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
					SendClientMessage(para1, 0x6495EDFF, "Рабочий день окончен");
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1,0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					SpawnPlayer(para1);
				}
			}
		}
		else if (PlayerInfo[playerid][pLeader] == 20 || PlayerInfo[playerid][pMember] == 20 && PlayerInfo[playerid][pRank] >= 5)
		{
			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
			if(para1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[para1][pMember] > 0)
				{
					if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s выгнал вас из организации", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
					SendClientMessage(para1, 0x6495EDFF, "Рабочий день окончен");
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1,0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					SpawnPlayer(para1);
				}
			}
		}
		else if (PlayerInfo[playerid][pLeader] == 21 || PlayerInfo[playerid][pMember] == 21 && PlayerInfo[playerid][pRank] >= 14)
		{
			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
			if(para1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[para1][pMember] > 0)
				{
					if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s выгнал вас из организации", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
					SendClientMessage(para1, 0x6495EDFF, "Рабочий день окончен");
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1,0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					SpawnPlayer(para1);
				}
			}
		}
		else if (PlayerInfo[playerid][pLeader] == 22 || PlayerInfo[playerid][pMember] == 22 && PlayerInfo[playerid][pRank] >= 7)
		{
			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
			if(para1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[para1][pMember] > 0)
				{
					if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s выгнал вас из организации", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
					SendClientMessage(para1, 0x6495EDFF, "Рабочий день окончен");
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1,0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					SpawnPlayer(para1);
				}
			}
		}
		else if (PlayerInfo[playerid][pLeader] == 23 || PlayerInfo[playerid][pMember] == 23 && PlayerInfo[playerid][pRank] >= 8)
		{
			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
			if(para1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[para1][pMember] > 0)
				{
					if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s выгнал вас из организации", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1,0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					SpawnPlayer(para1);
				}
			}
		}
		else if (PlayerInfo[playerid][pLeader] == 24 || PlayerInfo[playerid][pMember] == 24 && PlayerInfo[playerid][pRank] >= 8)
		{
			if(PlayerInfo[giveplayerid][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
			if(para1 != INVALID_PLAYER_ID)
			{
				if(PlayerInfo[para1][pMember] > 0)
				{
					if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
					if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s выгнал вас из организации", sendername);
					SendClientMessage(para1, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1,0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					SpawnPlayer(para1);
				}
			}
		}
	}
	if(strcmp(cmd, "/auninvite", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 5)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /auninvite [id]");
			new para1;
			para1 = ReturnUser(tmp);
			if(IsPlayerConnected(para1))
			{
				if(para1 != INVALID_PLAYER_ID)
				{
					if(PlayerInfo[para1][pLeader] > 0)return SendClientMessage(playerid, COLOR_GREY, "Данный игрок лидер! Если хотите его снять, используйте /aunleader");
					if(PlayerInfo[para1][pMember] > 0)
					{
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "%s выгнал вас из организации", sendername);
						SendClientMessage(para1, 0x6495EDFF, string);
						format(string, sizeof(string), "Вы выгнали %s из организации", giveplayer);
						SendClientMessage(playerid, 0x6495EDFF, string);
						SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
						PlayerInfo[para1][pMember] = 0;
						PlayerInfo[para1][pRank] = 0;
						SetPlayerArmourAC(para1, 0);
						DelGun(para1);
						FormaFrac[para1] = 0;
						SetPlayerColor(para1, TEAM_HIT_COLOR);
						SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					}
				}
			}
  			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/makeadmin", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 10)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
		    if(IsPlayerConnected(playerid))
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /makeadmin [playerid] [уровень(1-10)]");
				new para1;
				new level;
				new rang[80];
				new lrang[50];
				para1 = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				level = strval(tmp);
				if(PlayerInfo[para1][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Данный человек лидер. Используйте /aunleader");
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						if(level > 10 || level < 0) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 10");
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						switch(level)
						{
							case 1: rang = "Практикантом";
							case 2: rang = "Ст.Практикантом";
							case 3: rang = "Модератором";
							case 4: rang = "Ст.Модератором";
							case 5: rang = "Администратором";
							case 6: rang = "Ст.Администратором";
							case 7: rang = "Ивент-Менеджером";
							case 8: rang = "ОЗЛ";
							case 9: rang = "Спец.Администратором";
							case 10: rang = "Разработчиком";
						}
						switch(PlayerInfo[para1][pAdmin])
						{
							case 1: lrang = "Практиканта";
							case 2: lrang = "Ст.Практиканта";
							case 3: lrang = "Модератора";
							case 4: lrang = "Ст.Модератора";
							case 5: lrang = "Администратора";
							case 6: lrang = "Ст.Администратора";
							case 7: lrang = "Ивент-Менеджера";
							case 8: lrang = "ОЗЛ";
							case 9: lrang = "Спец.Администратора";
							case 10: lrang = "Разработчика";
						}
						if(level == 0)
						{
							format(string, sizeof(string), "Администратор %s снял вас с поста: %s.", sendername, lrang);
							SendClientMessage(para1, COLOR_LIGHTRED, string);
						}
						else
						{
							format(string, sizeof(string), "Вы были назначены %s основателем: %s ", rang, sendername);
							SendClientMessage(para1, COLOR_LIGHTRED, string);
							SendClientMessage(para1,COLOR_LIGHTRED,"Ваш админ пароль: {FFFFFF}2637663.{FF6347}Смена пароля{FFFFFF} /adminkey");
						}
						if(level == 0)
						{
							format(string, sizeof(string), "Вы сняли %s с должности: %s", giveplayer,lrang);
						}
						else
						{
					 		format(string, sizeof(string), "Вы назначили %s на должность : %s", giveplayer,lrang);
						}
						SendClientMessage(playerid, COLOR_LIGHTRED, string);
						PlayerInfo[para1][pAdmin] = level;
						format(string, 256, " %s make admin %s LEVEL: %d", sendername, giveplayer, level);
						MkAdmin(string);
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/makehelper", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 9 || PlayerInfo[playerid][pHelp] >= 4)
		{
		    if(PlayerInfo[playerid][pAdmin] >= 7 && dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
		    if(IsPlayerConnected(playerid))
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "{e23434}Введите: /makehelper [playerid] [уровень(1-4)]");
				new para1;
				new level;
				new rang[50];
				new lrang[50];
				para1 = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				level = strval(tmp);
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						if(level > 4 || level < 0) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 4");
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						switch(level)
						{
							case 1: rang = "Помощником 1 уровня";
							case 2: rang = "Помощником 2 уровня";
							case 3: rang = "Помощником 3 уровня";
							case 4: rang = "Помощником 4 уровня";
						}
						switch(PlayerInfo[para1][pHelp])
						{
							case 1: lrang = "Помощника 1 уровня";
							case 2: lrang = "Помощника 2 уровня";
							case 3: lrang = "Помощника 3 уровня";
							case 4: lrang = "Помощника 4 уровня";
						}
						if(level == 0)
						{
							format(string, sizeof(string), "[Arizona RP] {FFFFFF}%s{00CCFF} снял вас с поста: {FFFFFF}%s{00CCFF}", sendername, lrang);
							SendClientMessage(para1, COLOR_LIGHTRED, string);
						}
						else
						{
							format(string, sizeof(string), "[Arizona RP] {FFFFFF}%s{00CCFF} назначил вас {FFFFFF}%s{00CCFF}", sendername, rang);
							SendClientMessage(para1, COLOR_LIGHTRED, string);
							SendClientMessage(para1,COLOR_LIGHTRED,"[Arizona RP] {FFFFFF}Команды помощников:{00CCFF} /hhelp");
						}
						if(level == 0)format(string, sizeof(string), "Вы сняли {FFFFFF}%s{FFFFFF} с поста: {FFFFFF}%s{00CCFF}", giveplayer,lrang);
						else format(string, sizeof(string), "Вы назначили {FFFFFF}%s{00CCFF} : {FFFFFF}%s{00CCFF}", giveplayer,rang);
						SendClientMessage(playerid, 0x00CCFFAA, string);
						PlayerInfo[para1][pHelp] = level;
						format(string, 256, " %s make helper %s LEVEL: %d", sendername, giveplayer, level);
						MkAdmin(string);
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/avigovor", true) == 0 || strcmp(cmd, "/avig", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /avig(ovor) [id] [причина]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 10)
			{
			    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(PlayerInfo[playerid][pAdmin])
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /avigovor [id] [причина]");
								return true;
							}
							if(PlayerInfo[giveplayerid][pAdmin] >= 1)
							{
								PlayerInfo[giveplayerid][pAVig] += 1;
								if(PlayerInfo[giveplayerid][pAVig] >= 3)
								{
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									format(string, sizeof(string), "Вы были сняты с админки за 3 выговора aдминистратором %s.", sendername);
									SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
									PlayerInfo[giveplayerid][pAdmin] = 0;
									SpawnPlayer(giveplayerid);
									PlayerInfo[giveplayerid][pAVig] = 0;
									format(string, sizeof(string), "Вы сняли с администратора %s", giveplayer);
									SendClientMessage(playerid, COLOR_LIGHTRED, string);
								}
								format(string, sizeof(string), "Вы дали выговор %s. Причина: %s", giveplayer, (result));
								SendClientMessage(playerid, COLOR_BLUE, string);
								format(string, sizeof(string), "Вы получили выговор от aдминистратора %s. Причина: %s", sendername, (result));
								SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
								return true;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "Данный игрок не администратор");
							}
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Этот человек не администратор");
							return true;
						}
					}
				}
				else
				{
					format(string, sizeof(string), "Игрок не найден", giveplayerid);
					SendClientMessage(playerid, COLOR_GRAD1, string);
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Вы не имеете доступа");
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/geton", true) == 0||strcmp(cmd, "/online", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			new akk[256],ssss[256];
			akk = strtok(cmdtext, idx);
			if(!strlen(akk)) return SendClientMessage(playerid,COLOR_GREY, "{e23434}Введите: /geton [аккаунт]");
			format(string,sizeof(string), "%s.ini",akk);
			if(!fexist(string))
			{
				SendClientMessage(playerid,COLOR_GREY, "Аккаунт не найден");
				return true;
			}
			else
			{
			    new stringi[256];
				new File = ini_openFile(string);
				ini_getString(File, "Online",stringi);
				ini_closeFile(File);
				format(ssss,sizeof(ssss), "Последний раз %s заходил(а) %s",akk,stringi);
				SendClientMessage(playerid,COLOR_GREEN,ssss);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/makeleader", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 8)
	    {
	        if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /makeleader [id] [Номер(1 - 23)]");
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level < 1 || level > 24) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 24"); return true; }
			new file1 = ini_openFile("gamefiles/log/leaders.ini");
	        ini_getString(file1,"LSPD",pLeaders[0]);
	        ini_getString(file1,"FBI",pLeaders[1]);
	        ini_getString(file1,"ARMY SF",pLeaders[2]);
	        ini_getString(file1,"MEDICSSF",pLeaders[3]);
	        ini_getString(file1,"LCN",pLeaders[4]);
	        ini_getString(file1,"YAKUZA",pLeaders[5]);
	        ini_getString(file1,"MARYA",pLeaders[6]);
	        ini_getString(file1,"KAZINO",pLeaders[7]);
	        ini_getString(file1,"SFN",pLeaders[8]);
	        ini_getString(file1,"SFPD",pLeaders[9]);
	        ini_getString(file1,"LICENSERS",pLeaders[10]);
	        ini_getString(file1,"BALLAS",pLeaders[11]);
	        ini_getString(file1,"VAGOS",pLeaders[12]);
	        ini_getString(file1,"RM",pLeaders[13]);
	        ini_getString(file1,"GROVE",pLeaders[14]);
	        ini_getString(file1,"LSNEWS",pLeaders[15]);
	        ini_getString(file1,"AZTEC",pLeaders[16]);
	        ini_getString(file1,"RIFA",pLeaders[17]);
	        ini_getString(file1,"ARMY LV",pLeaders[18]);
	        ini_getString(file1,"LVNEWS",pLeaders[19]);
	        ini_getString(file1,"LVPD",pLeaders[20]);
	        ini_getString(file1,"MEDICSLS",pLeaders[21]);
	        ini_getString(file1,"MEDICSLV",pLeaders[22]);
	        ini_getString(file1,"HITMAN",pLeaders[23]);
	        ini_closeFile(file1);
	        if(!strcmp(pLeaders[level-1], "None", true) || PlayerInfo[para1][pAdmin] >= 1)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						if(PlayerInfo[para1][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока Warn.");
						if(PlayerInfo[para1][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока нету паспорта");
						if(PlayerInfo[para1][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже лидер. Используйте /aunleader");
						if(PlayerInfo[para1][pMember] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок состоит во фракции , используйте /auninvite");
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						PlayerInfo[para1][pLeader] = level;
						PlayerInfo[para1][pMember] = level;
						PlayerInfo[para1][pJob] = 0;
						FormaFrac[para1] = 1;
						SendClientMessage(para1, 0x68A5E4FF, "Рабочий день окончен");
						SendClientMessage(para1, COLOR_REDD, "Используйте клавишу 'Быстрый бег' (пробел по умолчанию)");
						SendClientMessage(para1, COLOR_REDD, "Используйте клавишу 'Вверх,вниз' (W,S по умолчанию)");
						format(string, sizeof(string), "Администратор %s назначил вас контролировать данную организацию", sendername);
						SendClientMessage(para1, 0x68A5E4FF, string);
						format(string, sizeof(string), "Администратор {FFFFFF}%s{68A5E4} назначил контролировать {FFFFFF}%s{68A5E4} фракцию номер {FFFFFF}%d{68A5E4}.", sendername,giveplayer,level);
						ABroadCast(0x68A5E4FF, string, 1);
						SendClientMessage(para1, COLOR_GREY, "Если Вы случайно нажали 'Enter' и меню пропало, нажмите 'Enter' еще раз");
						OldSkin[playerid] = GetPlayerSkin(playerid);
						new iniFile = ini_openFile("gamefiles/log/leaders.ini");
						if(level == 1){ PlayerInfo[para1][pRank] = 15; InviteSkin[para1] = 280; if(PlayerInfo[para1][pAdmin] <=0) { ini_removeKey  (iniFile, "LSPD" );ini_setString(iniFile, "LSPD",giveplayer); }} //Police Force
						else if(level == 2) { PlayerInfo[para1][pRank] = 8;InviteSkin[para1] = 286; if(PlayerInfo[para1][pAdmin] <=0) { ini_removeKey  (iniFile, "FBI" ); ini_setString(iniFile, "FBI",giveplayer);}} //FBI
						else if(level == 3) { PlayerInfo[para1][pRank] = 16; InviteSkin[para1] = 287; if(PlayerInfo[para1][pAdmin] <=0) { ini_removeKey  (iniFile, "ARMY SF" );ini_setString(iniFile, "ARMY SF",giveplayer);}} //Army
						else if(level == 4) { PlayerInfo[para1][pRank] = 8; InviteSkin[para1] = 70; if(PlayerInfo[para1][pAdmin] <=0) { ini_removeKey  (iniFile, "MEDICSSF" );ini_setString(iniFile, "MEDICSSF",giveplayer);}} //Ambulance
						else if(level == 5) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 223; if(PlayerInfo[para1][pAdmin] <=0) { ini_removeKey  (iniFile, "LCN" );ini_setString(iniFile, "LCN",giveplayer);}} //La Cosa Nostra
						else if(level == 6) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 120; if(PlayerInfo[para1][pAdmin] <=0) { ini_removeKey  (iniFile, "YAKUZA" );ini_setString(iniFile, "YAKUZA",giveplayer);}} //Yakuza
						else if(level == 7) { PlayerInfo[para1][pRank] = 6; InviteSkin[para1] = 57; if(PlayerInfo[para1][pAdmin] <=0) { ini_removeKey  (iniFile, "MARYA" );ini_setString(iniFile, "MARYA",giveplayer);}} //Goverment
						else if(level == 8) { PlayerInfo[para1][pRank] = 2; InviteSkin[para1] = 171; if(PlayerInfo[para1][pAdmin] <=0) { ini_removeKey  (iniFile, "KAZINO" );ini_setString(iniFile, "KAZINO",giveplayer);}} //Casino
						else if(level == 9) { PlayerInfo[para1][pRank] = 6; InviteSkin[para1] = 250; if(PlayerInfo[para1][pAdmin] <=0) { ini_removeKey  (iniFile, "SFN" );ini_setString(iniFile, "SFN",giveplayer);}} //News Reporters
						else if(level == 10) { PlayerInfo[para1][pRank] = 15; InviteSkin[para1] = 281; if(PlayerInfo[para1][pAdmin] <=0) { ini_removeKey  (iniFile, "SFPD" );ini_setString(iniFile, "SFPD",giveplayer);}} //Police Force
						else if(level == 11) { PlayerInfo[para1][pRank] = 8; InviteSkin[para1] = 59; if(PlayerInfo[para1][pAdmin] <=0) { ini_removeKey  (iniFile, "LICENSERS" );ini_setString(iniFile, "LICENSERS",giveplayer);}} //Driving/Flying School
						else if(level == 12) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 102; if(PlayerInfo[para1][pAdmin] <=0) { ini_removeKey  (iniFile, "BALLAS" );ini_setString(iniFile, "BALLAS",giveplayer);}} //Ballas
						else if(level == 13) { PlayerInfo[para1][pRank] = 11; InviteSkin[para1] = 108; if(PlayerInfo[para1][pAdmin] <=0) { ini_removeKey  (iniFile, "VAGOS" );ini_setString(iniFile, "VAGOS",giveplayer);}} //Vagos
						else if(level == 14) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 111; if(PlayerInfo[para1][pAdmin] <=0) { ini_removeKey  (iniFile, "RM" );ini_setString(iniFile, "RM",giveplayer);}} //Russian Mafia
						else if(level == 15) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 106; if(PlayerInfo[para1][pAdmin] <=0) { ini_removeKey  (iniFile, "GROVE" );ini_setString(iniFile, "GROVE",giveplayer);}} //Grove
						else if(level == 16) { PlayerInfo[para1][pRank] = 6; InviteSkin[para1] = 261; if(PlayerInfo[para1][pAdmin] <=0) { ini_removeKey  (iniFile, "LSNEWS" );ini_setString(iniFile, "LSNEWS",giveplayer);}} //News Reporters
						else if(level == 17) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 115; if(PlayerInfo[para1][pAdmin] <=0) { ini_removeKey  (iniFile, "AZTEC" );ini_setString(iniFile, "AZTEC",giveplayer);}} //Aztecas
						else if(level == 18) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 174; if(PlayerInfo[para1][pAdmin] <=0) { ini_removeKey  (iniFile, "RIFA" );ini_setString(iniFile, "RIFA",giveplayer);}} //Rifa
						else if(level == 19) { PlayerInfo[para1][pRank] = 16; InviteSkin[para1] = 287; if(PlayerInfo[para1][pAdmin] <=0) { ini_removeKey  (iniFile, "ARMY LV" );ini_setString(iniFile, "ARMY LV",giveplayer);}} //Army
						else if(level == 20) { PlayerInfo[para1][pRank] = 6; InviteSkin[para1] = 261; if(PlayerInfo[para1][pAdmin] <=0) { ini_removeKey  (iniFile, "LVNEWS" );ini_setString(iniFile, "LVNEWS",giveplayer);}} //News Reporters
						else if(level == 21) { PlayerInfo[para1][pRank] = 15; InviteSkin[para1] = 281; if(PlayerInfo[para1][pAdmin] <=0) { ini_removeKey  (iniFile, "LVPD" );ini_setString(iniFile, "LVPD",giveplayer);}} //Police Force
						else if(level == 22) { PlayerInfo[para1][pRank] = 8; InviteSkin[para1] = 70; if(PlayerInfo[para1][pAdmin] <=0) { ini_removeKey  (iniFile, "MEDICSLS" );ini_setString(iniFile, "MEDICSLS",giveplayer);}} //Ambulance
						else if(level == 23) { PlayerInfo[para1][pRank] = 8; InviteSkin[para1] = 70; if(PlayerInfo[para1][pAdmin] <=0) { ini_removeKey  (iniFile, "MEDICSLV" );ini_setString(iniFile, "MEDICSLV",giveplayer);}} //Ambulance
						else if(level == 24) { PlayerInfo[para1][pRank] = 10; InviteSkin[para1] = 294; if(PlayerInfo[para1][pAdmin] <=0) { ini_removeKey  (iniFile, "HITMAN" );ini_setString(iniFile, "HITMAN",giveplayer);}} //Ambulance
						ini_closeFile(iniFile);
						SetPlayerInterior(para1, 5);
						SetPlayerVirtualWorld(para1, 1);
						ShowMenuForPlayer(ChoseSkin, para1);
						new rand = random(sizeof(gInviteSpawns));
						ACP_SetPlayerPos(para1, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
						SetPlayerFacingAngle(para1, gInviteSpawns[rand][3]);
						SetPlayerCameraPos(para1,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
						SetPlayerCameraLookAt(para1,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
						TogglePlayerControllable(para1, 0);
						SelectChar[para1] = 255;
						SelectCharID[para1] = PlayerInfo[para1][pMember];
						SelectCharPlace[para1] = 1;
						PlayerInfo[para1][pModel] = InviteSkin[para1];
						SetPlayerArmourAC(para1, 0);
						SetPlayerHealthAC(para1, 100);
						PlayerInfo[para1][pHP] = 100;
						SetPlayerSkin(para1, InviteSkin[para1]);
						format(string, 256, "%s make leader %s № %d", sendername, giveplayer, level);
						MkLeader(string);
						DelGun(para1);
					}
				}
			}
			else
			{
                SendClientMessage(playerid,COLOR_GREY,"Данная лидерка занята! (/leaders)");ini_closeFile(file1);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/demote", true) == 0)
    {
        if(PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] >= 7)
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /demote [id]");
            new para1;
            new rank;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            GetPlayerName(para1, giveplayer, sizeof(giveplayer));
            GetPlayerName(playerid, sendername, sizeof(sendername));
            if(PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] >= 6)
            {
                if(IsPlayerConnected(para1))
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
                        switch(PlayerInfo[para1][pMember])
                        {
                            case 4,5..9,11..18: return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не состоит в армии/ПД/ФБР!");
                        }
                        if(PlayerInfo[para1][pMember] == 2 && PlayerInfo[para1][pRank] >= 2)
                        {
                            if(PlayerInfo[para1][pLeader] != 0) { return SendClientMessage(playerid, COLOR_GREY, "Вы не можете понизить лидера!"); }
                            PlayerInfo[para1][pRank] --;
                            rank = PlayerInfo[para1][pRank];
                            format(string, sizeof(string), "Вы были понижены до %d ранга агентом FBI %s", rank, sendername);
                            SendClientMessage(para1, 0x6495EDFF, string);
                            format(string, sizeof(string), "Вы понизили %s до %d ранга", giveplayer, rank);
                            SendClientMessage(playerid, 0x6495EDFF, string);
                            return true;
            			}
			            if(PlayerInfo[para1][pMember] == 2 && PlayerInfo[para1][pRank] == 1)
						{
							if(PlayerInfo[para1][pLeader] != 0) { return SendClientMessage(playerid, COLOR_GREY, "Вы не можете уволить лидера!"); }
							PlayerInfo[para1][pRank] = 6;
							PlayerInfo[para1][pMember] = 1;
							SpawnPlayer(para1);
							SetPlayerArmourAC(para1,0);
			                DelGun(para1);
			                FormaFrac[para1] = 0;
			                SetPlayerColor(para1, TEAM_HIT_COLOR);
			                SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
							format(string, sizeof(string), "Вы были переведены агентом FBI %s", sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							format(string, sizeof(string), "Вы перевели %s", giveplayer);
							SendClientMessage(playerid, 0x6495EDFF, string);
							return true;
			            }
                        if(PlayerInfo[para1][pMember] == 1 && PlayerInfo[para1][pRank] >= 2 || PlayerInfo[para1][pMember] == 10 && PlayerInfo[para1][pRank] >= 2 || PlayerInfo[para1][pMember] == 21 && PlayerInfo[para1][pRank] >= 2)
                        {
                            if(PlayerInfo[para1][pLeader] != 0) { return SendClientMessage(playerid, COLOR_GREY, "Вы не можете понизить лидера!"); }
                            PlayerInfo[para1][pRank] --;
                            rank = PlayerInfo[para1][pRank];
                            format(string, sizeof(string), "Вы были понижены до %d ранга агентом FBI %s", rank, sendername);
                            SendClientMessage(para1, 0x6495EDFF, string);
                            format(string, sizeof(string), "Вы понизили %s до %d ранга", giveplayer, rank);
                            SendClientMessage(playerid, 0x6495EDFF, string);
							return true;
						}
			            if(PlayerInfo[para1][pMember] == 1 && PlayerInfo[para1][pRank] == 1 || PlayerInfo[para1][pMember] == 10 && PlayerInfo[para1][pRank] == 1 || PlayerInfo[para1][pMember] == 21 && PlayerInfo[para1][pRank] == 1)
			            {
							if(PlayerInfo[para1][pLeader] != 0) { return SendClientMessage(playerid, COLOR_GREY, "Вы не можете уволить лидера!"); }
			                PlayerInfo[para1][pRank] = 4;
							PlayerInfo[para1][pMember] = 19;
			                FormaFrac[para1] = 0;
							SpawnPlayer(para1);
							SetPlayerArmourAC(para1, 0);
			                DelGun(para1);
			                SetPlayerColor(para1, TEAM_HIT_COLOR);
			                SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
							format(string, sizeof(string), "Вы были переведены агентом FBI %s", sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							format(string, sizeof(string), "Вы перевели %s", giveplayer);
							SendClientMessage(playerid, 0x6495EDFF, string);
							return true;
						}
						if(PlayerInfo[para1][pMember] == 3 && PlayerInfo[para1][pRank] >= 2 || PlayerInfo[para1][pMember] == 19 && PlayerInfo[para1][pRank] >= 2)
						{
							if(PlayerInfo[para1][pLeader] != 0) { return SendClientMessage(playerid, COLOR_GREY, "Вы не можете понизить лидера!"); }
							PlayerInfo[para1][pRank] --;
							rank = PlayerInfo[para1][pRank];
							format(string, sizeof(string), "Вы были понижены до %d ранга агентом FBI %s", rank, sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							format(string, sizeof(string), "Вы понизили %s до %d ранга", giveplayer, rank);
							SendClientMessage(playerid, 0x6495EDFF, string);
							return true;
						}
						if(PlayerInfo[para1][pMember] == 3 && PlayerInfo[para1][pRank] == 1 || PlayerInfo[para1][pMember] == 19 && PlayerInfo[para1][pRank] == 1)
						{
                            if(PlayerInfo[para1][pLeader] != 0) { return SendClientMessage(playerid, COLOR_GREY, "Вы не можете уволить лидера!"); }
                            PlayerInfo[para1][pRank] = 0;
							PlayerInfo[para1][pMember] = 0;
							PlayerInfo[para1][pLeader] = 0;
							SpawnPlayer(para1);
							SetPlayerArmourAC(para1, 0);
							DelGun(para1);
							FormaFrac[para1] = 0;
							SetPlayerColor(para1, TEAM_HIT_COLOR);
							SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
							format(string, sizeof(string), "Вы были уволены агентом FBI %s", sendername);
							SendClientMessage(para1, 0x6495EDFF, string);
							format(string, sizeof(string), "Вы уволили %s", giveplayer);
							SendClientMessage(playerid, 0x6495EDFF, string);
							return true;
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/giverank", true) == 0)
    {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return    SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /giverank [id] [ранг]");
        new para1;
        new level;
        para1 = ReturnUser(tmp);
        tmp = strtok(cmdtext, idx);
        level = strval(tmp);
        if(FormaFrac[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Начните рабочий день в вашей организации!");
        if(PlayerInfo[playerid][pMember] == 1) { if(level > 14 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 14!"); return true; } }
        else if(PlayerInfo[playerid][pMember] == 2) { if(level > 7 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 7!"); return true; } }
        else if(PlayerInfo[playerid][pMember] == 3) { if(level > 15 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 15!"); return true; } }
        else if(PlayerInfo[playerid][pMember] == 4) { if(level > 7 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 7!"); return true; } }
        else if(PlayerInfo[playerid][pMember] == 5) { if(level > 9 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!"); return true; } }
        else if(PlayerInfo[playerid][pMember] == 6) { if(level > 9 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!"); return true; } }
        else if(PlayerInfo[playerid][pMember] == 7) { if(level > 5 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 5!"); return true; } }
        else if(PlayerInfo[playerid][pMember] == 8) { if(level > 2 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 2!"); return true; } }
        else if(PlayerInfo[playerid][pMember] == 9) { if(level > 5 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 5!"); return true; } }
        else if(PlayerInfo[playerid][pMember] == 10) { if(level > 14 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 5!"); return true; } }
        else if(PlayerInfo[playerid][pMember] == 11) { if(level > 7 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 7!"); return true; } }
        else if(PlayerInfo[playerid][pMember] == 12) { if(level > 9 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!"); return true; } }
        else if(PlayerInfo[playerid][pMember] == 13) { if(level > 10 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 10!"); return true; } }
        else if(PlayerInfo[playerid][pMember] == 14) { if(level > 9 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!"); return true; } }
        else if(PlayerInfo[playerid][pMember] == 15) { if(level > 9 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!"); return true; } }
        else if(PlayerInfo[playerid][pMember] == 16) { if(level > 5 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 5!"); return true; } }
        else if(PlayerInfo[playerid][pMember] == 17) { if(level > 9 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!"); return true; } }
        else if(PlayerInfo[playerid][pMember] == 18) { if(level > 9 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!"); return true; } }
      	else if(PlayerInfo[playerid][pMember] == 19) { if(level > 15 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 15!"); return true; } }
        else if(PlayerInfo[playerid][pMember] == 20) { if(level > 5 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 5!"); return true; } }
        else if(PlayerInfo[playerid][pMember] == 21) { if(level > 14 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 14!"); return true; } }
        else if(PlayerInfo[playerid][pMember] == 22) { if(level > 7 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 7!"); return true; } }
        else if(PlayerInfo[playerid][pMember] == 23) { if(level > 7 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 7!"); return true; } }
        else if(PlayerInfo[playerid][pMember] == 24) { if(level > 9 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!"); return true; } }
        if(PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pRank] >= 14)
        {
            if(IsPlayerConnected(para1))
            {
                if (PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
						if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
						if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    PlayerInfo[para1][pRank] = level;
	                    format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, sendername);
	                    SendClientMessage(para1, 0x6495EDFF, string);
	                    format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
	                    SendClientMessage(playerid, 0x6495EDFF, string);
	                }
                }
                else
                {
                	SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
                }
            }
        }
        else if(PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] >= 7)
        {
            if(IsPlayerConnected(para1))
            {
                if(PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
						if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
						if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    PlayerInfo[para1][pRank] = level;
	                    format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, sendername);
	                    SendClientMessage(para1, 0x6495EDFF, string);
	                    format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
	                    SendClientMessage(playerid, 0x6495EDFF, string);
	                }
                }
                else
                {
                	SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
                }
            }
        }
        else if (PlayerInfo[playerid][pMember] == 3 && PlayerInfo[playerid][pRank] >= 15)
        {
            if(IsPlayerConnected(para1))
            {
                if (PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
						if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
						if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    PlayerInfo[para1][pRank] = level;
	                    format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, sendername);
	                    SendClientMessage(para1, 0x6495EDFF, string);
	                    format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
	                    SendClientMessage(playerid, 0x6495EDFF, string);
	                }
                }
                else
                {
                	SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
                }
            }
        }
        else if (PlayerInfo[playerid][pMember] == 4 && PlayerInfo[playerid][pRank] >= 7)
        {
            if(IsPlayerConnected(para1))
            {
                if (PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
						if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
						if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    PlayerInfo[para1][pRank] = level;
	                    format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, sendername);
	                    SendClientMessage(para1, 0x6495EDFF, string);
	                    format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
	                    SendClientMessage(playerid, 0x6495EDFF, string);
	                }
                }
                else
                {
                	SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
                }
            }
        }
        else if (PlayerInfo[playerid][pMember] == 5 && PlayerInfo[playerid][pRank] >= 9)
        {
            if(IsPlayerConnected(para1))
            {
                if (PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
						if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
						if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    PlayerInfo[para1][pRank] = level;
	                    format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, sendername);
	                    SendClientMessage(para1, 0x6495EDFF, string);
	                    format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
	                    SendClientMessage(playerid, 0x6495EDFF, string);
	                }
                }
                else
                {
                	SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
                }
            }
        }
        else if (PlayerInfo[playerid][pMember] == 6 && PlayerInfo[playerid][pRank] >= 9)
        {
            if(IsPlayerConnected(para1))
            {
                if (PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
						if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
						if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    PlayerInfo[para1][pRank] = level;
	                    format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, sendername);
	                    SendClientMessage(para1, 0x6495EDFF, string);
	                    format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
	                    SendClientMessage(playerid, 0x6495EDFF, string);
	                }
                }
                else
                {
                	SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
                }
            }
        }
		else if (PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] >= 5)
        {
            if(IsPlayerConnected(para1))
            {
                if (PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
						if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
						if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    PlayerInfo[para1][pRank] = level;
	                    format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, sendername);
	                    SendClientMessage(para1, 0x6495EDFF, string);
	                    format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
	                    SendClientMessage(playerid, 0x6495EDFF, string);
	                }
                }
                else
                {
                	SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
                }
            }
        }
		else if (PlayerInfo[playerid][pMember] == 8 && PlayerInfo[playerid][pRank] >= 2)
        {
            if(IsPlayerConnected(para1))
            {
                if (PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
						if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
						if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    PlayerInfo[para1][pRank] = level;
	                    format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, sendername);
	                    SendClientMessage(para1, 0x6495EDFF, string);
	                    format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
	                    SendClientMessage(playerid, 0x6495EDFF, string);
	                }
                }
                else
                {
                	SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
                }
            }
        }
		else if (PlayerInfo[playerid][pMember] == 9 && PlayerInfo[playerid][pRank] >= 5)
        {
            if(IsPlayerConnected(para1))
            {
                if (PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
						if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
						if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    PlayerInfo[para1][pRank] = level;
	                    format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, sendername);
	                    SendClientMessage(para1, 0x6495EDFF, string);
	                    format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
	                    SendClientMessage(playerid, 0x6495EDFF, string);
	                }
                }
                else
                {
                	SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
                }
            }
        }
        else if (PlayerInfo[playerid][pMember] == 10 && PlayerInfo[playerid][pRank] >= 14)
        {
            if(IsPlayerConnected(para1))
            {
                if (PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
						if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
						if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    PlayerInfo[para1][pRank] = level;
	                    format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, sendername);
	                    SendClientMessage(para1, 0x6495EDFF, string);
	                    format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
	                    SendClientMessage(playerid, 0x6495EDFF, string);
	                }
                }
                else
                {
                	SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
                }
            }
        }
		else if (PlayerInfo[playerid][pMember] == 11 && PlayerInfo[playerid][pRank] >= 7)
        {
            if(IsPlayerConnected(para1))
            {
                if (PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
						if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
						if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    PlayerInfo[para1][pRank] = level;
	                    format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, sendername);
	                    SendClientMessage(para1, 0x6495EDFF, string);
	                    format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
	                    SendClientMessage(playerid, 0x6495EDFF, string);
	                }
                }
                else
                {
                	SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
                }
            }
        }
		else if (PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] >= 9)
        {
            if(IsPlayerConnected(para1))
            {
                if (PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
						if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
						if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    PlayerInfo[para1][pRank] = level;
	                    format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, sendername);
	                    SendClientMessage(para1, 0x6495EDFF, string);
	                    format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
	                    SendClientMessage(playerid, 0x6495EDFF, string);
	                }
                }
                else
                {
                	SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
                }
            }
        }
        else if (PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pRank] >= 10)
        {
            if(IsPlayerConnected(para1))
            {
                if (PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
						if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
						if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    PlayerInfo[para1][pRank] = level;
	                    format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, sendername);
	                    SendClientMessage(para1, 0x6495EDFF, string);
	                    format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
	                    SendClientMessage(playerid, 0x6495EDFF, string);
	                }
                }
                else
                {
                	SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
                }
            }
        }
		else if (PlayerInfo[playerid][pMember] == 14 && PlayerInfo[playerid][pRank] >= 9)
        {
            if(IsPlayerConnected(para1))
            {
                if (PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
						if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
						if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    PlayerInfo[para1][pRank] = level;
	                    format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, sendername);
	                    SendClientMessage(para1, 0x6495EDFF, string);
	                    format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
	                    SendClientMessage(playerid, 0x6495EDFF, string);
	                }
                }
                else
                {
                	SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
                }
            }
        }
		else if (PlayerInfo[playerid][pMember] == 15 && PlayerInfo[playerid][pRank] >= 9)
        {
            if(IsPlayerConnected(para1))
            {
                if (PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
						if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
						if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    PlayerInfo[para1][pRank] = level;
	                    format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, sendername);
	                    SendClientMessage(para1, 0x6495EDFF, string);
	                    format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
	                    SendClientMessage(playerid, 0x6495EDFF, string);
	                }
                }
                else
                {
                	SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
                }
            }
        }
		else if (PlayerInfo[playerid][pMember] == 16 && PlayerInfo[playerid][pRank] >= 5)
        {
            if(IsPlayerConnected(para1))
            {
                if (PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
						if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
						if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    PlayerInfo[para1][pRank] = level;
	                    format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, sendername);
	                    SendClientMessage(para1, 0x6495EDFF, string);
	                    format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
	                    SendClientMessage(playerid, 0x6495EDFF, string);
	                }
                }
                else
                {
                	SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
                }
            }
        }
		else if (PlayerInfo[playerid][pMember] == 17 && PlayerInfo[playerid][pRank] >= 9)
        {
            if(IsPlayerConnected(para1))
            {
                if (PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
						if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
						if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    PlayerInfo[para1][pRank] = level;
	                    format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, sendername);
	                    SendClientMessage(para1, 0x6495EDFF, string);
	                    format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
	                    SendClientMessage(playerid, 0x6495EDFF, string);
	                }
                }
                else
                {
                	SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
                }
            }
        }
		else if (PlayerInfo[playerid][pMember] == 18 && PlayerInfo[playerid][pRank] >= 9)
        {
            if(IsPlayerConnected(para1))
            {
                if (PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
						if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
						if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    PlayerInfo[para1][pRank] = level;
	                    format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, sendername);
	                    SendClientMessage(para1, 0x6495EDFF, string);
	                    format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
	                    SendClientMessage(playerid, 0x6495EDFF, string);
	                }
                }
                else
                {
                	SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
                }
            }
        }
		else if (PlayerInfo[playerid][pMember] == 19 && PlayerInfo[playerid][pRank] >= 15)
        {
            if(IsPlayerConnected(para1))
            {
                if (PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
						if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
						if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    PlayerInfo[para1][pRank] = level;
	                    format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, sendername);
	                    SendClientMessage(para1, 0x6495EDFF, string);
	                    format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
	                    SendClientMessage(playerid, 0x6495EDFF, string);
	                }
                }
                else
                {
                	SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
                }
            }
        }
		else if (PlayerInfo[playerid][pMember] == 20 && PlayerInfo[playerid][pRank] >= 5)
        {
            if(IsPlayerConnected(para1))
            {
                if (PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
						if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
						if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    PlayerInfo[para1][pRank] = level;
	                    format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, sendername);
	                    SendClientMessage(para1, 0x6495EDFF, string);
	                    format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
	                    SendClientMessage(playerid, 0x6495EDFF, string);
	                }
                }
                else
                {
                	SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
                }
            }
        }
        else if (PlayerInfo[playerid][pMember] == 21 && PlayerInfo[playerid][pRank] >= 14)
        {
            if(IsPlayerConnected(para1))
            {
                if (PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
						if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
						if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    PlayerInfo[para1][pRank] = level;
	                    format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, sendername);
	                    SendClientMessage(para1, 0x6495EDFF, string);
	                    format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
	                    SendClientMessage(playerid, 0x6495EDFF, string);
	                }
                }
                else
                {
                	SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
                }
            }
        }
        else if (PlayerInfo[playerid][pMember] == 22 && PlayerInfo[playerid][pRank] >= 7)
        {
            if(IsPlayerConnected(para1))
            {
                if (PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
						if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
						if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    PlayerInfo[para1][pRank] = level;
	                    format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, sendername);
	                    SendClientMessage(para1, 0x6495EDFF, string);
	                    format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
	                    SendClientMessage(playerid, 0x6495EDFF, string);
	                }
                }
                else
                {
                	SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
                }
            }
        }
		else if (PlayerInfo[playerid][pMember] == 23 && PlayerInfo[playerid][pRank] >= 7)
        {
            if(IsPlayerConnected(para1))
            {
                if (PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
						if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
						if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    PlayerInfo[para1][pRank] = level;
	                    format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, sendername);
	                    SendClientMessage(para1, 0x6495EDFF, string);
	                    format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
	                    SendClientMessage(playerid, 0x6495EDFF, string);
	                }
                }
                else
                {
                	SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции!");
                }
            }
        }
        else if(PlayerInfo[playerid][pMember] == 24 && PlayerInfo[playerid][pRank] >= 9)
        {
            if(IsPlayerConnected(para1))
            {
                if(PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
						if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID"); return true; }
						if(PlayerInfo[para1][pLeader] >= 1) { SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера"); return true; }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    PlayerInfo[para1][pRank] = level;
	                    format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, sendername);
	                    SendClientMessage(para1, 0x6495EDFF, string);
	                    format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
	                    SendClientMessage(playerid, 0x6495EDFF, string);
	                }
                }
                else
                {
                	SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции");
                }
            }
        }
        else
        {
        	SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
        }
        return true;
    }
	if(strcmp(cmd, "/agiverank", true) == 0)
    {
 		if(PlayerInfo[playerid][pAdmin] >= 8)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /agiverank [id игрока] [уровень (0 - 21)]");
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level > 21 || level < 0) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 0 и больше 21"); return true; }
			if(IsPlayerConnected(para1))
			{
				if(para1 != INVALID_PLAYER_ID)
				{
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[para1][pRank] = level;
					format(string, sizeof(string), "Вы были повышены в ранге Администратором: %s", sendername);
					SendClientMessage(para1, COLOR_LIGHTRED, string);
 					format(string, sizeof(string), "Вы повысили %s до %d ранга.", giveplayer,level);
					SendClientMessage(playerid, 0x6495EDFF, string);
				}
			}
		}
        return true;
    }
	if(strcmp(cmd, "/teleport", true) == 0 || strcmp(cmd, "/tp", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
			if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
		    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в машине!");
			new listitems[] = "Фракции\nВажные\nРаботы";
			ShowPlayerDialog(playerid, 9000, DIALOG_STYLE_LIST, "Teleport List", listitems, "Выбрать", "Закрыть");
		}
		return true;
	}
	if(strcmp(cmd,"/mp",true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 7)
	    {
	        if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
	        new listitems[] = "Назначить приз\nСтартовать\nПринудительно остановить\nВыдать всем оружие\nНазначить победителя";
			ShowPlayerDialog(playerid, 664, DIALOG_STYLE_LIST, "Мероприятие", listitems, "Выбрать", "Закрыть");
	    }
	}
	if(strcmp(cmd, "/mpstart", true) == 0) //вместо ./gpsstart, команды, можно заменить на своё.
    {
        if(PlayerInfo[playerid][pAdmin] >= 7) // с какого лвл-а админки будет действовать команда, можно заменить на своё.
        {
			if(mpon == 1) return SendClientMessage(playerid,COLOR_GREY,"Мероприятие уже запущено, закончите его! ( Принудительно / Назначьте победителя");
			if(mppriz == 0) return SendClientMessage(playerid,COLOR_GREY,"Назначьте приз!");
            for(new i = 0; i < MAX_PLAYERS; i++)
            {
                GetPlayerPos(playerid, MpTp[i][0],MpTp[i][1],MpTp[i][2]);
                mpon = 1;
                new priz[15];
				if(mpdv == 1) { priz= "Доната"; }
				else if(mpdv == 2) { priz= "Вирт"; }
                format(string, sizeof(string),"{0049FF}Уважаемый игрок {F81414} Администрация {0049FF} приглашает вас\nна мероприятие. Приз: %d %s\n {BF8000}\n\nСогласны ли вы?",mppriz,priz);
                ShowPlayerDialog(i, 663, DIALOG_STYLE_MSGBOX,"{e23434}* * * {FF9000}Мероприятие {e23434}* * *",  string, "Да", "Нет");
            }
        }
        return true;
    }
    if(strcmp(cmd, "/mpend", true) == 0) //вместо ./gpsstart, команды, можно заменить на своё.
    {
        if(PlayerInfo[playerid][pAdmin] >= 7) // с какого лвл-а админки будет действовать команда, можно заменить на своё.
        {
			if(mpon == 0) return SendClientMessage(playerid,COLOR_GREY,"Мероприятие не запущено!");
			mpon = 0;
			mppriz = 0;
			mpdv = 0;
			for(new i = 0; i < MAX_PLAYERS; i++)
            {
		        if(Mper[i] == 1)//return SendClientMessage(playerid,COLOR_GREY,"Вы не участник мероприятия");
				{
                    Mper[i] = 0;
				}
			}
			SendClientMessageToAll(COLOR_LIGHTRED,"Мероприятие принудительно остановлено!");
        }
        return true;
    }
    if(strcmp(cmd, "/mpgun",true) == 0)
    {
		if(PlayerInfo[playerid][pAdmin] >= 7)
		{
		    for(new i = 0; i < MAX_PLAYERS; i++)
            {
				if(IsPlayerInRangeOfPoint(i,100,MpTp[i][0],MpTp[i][1],MpTp[i][2]))
                {
			        GiveWeapon(i, 24, 300);
					GiveWeapon(i, 29, 300);
					GiveWeapon(i, 31, 300);
					SetPlayerHealthAC(i, 120);
					SendClientMessage(i,COLOR_GREEN,"Вам выдано Администратором: {FFFFFF}Deagle{33AA33}, {FFFFFF}MP5{33AA33}, {FFFFFF}M4A1{33AA33} и {FFFFFF}120 HP{33AA33}");
				}
			}
		}
    }
	if(strcmp(cmd, "/vtp", true) == 0)
	{
		if(PlayerInfo[playerid][pDonateRank] >= 1)
		{
		    if(GetPVarInt(playerid,"VTP") > gettime())return SendClientMessage(playerid, COLOR_GREY, "Команду можно использовать раз в 5 минут");
			new listitems[] = "Автовокзал\nМэрия\nАвтошкола\nАммо ЛС";
			ShowPlayerDialog(playerid, 9001, DIALOG_STYLE_LIST, "VIP Teleport List", listitems, "Выбрать", "Закрыть");
			SetPVarInt(playerid,"VTP",gettime() + 300);
		}
	}
	if(strcmp(cmd, "/mark", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
			SendClientMessage(playerid, COLOR_WHITE, "Точка телепортирования установлена");
		}
		return true;
	}
	if(strcmp(cmd, "/gotomark", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			if(GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else
			{
				ACP_SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
			}
			SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
			SetPlayerInterior(playerid, 0);
		}
		return true;
	}
	if(strcmp(cmd, "/atipster", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			if(dostup[playerid] != 1)return OnPlayerCommandText(playerid,"/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /atipster [ид фракции]");
			if(strval(tmp) < 0 || strval(tmp) > 24) return SendClientMessage(playerid, COLOR_GREY, "На сервере всего 24 фракции!");
			Zhyk[playerid] = strval(tmp);
			if(strval(tmp) == 0)return SendClientMessage(playerid, COLOR_GREY, "Прослушка отключена!");
			format(string,sizeof(string),"Прослушка фракции № %d включена",strval(tmp));
			SendClientMessage(playerid, COLOR_WHITE, string);
			SendClientMessage(playerid, COLOR_WHITE, "Для отключения введите: /atipster 0");
		}
	}
	if(strcmp(cmd, "/goto", true) == 0 || strcmp(cmd, "/g", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			new specid;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /g(oto) [id]");
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = ReturnUser(tmp);
			if(IsPlayerConnected(plo))
			{
				if(plo != INVALID_PLAYER_ID)
				{
					if(specid != 255)
					{
						specid = 256;
					}
					if(GetPlayerState(plo) != 1 && GetPlayerState(plo) != 2 && GetPlayerState(plo) != 3) return SendClientMessage(playerid, COLOR_GREY, "Игрок не вступил в игру!");
					if(GetPlayerState(plo) == PLAYER_STATE_SPECTATING && gSpectateID[plo] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Админ в режиме наблюдения");
					GetPlayerPos(plo, plocx, plocy, plocz);
					if (GetPlayerState(playerid) == 2)
					{
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
						TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					}
					else
					{
						ACP_SetPlayerPos(playerid,plocx,plocy+2, plocz);
						SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(plo));
						SetPlayerInterior(playerid, GetPlayerInterior(plo));
					}
					SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/setobject", true) == 0)
 	{
  		if(PlayerInfo[playerid][pAdmin] < 9) return 1;// Проверка на амдина
    	tmp = strtok(cmdtext, idx);
     	new object = strval(tmp);
      	if(!strlen(tmp)) return SendClientMessage(playerid, 0x919191FF, "{e23434}Введите: /setobject [id объекта]");
       	new Float: x, Float: y, Float: z;
       	GetPlayerPos(playerid, x, y, z);
       	new objectid = CreateObject(object, x, y, z-0.35, 0.0, 0.0, 0.0);
       	EditObject(playerid, objectid);
       	SetPVarInt(playerid, "ObjectID", objectid);
       	SendClientMessage(playerid, COLOR_WHITE, "Объект установлен. Удалить: /removeobject");
       	return 1;
    }
	if(strcmp(cmd, "/removeobject", true) == 0)
	{
	if(PlayerInfo[playerid][pAdmin] < 9) return 1; //Проверка на админа
	DestroyObject(GetPVarInt(playerid, "ObjectID"));
 	SendClientMessage(playerid, COLOR_WHITE, "Объект удалён");
  	return 1;
	}
	if(strcmp(cmd, "/get",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /get [значение] Доступные значения: guns, drugs, fuel");
			if(strcmp(x_job, "fuel",true) == 0)
			{
 				for(new b = 0; b < sizeof(SBizzInfo); b++)
				{
					if(PlayerToPoint(10.0, playerid, SBizzInfo[b][sbEntranceX], SBizzInfo[b][sbEntranceY], SBizzInfo[b][sbEntranceZ]))
					{
						if(SBizzInfo[b][sbLocked] == 1) return SendClientMessage(playerid, COLOR_GREY, "Заправка закрыта!");
						if(PlayerInfo[playerid][pFuel] != 0) return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть канистра");
						if(PlayerInfo[playerid][pCash] < SBizzInfo[b][sbPriceProd]) return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
	    				SBizzInfo[b][sbTill] += SBizzInfo[b][sbPriceProd]/2;
						PlayerInfo[playerid][pCash] -= SBizzInfo[b][sbPriceProd]/2;
						SBizzInfo[b][sbProducts] -= 20;
					    format(string, sizeof(string), "Вы купили 20 литров бензина за %d вирт",SBizzInfo[b][sbPriceProd]/2);
					    SendClientMessage(playerid, 0x6495EDFF, string);
					    PlayerInfo[playerid][pFuel] = 1;
			 	        PlayerInfo[playerid][pCash] -= SBizzInfo[b][sbPriceProd]/2;
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Вы не на заправке!");
						return true;
					}
				}
			}
			else if(strcmp(x_job, "drugs",true) == 0)
			{
				if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не бандит!");
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /get drugs [количество]");
				if(PlayerToPoint(3.0,playerid,322.1280,1118.8314,1083.8828))
				{
					if(PlayerInfo[playerid][pCash] < 150) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег");
					new ammo;
					ammo = strval(tmp);
					if(PlayerInfo[playerid][pDrugs] >= 150) { SendClientMessage(playerid, COLOR_GREY, "Нельзя купить больше"); return true; }
					if(ammo > 150 || ammo < 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 или больше 150!"); return true; }
					if(PlayerInfo[playerid][pCash] < ammo) { SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег"); return true; }
					PlayerInfo[playerid][pCash] -= ammo*20;
					PlayerInfo[playerid][pDrugs] += ammo;
					format(string, sizeof(string), "Вы купили %d грамм наркотиков за %d вирт (У вас есть %d грамм)", ammo, ammo*20, PlayerInfo[playerid][pDrugs]);
					SendClientMessage(playerid, 0x6495EDFF, string);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы не в притоне!");
					return true;
				}
			}
			else if(strcmp(x_job,"guns",true) == 0)
			{
				if(IsAGang(playerid))
				{
					new numberof;
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /get guns [кол-во]");
					if(PlayerInfo[playerid][pRank] < 4) return SendClientMessage(playerid, COLOR_GREY,"Функция доступна с 4 ранга");
					numberof = strval(tmp);
					if(!IsATerra(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей базе");
					if((PlayerInfo[playerid][pMaterials] + numberof) > 500) return SendClientMessage(playerid, COLOR_GREY,"Нельзя взять больше");
					if(numberof < 1 || numberof > 250) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете взять меньше 1 и больше 250 материалов");
					if(IsAGang(playerid) && PlayerInfo[playerid][pRank] >= 4)
					{
						PlayerInfo[playerid][pMaterials] += numberof;
						if(PlayerInfo[playerid][pMember] == 12)
						{
							if(ballasmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов"); ballasmatbi -= numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 13)
						{
							if(vagosmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов"); vagosmatbi -= numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 15)
						{
							if(groovmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов"); groovmatbi -= numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 17)
						{
							if(aztekmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов"); aztekmatbi -= numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 18)
						{
							if(rifamatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов"); rifamatbi -= numberof;
						}
						format(string, sizeof(string), "У вас %d/500 материалов с собой", PlayerInfo[playerid][pMaterials]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "%s взял %d материалов", sendername, numberof);
						SendFamilyMessage(PlayerInfo[playerid][pMember], COLOR_RED, string);
						SaveMaterials();
						return true;
					}
					else
					{
						SendClientMessage(playerid,COLOR_GREY,"Вы не бандит");
					}
				}
				else
				{
					SendClientMessage(playerid,COLOR_GREY,"Вы не бандит");
				}
			}
			else
			{
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/sklad", true) == 0)
	{
	    if(IsAGang(playerid))
	    {
	        if(PlayerToPoint(5.0,playerid,2649.6631,-2027.8259,13.5469))
	        {
			    if(PlayerInfo[playerid][pMember] == 12) // БАЛЛАС
				{
					format(string,sizeof(string),"Материалов на складе:\t %d/50000\nНаркотики на складе:\t\t%d/3000\nПоложить материалы\nПоложить наркотики\nВзять материалы\nВзять наркотики",ballasmatbi,ballasnarko);
					ShowPlayerDialog(playerid,1361,DIALOG_STYLE_LIST,"Склад банды Ballas",string,"Ок","Отмена");
				}
			}
			else if(PlayerToPoint(5.0,playerid,2795.9868,-1619.3136,10.9219))
			{
				if(PlayerInfo[playerid][pMember] == 13) // ВАГОС
				{
					format(string,sizeof(string),"Материалов на складе:\t %d/50000\nНаркотики на складе:\t\t%d/3000\nПоложить материалы\nПоложить наркотики\nВзять материалы\nВзять наркотики",vagosmatbi,vagosnarko);
					ShowPlayerDialog(playerid,1361,DIALOG_STYLE_LIST,"Склад банды Vagos",string,"Ок","Отмена");
				}
			}
			else if(PlayerToPoint(5.0,playerid,2500.7104,-1685.8938,13.4788))
			{
				if(PlayerInfo[playerid][pMember] == 15) // ГРУВ
				{
					format(string,sizeof(string),"Материалов на складе:\t %d/50000\nНаркотики на складе:\t\t%d/3000\nПоложить материалы\nПоложить наркотики\nВзять материалы\nВзять наркотики",groovmatbi,groovnarko);
					ShowPlayerDialog(playerid,1361,DIALOG_STYLE_LIST,"Склад банды Groove",string,"Ок","Отмена");
				}
			}
			else if(PlayerToPoint(5.0,playerid,1673.4269,-2107.7671,13.5469))
			{
				if(PlayerInfo[playerid][pMember] == 17) // АЦТЕК
				{
					format(string,sizeof(string),"Материалов на складе:\t %d/50000\nНаркотики на складе:\t\t%d/3000\nПоложить материалы\nПоложить наркотики\nВзять материалы\nВзять наркотики",aztekmatbi,azteknarko);
					ShowPlayerDialog(playerid,1361,DIALOG_STYLE_LIST,"Склад банды Aztec",string,"Ок","Отмена");
				}
			}
			else if(PlayerToPoint(5.0,playerid,2192.2957,-1814.2941,13.5469))
			{
				if(PlayerInfo[playerid][pMember] == 18) // РИФА
				{
					format(string,sizeof(string),"Материалов на складе:\t %d/50000\nНаркотики на складе:\t\t%d/3000\nПоложить материалы\nПоложить наркотики\nВзять материалы\nВзять наркотики",rifamatbi,rifanarko);
					ShowPlayerDialog(playerid,1361,DIALOG_STYLE_LIST,"Склад банды Rifa",string,"Ок","Отмена");
				}
			}
		}
	}
	if(strcmp(cmd, "/fillcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pFuel] != 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет канистры!");
     		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_GREY, "Вы не в машине");
			SendClientMessage(playerid, 0x6495EDFF, "Вы заправили ваш автомобиль 50 литрами бензина");
			Fuell[vehicleid] += 50;
			PlayerInfo[playerid][pFuel] = 0;
		}
		return true;
	}
	if(strcmp(cmd, "/gethere", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /gethere [id]");
	  		new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			new inter = GetPlayerInterior(playerid);
			new worldd = GetPlayerVirtualWorld(playerid);
			plo = ReturnUser(tmp);
			if(IsPlayerInAnyVehicle(plo)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине!");
			if(IsPlayerConnected(plo))
			{
				if(plo != INVALID_PLAYER_ID)
				{
					if(GetPlayerState(plo) != 1 && GetPlayerState(plo) != 2 && GetPlayerState(plo) != 3) return	SendClientMessage(playerid, COLOR_GREY, "Игрок не авторизирован");
					GetPlayerPos(playerid, plocx, plocy, plocz);
					if(PlayerInfo[playerid][pInt] > 0)
					{
						SetPlayerInterior(plo,inter);
						PlayerInfo[plo][pInt] = inter;
						PlayerInfo[plo][pLocal] = PlayerInfo[playerid][pLocal];
						SetPlayerVirtualWorld(plo,worldd);
					}
					if(PlayerInfo[playerid][pInt] == 0)
					{
						SetPlayerInterior(plo,PlayerInfo[playerid][pInt]);
						SetPlayerInterior(plo,inter);
						SetPlayerVirtualWorld(plo,worldd);
					}
					if(plocz > 930.0 && PlayerInfo[playerid][pInt] == 0)
					{
						SetPlayerInterior(plo,inter);
						PlayerInfo[plo][pInt] = inter;
					}
					if(GetPlayerState(plo) == 2)
					{
						TelePos[plo][0] = 0.0;
						TelePos[plo][1] = 0.0;
						SetPlayerInterior(plo,inter);
						new tmpcar = GetPlayerVehicleID(plo);
						SetPlayerVirtualWorld(plo,worldd);
						SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
					}
					else
					{
						ACP_SetPlayerPos(plo,plocx,plocy+2, plocz);
						SetPlayerInterior(plo,inter);
						SetPlayerVirtualWorld(plo,worldd);
					}
					SendClientMessage(plo, COLOR_WHITE, "Вас телепортировал к себе {e23434}Администратор{FFFFFF} штата {e23434}Arizona RP");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/givegun", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 5)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /givegun [id] [id оружия] [патроны]");
			new playa;
			new gun;
			new ammo;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			gun = strval(tmp);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /givegun [id] [id оружия] [патроны]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
			tmp = strtok(cmdtext, idx);
			ammo = strval(tmp);
			if(ammo < 1 ||ammo > 10000)
			{
				SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 10000 патронов");
				return true;
			}
			if(IsPlayerConnected(playa))
			{
				if(playa != INVALID_PLAYER_ID)
				{
					GiveWeapon(playa, gun, ammo);
					SendClientMessage(playerid, COLOR_GREEN, "Оружие Выдано");
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/hp", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)// PlayerInfo[playerid][pDonateRank] >= 3
		{
            if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			if(IsPlayerInAnyVehicle(playerid))
			{
				AnRepairVehicle(GetPlayerVehicleID(playerid));
			    Fuell[GetPlayerVehicleID(playerid)] = 200;
			    SendClientMessage(playerid, COLOR_WHITE, "Машина отремонтирована");
			}
			SetPlayerHealthAC(playerid, 100);
			PlayerInfo[playerid][pHP] = 100;
			SendClientMessage(playerid, COLOR_WHITE, "Здоровье пополнено");
		}
		return true;
	}
	if(strcmp(cmd, "/vhp", true) == 0)
	{
	    if(PlayerInfo[playerid][pDonateRank] >= 3)
	    {
	        if(GetPVarInt(playerid,"VHP") > gettime())return SendClientMessage(playerid,COLOR_GREY,"Использование команды запрещено! Эту команду можно использовать раз в 5 минут!");
	        if(IsPlayerInAnyVehicle(playerid))
			{
				AnRepairVehicle(GetPlayerVehicleID(playerid));
			    Fuell[GetPlayerVehicleID(playerid)] = 200;
			    SendClientMessage(playerid, COLOR_WHITE, "Машина отремонтирована и заправлена");
			}
			SetPlayerHealthAC(playerid, 100);
			PlayerInfo[playerid][pHP] = 100;
			SendClientMessage(playerid, COLOR_WHITE, "Здоровье пополнено");
			SetPVarInt(playerid,"VHP",gettime() + 300);
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "Вы не VIP 3 уровня!");
		}
	}
	if(strcmp(cmd, "/satiety", true) == 0)
	{
		format(string,64, "Ваша «Сытость»: %d / 100",PlayerInfo[playerid][pSatiety]);
		SendClientMessage(playerid, 0x6495EDFF,string);
	    return true;
	}
	if(strcmp(cmd, "/sethealcost", true) == 0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 4 && PlayerInfo[playerid][pRank] == 8)
	        {
		        tmp = strtok(cmdtext, idx);
		        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /sethealcost [сумма]");
				moneys = strval(tmp);
				if(moneys < 1 || moneys > 20) { SendClientMessage(playerid, COLOR_GREY, "Вы не можете поставить меньше 1 и больше 20"); return true; }
				healpricsf = moneys;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "Цена лечения установлена в размере %d вирт", healpricsf);
				SendClientMessage(playerid, 0xA52A2AFF, string);
				return true;
			}
			else if(PlayerInfo[playerid][pMember] == 22 && PlayerInfo[playerid][pRank] == 8)
	        {
		        tmp = strtok(cmdtext, idx);
		        if(!strlen(tmp))return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /sethealcost [сумма]");
				moneys = strval(tmp);
				if(moneys < 1 || moneys > 20) { SendClientMessage(playerid, COLOR_GREY, "Вы не можете поставить меньше 1 и больше 20"); return true; }
				healpricls = moneys;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "Цена лечения установлена в размере %d вирт", healpricls);
				SendClientMessage(playerid, 0xA52A2AFF, string);
				return true;
			}
	        else if(PlayerInfo[playerid][pMember] == 23 && PlayerInfo[playerid][pRank] == 8)
	        {
		        tmp = strtok(cmdtext, idx);
		        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /sethealcost [сумма]");
				moneys = strval(tmp);
				if(moneys < 1 || moneys > 20) { SendClientMessage(playerid, COLOR_GREY, "Вы не можете поставить меньше 1 и больше 20"); return true; }
				healpriclv = moneys;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "Цена лечения установлена в размере %d вирт", healpriclv);
				SendClientMessage(playerid, 0xA52A2AFF, string);
				return true;
			}
	    }
	    return true;
	}
	if(strcmp(cmd, "/escape", true) == 0)
	{
		if(IsAGang(playerid))
		{
			if(PlayerInfo[playerid][pJailed] != 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не в тюрьме!");
	 		if(keys[playerid] < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет ключа от тюрьмы!");
			keys[playerid] -= 1;
			SetPlayerInterior(playerid, 0);
			ACP_SetPlayerPos(playerid,1553.4962,-1675.2714,16.1953);
			SetPlayerFacingAngle(playerid, 95.0636);
			WantedLevel[playerid] = 0;
			WantedTime[playerid] = 0;
			WantedPoints[playerid] = 0;
			PlayerInfo[playerid][pJailTime] = 0;
			PlayerInfo[playerid][pJailed] = 0;
			PlayerInfo[playerid][pWantedLevel] = 0;
			SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
			SendClientMessage(playerid, COLOR_YELLOW, "Вы совершили побег из тюрьмы");
			WantedPoints[playerid] += 3;
			PlayerInfo[playerid][pWantedLevel] += 3;
			WantedLevel[playerid] += 3;
			SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
			SetPlayerCriminal(playerid,255, "Побег из тюрьмы");
			SendClientMessage(playerid, COLOR_WHITE, "Ваша узнаваемость повысилась");
		}
		else
		{
			return true;
		}
	}
	if(strcmp(cmd, "/getekey", true) == 0)
	{
		if(IsAGang(playerid))
		{
			if(keys[playerid] < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет ключей от тюрьмы!");
	 		GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "У Вас %d ключей", keys[playerid]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			format(string, sizeof(string), "%s достаёт ключи", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
			return true;
		}
	}
	if(strcmp(cmd, "/givecopkeys", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /givecopkeys [id]");
		new playa;
		playa = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pAdmin] >= 4)
		{
			if(IsPlayerConnected(playa))
			{
				if(playa != INVALID_PLAYER_ID)
				{
					keys[playa] += 1;
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "Офицер %s выдал ключи от полицейского участка %s", sendername,giveplayer);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		}
		return true;
	}
	if(strcmp(cmd, "/contract", true) == 0)
    {
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return   SendClientMessage(playerid, COLOR_GRAD1, " * Использование: /contract [playerid/PartOfName] [amount]");
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return  SendClientMessage(playerid, COLOR_GRAD1, " * Использование: /contract [playerid/PartOfName] [amount]");
			moneys = strvalEx(tmp);
			if(moneys < 1000 || moneys > 100000) { SendClientMessage(playerid, COLOR_GREY, "   Сумма котрактов должна быть минимум $1000, и максимум $100000!"); return 1; }
			if (IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(PlayerInfo[giveplayerid][pMember] == 24 && PlayerInfo[playerid][pMember] == 24) return  SendClientMessage(playerid, COLOR_GREY, " * Нельзя заказать контракт на члена вашего агенства!");
					else if(PlayerInfo[giveplayerid][pLeader] == 24 && PlayerInfo[playerid][pMember] == 24)   return   SendClientMessage(playerid, COLOR_GREY, " * Нельзя заказать контракт на члена вашего агенства!");
					else if(PlayerInfo[giveplayerid][pMember] == 24||PlayerInfo[giveplayerid][pLeader] == 24) return  SendClientMessage(playerid, COLOR_GREY, " * Вы неможете заказать этого человека!");
					else if(PlayerInfo[playerid][pMember] == 24) return  SendClientMessage(playerid, COLOR_GREY, "Вы не хитман");
					if(IsACop(giveplayerid) && moneys >= 3000)
					{
						SendClientMessage(playerid, COLOR_GREY, " * Только контракты больше $3000 могут быть положены на копов!");
						return 1;
					}
					if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, " * Вы не можете заказать себя!"); return 1; }
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					playermoney = PlayerInfo[playerid][pCash];
					if (moneys > 0 && playermoney >= moneys)
					{
						PlayerInfo[playerid][pCash] -= moneys;
						PlayerInfo[giveplayerid][pHeadValue] += moneys;
						format(string, sizeof(string), " * %s заказал %s на сумму $%d.",sendername, giveplayer, moneys);
						SendFamilyMessage(24, COLOR_YELLOW, string);
						format(string, sizeof(string), " * Вы сделали контракт на %s за $%d.",giveplayer, moneys);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, " * У вас не хватает денег!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   %d не активный игрок.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return true;
    }
	if(strcmp(cmd,"/portable",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pMember] == 24 || PlayerInfo[playerid][pLeader] == 24)//меняем на свой
            {
                ShowPlayerDialog(playerid,7763,DIALOG_STYLE_LIST,"Хитман Menu","Доступные контракты\nПодписать контракт\nПриобрести оружие\nОтказаться от заказа\nНайти цель\nРазъедениться","Далее","Отмена");
            }
        }
        return 1;
    }
	if(strcmp(cmd, "/heal", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pMember] == 23)
		{
 			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /heal [id]");
  			giveplayerid = ReturnUser(tmp);
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new giveambu = GetPlayerVehicleID(giveplayerid);
				new playambu = GetPlayerVehicleID(playerid);
				if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pMember] == 23)
				{
					if(IsAnAmbulance(playambu) && playambu == giveambu || PlayerToPoint(40.0,playerid,366.9755,-60.1330,1076.4773))
					{
						switch(PlayerInfo[playerid][pMember])
						{
						    case 4:
						    {
						        if(PlayerInfo[giveplayerid][pHP] >= 100) return SendClientMessage(playerid, COLOR_GREY, "Игроку не требуеться лечение");
								new healdialog[256];
								new hp = 100-PlayerInfo[giveplayerid][pHP];
								new hpprice = hp*healpricsf;
								format(healdialog,sizeof(healdialog), "Медик хочет вылечить вас за %d вирт\nВы согласны?", hpprice);
								ShowPlayerDialog(giveplayerid,5522,DIALOG_STYLE_MSGBOX, "Лечение", healdialog, "Да", "Нет");
								HealOffer[giveplayerid] = playerid;
								HealPrice[giveplayerid] = hpprice;
							}
						    case 22:
						    {
						        if(PlayerInfo[giveplayerid][pHP] >= 100) return SendClientMessage(playerid, COLOR_GREY, "Игроку не требуеться лечение");
								new healdialog[256];
								new hp = 100-PlayerInfo[giveplayerid][pHP];
								new hpprice = hp*healpricls;
								format(healdialog,sizeof(healdialog), "Медик хочет вылечить вас за %d вирт\nВы согласны?", hpprice);
								ShowPlayerDialog(giveplayerid,5522,DIALOG_STYLE_MSGBOX, "Лечение", healdialog, "Да", "Нет");
								HealOffer[giveplayerid] = playerid;
								HealPrice[giveplayerid] = hpprice;
							}
						    case 33:
						    {
						        if(PlayerInfo[giveplayerid][pHP] >= 100) return SendClientMessage(playerid, COLOR_GREY, "Игроку не требуеться лечение");
								new healdialog[256];
								new hp = 100-PlayerInfo[giveplayerid][pHP];
								new hpprice = hp*healpriclv;
								format(healdialog,sizeof(healdialog), "Медик хочет вылечить вас за %d вирт\nВы согласны?", hpprice);
								ShowPlayerDialog(giveplayerid,5522,DIALOG_STYLE_MSGBOX, "Лечение", healdialog, "Да", "Нет");
								HealOffer[giveplayerid] = playerid;
								HealPrice[giveplayerid] = hpprice;
							}
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/sethp", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /sethp [id] [Уровень HP]");
			new playa;
			new health;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			health = strval(tmp);
			if(IsPlayerConnected(playa))
			{
				if(playa != INVALID_PLAYER_ID)
				{
					SetPlayerHealthAC(playa, health);
					PlayerInfo[playa][pHP] = health;
					SendClientMessage(playerid, COLOR_WHITE, "Уровень HP игроку установлен");
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/veh", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /veh [id авто] [Цвет №1] [Цвет №2]");
			new car;
			car = strval(tmp);
			if(car < 400 || car > 611) { SendClientMessage(playerid, COLOR_GREY, "Номер машины не может быть меньше 400 и больше чем 611"); return true; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /veh [id авто] [Цвет №1] [Цвет №2]");
			new color1;
			color1 = strval(tmp);
			if(color1 < 0 || color1 > 126) { SendClientMessage(playerid, COLOR_GREY, "Номер цвета не может быть меньше 0 и больше 126"); return true; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /veh [id авто] [Цвет №1] [Цвет №2]");
			new color2;
			new intt = GetPlayerInterior(playerid);
			color2 = strval(tmp);
			if(color2 < 0 || color2 > 255) { SendClientMessage(playerid, COLOR_GREY, "Номер цвета не может быть меньше 0 и больше 126"); return true; }
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
			createdvehs++;
			Fuell[createdvehicles[createdvehs]] = 200;
			createdvehicles[createdvehs] = CreateVehicle(car, X,Y,Z, 0.0, color1, color2, 60000);
			PutPlayerInVehicle(playerid, createdvehicles[createdvehs], 0);
			CreatedCars[CreatedCar] = createdvehicles[createdvehs];
			SetVehicleParamsEx(GetPlayerVehicleID(playerid) ,VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
			EngineState[playerid] = true;
			UnLockCar(createdvehicles[createdvehs]);
			IsLocked[createdvehicles[createdvehs]] = 0;
			LinkVehicleToInterior(createdvehicles[createdvehs], intt);
			format(string, sizeof(string), "Автомобиль ID: %d создан, для удаления /delcar", car);
			SendClientMessage(playerid, COLOR_WHITE, string);
			return true;
		}
	}
	if(strcmp(cmd, "/delcar", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			if(IsPlayerConnected(playerid))
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
					DestroyVehicle(GetPlayerVehicleID(playerid));
					SendClientMessage(playerid, COLOR_GREEN, "Автомобиль успешно удален!");
					createdvehs--;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в автомобиле");
				}
			}
 		}
		return true;
	}
	if(strcmp(cmd, "/donate", true) == 0)
	{
		new lvlexp[80];
		new moneydonat[1200];
		format(moneydonat,1000,"{ffffff}1.Покупка виртов\n{ffffff}2.VIP аккaунт\n{ffffff}3.Скиллы на оружие [200 DonateMoney]\n4.Стили боя.\n5.Снятие WARNов [250 DonateMoney]");
		format(lvlexp,70,"Донат | Баланс: %d рублей",PlayerInfo[playerid][pDonateMoney1]);
		ShowPlayerDialog(playerid, 10055, DIALOG_STYLE_INPUT, lvlexp, moneydonat, "Выбрать", "Назад");
	}
	if(strcmp(cmd, "/givedonate", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 7)
		{
            if (dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT,"Доступ к администрированию","Введите Ваш пароль от административной панели","Ок","Отмена");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_GREY, "[Arizona RP] {e23434}Введите: /givedonate [ид] [сумма]");
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			DonateMoney1 = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 7)
			{
				if(IsPlayerConnected(playa))
				{
					if(playa != INVALID_PLAYER_ID)
					{
						format(string, sizeof(string), "[DONATE LOG] %d донат переведён на счёт игроку", DonateMoney1);
						SendClientMessage(playerid, COLOR_WHITE, string);
						PlayerInfo[playa][pDonateMoney1] += DonateMoney1;
						SendClientMessage(playa, COLOR_NEWS, "Пополнение доната аккаунта");
						SendClientMessage(playa, COLOR_GREY, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
						format(string, sizeof(string), "[DONATE] Пополнение счёта на сумму: {e23434}%d {e23434}рублей", DonateMoney1);
						SendClientMessage(playa, COLOR_GREY, string);
						format(string, sizeof(string), "[DONATE] Ваш донатный счёт: {d53e07}%d {33ccff}рублей", PlayerInfo[playa][pDonateMoney1]);
						SendClientMessage(playa, COLOR_WHITE, string);
						format(string, sizeof(string), "[DONATE] Для покупки чего либо, используйте команду {d53e07}/donate");
						SendClientMessage(playa, COLOR_WHITE, string);
						SendClientMessage(playa, COLOR_GREY, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Не верный ID игрока!");
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/money", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 9)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /money [id] [сумма]");
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(IsPlayerConnected(playa))
			{
				if(playa != INVALID_PLAYER_ID)
				{
					GetPlayerName(playa, sendername, sizeof(sendername));
					format(string, sizeof(string), "%d вирт переведены на счёт игроку %s", money,sendername);
					SendClientMessage(playerid, COLOR_WHITE, string);
					PlayerInfo[playa][pCash] += money;
					format(string, sizeof(string), "Пополнение счёта на сумму: %d вирт", money);
					SendClientMessage(playa, COLOR_WHITE, string);
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/gxyz", true) == 0 && PlayerInfo[playerid][pAdmin] >= 8)
    {
        if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
        tmp = strtok(cmdtext, idx);new Float:X = floatstr(tmp);if(!strlen(tmp)) return SendClientMessage(playerid, 0xFFFFFFAA, " /gxyz [x] [y] [z]");
        tmp = strtok(cmdtext, idx);new Float:Y = floatstr(tmp);if(!strlen(tmp)) return SendClientMessage(playerid, 0xFFFFFFAA, " /gxyz [x] [y] [z]");
        tmp = strtok(cmdtext, idx);new Float:Z = floatstr(tmp);if(!strlen(tmp)) return SendClientMessage(playerid, 0xFFFFFFAA, " /gxyz [x] [y] [z]");
        SetPlayerPos(playerid,X,Y,Z);
        return true;
    }
	if(strcmp(cmd, "/setsex", true) == 0)
    {
        if(!IsPlayerConnected(playerid)) return true;
        switch(PlayerInfo[playerid][pSex])
        {
            case 1:
            {
                PlayerInfo[playerid][pSex] = 2;
                SendClientMessage(playerid, COLOR_WHITE, "Вы сменили свой пол на Женский");
                return true;
            }
            case 2:
            {
                PlayerInfo[playerid][pSex] = 1;
                SendClientMessage(playerid, COLOR_WHITE, "Вы сменили свой пол на Мужской");
                return true;
            }
        }
        return true;
    }
    else if(strcmp(cmd, "/leaders", true) == 0)
    {
        new strr[128],sctringg[2500];
        new file1 = ini_openFile("gamefiles/log/leaders.ini");
        ini_getString(file1,"LSPD",pLeaders[0]);
        ini_getString(file1,"FBI",pLeaders[1]);
        ini_getString(file1,"ARMY SF",pLeaders[2]);
        ini_getString(file1,"MEDICSSF",pLeaders[3]);
        ini_getString(file1,"LCN",pLeaders[4]);
        ini_getString(file1,"YAKUZA",pLeaders[5]);
        ini_getString(file1,"MARYA",pLeaders[6]);
        ini_getString(file1,"KAZINO",pLeaders[7]);
        ini_getString(file1,"SFN",pLeaders[8]);
        ini_getString(file1,"SFPD",pLeaders[9]);
        ini_getString(file1,"LICENSERS",pLeaders[10]);
        ini_getString(file1,"BALLAS",pLeaders[11]);
        ini_getString(file1,"VAGOS",pLeaders[12]);
        ini_getString(file1,"RM",pLeaders[13]);
        ini_getString(file1,"GROVE",pLeaders[14]);
        ini_getString(file1,"LSNEWS",pLeaders[15]);
        ini_getString(file1,"AZTEC",pLeaders[16]);
        ini_getString(file1,"RIFA",pLeaders[17]);
        ini_getString(file1,"ARMY LV",pLeaders[18]);
        ini_getString(file1,"LVNEWS",pLeaders[19]);
        ini_getString(file1,"LVPD",pLeaders[20]);
        ini_getString(file1,"MEDICSLS",pLeaders[21]);
        ini_getString(file1,"MEDICSLV",pLeaders[22]);
        ini_getString(file1,"HITMAN",pLeaders[23]);
        new text[25][32];
        if(IsPlayerConnected(GetPlayerID(pLeaders[0]))) { text[1] = "[{22ff00}Online{F2EEF0}]"; } else { text[1] = "[{ff001c}Offline{F2EEF0}]"; }
	    if(IsPlayerConnected(GetPlayerID(pLeaders[1]))) { text[2] = "[{22ff00}Online{F2EEF0}]"; } else { text[2] = "[{ff001c}Offline{F2EEF0}]"; }
	    if(IsPlayerConnected(GetPlayerID(pLeaders[2]))) { text[3] = "[{22ff00}Online{F2EEF0}]"; } else { text[3] = "[{ff001c}Offline{F2EEF0}]"; }
	    if(IsPlayerConnected(GetPlayerID(pLeaders[3]))) { text[4] = "[{22ff00}Online{F2EEF0}]"; } else { text[4] = "[{ff001c}Offline{F2EEF0}]"; }
	    if(IsPlayerConnected(GetPlayerID(pLeaders[4]))) { text[5] = "[{22ff00}Online{F2EEF0}]"; } else { text[5] = "[{ff001c}Offline{F2EEF0}]"; }
	    if(IsPlayerConnected(GetPlayerID(pLeaders[5]))) { text[6] = "[{22ff00}Online{F2EEF0}]"; } else { text[6] = "[{ff001c}Offline{F2EEF0}]"; }
	    if(IsPlayerConnected(GetPlayerID(pLeaders[6]))) { text[7] = "[{22ff00}Online{F2EEF0}]"; } else { text[7] = "[{ff001c}Offline{F2EEF0}]"; }
	    if(IsPlayerConnected(GetPlayerID(pLeaders[7]))) { text[8] = "[{22ff00}Online{F2EEF0}]"; } else { text[8] = "[{ff001c}Offline{F2EEF0}]"; }
	    if(IsPlayerConnected(GetPlayerID(pLeaders[8]))) { text[9] = "[{22ff00}Online{F2EEF0}]"; } else { text[9] = "[{ff001c}Offline{F2EEF0}]"; }
	    if(IsPlayerConnected(GetPlayerID(pLeaders[9]))) { text[10] = "[{22ff00}Online{F2EEF0}]"; } else { text[10] = "[{ff001c}Offline{F2EEF0}]"; }
	    if(IsPlayerConnected(GetPlayerID(pLeaders[10]))) { text[11] = "[{22ff00}Online{F2EEF0}]"; } else { text[11] = "[{ff001c}Offline{F2EEF0}]"; }
	    if(IsPlayerConnected(GetPlayerID(pLeaders[11]))) { text[12] = "[{22ff00}Online{F2EEF0}]"; } else { text[12] = "[{ff001c}Offline{F2EEF0}]"; }
	    if(IsPlayerConnected(GetPlayerID(pLeaders[12]))) { text[13] = "[{22ff00}Online{F2EEF0}]"; } else { text[13] = "[{ff001c}Offline{F2EEF0}]"; }
	    if(IsPlayerConnected(GetPlayerID(pLeaders[13]))) { text[14] = "[{22ff00}Online{F2EEF0}]"; } else { text[14] = "[{ff001c}Offline{F2EEF0}]"; }
	    if(IsPlayerConnected(GetPlayerID(pLeaders[14]))) { text[15] = "[{22ff00}Online{F2EEF0}]"; } else { text[15] = "[{ff001c}Offline{F2EEF0}]"; }
	    if(IsPlayerConnected(GetPlayerID(pLeaders[15]))) { text[16] = "[{22ff00}Online{F2EEF0}]"; } else { text[16] = "[{ff001c}Offline{F2EEF0}]"; }
	    if(IsPlayerConnected(GetPlayerID(pLeaders[16]))) { text[17] = "[{22ff00}Online{F2EEF0}]"; } else { text[17] = "[{ff001c}Offline{F2EEF0}]"; }
	    if(IsPlayerConnected(GetPlayerID(pLeaders[17]))) { text[18] = "[{22ff00}Online{F2EEF0}]"; } else { text[18] = "[{ff001c}Offline{F2EEF0}]"; }
	    if(IsPlayerConnected(GetPlayerID(pLeaders[18]))) { text[19] = "[{22ff00}Online{F2EEF0}]"; } else { text[19] = "[{ff001c}Offline{F2EEF0}]"; }
	    if(IsPlayerConnected(GetPlayerID(pLeaders[19]))) { text[20] = "[{22ff00}Online{F2EEF0}]"; } else { text[20] = "[{ff001c}Offline{F2EEF0}]"; }
	    if(IsPlayerConnected(GetPlayerID(pLeaders[20]))) { text[21] = "[{22ff00}Online{F2EEF0}]"; } else { text[21] = "[{ff001c}Offline{F2EEF0}]"; }
	    if(IsPlayerConnected(GetPlayerID(pLeaders[21]))) { text[22] = "[{22ff00}Online{F2EEF0}]"; } else { text[22] = "[{ff001c}Offline{F2EEF0}]"; }
	    if(IsPlayerConnected(GetPlayerID(pLeaders[22]))) { text[23] = "[{22ff00}Online{F2EEF0}]"; } else { text[23] = "[{ff001c}Offline{F2EEF0}]"; }
	    if(IsPlayerConnected(GetPlayerID(pLeaders[23]))) { text[24] = "[{22ff00}Online{F2EEF0}]"; } else { text[24] = "[{ff001c}Offline{F2EEF0}]"; }
        format(strr,sizeof(strr),"{9ACD32}======== ГОС. ФРАКЦИИ{F2EEF0}\n"); // ГОСУДАРСТВЕННЫЕ ФРАКЦИИ
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"Мэрия:\t\t%s %s\n",pLeaders[6],text[7]); // Гос.
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"ФБР:\t\t%s %s\n",pLeaders[1],text[2]); // Гос.
    	strcat(sctringg,strr);
		format(strr,sizeof(strr),"Полиция LS:\t%s %s\n",pLeaders[0],text[1]); // Гос.
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"Полиция SF:\t%s %s\n",pLeaders[9],text[10]); // Гос.
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"Полиция LV:\t%s %s\n",pLeaders[20],text[21]); // Гос.
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"Армия SF:\t%s %s\n",pLeaders[2],text[3]);// Армия
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"Армия LV:\t%s %s\n",pLeaders[18],text[19]); // Армия
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"Автошкола:\t%s %s\n",pLeaders[10],text[11]); // Гос.
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"{9ACD32}======== СЛУЖБЫ СПАСЕНИЯ{F2EEF0}\n"); //  СЛУЖБЫ СПАСЕНИЯ
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"Медики LS:\t%s %s\n",pLeaders[21],text[22]); // Медики
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"Медики SF:\t%s %s\n",pLeaders[3],text[4]);// Медики
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"Медики LV:\t%s %s\n",pLeaders[22],text[23]); // Медики
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"{9ACD32}======== СМИ{F2EEF0}\n"); // СРЕДСТВА МАССОВОЙ ИНФОРМАЦИИ
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"Новости LS:\t%s %s\n",pLeaders[15],text[16]);// СМИ
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"Новости SF:\t%s %s\n",pLeaders[8],text[9]); // СМИ
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"Новости LV:\t%s %s\n",pLeaders[19],text[20]); // СМИ
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"{9ACD32}======== МАФИИ{F2EEF0}\n"); // МАФИИ
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"Мафия LCN:\t%s %s\n",pLeaders[4],text[5]); // Мафия
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"Мафия RM:\t%s %s\n",pLeaders[13],text[14]);// Мафия
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"Мафия Yakuza:\t%s %s\n",pLeaders[5],text[6]); // Мафия
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"{9ACD32}======== РАЗВЛЕЧЕНИЯ{F2EEF0}\n"); // РАЗВЛЕЧЕНИЯ
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"Казино Caligula:%s %s\n",pLeaders[7],text[8]); // Развлечения
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"{9ACD32}======== БАНДЫ{F2EEF0}\n"); // БАНДЫ
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"Банда Ballas:\t%s %s\n",pLeaders[11],text[12]); // Банда
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"Банда Vagos:\t%s %s\n",pLeaders[12],text[13]); // Банда
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"Банда Groove:\t%s %s\n",pLeaders[14],text[15]);// Банда
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"Банда Aztec:\t%s %s\n",pLeaders[16],text[17]);// Банда
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"Банда Rifa:\t%s %s\n",pLeaders[17],text[18]);// Банда
    	strcat(sctringg,strr);
    	format(strr,sizeof(strr),"Хитманы:\t%s %s\n",pLeaders[23],text[24]);// Банда
    	strcat(sctringg,strr);
    	ShowPlayerDialog(playerid,9999,DIALOG_STYLE_MSGBOX ,"Лидеры.",sctringg,"X","");
        ini_closeFile(file1);
        return true;
    }
    if(strcmp(cmd, "/iweap", true) == 0)
    {
	    if(PlayerInfo[playerid][pAdmin] >= 4)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
		    new str[128],sctring[2000];
		    tmp = strtok(cmdtext,idx);
		    if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Команда: /iweap [id игрока]");
		    giveplayerid = ReturnUser(tmp);
		    if (giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок Оффлайн");
		    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		    format(str,sizeof(str),"{33CC00}%s\n\n", giveplayer);strcat(sctring,str);
		    format(str,sizeof(str),"{ffff00}State: %d\n", GetPlayerState(giveplayerid));strcat(sctring,str);
		    format(str,sizeof(str),"{ff00ff}0 \t Ид оружия: %d \t Патрон: %d\n", PlayerInfo[giveplayerid][pSlot][0], PlayerInfo[giveplayerid][pSlotammo][0]);strcat(sctring,str);
		    format(str,sizeof(str),"{ff00ff}1 \t Ид оружия: %d \t Патрон: %d\n", PlayerInfo[giveplayerid][pSlot][1], PlayerInfo[giveplayerid][pSlotammo][1]);strcat(sctring,str);
		    format(str,sizeof(str),"{ff00ff}2 \t Ид оружия: %d \t Патрон: %d\n", PlayerInfo[giveplayerid][pSlot][2], PlayerInfo[giveplayerid][pSlotammo][2]);strcat(sctring,str);
		    format(str,sizeof(str),"{ff00ff}3 \t Ид оружия: %d \t Патрон: %d\n", PlayerInfo[giveplayerid][pSlot][3], PlayerInfo[giveplayerid][pSlotammo][3]);strcat(sctring,str);
		    format(str,sizeof(str),"{ff00ff}4 \t Ид оружия: %d \t Патрон: %d\n", PlayerInfo[giveplayerid][pSlot][4], PlayerInfo[giveplayerid][pSlotammo][4]);strcat(sctring,str);
		    format(str,sizeof(str),"{ff00ff}5 \t Ид оружия: %d \t Патрон: %d\n", PlayerInfo[giveplayerid][pSlot][5], PlayerInfo[giveplayerid][pSlotammo][5]);strcat(sctring,str);
		    format(str,sizeof(str),"{ff00ff}6 \t Ид оружия: %d \t Патрон: %d\n", PlayerInfo[giveplayerid][pSlot][6], PlayerInfo[giveplayerid][pSlotammo][6]);strcat(sctring,str);
		    format(str,sizeof(str),"{ff00ff}7 \t Ид оружия: %d \t Патрон: %d\n", PlayerInfo[giveplayerid][pSlot][7], PlayerInfo[giveplayerid][pSlotammo][7]);strcat(sctring,str);
		    format(str,sizeof(str),"{ff00ff}8 \t Ид оружия: %d \t Патрон: %d\n", PlayerInfo[giveplayerid][pSlot][8], PlayerInfo[giveplayerid][pSlotammo][8]);strcat(sctring,str);
		    format(str,sizeof(str),"{ff00ff}9 \t Ид оружия: %d \t Патрон: %d\n", PlayerInfo[giveplayerid][pSlot][9], PlayerInfo[giveplayerid][pSlotammo][9]);strcat(sctring,str);
		    format(str,sizeof(str),"{ff00ff}10 \t Ид оружия: %d \t Патрон: %d\n", PlayerInfo[giveplayerid][pSlot][10], PlayerInfo[giveplayerid][pSlotammo][10]);strcat(sctring,str);
		    format(str,sizeof(str),"{ff00ff}11 \t Ид оружия: %d \t Патрон: %d\n", PlayerInfo[giveplayerid][pSlot][11], PlayerInfo[giveplayerid][pSlotammo][11]);strcat(sctring,str);
		    format(str,sizeof(str),"{ff00ff}12 \t Ид оружия: %d \t Патрон: %d\n", PlayerInfo[giveplayerid][pSlot][12], PlayerInfo[giveplayerid][pSlotammo][12]);strcat(sctring,str);
		    ShowPlayerDialog(playerid,22815,DIALOG_STYLE_MSGBOX,"Информация оружия",sctring,"Закрыть","");
		    return 1;
		}
    }
    if(strcmp(cmd, "/aunleader", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /aunleader [ид]");
		new para1;
		para1 = ReturnUser(tmp);
		if (PlayerInfo[playerid][pAdmin] >= 8)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			if(IsPlayerConnected(para1))
			{
				if (PlayerInfo[para1][pMember] > 0)
				{
					if(PlayerInfo[para1][pLeader] == 0) return SendClientMessage(playerid,COLOR_GREY,"Данный человек не лидер!");
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new iniFile = ini_openFile("gamefiles/log/leaders.ini");
					if(PlayerInfo[para1][pLeader] == 1) {
					ini_removeKey  (iniFile, "LSPD" ); ini_setString(iniFile, "LSPD","None"); }
					else if(PlayerInfo[para1][pLeader] == 2) {if(PlayerInfo[para1][pAdmin] == 0){ ini_removeKey  (iniFile, "FBI" ); ini_setString(iniFile, "FBI","None"); }}
					else if(PlayerInfo[para1][pLeader] == 3) {if(PlayerInfo[para1][pAdmin] == 0){  ini_removeKey  (iniFile, "ARMY SF" ); ini_setString(iniFile, "ARMY SF","None"); }}
					else if(PlayerInfo[para1][pLeader] == 4) {if(PlayerInfo[para1][pAdmin] == 0){  ini_removeKey  (iniFile, "MEDICSSF" ); ini_setString(iniFile, "MEDICSSF","None"); }}
					else if(PlayerInfo[para1][pLeader] == 5) {if(PlayerInfo[para1][pAdmin] == 0){  ini_removeKey  (iniFile, "LCN" ); ini_setString(iniFile, "LCN","None"); }}
					else if(PlayerInfo[para1][pLeader] == 6) {if(PlayerInfo[para1][pAdmin] == 0){   ini_removeKey  (iniFile, "YAKUZA" ); ini_setString(iniFile, "YAKUZA","None"); }}
					else if(PlayerInfo[para1][pLeader] == 7) {if(PlayerInfo[para1][pAdmin] == 0){ ini_removeKey  (iniFile, "MARYA" ); ini_setString(iniFile, "MARYA","None"); }}
					else if(PlayerInfo[para1][pLeader] == 8) {if(PlayerInfo[para1][pAdmin] == 0){  ini_removeKey  (iniFile, "KAZINO" ); ini_setString(iniFile, "KAZINO","None"); }}
					else if(PlayerInfo[para1][pLeader] == 9) {if(PlayerInfo[para1][pAdmin] == 0){  ini_removeKey  (iniFile, "SFN" ); ini_setString(iniFile, "SFN","None"); }}
					else if(PlayerInfo[para1][pLeader] == 10) {if(PlayerInfo[para1][pAdmin] == 0){ ini_removeKey  (iniFile, "SFPD" ); ini_setString(iniFile, "SFPD","None"); }}
					else if(PlayerInfo[para1][pLeader] == 11) {if(PlayerInfo[para1][pAdmin] == 0){  ini_removeKey  (iniFile, "LICENSERS" ); ini_setString(iniFile, "LICENSERS","None"); }}
					else if(PlayerInfo[para1][pLeader] == 12) {if(PlayerInfo[para1][pAdmin] == 0){    ini_removeKey  (iniFile, "BALLAS" ); ini_setString(iniFile, "BALLAS","None"); }}
					else if(PlayerInfo[para1][pLeader] == 13) {if(PlayerInfo[para1][pAdmin] == 0){    ini_removeKey  (iniFile, "VAGOS" ); ini_setString(iniFile, "VAGOS","None"); }}
					else if(PlayerInfo[para1][pLeader] == 14) {if(PlayerInfo[para1][pAdmin] == 0){ ini_removeKey  (iniFile, "RM" ); ini_setString(iniFile, "RM","None"); }}
					else if(PlayerInfo[para1][pLeader] == 15) {if(PlayerInfo[para1][pAdmin] == 0){  ini_removeKey  (iniFile, "GROVE" ); ini_setString(iniFile, "GROVE","None"); }}
					else if(PlayerInfo[para1][pLeader] == 16) {if(PlayerInfo[para1][pAdmin] == 0){  ini_removeKey  (iniFile, "LSNEWS" ); ini_setString(iniFile, "LSNEWS","None"); }}
					else if(PlayerInfo[para1][pLeader] == 17) {if(PlayerInfo[para1][pAdmin] == 0){   ini_removeKey  (iniFile, "AZTEC" ); ini_setString(iniFile, "AZTEC","None"); }}
					else if(PlayerInfo[para1][pLeader] == 18) {if(PlayerInfo[para1][pAdmin] == 0){    ini_removeKey  (iniFile, "RIFA" ); ini_setString(iniFile, "RIFA","None"); }}
					else if(PlayerInfo[para1][pLeader] == 19) {if(PlayerInfo[para1][pAdmin] == 0){   ini_removeKey  (iniFile, "ARMY LV" ); ini_setString(iniFile, "ARMY LV","None"); }}
					else if(PlayerInfo[para1][pLeader] == 20) {if(PlayerInfo[para1][pAdmin] == 0){ ini_removeKey  (iniFile, "LVNEWS" ); ini_setString(iniFile, "LVNEWS","None"); }}
					else if(PlayerInfo[para1][pLeader] == 21) {if(PlayerInfo[para1][pAdmin] == 0){ ini_removeKey  (iniFile, "LVPD" ); ini_setString(iniFile, "LVPD","None"); }}
					else if(PlayerInfo[para1][pLeader] == 22) {if(PlayerInfo[para1][pAdmin] == 0){ ini_removeKey  (iniFile, "MEDICSLS" ); ini_setString(iniFile, "MEDICSLS","None"); }}
					else if(PlayerInfo[para1][pLeader] == 23) {if(PlayerInfo[para1][pAdmin] == 0){ ini_removeKey  (iniFile, "MEDICSLV" ); ini_setString(iniFile, "MEDICSLV","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 24) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "HITMAN" ); ini_setString(iniFile, "HITMAN","None"); }}
					ini_closeFile(iniFile);
					format(string, sizeof(string), "Вы были сняты с лидерки администратором {FFFFFF}%s", sendername);
					SendClientMessage(para1, COLOR_LIGHTRED, string);
					format(string, sizeof(string), "Вы сняли {FFFFFF}%s {FF6347}с лидерки", giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTRED, string);
					PlayerInfo[para1][pMember] = 0;
					PlayerInfo[para1][pLeader] = 0;
					PlayerInfo[para1][pRank] = 0;
					SetPlayerArmourAC(para1, 0);
					DelGun(para1);
					FormaFrac[para1] = 0;
					PlayerInfo[para1][pWdraw] = 0;
					SetPlayerColor(para1, TEAM_HIT_COLOR);
					SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					format(string, 256, "%s unleader %s", sendername, giveplayer);
					MkLeader(string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");
			}
		}
	}
	if(strcmp(cmd, "/slap", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /slap [id]");
			new playa;
			new Float:shealth;
			new Float:slx, Float:sly, Float:slz;
			playa = ReturnUser(tmp);
		    if(IsPlayerConnected(playa))
		    {
		        if(playa != INVALID_PLAYER_ID)
		        {
			        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerHealth(playa, shealth);
					SetPlayerHealthAC(playa, shealth - 5);
					GetPlayerPos(playa, slx, sly, slz);
					ACP_SetPlayerPos(playa, slx, sly, slz+5);
					PlayerPlaySound(playa, 1130, slx, sly, slz+5);
					format(string, sizeof(string), "{FF9900}Администратор {FFFFFF}%s  {FF9900}дал поджопник {FFFFFF}%s",sendername, giveplayer);
					ABroadCast(COLOR_LIGHTRED, string, 1);
					format(string, sizeof(string), "{FF9900}Администратор {FFFFFF}%s  {FF9900}дал поджопник {FFFFFF}%s",sendername, giveplayer);
					SendClientMessage(playa, COLOR_LIGHTRED, string);
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/agivelicense", true) == 0 || strcmp(cmd, "/agl", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 8)
        {
            if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
            ShowPlayerDialog(playerid,555,DIALOG_STYLE_LIST, "Выдача лицензий", "Лицензия на вождение\nЛицензия на полёты\nЛицензия на рыболовлю\nЛицензия на вождение водного транспорта\nЛицензия на оружие\nЛицензия на бизнес\nКомплект лицензий", "Продолжить", "Отмена");
			return true;
        }
    }
	if(strcmp(cmd, "/mute", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /mute [id] [минуты] [причина]");
			new playa;
			playa = ReturnUser(tmp);
   			tmp = strtok(cmdtext, idx);
   			GetPlayerName(playa, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new result[64];
			new length = strlen(cmdtext);
			new offset = idx;
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /mute [id] [минуты] [причина]");
      		if(!strlen(tmp))
	  		{
		  		if(PlayerInfo[playa][pMuted] == 1)
				{
					PlayerInfo[playa][pMuted] = 0;
					PlayerInfo[playa][pMuteTime] = 0;
					format(string, sizeof(string), "{FF9900}Администратор {FFFFFF}%s {FF9900}снял бан чата у {FFFFFF}%s",sendername, giveplayer);
					SendClientMessageToAll(COLOR_LIGHTRED, string);
				}
	  			return true;
	  		}
      		new mins = strval(tmp);
			if(mins < 0 || mins > 60)return SendClientMessage(playerid,COLOR_GREY,"Бан чата не может быть больше 60 минут!");
		    if(IsPlayerConnected(playa))
		    {
		        if(playa != INVALID_PLAYER_ID)
		        {
					if(PlayerInfo[playa][pMuted] == 0)
					{
						PlayerInfo[playa][pMuteTime] = mins*60;
						PlayerInfo[playa][pMuted] = 1;
						format(string, sizeof(string), "{FFFFFF}%s {FF9900}получил бан чата от администратора  {FFFFFF}%s{FF9900}. Причина: {FFFFFF}%s",giveplayer, sendername,result);
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						format(string, sizeof(string), "Вам выдали бан чата на %d минут", mins);
						SendClientMessage(playa, COLOR_WHITE, string);
					}
					else
					{
						PlayerInfo[playa][pMuted] = 0;
						PlayerInfo[playa][pMuteTime] = 0;
						format(string, sizeof(string), "{FF9900}Администратор {FFFFFF}%s {FF9900}снял бан чата у {FFFFFF}%s",sendername, giveplayer);
						SendClientMessageToAll(COLOR_LIGHTRED, string);
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/hmute", true) == 0)
	{
		if(PlayerInfo[playerid][pHelp] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /hmute [id] [минуты] [причина]");
			new playa;
			playa = ReturnUser(tmp);
   			tmp = strtok(cmdtext, idx);
   			GetPlayerName(playa, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new result[64];
			new length = strlen(cmdtext);
			new offset = idx;
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /hmute [id] [минуты] [причина]");
      		if(!strlen(tmp))
	  		{
		  		if(PlayerInfo[playa][pMuted] == 1)
				{
					PlayerInfo[playa][pMuted] = 0;
					PlayerInfo[playa][pMuteTime] = 0;
					format(string, sizeof(string), "{FF9900}Агент поддержки {FFFFFF}%s {FF9900}снял бан чата у {FFFFFF}%s",sendername, giveplayer);
					SendClientMessageToAll(COLOR_LIGHTRED, string);
				}
	  			return true;
	  		}
      		new mins = strval(tmp);
      		if(mins < 0 || mins > 60)return SendClientMessage(playerid,COLOR_GREY,"Бан чата не может быть больше 30 минут!");
		    if(IsPlayerConnected(playa))
		    {
		        if(playa != INVALID_PLAYER_ID)
		        {
					if(PlayerInfo[playa][pMuted] == 0)
					{
						PlayerInfo[playa][pMuteTime] = mins*60;
						PlayerInfo[playa][pMuted] = 1;
						format(string, sizeof(string), "{FFFFFF}%s {FF9900}получил бан чата от агента поддержки {FFFFFF}%s{FF9900}. Причина: {FFFFFF}%s",giveplayer, sendername,result);
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						format(string, sizeof(string), "Вам выдали бан чата на %d минут", mins);
						SendClientMessage(playa, COLOR_WHITE, string);
					}
					else
					{
						PlayerInfo[playa][pMuted] = 0;
						PlayerInfo[playa][pMuteTime] = 0;
						format(string, sizeof(string), "{FF9900}Агент поддержки {FFFFFF}%s{FF9900} снял бан чата у {FFFFFF}%s",sendername, giveplayer);
						SendClientMessageToAll(COLOR_LIGHTRED, string);
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/id", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /id [ник]");
		new target;
		target = ReturnUser(tmp);
		if(IsPlayerConnected(target))
		{
			if(target != INVALID_PLAYER_ID)
			{
				GetPlayerName(target, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "%s [%d] ",giveplayer,target);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/aad", true) == 0 || strcmp(cmd, "/ффв", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /aad [текст]");
			format(string, sizeof(string), "Администратор %s: %s", sendername, result);
			OOCOff(COLOR_LIGHTRED,string);
			return true;
		}
	}
	if(strcmp(cmd, "/aaddd", true) == 0)
	{
	    if(dostup[playerid] != 1)return OnPlayerCommandText(playerid, "/alogin");
	    if(PlayerInfo[playerid][pAdmin] >= 10)
	    {
	        new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /aaddd код = сумма");
			if(PlayerInfo[playerid][pAdmin] >= 7)
			{
				format(string, sizeof(string), "%s", result);
				DonateAdd(string);
				return true;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вам не доступна данная команда");
		}
	}
	if(strcmp(cmd, "/b", true) == 0 || strcmp(cmd, "/и", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У вас бан чата");
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		new succ;
		for(new i; i < strlen(result); i++)
		{
			if(PText[playerid][i] == result[i]) succ++;
		}
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /b [сообщение]");
		if(!CheckString(playerid,result))return 1;
		format(string, sizeof(string), "OOC-Chat (( {e23434}%s: {FFFFFF}%s )) ", sendername, result);
		ProxDetector(20.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
		return true;
	}
	if(strcmp(cmd, "/whisper", true ) == 0 || strcmp(cmd, "/w", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У вас бан чата!");
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		new succ;
		for(new i; i < strlen(result); i++)
		{
			if(PText[playerid][i] == result[i]) succ++;
		}
		if(!strlen(result)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /w [сообщение]");
		if(!CheckString(playerid,result))return 1;
		format(string, sizeof(string), "{6E6E6E}%s сказал(а) шопотом: %s", sendername, result);
		ProxDetector(1.0, playerid, string, 0x6E6E6EAA, 0x6E6E6EAA, 0x6E6E6EAA, 0x6E6E6EAA, 0x6E6E6EAA);
		return true;
	}
	if(strcmp(cmd, "/kick", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /kick [id] [причина]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			    	if(PlayerInfo[giveplayerid][pAdmin] >= 6) return SendClientMessage(playerid, COLOR_GREY, "Администратор не может быть кикнут!");
				    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /kick [id] [reason]");
					format(string, sizeof(string), "{FF9900}Администратор {FFFFFF}%s {FF9900}кикнул {FFFFFF}%s. {FF9900}Причина: {FFFFFF}%s", sendername,giveplayer, (result));
					SendClientMessageToAll(COLOR_LIGHTRED, string);
     				FixKickedPlayer[giveplayerid] = 1;
					return true;
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/skick", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}{e23434}Введите: /skick [id]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(PlayerInfo[giveplayerid][pAdmin] >= 6) return SendClientMessage(playerid, COLOR_GREY, "Администратор не может быть кикнут!");
     				FixKickedPlayer[giveplayerid] = 1;
				}
				new ip[15];
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "{FFFF33}Администратор %s  тихо кикнул игрока %s.", sendername, giveplayer);
  				ABroadCast(COLOR_LIGHTRED, string, 1);
  				format(string, sizeof(string), "{FF9900}Ник: [%s] | IP: [%s] | R: [IP: %s] | L: [IP: %s]",giveplayer,ip,string,string);
  	  			ABroadCast(COLOR_LIGHTRED, string, 1);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/delakk", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 10)
	    {
        	if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
            new akk[256],ssss[256],dire[48];
            akk = strtok(cmdtext, idx);
            if(!strlen(akk)) return SendClientMessage(playerid,COLOR_GREY, "{e23434}Введите: /delakk [аккаунт]");
            format(string,sizeof(string), "%s.ini",akk);
            if(!fexist(string)) return SendClientMessage(playerid,COLOR_RED, "Аккаунт не найден");
            format(dire,sizeof(dire), "DelAkk/%s.ini",akk);
            fcopytextfile(string,dire);
            fremove(string);
            format(ssss,sizeof(ssss), "Аккаунт %s был успешно удален.",akk);
            SendClientMessage(playerid,COLOR_GREEN,ssss);
            format(string, 256, "|| %s deleted %s || -\n ", sendername, akk);
            DelAkk(string);
        }
        return true;
	}
	if(strcmp(cmd, "/offban", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
            if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))  return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /offban [Ник] [Причина]");
			new reason[128];
   			reason = bigstr(cmdtext, idx);
    		if(!strlen(reason)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /offban [Ник] [Причина]");
	   	    format(string, sizeof(string), "%s.ini", tmp);
            if(fexist(string))
      		{
				format(string, sizeof(string), "%s.ini", tmp);
                new File = ini_openFile(string);
				ini_setInteger(File, "Ban",1);
				ini_closeFile(File);
                GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[OFFBAN] {FF9900}Администратор {FFFFFF}%s {FF9900}забанил {FFFFFF}%s. {FF9900}Причина: {FFFFFF}%s",sendername,tmp,reason);
   				ABroadCast(COLOR_LIGHTRED, string, 1);
   				format(string, 256, "%s zabanil off %s ", sendername, tmp);
				BanLog(string);
			}
   			else
            {
		        format(string, sizeof(string), "Аккаунт не найден");
                SendClientMessage(playerid, COLOR_GREY, string);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/unban", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /unban [ник]");
			format(string, sizeof(string), "%s.ini", tmp);
			if(fexist(string))
			{
				format(string, sizeof(string), "%s.ini", tmp);
				new File = ini_openFile(string);
				ini_setInteger(File, "Ban",0);
				ini_closeFile(File);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "Администратор %s разбанил %s",sendername,tmp);
				ABroadCast(COLOR_LIGHTRED, string, 1);
				format(string, 256, "%s razbanil %s", sendername, tmp);
				BanLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Аккаунт не найден");
			}
		}
		return true;
	}
	else if(strcmp(cmd, "/offleader", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 8)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			new lid;
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /offleader [ник]");
			format(string, sizeof(string), "%s.ini", tmp);
			if(fexist(string))
			{
				format(string, sizeof(string), "%s.ini", tmp);
				new File = ini_openFile(string);
				ini_getInteger(File,"Leader",lid);
				new iniFile = ini_openFile("gamefiles/log/leaders.ini");
				if(lid == 1) { ini_removeKey  (iniFile, "LSPD" ); ini_setString(iniFile, "LSPD","None"); }
				else if(lid == 2) { ini_removeKey  (iniFile, "FBI" ); ini_setString(iniFile, "FBI","None"); }
				else if(lid == 3) {  ini_removeKey  (iniFile, "ARMY SF" ); ini_setString(iniFile, "ARMY SF","None"); }
				else if(lid == 4) {  ini_removeKey  (iniFile, "MEDICSSF" ); ini_setString(iniFile, "MEDICSSF","None"); }
				else if(lid == 5) {  ini_removeKey  (iniFile, "LCN" ); ini_setString(iniFile, "LCN","None"); }
				else if(lid == 6) {   ini_removeKey  (iniFile, "YAKUZA" ); ini_setString(iniFile, "YAKUZA","None"); }
				else if(lid == 7) { ini_removeKey  (iniFile, "MARYA" ); ini_setString(iniFile, "MARYA","None"); }
				else if(lid == 8) {  ini_removeKey  (iniFile, "KAZINO" ); ini_setString(iniFile, "KAZINO","None"); }
				else if(lid == 9) {  ini_removeKey  (iniFile, "SFN" ); ini_setString(iniFile, "SFN","None"); }
				else if(lid == 10) { ini_removeKey  (iniFile, "SFPD" ); ini_setString(iniFile, "SFPD","None"); }
				else if(lid == 11) {  ini_removeKey  (iniFile, "LICENSERS" ); ini_setString(iniFile, "LICENSERS","None"); }
				else if(lid == 12){    ini_removeKey  (iniFile, "BALLAS" ); ini_setString(iniFile, "BALLAS","None"); }
				else if(lid == 13){    ini_removeKey  (iniFile, "VAGOS" ); ini_setString(iniFile, "VAGOS","None"); }
				else if(lid == 14) { ini_removeKey  (iniFile, "RM" ); ini_setString(iniFile, "RM","None"); }
				else if(lid == 15){  ini_removeKey  (iniFile, "GROVE" ); ini_setString(iniFile, "GROVE","None"); }
				else if(lid == 16) {  ini_removeKey  (iniFile, "LSNEWS" ); ini_setString(iniFile, "LSNEWS","None"); }
				else if(lid == 17){   ini_removeKey  (iniFile, "AZTEC" ); ini_setString(iniFile, "AZTEC","None"); }
				else if(lid == 18){    ini_removeKey  (iniFile, "RIFA" ); ini_setString(iniFile, "RIFA","None"); }
				else if(lid == 19){   ini_removeKey  (iniFile, "ARMY LV" ); ini_setString(iniFile, "ARMY LV","None"); }
				else if(lid == 20) { ini_removeKey  (iniFile, "LVNEWS" ); ini_setString(iniFile, "LVNEWS","None"); }
				else if(lid == 21) { ini_removeKey  (iniFile, "LVPD" ); ini_setString(iniFile, "LVPD","None"); }
				else if(lid == 22) { ini_removeKey  (iniFile, "MEDICSLS" ); ini_setString(iniFile, "MEDICSLS","None"); }
				else if(lid == 23) { ini_removeKey  (iniFile, "MEDICSLV" ); ini_setString(iniFile, "MEDICSLV","None"); }
				else if(lid == 24) { ini_removeKey  (iniFile, "HITMAN" ); ini_setString(iniFile, "HITMAN","None"); }
				ini_closeFile(iniFile);
				ini_setInteger(File,"Leader",0);
				ini_setInteger(File,"Member",0);
				ini_setInteger(File,"Rank",0);
				ini_setInteger(File,"Text",4);
				ini_closeFile(File);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "Администратор %s снял лидерку с %s",sendername,tmp);
				ABroadCast(COLOR_LIGHTRED,string,1);
				format(string, 256, "%s off leader %s", sendername, tmp);
				MkLeader(string);
			}
			else
			{
				format(string, sizeof(string), "{F70000}x {ADAEAD}Аккаунт не найден");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/offadmin", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 10)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /offadmin [ник]");
			format(string, sizeof(string), "%s.ini", tmp);
			if(fexist(string))
			{
				format(string, sizeof(string), "%s.ini", tmp);
	 			new File = ini_openFile(string);
				ini_setInteger(File, "AdminLevel",0);
				ini_closeFile(File);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "Администраторка с %s снята",tmp);
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
				format(string, 256, "%s off admin %s", sendername, tmp);
				MkAdmin(string);
			}
	 		else
			{
				SendClientMessage(playerid, COLOR_GREY, "Аккаунт не найден");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/reloadbans", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 7)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			SendRconCommand("reloadbans");
			SendClientMessage(playerid, COLOR_WHITE, "Бан-лист перезагружен");
		}
	}
	if(strcmp(cmd, "/warn", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /warn [id] [причина]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
		    {
		        if(giveplayerid != INVALID_PLAYER_ID)
		        {
					if(PlayerInfo[giveplayerid][pAdmin] > 6) return SendClientMessage(playerid, COLOR_GREY, "Администратор не может быть заварнен!");
				    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /warn [id] [причина]");
					PlayerInfo[giveplayerid][pVWarn] += 1;
					PlayerInfo[giveplayerid][pWarns] += 1;
					PlayerInfo[giveplayerid][punWarns] = 1;
					PlayerInfo[giveplayerid][punWarnstime] = 0;
					if(PlayerInfo[giveplayerid][pWarns] >= 3)
					{
						new ip[256];
					    new year, month,day;
						getdate(year, month, day);
						new iniFile = ini_openFile("gamefiles/log/leaders.ini");
						if(PlayerInfo[giveplayerid][pLeader] == 1) {if(PlayerInfo[giveplayerid][pAdmin] == 0){
						ini_removeKey  (iniFile, "LSPD" ); ini_setString(iniFile, "LSPD","None"); }}
						else if(PlayerInfo[giveplayerid][pLeader] == 2) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "FBI" ); ini_setString(iniFile, "FBI","None"); }}
						else if(PlayerInfo[giveplayerid][pLeader] == 3) {if(PlayerInfo[giveplayerid][pAdmin] == 0){  ini_removeKey  (iniFile, "ARMY SF" ); ini_setString(iniFile, "ARMY SF","None"); }}
						else if(PlayerInfo[giveplayerid][pLeader] == 4) {if(PlayerInfo[giveplayerid][pAdmin] == 0){  ini_removeKey  (iniFile, "MEDICSSF" ); ini_setString(iniFile, "MEDICSSF","None"); }}
						else if(PlayerInfo[giveplayerid][pLeader] == 5) {if(PlayerInfo[giveplayerid][pAdmin] == 0){  ini_removeKey  (iniFile, "LCN" ); ini_setString(iniFile, "LCN","None"); }}
						else if(PlayerInfo[giveplayerid][pLeader] == 6) {if(PlayerInfo[giveplayerid][pAdmin] == 0){   ini_removeKey  (iniFile, "YAKUZA" ); ini_setString(iniFile, "YAKUZA","None"); }}
						else if(PlayerInfo[giveplayerid][pLeader] == 7) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "MARYA" ); ini_setString(iniFile, "MARYA","None"); }}
						else if(PlayerInfo[giveplayerid][pLeader] == 8) {if(PlayerInfo[giveplayerid][pAdmin] == 0){  ini_removeKey  (iniFile, "KAZINO" ); ini_setString(iniFile, "KAZINO","None"); }}
						else if(PlayerInfo[giveplayerid][pLeader] == 9) {if(PlayerInfo[giveplayerid][pAdmin] == 0){  ini_removeKey  (iniFile, "SFN" ); ini_setString(iniFile, "SFN","None"); }}
						else if(PlayerInfo[giveplayerid][pLeader] == 10) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "SFPD" ); ini_setString(iniFile, "SFPD","None"); }}
						else if(PlayerInfo[giveplayerid][pLeader] == 11) {if(PlayerInfo[giveplayerid][pAdmin] == 0){  ini_removeKey  (iniFile, "LICENSERS" ); ini_setString(iniFile, "LICENSERS","None"); }}
						else if(PlayerInfo[giveplayerid][pLeader] == 12) {if(PlayerInfo[giveplayerid][pAdmin] == 0){    ini_removeKey  (iniFile, "BALLAS" ); ini_setString(iniFile, "BALLAS","None"); }}
						else if(PlayerInfo[giveplayerid][pLeader] == 13) {if(PlayerInfo[giveplayerid][pAdmin] == 0){    ini_removeKey  (iniFile, "VAGOS" ); ini_setString(iniFile, "VAGOS","None"); }}
						else if(PlayerInfo[giveplayerid][pLeader] == 14) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "RM" ); ini_setString(iniFile, "RM","None"); }}
						else if(PlayerInfo[giveplayerid][pLeader] == 15) {if(PlayerInfo[giveplayerid][pAdmin] == 0){  ini_removeKey  (iniFile, "GROVE" ); ini_setString(iniFile, "GROVE","None"); }}
						else if(PlayerInfo[giveplayerid][pLeader] == 16) {if(PlayerInfo[giveplayerid][pAdmin] == 0){  ini_removeKey  (iniFile, "LSNEWS" ); ini_setString(iniFile, "LSNEWS","None"); }}
						else if(PlayerInfo[giveplayerid][pLeader] == 17) {if(PlayerInfo[giveplayerid][pAdmin] == 0){   ini_removeKey  (iniFile, "AZTEC" ); ini_setString(iniFile, "AZTEC","None"); }}
						else if(PlayerInfo[giveplayerid][pLeader] == 18) {if(PlayerInfo[giveplayerid][pAdmin] == 0){    ini_removeKey  (iniFile, "RIFA" ); ini_setString(iniFile, "RIFA","None"); }}
						else if(PlayerInfo[giveplayerid][pLeader] == 19) {if(PlayerInfo[giveplayerid][pAdmin] == 0){   ini_removeKey  (iniFile, "ARMY LV" ); ini_setString(iniFile, "ARMY LV","None"); }}
						else if(PlayerInfo[giveplayerid][pLeader] == 20) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "LVNEWS" ); ini_setString(iniFile, "LVNEWS","None"); }}
						else if(PlayerInfo[giveplayerid][pLeader] == 21) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "LVPD" ); ini_setString(iniFile, "LVPD","None"); }}
						else if(PlayerInfo[giveplayerid][pLeader] == 22) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "MEDICSLS" ); ini_setString(iniFile, "MEDICSLS","None"); }}
						else if(PlayerInfo[giveplayerid][pLeader] == 23) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "MEDICSLV" ); ini_setString(iniFile, "MEDICSLV","None"); }}
						else if(PlayerInfo[giveplayerid][pLeader] == 24) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "HITMAN" ); ini_setString(iniFile, "HITMAN","None"); }}
						ini_closeFile(iniFile);
						format(string, sizeof(string), "{FF9900}Администратор {FFFFFF}%s {FF9900}забанил {FFFFFF}%s {FF9900}[3 warn]. {FF9900}Причина: {FFFFFF}%s", sendername, giveplayer, (result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						GetPlayerIp(giveplayerid,ip,sizeof(ip));
              			format(string, sizeof(string), "Ник: [%s] IP: [%s]",giveplayer,ip);
            	  		ABroadCast(COLOR_LIGHTRED, string, 1);
						PlayerInfo[giveplayerid][pLocked] = 1;
						PlayerInfo[giveplayerid][pMember] = 0;
						PlayerInfo[giveplayerid][pLeader] = 0;
						PlayerInfo[giveplayerid][pJob] = 0;
						PlayerInfo[giveplayerid][pWdraw] = 0;
      					FixKickedPlayer[giveplayerid] = 1;
						return true;
					}
					new iniFile = ini_openFile("gamefiles/log/leaders.ini");
					if(PlayerInfo[giveplayerid][pLeader] == 1) {if(PlayerInfo[giveplayerid][pAdmin] == 0){
					ini_removeKey  (iniFile, "LSPD" ); ini_setString(iniFile, "LSPD","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 2) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "FBI" ); ini_setString(iniFile, "FBI","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 3) {if(PlayerInfo[giveplayerid][pAdmin] == 0){  ini_removeKey  (iniFile, "ARMY SF" ); ini_setString(iniFile, "ARMY SF","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 4) {if(PlayerInfo[giveplayerid][pAdmin] == 0){  ini_removeKey  (iniFile, "MEDICSSF" ); ini_setString(iniFile, "MEDICSSF","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 5) {if(PlayerInfo[giveplayerid][pAdmin] == 0){  ini_removeKey  (iniFile, "LCN" ); ini_setString(iniFile, "LCN","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 6) {if(PlayerInfo[giveplayerid][pAdmin] == 0){   ini_removeKey  (iniFile, "YAKUZA" ); ini_setString(iniFile, "YAKUZA","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 7) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "MARYA" ); ini_setString(iniFile, "MARYA","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 8) {if(PlayerInfo[giveplayerid][pAdmin] == 0){  ini_removeKey  (iniFile, "KAZINO" ); ini_setString(iniFile, "KAZINO","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 9) {if(PlayerInfo[giveplayerid][pAdmin] == 0){  ini_removeKey  (iniFile, "SFN" ); ini_setString(iniFile, "SFN","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 10) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "SFPD" ); ini_setString(iniFile, "SFPD","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 11) {if(PlayerInfo[giveplayerid][pAdmin] == 0){  ini_removeKey  (iniFile, "LICENSERS" ); ini_setString(iniFile, "LICENSERS","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 12) {if(PlayerInfo[giveplayerid][pAdmin] == 0){    ini_removeKey  (iniFile, "BALLAS" ); ini_setString(iniFile, "BALLAS","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 13) {if(PlayerInfo[giveplayerid][pAdmin] == 0){    ini_removeKey  (iniFile, "VAGOS" ); ini_setString(iniFile, "VAGOS","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 14) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "RM" ); ini_setString(iniFile, "RM","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 15) {if(PlayerInfo[giveplayerid][pAdmin] == 0){  ini_removeKey  (iniFile, "GROVE" ); ini_setString(iniFile, "GROVE","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 16) {if(PlayerInfo[giveplayerid][pAdmin] == 0){  ini_removeKey  (iniFile, "LSNEWS" ); ini_setString(iniFile, "LSNEWS","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 17) {if(PlayerInfo[giveplayerid][pAdmin] == 0){   ini_removeKey  (iniFile, "AZTEC" ); ini_setString(iniFile, "AZTEC","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 18) {if(PlayerInfo[giveplayerid][pAdmin] == 0){    ini_removeKey  (iniFile, "RIFA" ); ini_setString(iniFile, "RIFA","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 19) {if(PlayerInfo[giveplayerid][pAdmin] == 0){   ini_removeKey  (iniFile, "ARMY LV" ); ini_setString(iniFile, "ARMY LV","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 20) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "LVNEWS" ); ini_setString(iniFile, "LVNEWS","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 21) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "LVPD" ); ini_setString(iniFile, "LVPD","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 22) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "MEDICSLS" ); ini_setString(iniFile, "MEDICSLS","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 23) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "MEDICSLV" ); ini_setString(iniFile, "MEDICSLV","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 24) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "HITMAN" ); ini_setString(iniFile, "HITMAN","None"); }}
					ini_closeFile(iniFile);
					format(string, sizeof(string), "{FF9900}Администратор {FFFFFF}%s {FF9900}выдал warn {FFFFFF}%s. {FF9900}Причина: {FFFFFF}%s", sendername, giveplayer, (result));
					SendClientMessageToAll(COLOR_LIGHTRED,string);
					PlayerInfo[giveplayerid][pMember] = 0;
					PlayerInfo[giveplayerid][pLeader] = 0;
					PlayerInfo[giveplayerid][pJob] = 0;
					OnPlayerUpdateAc(giveplayerid);
					FixKickedPlayer[giveplayerid] = 1;
					PlayerInfo[giveplayerid][pWdraw] = 0;
					format(string, 256, "%s vidal warn %s", sendername, giveplayer);
					WarnLog(string);
					return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/unwarn", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /unwarn [id]");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				new planame[32];
				new adminname[32];
				GetPlayerName(playerid, adminname, sizeof(adminname));
				GetPlayerName(giveplayerid, planame, sizeof(planame));
				if(PlayerInfo[giveplayerid][pWarns] <= 0) { SendClientMessage(playerid, COLOR_GREY, "Варнов нет"); return true;}
				PlayerInfo[giveplayerid][pWarns] --;
				PlayerInfo[giveplayerid][punWarnstime] = 0;
				PlayerInfo[giveplayerid][punWarns] = 0;
				format(string, sizeof(string), "Один Warn с %s снят", planame);
				SendClientMessage(playerid, COLOR_REDD, string);
				format(string, sizeof(string), "C вас снят Warn");
				SendClientMessage(giveplayerid, COLOR_GREEN, string);
				format(string, 256, "%s unwarn %s", sendername, planame);
				WarnLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			}
		}
		return true;
	}
	if (!strcmp("/sinkcar", cmdtext))
	{
	    if(!IsPlayerInAnyVehicle(playerid)) return 1;
	   	new Float:velocity_X = 0.0,
            Float:velocity_Y = 0.0,
            Float:velocity_Z = 0.0;
        GetVehicleVelocity(playerid, velocity_X, velocity_Y, velocity_Z);
        SetVehicleVelocity(GetPlayerVehicleID(playerid), velocity_X, velocity_Y, velocity_Z + 0.5);
        SetVehicleVelocity(GetPlayerVehicleID(playerid), velocity_X, velocity_Y, velocity_Z - 5.0);
		return 1;
	    //SetVehicleVelocity(GetPlayerVehicleID(playerid),0.0,0.0,-5.0);
	}
	if(strcmp(cmd, "/sergo",true) == 0)
	{
	    //new string[256];
	    format(string,sizeof(string),"i: %i",getdate());
	    SendClientMessage(playerid,-1,string);
	    format(string,sizeof(string),"d: %d",getdate());
	    SendClientMessage(playerid,-1,string);
	    return 1;
	}
	if(strcmp(cmd, "/gm", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 2)
		{
			if(dostup[playerid] != 1)return OnPlayerCommandText(playerid,"/alogin");
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Используйте: /gm [id]");
	        giveplayerid = strval(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                GetPlayerHealth(giveplayerid,GMHP[giveplayerid][0]);
                GetVehicleHealth(GetPlayerVehicleID(giveplayerid),VEHHP[giveplayerid][0]);
                GetPlayerArmour(giveplayerid, GMARMOUR[giveplayerid][0]);
                player_NoCheckTimeVeh[giveplayerid] = 3;
                if(IsPlayerInAnyVehicle(giveplayerid))
                {
                    //if(SpeedVehicle(playerid) < 30)return SendClientMessage(playerid,COLOR_GREY,"Для проверки на GMCar, скорость авто должна быть больше 30!");
                    new Float:POS[3];
				    GetCoordBonnetVehicle(GetPlayerVehicleID(giveplayerid), POS[0], POS[1], POS[2]);
				    SetVehicleHealth(GetPlayerVehicleID(giveplayerid),10000.0); // 1824
				    //gmcarr = CreateObject(1824, POS[0], POS[1], POS[2], 0.0, 0.0, 96.0);
				    //gmcarr = AddStaticVehicle(406,POS[0], POS[1], POS[2],0,1,2);
				    //CreateExplosion(POS[0], POS[1], POS[2], 12, 10.0);
                    SetVehicleHealth(GetPlayerVehicleID(giveplayerid), 100.0);
					SetTimerEx("GETHP",1000,false,"i",giveplayerid);
				}
				else
				{
				    SetPlayerHealthAC(giveplayerid, 100.0);
                    new Float:boomx, Float:boomy, Float:boomz;
	                GetPlayerPos(giveplayerid,boomx, boomy, boomz);
	                SetPlayerGravity(giveplayerid,0.060);
	                ACP_SetPlayerPos(giveplayerid, boomx, boomy, boomz+1.2);
	                SetTimerEx("GETHP",1000,false,"i",giveplayerid);
				}
            }
            else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");
        }
    	return true;
    }
 	if(strcmp(cmd, "/weather", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 5)
		{
            if (dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}{e23434}Введите: /weather [id погоды]");
			new weather;
			weather = strval(tmp);
			if(weather < 0 || weather > 45) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 45 погоды"); return true; }
			SetWeather(weather);
			SendClientMessage(playerid, COLOR_WHITE, "Погода изменена");
		}
	}
	if(strcmp(cmd, "/apanel", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 4)
	    {
	        if(dostup[playerid] != 1)return OnPlayerCommandText(playerid, "/alogin");
	        ShowPlayerDialog(playerid,1609,DIALOG_STYLE_LIST,"{e23434}Инфа тип","- Статистика игрока\n- Администраторы\n- Команды Администраторов\n- Телепорт\n- Состояние складов\n- Состояние банков\n- Игроки\n- OFF-LINE FUNCTION","Ок","Отмена");
		}
	}
	if(strcmp(cmd, "/ban", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /ban [id] [причина]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
            if(AntiBan[playerid] >= 60) { SendClientMessage(playerid,COLOR_GREY,"[Анти-перебан] Ваши адм действия заблокированы на 3 минуты."); AntiBan[playerid] = 180; return true; }
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
		    {
		        if(giveplayerid != INVALID_PLAYER_ID)
		        {
		        	if(PlayerInfo[giveplayerid][pAdmin] >= 8) return SendClientMessage(playerid, COLOR_GREY, "Администратор не может быть забанен!");
			        new ip[15];
               	 	GetPlayerIp(giveplayerid,ip,15);
                  	GetPlayerName(playerid, sendername, sizeof(sendername));
               	 	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		            new year1, month1, day1, hour1, minute1, second1;
		            getdate(year1, month1, day1);
					gettime(hour1, minute1, second1);
				    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /ban [id] [причина]");
					new year, month,day;
	    			new hour, minute, second;
					getdate(year, month, day);
				 	gettime(hour, minute, second);
				 	new iniFile = ini_openFile("gamefiles/log/leaders.ini");
					if(PlayerInfo[giveplayerid][pLeader] == 1) {if(PlayerInfo[giveplayerid][pAdmin] == 0){
					ini_removeKey  (iniFile, "LSPD" ); ini_setString(iniFile, "LSPD","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 2) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "FBI" ); ini_setString(iniFile, "FBI","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 3) {if(PlayerInfo[giveplayerid][pAdmin] == 0){  ini_removeKey  (iniFile, "ARMY SF" ); ini_setString(iniFile, "ARMY SF","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 4) {if(PlayerInfo[giveplayerid][pAdmin] == 0){  ini_removeKey  (iniFile, "MEDICSSF" ); ini_setString(iniFile, "MEDICSSF","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 5) {if(PlayerInfo[giveplayerid][pAdmin] == 0){  ini_removeKey  (iniFile, "LCN" ); ini_setString(iniFile, "LCN","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 6) {if(PlayerInfo[giveplayerid][pAdmin] == 0){   ini_removeKey  (iniFile, "YAKUZA" ); ini_setString(iniFile, "YAKUZA","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 7) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "MARYA" ); ini_setString(iniFile, "MARYA","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 8) {if(PlayerInfo[giveplayerid][pAdmin] == 0){  ini_removeKey  (iniFile, "KAZINO" ); ini_setString(iniFile, "KAZINO","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 9) {if(PlayerInfo[giveplayerid][pAdmin] == 0){  ini_removeKey  (iniFile, "SFN" ); ini_setString(iniFile, "SFN","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 10) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "SFPD" ); ini_setString(iniFile, "SFPD","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 11) {if(PlayerInfo[giveplayerid][pAdmin] == 0){  ini_removeKey  (iniFile, "LICENSERS" ); ini_setString(iniFile, "LICENSERS","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 12) {if(PlayerInfo[giveplayerid][pAdmin] == 0){    ini_removeKey  (iniFile, "BALLAS" ); ini_setString(iniFile, "BALLAS","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 13) {if(PlayerInfo[giveplayerid][pAdmin] == 0){    ini_removeKey  (iniFile, "VAGOS" ); ini_setString(iniFile, "VAGOS","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 14) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "RM" ); ini_setString(iniFile, "RM","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 15) {if(PlayerInfo[giveplayerid][pAdmin] == 0){  ini_removeKey  (iniFile, "GROVE" ); ini_setString(iniFile, "GROVE","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 16) {if(PlayerInfo[giveplayerid][pAdmin] == 0){  ini_removeKey  (iniFile, "LSNEWS" ); ini_setString(iniFile, "LSNEWS","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 17) {if(PlayerInfo[giveplayerid][pAdmin] == 0){   ini_removeKey  (iniFile, "AZTEC" ); ini_setString(iniFile, "AZTEC","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 18) {if(PlayerInfo[giveplayerid][pAdmin] == 0){    ini_removeKey  (iniFile, "RIFA" ); ini_setString(iniFile, "RIFA","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 19) {if(PlayerInfo[giveplayerid][pAdmin] == 0){   ini_removeKey  (iniFile, "ARMY LV" ); ini_setString(iniFile, "ARMY LV","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 20) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "LVNEWS" ); ini_setString(iniFile, "LVNEWS","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 21) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "LVPD" ); ini_setString(iniFile, "LVPD","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 22) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "MEDICSLS" ); ini_setString(iniFile, "MEDICSLS","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 23) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "MEDICSLV" ); ini_setString(iniFile, "MEDICSLV","None"); }}
					else if(PlayerInfo[giveplayerid][pLeader] == 24) {if(PlayerInfo[giveplayerid][pAdmin] == 0){ ini_removeKey  (iniFile, "HITMAN" ); ini_setString(iniFile, "HITMAN","None"); }}
                    ini_closeFile(iniFile);
					PlayerInfo[giveplayerid][pLocked] = 1;
					AntiBan[playerid] += 30;
					format(string, sizeof(string), "{FF9900}Администратор {FFFFFF}%s {FF9900}забанил {FFFFFF}%s. {FF9900}Причина: {FFFFFF}%s", sendername, giveplayer, (result));
	  				SendClientMessageToAll(COLOR_LIGHTRED,string);
 					SendClientMessage(giveplayerid, COLOR_LIGHTRED, "Ваш аккаунт заблокирован. Подайте заявку на разблокировку в группе: ваша группа");
 					SendClientMessage(giveplayerid, COLOR_WHITE, "Для выхода из игры используйте /q(uit)");
  					GetPlayerIp(giveplayerid,ip,sizeof(ip));
					format(string, sizeof(string), "%s.ini",giveplayer);
					new file = ini_openFile(string);
					if(file < 0) print("нет файла");
					else
					{
						ini_getString(file, "pIp",string);
						ini_getString(file, "pIpReg",string);
						printf("Найдено: %s, началось чтение файла с этим именем",string);
						ini_closeFile(file);
                  		format(string, sizeof(string), "{FF9900}Ник: [%s] | IP: [%s] | R: [IP: %s] | L: [IP: %s]",giveplayer,ip,string,string);
                	  	ABroadCast(COLOR_LIGHTRED, string, 1);
					    PlayerInfo[giveplayerid][pLocked] = 1;
					    PlayerInfo[giveplayerid][pWdraw] = 0;
    				 	FixKickedPlayer[giveplayerid] = 1;
					}
					format(string, 256, "%s zabanil %s", sendername, giveplayer);
					BanLog(string);
					return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/dice", true) == 0)
	{
	    if(!IsAKosti(playerid)) return SendClientMessage(playerid, -1, "Вы должны находиться в казино! За столиком для костей.");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /dice [id игрока] [ставка]");
        new gvepid = ReturnUser(tmp);
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /dice [id игрока] [ставка]");
        new price = strval(tmp);
        if(price  < 100 || price  > 10000000) return SendClientMessage(playerid, -1, "Минимальная ставка 100$ максимальная 10 000 000$");
        if(ZapretDice[gvepid] == 1) return SendClientMessage(playerid, -1, "В данный момент игрок не может играть!");
        if(PlayerInfo[gvepid][pCash] < price) return SendClientMessage(playerid, -1, "У этого игрока нет столько денег!");
        if(PlayerInfo[playerid][pCash] < price) return SendClientMessage(playerid, -1, "У вас нету столько денег!");
        if(dicetime > gettime()) return SendClientMessage(playerid, -1, "В данный момент вы не можете играть!");
        if(!IsPlayerConnected(gvepid)) return true;
        if(!ProxDetectorS(6.0, playerid, gvepid)) return true;
        if(gvepid == playerid) return true;
        format(string, sizeof(string), "Вы предложили %s бросить кости. Ставка: $%i",giveplayer,price);
        SendClientMessage(playerid, 0x6495EDFF, string);
        format(string, sizeof(string), "%s предлагает бросить кости. Ставка: $%i",sendername,price);
        SendClientMessage(gvepid, 0x6495EDFF, string);
        SendClientMessage(gvepid, COLOR_WHITE, "Нажмите {48FC23}Y {FFFFFF}чтобы согласиться {e23434}N {FFFFFF}для отказа");
        ZapretDice[playerid] = 1;
        KostiName[gvepid] = playerid;
        KostiMoney[gvepid] = price;
        return true;
	}
	if(strcmp(cmd, "/sban", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /sban [id] [причина]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
		    {
		        if(giveplayerid != INVALID_PLAYER_ID)
		        {
					if(PlayerInfo[giveplayerid][pAdmin] > 0) return SendClientMessage(playerid, COLOR_GREY, "Администратор не может быть забанен!");
			        new ip[15];
               	 	GetPlayerIp(giveplayerid,ip,15);
                  	GetPlayerName(playerid, sendername, sizeof(sendername));
               	 	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		            new year1, month1, day1, hour1, minute1, second1;
		            getdate(year1, month1, day1);
					gettime(hour1, minute1, second1);
				    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /sban [id] [причина]");
					new year, month,day;
	    			new hour, minute, second;
					getdate(year, month, day);
				 	gettime(hour, minute, second);
				 	PlayerInfo[giveplayerid][pLocked] = 1;
					format(string, sizeof(string), "[sBan]{FF9900}Администратор {FFFFFF}%s {FF9900}забанил {FFFFFF}%s. {FF9900}Причина: {FFFFFF}%s", sendername, giveplayer, (result));
              		ABroadCast(COLOR_LIGHTRED, string, 1);
  					GetPlayerIp(giveplayerid,ip,sizeof(ip));
					format(string, sizeof(string), "%s.ini",giveplayer);
					new file = ini_openFile(string);
					if(file < 0) print("нет файла");
					else
					{
						ini_getString(file, "pIp",string);
						ini_getString(file, "pIpReg",string);
						printf("Найдено: %s, началось чтение файла с этим именем",string);
						ini_closeFile(file);
                  		format(string, sizeof(string), "{FF9900}Ник: [%s] | IP: [%s] | R: [IP: %s] | L: [IP: %s]",giveplayer,ip,string,string);
                	  	ABroadCast(COLOR_LIGHTRED, string, 1);
            	  	}
					PlayerInfo[giveplayerid][pLocked] = 1;
     				FixKickedPlayer[giveplayerid] = 1;
     				return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/freeze", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /freeze [id]");
			new playa;
			playa = ReturnUser(tmp);
		    if(IsPlayerConnected(playa))
		    {
		        if(playa != INVALID_PLAYER_ID)
		        {
					if(PlayerInfo[playa][pAdmin] > 6) return SendClientMessage(playerid, COLOR_GREY, "Администратор не может быть заморожен!");
			        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					TogglePlayerControllable(playa, 0);
					format(string, sizeof(string), "{FF9900}Администратор: {FFFFF}%s {FF9900}заморозил {FFFFFF}%s",sendername,  giveplayer);
					printf("%s",string);
					format(string, sizeof(string), "{FFFFFF}%s {FF9900}был заморожен aдминистратором {FFFFFF}%s",giveplayer ,sendername);
					ABroadCast(COLOR_LIGHTRED, string, 1);
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/unfreeze", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /unfreeze [id]");
			new playa;
			playa = ReturnUser(tmp);
		    if(IsPlayerConnected(playa))
		    {
		        if(playa != INVALID_PLAYER_ID)
		        {
		    	    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					TogglePlayerControllable(playa, 1);
					format(string, sizeof(string), "{FF9900}Администратор {FFFFFF}%s {FF9900}разморозил {FFFFFF}%s",sendername,  giveplayer);
					printf("%s",string);
					format(string, sizeof(string), "{FF9900}Администратор {FFFFFF}%s {FF9900}разморозил {FFFFFF}%s ",sendername, giveplayer);
					ABroadCast(COLOR_LIGHTRED, string, 1);
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/camera", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] >= 19)
		{
			if(!PlayerToPoint(2.0,playerid,212.2816,1812.2374,21.8672)) return SendClientMessage(playerid, COLOR_GREY, "Вы не у точки наблюдения");
			new listitems[] = "Сектор [1]\nСектор [2]\nСектор [3]\nСектор [4]";
			ShowPlayerDialog(playerid, 7724, DIALOG_STYLE_LIST, "Выберите камеру", listitems, "Выбрать", "Закрыть");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
			return true;
		}
		return true;
	}
	if(strcmp(cmd, "/cameraoff", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 19)
		{
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
			return true;
		}
		return true;
	}
	if(strcmp(cmd, "/warnmans", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
			new countmute = 0;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(PlayerInfo[i][pWarns] >= 1 && IsPlayerConnected(i))
				{
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s [ID: %d] | Варнов: %d", sendername, i,PlayerInfo[i][pWarns]);
					countmute ++;
					SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
				}
			}
			if(countmute == 0) SendClientMessage(playerid, COLOR_GREY, "Нет игроков с варнами");
			else
			{
				format(string, sizeof(string), "Всего: %d игроков", countmute);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
		}
	}
	if(strcmp(cmd, "/afkplayers", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 3)
	    {
			if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			{
			    for(new i=0; i<MAX_PLAYERS; i++)
			    {
					if(plafk[i] >= 5 && IsPlayerConnected(i))
					{
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string, sizeof(string), "%s [ID: %d] | АФК(сек): %d", sendername, i,plafk[i]);
						SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
					}
				}
			}
		}
	}
	if(strcmp(cmd, "/demorganlist", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 3)
	    {
	        if(dostup[playerid] !=1) return OnPlayerCommandText(playerid, "/alogin");
	        {
	            for(new i=0; i<MAX_PLAYERS; i++)
	            {
	                if(PlayerInfo[i][pJailTime] >= 60 && PlayerInfo[i][pPlaceJail] == 4)
	                {
	                    GetPlayerName(i,sendername,sizeof(sendername));
						format(string, sizeof(string), "%s [ID: %d] | Demorgan(сек): %d", sendername, i,PlayerInfo[i][pJailTime]);
						SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
					}
				}
			}
		}
	}
	if(strcmp(cmd, "/vipmans", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
			new countmute = 0;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(PlayerInfo[i][pDonateRank] >= 1 && IsPlayerConnected(i))
				{
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s [ID: %d] | %d", sendername, i,PlayerInfo[i][pDonateRank]);
					countmute ++;
					SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
				}
			}
			if(countmute == 0) SendClientMessage(playerid, COLOR_GREY, "Нет игроков с VIP аккаунтом");
			else
			{
				format(string, sizeof(string), "Всего: %d игроков", countmute);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
		}
	}
	if(strcmp(cmd, "/mutelist", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
			new countmute = 0;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(PlayerInfo[i][pMuted] == 1 && IsPlayerConnected(i))
				{
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s [ID: %d] | %d секунд", sendername, i,PlayerInfo[i][pMuteTime]);
					countmute++;
					SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
				}
			}
			if(countmute == 0) SendClientMessage(playerid, COLOR_GREY, "Нет игроков с баном чата");
			else
			{
				format(string, sizeof(string), "Всего: %d игроков", countmute);
				SendClientMessage(playerid, COLOR_USE, string);
			}
		}
	}
	if(strcmp(cmd, "/unbanip",true) == 0)
    {
		if(PlayerInfo[playerid][pAdmin] >= 8)
        {
			if(IsPlayerConnected(playerid))
			{
		        tmp = strtok(cmdtext,idx);
		        if(!strlen(tmp)) return SendClientMessage(playerid,COLOR_WHITE, "{e23434}Введите: /unbanip [IP адрес]");
				if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
		        format(string,sizeof(string), "unbanip %s",tmp);
		        SendRconCommand(string);
		        SendRconCommand("reloadbans");
		       	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		        GetPlayerName(playerid, sendername, sizeof(sendername));
		        format(string, 256, "{FFFFFF}%s {FF9900}разбанил IP: {FFFFFF}%s", sendername, tmp);
				ABroadCast(COLOR_GREEN, string, 1);
				format(string, sizeof(string), "ADMIN: %s razbanil IP: %s", sendername, tmp);
				Banip(string);
        	}
 			return true;
		}
	}
	if(strcmp(cmd, "/banip",true)==0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 8)
		{
	        tmp = strtok(cmdtext,idx);
	        if(!strlen(tmp)) return SendClientMessage(playerid,COLOR_WHITE, "{e23434}Введите: /banip [IP адрес]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
	        format(string,sizeof(string), "banip %s",tmp);
	        SendRconCommand(string);
	        SendRconCommand("reloadbans");
	        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        format(string, 256, "{FFFFFF}%s {FF9900}забанил IP: {FFFFFF}%s", sendername, tmp); //ADMIN: %s zabanil IP: %s\n
			ABroadCast(COLOR_LIGHTRED, string, 1);
			format(string, sizeof(string), "ADMIN: %s zabanil IP: %s", sendername, tmp);
			Banip(string);
		}
	}
	if(strcmp(cmd, "/gangkv", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 3)
	    {
			if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			{
				for(new i = 0; i < sizeof(GZInfo); i++)
				{
					if(GZInfo[i][gFrakVlad] == 12) TotalGz[0]++; // Ballas
					if(GZInfo[i][gFrakVlad] == 13) TotalGz[1]++; // VAGOS
					if(GZInfo[i][gFrakVlad] == 15) TotalGz[2]++; // GROVE
					if(GZInfo[i][gFrakVlad] == 17) TotalGz[3]++; // AZTEC
					if(GZInfo[i][gFrakVlad] == 18) TotalGz[4]++; // RIFA
				}
                format(string, sizeof(string), "Всего квадратов у Ballas: %d",TotalGz[0]);
                SendClientMessage(playerid, COLOR_GREY, string);
                format(string, sizeof(string), "Всего квадратов у Vagos: %d",TotalGz[1]);
                SendClientMessage(playerid, COLOR_GREY, string);
                format(string, sizeof(string), "Всего квадратов у Grove: %d",TotalGz[2]);
                SendClientMessage(playerid, COLOR_GREY, string);
                format(string, sizeof(string), "Всего квадратов у Aztec: %d",TotalGz[3]);
                SendClientMessage(playerid, COLOR_GREY, string);
                format(string, sizeof(string), "Всего квадратов у Rifa: %d",TotalGz[4]);
				SendClientMessage(playerid, COLOR_GREY, string);
				ClearTotalGz();
			}
		}
	}
	if(strcmp(cmd, "/restart", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 10)
		{
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
			SendClientMessageToAll(COLOR_YELLOW, "");
			SendClientMessageToAll(COLOR_YELLOW, "");
			SendClientMessageToAll(COLOR_YELLOW, "");
			SendClientMessageToAll(COLOR_YELLOW, "");
			SendClientMessageToAll(COLOR_YELLOW, "");
			SendClientMessageToAll(COLOR_YELLOW, "");
			SendClientMessageToAll(COLOR_YELLOW, "");
			SendClientMessageToAll(COLOR_YELLOW, "");
			SendClientMessageToAll(COLOR_YELLOW, "");
			SendClientMessageToAll(COLOR_YELLOW, "");
			SendClientMessageToAll(COLOR_YELLOW, "");
			SendClientMessageToAll(COLOR_YELLOW, "");
			SendClientMessageToAll(COLOR_YELLOW, "");
			SendClientMessageToAll(COLOR_YELLOW, "");
			SendClientMessageToAll(COLOR_YELLOW, "");
			SendClientMessageToAll(COLOR_YELLOW, "");
			SendClientMessageToAll(COLOR_YELLOW, "");
			SendClientMessageToAll(COLOR_LIGHTRED, "Происходит перезагрузка сервера , приносим свои извинения.");
			SendClientMessageToAll(COLOR_LIGHTRED, "C уважением админ-команда Arizona RP");
			format(string, sizeof(string), "~r~RESTART");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				new txtid;
				GameTextForPlayer(i, string, 5000, txtid);
			}
			printr("Server Restarting");
			SaveAccounts();
			SaveMaterials();
			SaveGZ();
			OnPropUpdate();
			GameModeExitFunc();
			format(string, sizeof(string), "~r~RESTART");
		}
		return true;
	}
	if(strcmp(cmd, "/savehouse", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 7)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			SaveHomeSbizz();
			SendClientMessage(playerid, COLOR_GREY, "Сохранены дома и бизнесы");
		}
		return true;
	}
	if(strcmp(cmd, "/saveall", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 7)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			SaveServer();
			SendClientMessage(playerid, COLOR_GREY, "Save all was successful!");
		}
		return true;
	}
	if(strcmp(cmd, "/sellgas", true) == 0)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		if(PlayerInfo[playerid][pJob] == 5 && PlayerInfo[playerid][pMember] == 0)
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 403) return SendClientMessage(playerid,COLOR_GREY, "Вы не в машине");
			if(PlayersHaul[tmpcar-benzovoz[0]][sLoad] == 0) return SendClientMessage(playerid,COLOR_GREY, "Нет бензина");
			for(new i = 0; i < sizeof(SBizzInfo); i++)
		    {
				if(PlayerToPoint(10.0, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					if(SBizzInfo[i][sbLocked] == 1) return SendClientMessage(playerid,COLOR_GREY, "Заправка закрыта");
				    if(SBizzInfo[i][sbProducts] >= 20000) return SendClientMessage(playerid, COLOR_GREY, "У бизнеса уже больше 20000 продуктов");
					SBizzInfo[i][sbProducts] += PlayersHaul[tmpcar-benzovoz[0]][sLoad];
					PlayersHaul[tmpcar-benzovoz[0]][sLoad] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Бензин успешно доставлен");
					OnPropUpdate();
					return true;
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/sellprods", true) == 0)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		if(PlayerInfo[playerid][pJob] == 5 && PlayerInfo[playerid][pMember] == 0)
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 440) return SendClientMessage(playerid,COLOR_GREY, "Вы не в машине");
			if(PlayerHaul[tmpcar-comptruck[0]][pLoad] == 0) return SendClientMessage(playerid,COLOR_GREY, "Нет продуктов в машине");
			for(new i = 0; i < sizeof(BizzInfo); i++)
		    {
				if(PlayerToPoint(10.0, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					if(BizzInfo[i][bLocked] == 1) return SendClientMessage(playerid,COLOR_GREY, "Бизнес закрыт");
				    if(BizzInfo[i][bProducts] >= 20000) return SendClientMessage(playerid, COLOR_GREY, "У бизнеса уже больше 20000 продуктов");
					BizzInfo[i][bProducts] += PlayerHaul[tmpcar-comptruck[0]][pLoad];
					PlayerHaul[tmpcar-comptruck[0]][pLoad] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Вы продали продукты и получили 8000 вирт");
					PlayerInfo[playerid][pCash] += 8000;
					OnPropUpdate();
					return true;
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/mcontract", true) == 0)
	{
		new Veh = GetPlayerVehicleID(playerid);
		if(PlayerInfo[playerid][pJob] == 2 && PlayerInfo[playerid][pMember] == 0)
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SendClientMessage(playerid,COLOR_GREY, "Вы не в машине механика");
			if(gcontract[playerid] == 1)
			{
				Delete3DTextLabel(Meh3d[Veh]);
				cenabenza[playerid] = 0;
				gcontract[playerid] = 0;
				Mechanics -= 1;
		 		SendClientMessage(playerid,COLOR_WHITE, "Контракт с заправкой рассторгнут");
				return true;
			}
			for(new b = 0; b < sizeof(SBizzInfo); b++)
			{
				if(PlayerToPoint(10.0, playerid, SBizzInfo[b][sbEntranceX], SBizzInfo[b][sbEntranceY], SBizzInfo[b][sbEntranceZ]))
				{
					Delete3DTextLabel(Meh3d[Veh]);
					gcontract[playerid] = 1;
					cenabenza[playerid] = SBizzInfo[b][sbPriceProd]/2;
					format(string, sizeof(string), "<< 300 литров. Цена: %d вирт >>", cenabenza[playerid]);
					Meh3d[Veh] = Create3DTextLabel(string, COLOR_REDD, 9999.0, 9999.0, 9999.0, 30.0, 0, 1);
					Attach3DTextLabelToVehicle(Meh3d[Veh], Veh, 0, 0, 1.5);
					SendClientMessage(playerid,COLOR_GREEN, "Вы подписали контракт с заправкой");
					Mechanics += 1;
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/fill", true) == 0)
	{
		for(new b = 0; b < sizeof(SBizzInfo); b++)
		{
			if(PlayerToPoint(10.0, playerid, SBizzInfo[b][sbEntranceX], SBizzInfo[b][sbEntranceY], SBizzInfo[b][sbEntranceZ]))
			{
				if(SBizzInfo[b][sbProducts] <= 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Заправка не работает");
					SBizzInfo[b][sbProducts] = 0;
				}
				if(SBizzInfo[b][sbLocked] == 1) return SendClientMessage(playerid, COLOR_GREY, "Заправка закрыта");
				if(PlayerInfo[playerid][pCash] < SBizzInfo[b][sbPriceProd]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
    			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в машине");
				SBizzInfo[b][sbTill] += SBizzInfo[b][sbPriceProd];
				PlayerInfo[playerid][pCash] -= SBizzInfo[b][sbPriceProd];
				SBizzInfo[b][sbProducts] -= 50;
				Fuell[vehicleid] = 200;
				GameTextForPlayer(playerid, "~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Please Wait",2000,3);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/alock", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
			new nearveh = GetNearestVehicle(playerid);
			new Float:cx,Float:cy,Float:cz;
			GetVehiclePos(nearveh, cx, cy, cz);
 		 	if(PlayerToPoint(4.0, playerid, cx, cy, cz))
			{
				UnLockCar(nearveh);
				IsLocked[nearveh] = 0;
				SendClientMessage(playerid, COLOR_WHITE, "Машина открыта");
			}
		}
 		return true;
	}
	if(strcmp(cmd, "/lock", true) == 0)
	{
		new carid;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pPHousekey] == 255)
		{
			if(caridhouse[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "В данный момент у вас нет машины");
		}
		carid = PlayerInfo[playerid][pPHousekey]+1;
		if(caridhouse[playerid] != 299)
		{
			carid = caridhouse[playerid];
		}
		new lockstatus = gCarLock[carid];
		new Float:cx,Float:cy,Float:cz;
		GetVehiclePos(carid, cx, cy, cz);
		switch (lockstatus)
		{
			case 0:
			{
				if(PlayerToPoint(4.0, playerid, cx, cy, cz))
				{
					if(caridhouse[playerid] == 0 && PlayerInfo[playerid][pPHousekey] == 255)
					{
						SendClientMessage(playerid, COLOR_GREY, "В данный момент у вас нет машины");
						return true;
					}
					if(caridhouse[playerid] == carid)
					{
					    format(string, sizeof(string), "%s закрыл свой транспорт", sendername);
						ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						format(string, sizeof(string), "~w~CAR ~r~LOCK");
						GameTextForPlayer(playerid, string, 5000, 3);
						LockCar(caridhouse[playerid]);
						IsLocked[caridhouse[playerid]] = 1;
					}
				}
			}
			case 1:
			{
				if(PlayerToPoint(4.0, playerid, cx, cy, cz) )
				{
					if(caridhouse[playerid] == 0 && PlayerInfo[playerid][pPHousekey] == 255)
					{
						SendClientMessage(playerid, COLOR_GREY, "В данный момент у вас нет машины");
						return true;
					}
					if(caridhouse[playerid] == carid )
					{
					    format(string, sizeof(string), "%s открыл свой транспорт", sendername);
						ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						format(string, sizeof(string), "~w~CAR ~g~UNLOCK");
						GameTextForPlayer(playerid, string, 5000, 3);
						UnLockCar(caridhouse[playerid]);
						IsLocked[caridhouse[playerid]] = 0;
					}
				}
			}
			default:
			{
				SendClientMessage(playerid, COLOR_GREY, "Ошибка");
			}
		}
		if(carid == 256)
		{
			SendClientMessage(playerid, COLOR_GREY, "В данный момент у вас нет машины");
		}
		return true;
	}
	if(strcmp(cmd, "/animlist", true) == 0)
	{
		if(PlayerCuffed[playerid] >= 1) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в наручниках.");
		if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в транспорте.");
		ShowPlayerDialog(playerid, 2008, DIALOG_STYLE_LIST, "Анимации", "[1] Заводной\n[2] Медленный\n[3] Стриптиз\n[4] Руки вверх\n[5] Сесть\n[6] Встать\n[7] Замереть\n[8] Смирно\n[9] Рукопожатие\n[10] Привет кулаками\n[11] Пузом в пузо\n[12] Стоять\n[13] Читать рэп\n[14] Facepalm\n[15] Встать на колени\n[16] Крэк (сидеть)\n[17] Спать\n[18] Сидеть\n[19] Стоять на руках\n[20] Dealer\n[21] Гопник\n[22] Лежать", "Выбрать", "Отмена");
        return 1;
	}
	if(strcmp(cmd, "/alogin", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
		    if(dostup[playerid] == 1) return SendClientMessage(playerid,COLOR_GREY,"Вы уже авторизованы!");
			ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
			return true;
		}
	}
	if(strcmp(cmd, "/asellsbiz", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 9)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /asellsbiz [sbizid]");
			new sbiz = strval(tmp);
			format(string, sizeof(string), "%s.ini",SBizzInfo[sbiz][sbOwner]);
			new File = ini_openFile(string);
			ini_setInteger(File, "Bussines",255);
			ini_closeFile(File);
			SBizzInfo[sbiz][sbLocked] = 1;
			SBizzInfo[sbiz][sbOwned] = 0;
			strmid(SBizzInfo[sbiz][sbOwner], "The State", 0, strlen("The State"), 255);
	 		SendClientMessage(playerid, COLOR_WHITE, "Sbizz продан");
			format(string, sizeof(string), "%s\nПродаётся\nЦена: %d", SBizzInfo[sbiz][sbMessage],SBizzInfo[sbiz][sbBuyPrice]);
			Update3DTextLabelText(SBizzInfo[sbiz][sbLabel], 0xEAC700AA, string);
			OnPropUpdate();
			format(string, 256, "Admin %s sell sbizz, SBIZZ ID: %d | ", playername, sbiz);
			return true;
		}
		return true;
	}
	if(strcmp(cmd, "/biz", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 7)
		{
		    if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /biz [biznumber]");
				if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
				new housenum = strval(tmp);
				SetPlayerInterior(playerid,BizzInfo[housenum][bInterior]);
				ACP_SetPlayerPos(playerid,BizzInfo[housenum][bExitX],BizzInfo[housenum][bExitY],BizzInfo[housenum][bExitZ]);
				PlayerInfo[playerid][pInt] = BizzInfo[housenum][bInterior];
				PlayerInfo[playerid][pLocal] = housenum+99;
				SetPlayerVirtualWorld(playerid,0);
			}
		}
  		return true;
	}
	if(strcmp(cmd, "/sbiz", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 7)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /sbiz [biznumber]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
			new housenum = strval(tmp);
			ACP_SetPlayerPos(playerid,SBizzInfo[housenum][sbEntranceX],SBizzInfo[housenum][sbEntranceY],SBizzInfo[housenum][sbEntranceZ]);
		}
		return true;
	}
	if(strcmp(cmd, "/asellbiz", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 9)
		{
			new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername, sizeof(playername));
		    if(IsPlayerConnected(playerid))
			{
				GetPlayerName(playerid, playername, sizeof(playername));
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /asellbiz [bizid]");
				if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
				new biz = strval(tmp);
				format(string, sizeof(string), "%s.ini",BizzInfo[biz][bOwner]);
	     		new File = ini_openFile(string);
				ini_setInteger(File, "Bussines",255);
				ini_closeFile(File);
				BizzInfo[biz][bLocked] = 1;
				BizzInfo[biz][bOwned] = 0;
				strmid(BizzInfo[biz][bOwner], "The State", 0, strlen("The State"), 255);
				strmid(BizzInfo[biz][bExtortion], "No-one", 0, strlen("No-one"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "Бизнес продан");
				SendClientMessage(playerid, COLOR_GREY,string);
				format(string, sizeof(string), "%s\nПродаётся\nЦена: %d", BizzInfo[biz][bMessage],BizzInfo[biz][bBuyPrice]);
				Update3DTextLabelText(BizzInfo[biz][bLabel], 0xEAC700AA, string);
				OnPropUpdate();
	    		return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/asellhouse", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 10)
		{
			new playername[MAX_PLAYERS];
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /asellhouse [houseid]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
			new house = strval(tmp);
			format(string, sizeof(string), "%s.ini",HouseInfo[house][hOwner]);
			new File = ini_openFile(string);
			ini_setInteger(File, "House",255);
			ini_closeFile(File);
			HouseInfo[house][hHel] = 0;
			HouseInfo[house][hLock] = 1;
			HouseInfo[house][hOwned] = 0;
			SendClientMessage(playerid, COLOR_GREY, "Дом продан");
			strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
			GameTextForPlayer(playerid, string, 10000, 3);
			BuyHouse();
			return true;
		}
		return true;
	}
	if(strcmp(cmd, "/open", true) == 0)
	{
		new bouse = PlayerInfo[playerid][pPHousekey];
		new playername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername, sizeof(playername));
		if(bouse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
		{
			if(PlayerToPoint(10, playerid,HouseInfo[bouse][hExitx], HouseInfo[bouse][hExity], HouseInfo[bouse][hExitz]))
			{
				if(HouseInfo[bouse][hLock] == 1)
				{
					HouseInfo[bouse][hLock] = 0;
					format(string, sizeof(string), "~w~House ~g~UNLOCK");
					GameTextForPlayer(playerid, string, 5000, 3);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					return true;
				}
				if(HouseInfo[bouse][hLock] == 0)
				{
					HouseInfo[bouse][hLock] = 1;
					format(string, sizeof(string), "~w~House ~r~LOCK");
					GameTextForPlayer(playerid, string, 5000, 3);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не у себя дома");
				return true;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не владелец дома");
			return true;
		}
	}
	if(strcmp(cmd, "/sellhouse", true) == 0)
	{
		new bouse = PlayerInfo[playerid][pPHousekey];
		new playername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername, sizeof(playername));
		if(bouse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
		{
			if(PlayerToPoint(10, playerid,HouseInfo[bouse][hExitx], HouseInfo[bouse][hExity], HouseInfo[bouse][hExitz]))
			{
				ShowPlayerDialog(playerid,5032,DIALOG_STYLE_MSGBOX, "Продажа имущества", "Вы действительно хотите продать дом государству?", "Да", "Нет");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не у себя дома , зайдите в дом и пропишите команду заного.");
				return true;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не владелец дома");
			return true;
		}
	}
	if(strcmp(cmd, "/hpanel", true) == 0)
	{
	    new bouse = PlayerInfo[playerid][pPHousekey];
	    new ttextt[32];
		if(bouse == 255)return SendClientMessage(playerid, COLOR_GREY, "Вам не доступна данная команда!");
		if(HouseInfo[bouse][hLock] == 1)
		{
			ttextt = "[{22ff00}Открыть{F2EEF0}]";
		}
		else if(HouseInfo[bouse][hLock] == 0)
		{
			ttextt = "[{ff001c}Закрыть{F2EEF0}]"; //
		}
		format(string,sizeof(string),"Дом \t%s\nДоставить транспорт к дому\nДомашний счет: \t{FFCC33}%d{F2EEF0}\nАптечки: \t\t{FFCC33}%d",ttextt,HouseInfo[bouse][hTakings],HouseInfo[bouse][hHel]);
		ShowPlayerDialog(playerid,1610,DIALOG_STYLE_LIST,"Меню дома",string,"Ок","Отмена"); // FFCC33 F2EEF0
	}
	if(strcmp(cmd, "/healme", true) == 0)
	{
		for(new i = 0; i < sizeof(HouseInfo); i++)
		{
			if(PlayerToPoint(5, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
			{
				if(GetPlayerVirtualWorld(playerid) == i+50)
				{
					if(HouseInfo[i][hHel] == 0)return SendClientMessage(playerid, COLOR_GREY, "В этом месте нет аптечек");
					SendClientMessage(playerid, COLOR_WHITE, "Вы были вылечены до 100 процентов");
					format(string, sizeof(string), "Осталось %d аптечек", HouseInfo[i][hHel]);
					SendClientMessage(playerid, 0x6495EDFF, string);
					HouseInfo[i][hHel] -= 1;
					SetPlayerHealthAC(playerid, 100);
					PlayerInfo[playerid][pHP] = 100;
					SetPlayerChatBubble(playerid, "использовал аптечку", COLOR_PURPLE, 30.0, 10000);
					return true;
				}
			}
		}
	}
	if(strcmp(cmd,"/robhouse",true) == 0)
	{
		for(new h = 0; h < sizeof(HouseInfo); h++)
		{
			if(IsAGang(playerid))
			{
				for(new i = 0; i < sizeof(GZInfo); i++)
				{
					if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && IsInAllowed(playerid))
					{
						if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]))
						{
							if(robhouse[playerid] != false) return SendClientMessage(playerid, COLOR_GREY, "Вы уже грабили дом в этом часу");
							if(HouseInfo[h][hOwned] == 0) return SendClientMessage(playerid, COLOR_GREY, "У дома нет владельца");
							if(!IsPlayerConnected(GetPlayerID(HouseInfo[h][hOwner]))) return SendClientMessage(playerid, COLOR_GREY, "Владелец дома OFF-LINE");
							SendClientMessage(playerid, COLOR_GREEN, "Вы ограбили дом, везите материалы в доки ((/gps > Прочее))");
							PlayerInfo[playerid][pWantedLevel] += 1;
							WantedPoints[playerid] += 1;
							WantedLevel[playerid] += 1;
						    SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
							SetPlayerCriminal(playerid, 255, "Ограбление дома");
							SendClientMessage(playerid, COLOR_WHITE, "Ваша узнаваемость повысилась");
							GetPlayerName(playerid, sendername, sizeof(sendername));
							PlayerInfo[playerid][pLabiding] -= 1;
							robh[playerid] = true;
							robhouse[playerid] = true;
							HouseInfo[h][hTakings] -= 10000;
						}
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/myskill", true) == 0)
 	{
		 new stringg[1000];
		 new points[6];
		 points[0] = 100 - PlayerInfo[playerid][pGunSkill][0];
		 points[1] = 100 - PlayerInfo[playerid][pGunSkill][1];
		 points[2] = 100 - PlayerInfo[playerid][pGunSkill][2];
		 points[3] = 100 - PlayerInfo[playerid][pGunSkill][3];
		 points[4] = 100 - PlayerInfo[playerid][pGunSkill][4];
		 points[5] = 100 - PlayerInfo[playerid][pGunSkill][5];
		 format(stringg,1000,"SDPistol:\t[%s]%d%\nDeagle:\t\t[%s]%d%\nShotGun:\t[%s]%d%\nMP5\t\t[%s]%d%\nAK47:\t\t[%s]%d%\nM4A1:\t\t[%s]%d%",
		 ToDevelopSkills(PlayerInfo[playerid][pGunSkill][0],points[0]),PlayerInfo[playerid][pGunSkill][0],
		 ToDevelopSkills(PlayerInfo[playerid][pGunSkill][1],points[1]),PlayerInfo[playerid][pGunSkill][1],
		 ToDevelopSkills(PlayerInfo[playerid][pGunSkill][2],points[2]),PlayerInfo[playerid][pGunSkill][2],
		 ToDevelopSkills(PlayerInfo[playerid][pGunSkill][3],points[3]),PlayerInfo[playerid][pGunSkill][3],
		 ToDevelopSkills(PlayerInfo[playerid][pGunSkill][4],points[4]),PlayerInfo[playerid][pGunSkill][4],
		 ToDevelopSkills(PlayerInfo[playerid][pGunSkill][5],points[5]),PlayerInfo[playerid][pGunSkill][5]);
		 ShowPlayerDialog(playerid,43,DIALOG_STYLE_MSGBOX,"<< Навыки владения оружием >>",stringg,"Готово","");
		 return true;
 	}
	if(strcmp(cmd, "/setskill", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setskill [id] [номер] [количество]");
                SendClientMessage(playerid, COLOR_GRAD1, "[1] Slinced Pistol |[2] Desert Eagle |[3] MP5 |[4] AK47 |[5] M4A1 |[6] ShotGun");
                return true;
            }
            giveplayerid = strval(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
				{
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
	                	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setskill [id] [номер] [количество]");
	                	SendClientMessage(playerid, COLOR_GRAD1, "[1] Slinced Pistol |[2] Desert Eagle |[3] MP5 |[4] AK47 |[5] M4A1 |[6] ShotGun");
	                	return true;
                    }
                    new stat;
                    stat = strval(tmp);
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
	                	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setskill [id] [номер] [количество]");
	                	SendClientMessage(playerid, COLOR_GRAD1, "[1] Slinced Pistol |[2] Desert Eagle |[3] MP5 |[4] AK47 |[5] M4A1 |[6] ShotGun");
	                	return true;
                    }
                    new amount;
                    amount = strval(tmp);
                    if(PlayerInfo[playerid][pAdmin] >= 6)
                    {
                        switch (stat)
                        {
                            case 1:
                            {
                                PlayerInfo[giveplayerid][pGunSkill][0] = amount;
                                format(string, sizeof(string), "Скилл оружия SDPistol у него теперь равен %d.", amount);
                            }
                            case 2:
                            {
                                PlayerInfo[giveplayerid][pGunSkill][1] = amount;
                                format(string, sizeof(string), "Скилл оружия Desert Eagle у него теперь равен %d.", amount);
                            }
                            case 3:
                            {
                                PlayerInfo[giveplayerid][pGunSkill][3] = amount;
                                format(string, sizeof(string), "Скилл оружия MP5 у него теперь равен %d.", amount);
                            }
                            case 4:
                            {
                                PlayerInfo[giveplayerid][pGunSkill][4] = amount;
                                format(string, sizeof(string), "Скилл оружия AK47 у него теперь равен %d.", amount);
                            }
                            case 5:
                            {
                                PlayerInfo[giveplayerid][pGunSkill][5] = amount;
                                format(string, sizeof(string), "Скилл оружия M4A1 у него теперь равен %d.", amount);
                            }
                            case 6:
                            {
                                PlayerInfo[giveplayerid][pGunSkill][2] = amount;
                                format(string, sizeof(string), "Скилл оружия ShotGun у него теперь равен %d.", amount);
                            }
                            default:
                            {
								format(string, sizeof(string), "Неизвестное значение", amount);
							}
						}
						SendClientMessage(playerid, COLOR_GREY, string);
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/sellgrib",true)==0)
	{
		for(new i = 0; i < sizeof(BizzInfo); i++)
		{
  			if(PlayerInfo[playerid][pMushrooms] == 0) return SendClientMessage(playerid, COLOR_WHITE, "У Вас нет грибов");
			new inter = GetPlayerInterior(playerid);
		 	if (PlayerToPoint(10, playerid,BizzInfo[i][bBarX], BizzInfo[i][bBarY], BizzInfo[i][bBarZ]))
	    	{
		    	if(inter == 10 ||  inter == 4 || inter == 5 || inter == 9 || inter == 17)
		 		{
		  			new money;
		  			money = PlayerInfo[playerid][pMushrooms]*25;
		  			PlayerInfo[playerid][pCash] +=money;
				 	PlayerInfo[playerid][pMushrooms] = 0;
		  			format(string,sizeof(string), "Вы получили: {ffffff}%d вирт",money);
			        SendClientMessage(playerid,COLOR_GREEN,string);
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/paint", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 7)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			if(PaintballRound == 0) return SendClientMessage(playerid,COLOR_WHITE, "Paint Ball уже начат!");
			format(string, sizeof(string), "Внимание! Начало пейнтбола через 5 минут. Место регистрации: гора VineWood (( /gps > Развлечения ))");
			OOCOff(0xFFAAFFAA,string);
			PaintballPlayers = 1;
			SetTimer("StartPaintballtwo", 180000, 0);
			PaintballRound = 0;
		}
		return true;
	}
	if(strcmp(cmd, "/arace", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 7)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			if(EndingRaceRound == 0) return SendClientMessage(playerid,COLOR_WHITE, "Гонка уже начата!");
			format(string, sizeof(string), "Внимание! Начало стритрейсинга через 5 минут. Регистрация у въезда! (( /gps > Развлечения ))");
			OOCOff(0xB9B900AA,string);
			EndingRaceRound = 0;
			SetTimer("StartRacetwo", 180000, 0);
		}
		return true;
	}
	if(strcmp(cmd, "/fixcar", true) == 0)
	{
		if(PlayerInfo[playerid][pCash] < 250) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
		if(IsVehicleOccupied(caridhouse[playerid])) return SendClientMessage(playerid, COLOR_GREY, "Ваше авто используется");
		if(PlayerInfo[playerid][pPHousekey] != 255)
		{
			//new house = PlayerInfo[playerid][pPHousekey];
			DestroyVehicle(caridhouse[playerid]);
			caridhouse[playerid] = CreateVehicle(PlayerInfo[playerid][pCar], 2505.4902,1074.3763,-89.9699,179.9438, PlayerInfo[playerid][pColor], PlayerInfo[playerid][pColor1], 86400);
			LinkVehicleToInterior(caridhouse[playerid], 0);
			SetVehicleVirtualWorld(caridhouse[playerid], PlayerInfo[playerid][pPHousekey]);
			LockCar(caridhouse[playerid]);
			IsLocked[caridhouse[playerid]] = 1;
			createdcar = caridhouse[playerid];
			GameTextForPlayer(playerid, "~g~car at your home~n~~r~$-250", 5000, 1);
			PlayerInfo[playerid][pCash] -= 250;
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			if(PlayerInfo[playerid][pCar] != 481)
			{
				AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pWheels]);
				AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pNitro]);
				AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pHydrawlic]);
				ChangeVehiclePaintjob(caridhouse[playerid], PlayerInfo[playerid][pPaintJob]);
				AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pSpoiler]);
				AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pBumper1]);
				AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pBumper2]);
				AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pYubki]);
				AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pYubki2]);
				AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pVih]);
				AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pVozd]);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/showcarpass",true) == 0)
	{
		if(PlayerInfo[playerid][pPHousekey] != 255)
		{
			if(GetPlayerVehicleID(playerid) == caridhouse[playerid])
            {
	            if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Вы не в машине");
	 			tmp = strtok(cmdtext, idx);
			   	if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /showcarpass [id]");
			   	giveplayerid = ReturnUser(tmp);
			   	if(IsPlayerConnected(giveplayerid))
			   	{
			   		if(giveplayerid != INVALID_PLAYER_ID)
	   				{
				   		if (ProxDetectorS(8.0, playerid, giveplayerid))
				   		{
						   	new house = PlayerInfo[playerid][pPHousekey];
						   	new textcar[64];
			   				SendClientMessage(giveplayerid,0x0AA8DAFF, "-------========[ VEHICLE PASSPORT ]========-------");
					        format(textcar,sizeof(textcar), " Модель: %s",VehicleNames[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
					        SendClientMessage(giveplayerid,0xC0E1EEFF, textcar);
					        format(textcar,sizeof(textcar), " Владелец: %s",HouseInfo[house][hOwner]);
					        SendClientMessage(giveplayerid,0xC0E1EEFF, textcar);
					        format(textcar,sizeof(textcar), " Состояние: %d процентов",PlayerInfo[playerid][pProcents]);
					        SendClientMessage(giveplayerid,0xC0E1EEFF, textcar);
					        SendClientMessage(giveplayerid,0x0AA8DAFF, "-------====================================-------");
					       	GetPlayerName(playerid, sendername, sizeof(sendername));
					       	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "%s достал(а) документы и показал(а) их %s", sendername,giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        		}
		        	}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/работа", true) == 0)
	{
	    if(!PlayerToPoint(5.0,playerid,359.68,184.85,1008.38)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в Мерии (( Не на чекпоинте ))");
		if(PlayerInfo[playerid][pPBiskey] != 255) return SendClientMessage(playerid, COLOR_GREY, "Бизнесмен неможет устроиться на эту работу");
		if(PlayerInfo[playerid][pPasport] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нету паспорта");
		ShowPlayerDialog(playerid, 10092, DIALOG_STYLE_MSGBOX, "Приём на работу", "Вы хотите посмотреть список доступных работ?", "Да", "Нет");
		return true;
	}
	if(strcmp(cmd, "/клиент", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_GREY, "/timestamp - {FFFFFF}включение/отключение времени сообщений в чате.");
	    SendClientMessage(playerid, COLOR_GREY, "/pagesize [10-20] - {FFFFFF}изменение количества строк чата.");
	    SendClientMessage(playerid, COLOR_GREY, "/dl - {FFFFFF}команда для просмотра информации о автомобиле.");
	    SendClientMessage(playerid, COLOR_GREY, "/fpslimit [20-90] - {FFFFFF}установка ограничения кадров в секунду(FPS).");
	}
	if(strcmp(cmd, "/carpass", true) == 0)
	{
		new textcar[64];
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в машине");
		if(GetPlayerVehicleID(playerid) == caridhouse[playerid])
	    {
			new house = PlayerInfo[playerid][pPHousekey];
			SendClientMessage(playerid,0x0AA8DAFF, "-------========[ VEHICLE PASSPORT ]========-------");
			format(textcar,sizeof(textcar), " Модель: %s",VehicleNames[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
			SendClientMessage(playerid,0xC0E1EEFF, textcar);
			format(textcar,sizeof(textcar), " Владелец: %s",HouseInfo[house][hOwner]);
			SendClientMessage(playerid,0xC0E1EEFF, textcar);
			format(textcar,sizeof(textcar), " Состояние: %d процентов",PlayerInfo[playerid][pProcents]);
			SendClientMessage(playerid,0xC0E1EEFF, textcar);
			SendClientMessage(playerid,0x0AA8DAFF, "-------====================================-------");
			format(string,sizeof(string), "достал(а) документы из бардочка",giveplayer);
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
			format(string, sizeof(string), "%s достал(а) документы из бардочка", sendername);
			ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return true;
		}
	    return SendClientMessage(playerid, COLOR_GREY, "В бордачке этого транспортного средства нет докуметов");
	}
	if(strcmp(cmd, "/sellcar", true) == 0)
    {
        //new caren = PlayerInfo[playerid][pCar];
		new house = PlayerInfo[playerid][pPHousekey];
       	if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома");
		if(PlayerInfo[playerid][pCar] == 481) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете продать велосипед");
		CompVehDel(playerid);
		PlayerInfo[playerid][pCash] += 500000;
		PlayerInfo[playerid][pProcents] = 100;
		PlayerInfo[playerid][pCar] = 481;
		PlayerInfo[playerid][pColor] = 0;
		PlayerInfo[playerid][pColor1] = 0;
		HouseInfo[house][hVcol1] = 0;
		HouseInfo[house][hVcol2] = 0;
		SendClientMessage(playerid,COLOR_WHITE, "Вы продали свой автомобиль");
		DestroyVehicle(caridhouse[playerid]);
		OnPropUpdate();
		caridhouse[playerid] = CreateVehicle(PlayerInfo[playerid][pCar], 2505.4902,1074.3763,-89.9699,179.9438, PlayerInfo[playerid][pColor], PlayerInfo[playerid][pColor1], 86400);
		LinkVehicleToInterior(caridhouse[playerid], 0);
		SetVehicleVirtualWorld(caridhouse[playerid], PlayerInfo[playerid][pPHousekey]);Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelCar];
		LockCar(caridhouse[playerid]);
		IsLocked[caridhouse[playerid]] = 1;
 	}
	if(strcmp(cmd, "/pgetip", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
		  	if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /pgetip [ip]");
			SendClientMessage(playerid, COLOR_REDD, "Игроки с данного IP адреса:");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				new playersip[256];
				GetPlayerIp(i,playersip,sizeof(playersip));
				if(IsPlayerConnected(i))
				{
					if(!strcmp(playersip, tmp))
				 	{
					    GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, 256, "[%d] %s | IP %s", i,giveplayer,playersip);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/sellzone", true) == 0)
	{
		for(new i = 0; i < sizeof(GZInfo); i++)
		{
			if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
			{
				if(PlayerInfo[playerid][pLeader] != GZInfo[i][gFrakVlad]) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей зоне");
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /sellzone [id] [цена]");
				new playa;
				new money;
				playa = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				money = strval(tmp);
				if(money < 1 || money > 50000) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 50000 вирт"); return true; }
				if(IsPlayerConnected(playa))
				{
					if(playa != INVALID_PLAYER_ID)
					{
						if(ProxDetectorS(8.0, playerid, playa))
						{
							if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы не можете продать зону самому себе"); return true; }
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы предложили %s купить территорию за %d вирт",giveplayer,money);
							SendClientMessage(playerid, 0x6495EDFF, string);
							format(string, sizeof(string), "%s предлагает Вам купить территорию за %d вирт. (/accept zone) для покупки",sendername,money);
							SendClientMessage(playa, 0x6495EDFF, string);
							ZoneOffer[playa] = playerid;
							sellzone[playa] = PlayerInfo[playerid][pMember];
							ZonePrice[playa] = money;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
							return true;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
					return true;
				}
			}
		}
	}
	if(strcmp(cmd, "/agetip", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 8)
		{
            if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /agetip [Ник]");
	   	    format(string, sizeof(string), "%s.ini", tmp);
            if(fexist(string))
      		{
      		    new ipk[16];
	  			new regip[16];
				format(string, sizeof(string), "%s.ini", tmp);
                new File = ini_openFile(string);
				ini_getString(File, "pIp",ipk);
				ini_getString(File, "pIpReg",regip);
				ini_closeFile(File);
				format(string, sizeof(string), "{FF9900}Ник: [ %s ] L-IP: [ %s ] | R-IP: [ %s ]",tmp,ipk,regip);
   				SendClientMessage(playerid, COLOR_LIGHTRED, string);
			}
   			else
            {
		        format(string, sizeof(string), "Аккаунт не найден");
                SendClientMessage(playerid, COLOR_GREY, string);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/agetipreg", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 8)
		{
            if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /agetipreg [Ник]");
	   	    format(string, sizeof(string), "%s.ini", tmp);
            if(fexist(string))
      		{
				format(string, sizeof(string), "%s.ini", tmp);
                new File = ini_openFile(string);
				ini_getString(File, "pIpReg",string);
				ini_closeFile(File);
				SendClientMessage(playerid, COLOR_REDD, "Регистрационный IP:");
				format(string, sizeof(string), "Ник: %s | IP: %s",tmp,string);
   				SendClientMessage(playerid, 0x6495EDFF, string);
			}
   			else
            {
		        format(string, sizeof(string), "Аккаунт не найден");
                SendClientMessage(playerid, COLOR_GREY, string);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/atm", true) == 0)
	{
		if(IsABankomat(playerid) || PlayerToPoint(5.0,playerid,1395.4872,-1690.9338,13.6929))
		{
			if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { return true; }
			ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
			new listitems[] = "Информация\nСнять деньги\nСнять деньги за дом\nПополнить банковский счет\nПополнить домашний счет\nПополнить счет бизнеса\nПеревести деньги\nПоложить на мобильный телефон";
			ShowPlayerDialog(playerid, 8900, DIALOG_STYLE_LIST, " ", listitems, "Далее", "Выход");
			return true;
		}
	}
	if(strcmp(cmd, "/admins", true) == 0)
 	{
 	    SendClientMessage(playerid,COLOR_LIGHTRED,"Администраторы в сети:");
        for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
   			{
   			    if(PlayerInfo[i][pAdmin] >= 1)
   			    {
					new drank3[150];
					if(PlayerInfo[i][pAdmin] == 1) { drank3 = "Практикант"; }
					else if(PlayerInfo[i][pAdmin] == 2) { drank3 = "Ст.Практикант"; }
					else if(PlayerInfo[i][pAdmin] == 3) { drank3 = "Модератор"; }
					else if(PlayerInfo[i][pAdmin] == 4) { drank3 = "Ст.Модератор"; }
					else if(PlayerInfo[i][pAdmin] == 5) { drank3 = "Администратор"; }
					else if(PlayerInfo[i][pAdmin] == 6) { drank3 = "Ст.Администратор"; }
					else if(PlayerInfo[i][pAdmin] == 7) { drank3 = "Ивент-Менеджер"; }
					else if(PlayerInfo[i][pAdmin] == 8) { drank3 = "ОЗЛ"; }
					else if(PlayerInfo[i][pAdmin] == 9) { drank3 = "Спец.Администратор"; }
					else if(PlayerInfo[i][pAdmin] == 10) { drank3 = "Разработчик"; }
					new drank2[5];
					if(PlayerInfo[i][pAVig] == 0) { drank2 = "0"; }
					else if(PlayerInfo[i][pAVig] == 1) { drank2 = "1"; }
					else if(PlayerInfo[i][pAVig] == 2) { drank2 = "2"; }
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, sizeof(string), "{e23434}%s{F5DEB3} %s(%d) {e23434}Выговоры:{F5DEB3} (%s / 3)",drank3,sendername,i,drank2);
					SendClientMessage(playerid,COLOR_WHITE,string);
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/helpers", true) == 0)
 	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "Служба поддержки в сети:");
  		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
   			{
   			    if(PlayerInfo[i][pHelp] >= 1)
   			    {
					new drank3[20];
					if(PlayerInfo[i][pHelp] == 1) { drank3 = "1"; }
					else if(PlayerInfo[i][pHelp] == 2) { drank3 = "2"; }
					else if(PlayerInfo[i][pHelp] == 3) { drank3 = "3"; }
					else if(PlayerInfo[i][pHelp] == 4) { drank3 = "4"; }
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "Ник: [ {e23434}%s{F5DEB3} ] ID: [ {e23434}%d{F5DEB3} ] Help lvl: [ {e23434}%s{F5DEB3} ]",sendername,i,drank3);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/members",true)==0)
    {
		new teamnumber;
		if(PlayerInfo[playerid][pLeader] != 0) teamnumber = PlayerInfo[playerid][pLeader];
		else if(PlayerInfo[playerid][pMember] != 0) teamnumber = PlayerInfo[playerid][pMember];
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
 			return true;
 		}
 		SendClientMessage(playerid, 0x059BD3FF, "Члены организации Online:");
		for(new i = 0; i < MAX_PLAYERS; i++)
 		{
 			if (IsPlayerConnected(i))
			{
				GetPlayerName(i, sendername, sizeof(sendername));
				format(string, sizeof(string), "");
				if(PlayerInfo[i][pLeader] == teamnumber) format(string, sizeof(string), " [%d] %s  ранг: Лидер",i,sendername);
				else if(PlayerInfo[i][pMember] == teamnumber) format(string, sizeof(string), " [%d] %s  ранг: %d",i,sendername, PlayerInfo[i][pRank]);
				if(strlen(string) > 1) SendClientMessage(playerid, 0x059BD3FF, string);
			}
		}
        return true;
    }
	if(strcmp(cmd, "/pdd", true)==0)
	{
		new pdddialog[2148];
		{
			format(pdddialog,sizeof(pdddialog), "%s%s%s%s%s%s%s%s%s%s%s%s%s",
			pdddialogMSG[0],pdddialogMSG[1],pdddialogMSG[2],pdddialogMSG[3],pdddialogMSG[4],pdddialogMSG[5],pdddialogMSG[6],pdddialogMSG[7],pdddialogMSG[8],pdddialogMSG[9],pdddialogMSG[10],pdddialogMSG[11],pdddialogMSG[12]);
			ShowPlayerDialog(playerid,15,DIALOG_STYLE_MSGBOX, "Правила дорожного движения", pdddialog, "Готово", "");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s читает Правила Дорожного Движения.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return true;
		}
	}
	if(strcmp(cmd, "/ahelp", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
    		new listitems[] = "{e23434}[1]{ffffff}Практикант\n{e23434}[2]{ffffff}Старший практикант\n{e23434}[3]{ffffff}Модератор\n{e23434}[4]{ffffff}Старший Модератор\n{e23434}[5]{ffffff}Администратор\n{e23434}[6]{ffffff}Старший Администратор\n{e23434}[7]{ffffff}Ивент-Менеджер\n{e23434}[8]{ffffff}Ответственный За Лидерство\n{e23434}[9]{ffffff}Специальный Администратор\n{e23434}[10]{ffffff}Разработчик";
			ShowPlayerDialog(playerid, 409, DIALOG_STYLE_LIST, "Команды Администратора", listitems, "Выбрать", "Отмена");
  		}
	  	return true;
	}
	if(strcmp(cmd, "/delgun", true)== 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /delgun [id]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "{e23434}Авторизация", "{ffffff}Введите админ-пароль", "Авторизация", "Отмена");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "Вы забрали оружие у данного игрока");
			    SendClientMessage(giveplayerid, COLOR_LIGHTRED, "Администратор забрал у вас оружие!");
				DelGun(giveplayerid);
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Вы не администратор");
		}
	}
	if(strcmp(cmd, "/exit", true) == 0)
	{
		for(new i = 0; i < sizeof(HouseInfo); i++)
		{
			if(PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
			{
				if(GetPlayerVirtualWorld(playerid) == i+50)
				{
    				ShowPlayerDialog(playerid,10230,DIALOG_STYLE_MSGBOX, "Выход", "Куда желаете выйти?", "Улица", "Гараж");
		            /*SetPlayerInterior(playerid,0);
		            SetPlayerVirtualWorld(playerid,0);
		            ACP_SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
		            PlayerInfo[playerid][pInt] = 0;
		            PlayerInfo[playerid][pLocal] = 255;*/
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/gexit", true) == 0)
	{
		if(PlayerToPoint(30,playerid,2505.4902,1074.3763,-89.9699) && GetPlayerVirtualWorld(playerid) == PlayerInfo[playerid][pPHousekey])
		{
		    new house = PlayerInfo[playerid][pPHousekey];
		    if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, HouseInfo[house][hCarx], HouseInfo[house][hCary], HouseInfo[house][hCarz]);
				SetVehicleZAngle(tmpcar, HouseInfo[house][hCarc]);
				SetVehicleVirtualWorld(tmpcar, 0);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerInterior(playerid, 0);
			}
			else
			{
				ACP_SetPlayerPos(playerid,HouseInfo[house][hCarx], HouseInfo[house][hCary], HouseInfo[house][hCarz]);
				SetPlayerFacingAngle(playerid,HouseInfo[house][hCarc]);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerInterior(playerid, 0);
			}
            /*SetPlayerInterior(playerid,0);
            SetPlayerVirtualWorld(playerid,0);
            ACP_SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
            PlayerInfo[playerid][pInt] = 0;
            PlayerInfo[playerid][pLocal] = 255;*/
		}
		return true;
	}
	if(strcmp(cmd, "/directory", true) == 0 || strcmp(cmd, "/dir", true) == 0)
	{
		if(PlayerInfo[playerid][pDirectory] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет справочника");
		ShowPlayerDialog(playerid,5454,DIALOG_STYLE_LIST, "Справочник", "[0] Адвокаты\n[1] Таксисты\n[2] Крупье\n[3] Лидеры организаций\n[4] Инструкторы\n[5] Механики\n[6] Медики\n[7] Развозчики продуктов", "Выбрать", "Отмена");
		return true;
	}
	if(strcmp(cmd, "/c", true) == 0)
	{
	    if(PlayerInfo[playerid][pPhone] == 0)return SendClientMessage(playerid,COLOR_GREY, "У вас нету телефона! Его можно приобрести в салоне сотовой связи МТС");
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "%s достаёт телефон", sendername);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
		ShowPlayerDialog(playerid, 9956, DIALOG_STYLE_LIST, "Выберите сервис", " Вызвать Таксиста\n Вызвать Медицинскую помощь\n Вызвать Механика\n Вызвать Полицию", "Выбор", "Отмена");
		return true;
	}
	if(strcmp(cmd, "/buydonate", true, 10) == 0)
	{
		ShowPlayerDialog(playerid,1993,DIALOG_STYLE_INPUT, "Donate", "==========================\n Введите донат код:\n==========================", "Далее", "Отмена");
		return true;
	}
	if(strcmp(cmd, "/mm", true) == 0 || strcmp(cmd, "/mainmenu", true) == 0)
	{
		new listitems[] = "{e23434}[1]{ffffff}Настройки\n{e23434}[2]{ffffff}Мои данные\n{e23434}[3]{ffffff}Команды сервера\n{e23434}[4]{ffffff}Администратция\n{e23434}[5]{ffffff}Смена пароля\n{e23434}[6]{ffffff}Очистить чат\n{e23434}[7]{ffffff}Слив денег\n{e23434}[8]{ffffff}Безопастность\n{e23434}[9]{ffffff}Смена ника\n{e23434}[10]{ffffff}Донат\n";
		ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "Личное меню", listitems, "Выбрать", "Отмена");
		showhelp[playerid] = 0;
		return true;
	}
	if(strcmp(cmd, "/sbag", true) == 0)
	{
	    if(GetPVarInt(playerid,"timer")>gettime())
		{
		    SendClientMessage(playerid,0xC1C1C1AA,"Следующее сообщение можно отправить через одну минуту.");
		    return  1;
		}
	    SetPVarInt(playerid, "timer",gettime()+60);
		ShowPlayerDialog(playerid,1848,DIALOG_STYLE_INPUT,"{FFFACD}Сообщение о баге","{FFFFFF}Здравствуйте, если вы действительно обнаружили баг,\nто подробно опишите как и где он был замечен:\n\n","Отправить","Отмена");
		return 1;
	}
	if(strcmp(cmd, "/switchskin", true) == 0)
	{
		if(IsAGang(playerid))
		{
			if(forma[playerid] != 1) return SendClientMessage(playerid, COLOR_GREY, "У вас нет формы");
			SetPlayerSkin(playerid,287);
			SetPlayerColor(playerid, COLOR_GREEN);
			forma[playerid] = 0;
			proverkaforma[playerid] = 1;
		}
		return true;
	}
	if(strcmp(cmd, "/carm", true) == 0 || strcmp(cmd, "/conveyingarms", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 19 || proverkaforma[playerid] == 1)
		{
			new listitems[] = " [1] Загрузка\n [2] Разгрузить на гл.склад\n [3] Разгрузить на склад Армии ЛС\n [4] Разгрузить на склад Армии СФ\n [5] Разгрузить на склад ЛСПД\n [6] Разгрузить на склад ФБР\n [7] Разгрузить на склад СФПД\n [8] Разгрузить на склад ЛВПД\n [9] Разгрузить на клад бандам";
			ShowPlayerDialog(playerid, 9653, DIALOG_STYLE_LIST, "Развозка материалов", listitems, "Выбрать", "Отмена");
		}
		return true;
	}
	if(strcmp(cmd, "/hackbase", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 14)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /hackbase [id]");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
					new hackbaseusp;
					hackbaseusp = 1+random(3);
					if(hackbaseusp != 3) return SendClientMessage(playerid, COLOR_BLUE, "Вам не удалось взломать базу, попробуйте ещё раз!");
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Вы взломали базу и сняли розыск у %s.", giveplayer);
					SendClientMessage(playerid, COLOR_BLUE, string);
					format(string, sizeof(string), "%s взломал базу и снял с вас розыск.", sendername);
					SendClientMessage(giveplayerid, COLOR_BLUE, string);
					WantedPoints[giveplayerid] = 0;
					WantedLevel[giveplayerid] = 0;
					PlayerInfo[giveplayerid][pWantedLevel] = 0;
					SetPlayerWantedLevel(giveplayerid, PlayerInfo[giveplayerid][pWantedLevel]);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		}
		return true;
	}
	if(strcmp(cmd, "/tie", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 14)
		{
			if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /tie [id]");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(PlayerTied[giveplayerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже связан");
					if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
						new car = GetPlayerVehicleID(playerid);
						if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Нельзя связать самого себя"); return true; }
						if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вас связал %s.", sendername);
							SendClientMessage(giveplayerid, 0x6495EDFF, string);
							format(string, sizeof(string), "%s связал %s", sendername ,giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							TogglePlayerControllable(giveplayerid, 0);
							TieTime[giveplayerid] = 300;
							PlayerTied[giveplayerid] = 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "Игрок в автомобиле");
							return true;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
						return true;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				return true;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		}
		return true;
	}
	if(strcmp(cmd, "/debtors", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 14)
		{
			if(PlayerInfo[playerid][pRank] < 6) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 6 ранга");
			SendClientMessage(playerid, COLOR_YELLOW2, "Должники:");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[playerid][pMember] == 5)
					{
						if(PlayerInfo[i][pMafiaRoof] == 5 && PlayerInfo[i][pMember] == 0)
						{
						    GetPlayerName(i, giveplayer, sizeof(giveplayer));
							format(string, 256, "Должник: %s | Долг: %s", giveplayer,PlayerInfo[i][pDebt]);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
					}
					if(PlayerInfo[playerid][pMember] == 6)
					{
						if(PlayerInfo[i][pMafiaRoof] == 6 && PlayerInfo[i][pMember] == 0)
						{
						    GetPlayerName(i, giveplayer, sizeof(giveplayer));
							format(string, 256, "Должник: %s | Долг: %s", giveplayer,PlayerInfo[i][pDebt]);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
					}
					if(PlayerInfo[playerid][pMember] == 14)
					{
						if(PlayerInfo[i][pMafiaRoof] == 14 && PlayerInfo[i][pMember] == 0)
						{
						    GetPlayerName(i, giveplayer, sizeof(giveplayer));
							format(string, 256, "Должник: %s | Долг: %s", giveplayer,PlayerInfo[i][pDebt]);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/setdebt", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 14)
		{
			if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /setdebt [id]");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
						if(PlayerInfo[giveplayerid][pJob] == 0) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок не работает");
						if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Нельзя поставить себе крышу"); return true; }
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "%s предлагает вам крышу (/accept debt) чтобы принять", sendername);
						SendClientMessage(giveplayerid, 0x6495EDFF, string);
						format(string, sizeof(string), "%s предлагает крышу %s", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						Krisha[giveplayerid] = PlayerInfo[playerid][pMember];
						KrishaOffer[giveplayerid] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
						return true;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				return true;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		}
		return true;
	}
	if(strcmp(cmd, "/untie", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 5  || PlayerInfo[playerid][pMember] == 14)
		{
			if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /untie [id]");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
						if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Нельзя себя развязать"); return true; }
						if(PlayerTied[giveplayerid])
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы были развязаны %s", sendername);
							SendClientMessage(giveplayerid, 0x6495EDFF, string);
							format(string, sizeof(string), "%s развязал %s", sendername ,giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							TogglePlayerControllable(giveplayerid, 1);
							PlayerTied[giveplayerid] = 0;
							TieTime[giveplayerid] = 0;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Этот игрок не связан");
							return true;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
						return true;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				return true;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		}
		return true;
	}
	if(strcmp(cmd, "/showpass",true) == 0)
	{
		if(PlayerInfo[playerid][pPasport] == 0)	return SendClientMessage(playerid, COLOR_GREY, "У вас нету паспорта , его нужно получить в мерии!");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /showpass [id]");
		giveplayerid = ReturnUser(tmp);
		if(IsPlayerConnected(giveplayerid))
		{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
		   			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	   				GetPlayerName(playerid, sendername, sizeof(sendername));
					new ttext[32];
					if(PlayerInfo[playerid][pMember] == 0) { ttext = "Нет"; }
					else if(PlayerInfo[playerid][pMember] == 1) { ttext = "LSPD"; }
					else if(PlayerInfo[playerid][pMember] == 2) { ttext = "FBI"; }
					else if(PlayerInfo[playerid][pMember] == 3) { ttext = "SFA"; }
					else if(PlayerInfo[playerid][pMember] == 4) { ttext = "МЧС San Fierro"; }
					else if(PlayerInfo[playerid][pMember] == 5) { ttext = "LCN"; }
					else if(PlayerInfo[playerid][pMember] == 6) { ttext = "Yakuza"; }
					else if(PlayerInfo[playerid][pMember] == 7) { ttext = "Мэрия"; }
					else if(PlayerInfo[playerid][pMember] == 8) { ttext = "Casino Caligula"; }
					else if(PlayerInfo[playerid][pMember] == 9) { ttext = "SF NEWS"; }
					else if(PlayerInfo[playerid][pMember] == 10) { ttext = "SFPD"; }
					else if(PlayerInfo[playerid][pMember] == 11) { ttext = "Инструкторы"; }
					else if(PlayerInfo[playerid][pMember] == 12) { ttext = "The Ballas"; }
					else if(PlayerInfo[playerid][pMember] == 13) { ttext = "Vagos Gang"; }
					else if(PlayerInfo[playerid][pMember] == 14) { ttext = "Русская Мафия"; }
					else if(PlayerInfo[playerid][pMember] == 15) { ttext = "Grove Street"; }
					else if(PlayerInfo[playerid][pMember] == 16) { ttext = "LS NEWS"; }
					else if(PlayerInfo[playerid][pMember] == 17) { ttext = "The Aztecas"; }
					else if(PlayerInfo[playerid][pMember] == 18) { ttext = "The Rifa"; }
					else if(PlayerInfo[playerid][pMember] == 19) { ttext = "Зона 51"; }
					else if(PlayerInfo[playerid][pMember] == 20) { ttext = "LV NEWS"; }
					else if(PlayerInfo[playerid][pMember] == 21) { ttext = "LVPD"; }
					else if(PlayerInfo[playerid][pMember] == 22) { ttext = "МЧС Los Santos"; }
					else if(PlayerInfo[playerid][pMember] == 23) { ttext = "МЧС Las Venturas"; }
					else if(PlayerInfo[playerid][pMember] == 24) { ttext = "Хитманы";}
					new jtext[32];
					if(PlayerInfo[playerid][pJob] == 0) { jtext = "Безработный"; }
					else if(PlayerInfo[playerid][pJob] == 2) { jtext = "Механик"; }
					else if(PlayerInfo[playerid][pJob] == 3) { jtext = "Продавец хотдогов"; }
					else if(PlayerInfo[playerid][pJob] == 4) { jtext = "Таксист"; }
					else if(PlayerInfo[playerid][pJob] == 5) { jtext = "Развозчик продуктов"; }
					else if(PlayerInfo[playerid][pJob] == 7) { jtext = "Прораб"; }
					else if(PlayerInfo[playerid][pJob] == 10) { jtext = "Дальнобойщик"; }
					new level = PlayerInfo[playerid][pLevel];
					new atext[32];
					if(PlayerInfo[playerid][pSex] == 1) { atext = "Мужчина"; }
		            else if(PlayerInfo[playerid][pSex] == 2) { atext = "Женщина"; }
		            new rangz[20];
		            if(PlayerInfo[playerid][pMember] == 0)
					{
						if(PlayerInfo[playerid][pRank] == 0) { rangz = "Нет"; }
					}
			        if(PlayerInfo[playerid][pMember] == 1)
			        {
						if(PlayerInfo[playerid][pRank] == 15) { rangz = "Шериф"; }
						else if(PlayerInfo[playerid][pRank] == 14) { rangz = "Полковник"; }
						else if(PlayerInfo[playerid][pRank] == 13) { rangz = "Подполковник";}
						else if(PlayerInfo[playerid][pRank] == 12) { rangz = "Майор"; }
						else if(PlayerInfo[playerid][pRank] == 11) { rangz = "Капитан"; }
						else if(PlayerInfo[playerid][pRank] == 10) { rangz = "Ст. Лейтенант"; }
						else if(PlayerInfo[playerid][pRank] == 9) { rangz = "Лейтенант"; }
						else if(PlayerInfo[playerid][pRank] == 8) { rangz = "Мл. Лейтенант"; }
						else if(PlayerInfo[playerid][pRank] == 7) { rangz = "Ст. Прапорщик"; }
						else if(PlayerInfo[playerid][pRank] == 6) { rangz = "Прапорщик"; }
						else if(PlayerInfo[playerid][pRank] == 5) { rangz = "Ст. Сержант"; }
						else if(PlayerInfo[playerid][pRank] == 4) { rangz = "Сержант"; }
						else if(PlayerInfo[playerid][pRank] == 3) { rangz = "Мл. Сержант"; }
						else if(PlayerInfo[playerid][pRank] == 2) { rangz = "Офицер"; }
						else if(PlayerInfo[playerid][pRank] == 1) { rangz = "Кадет"; }
			        }
			        if(PlayerInfo[playerid][pMember] == 2)
			        {
						if(PlayerInfo[playerid][pRank] == 8) { rangz = "Директор"; }
						else if(PlayerInfo[playerid][pRank] == 7) { rangz = "Зам. директора"; }
						else if(PlayerInfo[playerid][pRank] == 6) { rangz = "Инспектор"; }
						else if(PlayerInfo[playerid][pRank] == 5) { rangz = "Начальник секции"; }
						else if(PlayerInfo[playerid][pRank] == 4) { rangz = "Специальный агент"; }
						else if(PlayerInfo[playerid][pRank] == 3) { rangz = "Старший агент"; }
						else if(PlayerInfo[playerid][pRank] == 2) { rangz = "Агент"; }
						else if(PlayerInfo[playerid][pRank] == 1) { rangz = "Стажёр"; }
			        }
					if(PlayerInfo[playerid][pMember] == 3)
			        {
						if(PlayerInfo[playerid][pRank] == 16) { rangz = "Генерал"; }
						else if(PlayerInfo[playerid][pRank] == 15) { rangz = "Полковник"; }
						else if(PlayerInfo[playerid][pRank] == 14) { rangz = "Подполковник"; }
						else if(PlayerInfo[playerid][pRank] == 13) { rangz = "Майор";}
						else if(PlayerInfo[playerid][pRank] == 12) { rangz = "Капитан"; }
						else if(PlayerInfo[playerid][pRank] == 11) { rangz = "Старший лейтенант"; }
						else if(PlayerInfo[playerid][pRank] == 10) { rangz = "Лейтенант"; }
						else if(PlayerInfo[playerid][pRank] == 9) { rangz = "Младший лейтенант"; }
						else if(PlayerInfo[playerid][pRank] == 8) { rangz = "Старший прапорщик"; }
						else if(PlayerInfo[playerid][pRank] == 7) { rangz = "Прапорщик"; }
						else if(PlayerInfo[playerid][pRank] == 6) { rangz = "Старшина"; }
						else if(PlayerInfo[playerid][pRank] == 5) { rangz = "Ст. Сержант"; }
						else if(PlayerInfo[playerid][pRank] == 4) { rangz = "Сержант"; }
						else if(PlayerInfo[playerid][pRank] == 3) { rangz = "Мл. Сержант"; }
						else if(PlayerInfo[playerid][pRank] == 2) { rangz = "Ефрейтор"; }
						else if(PlayerInfo[playerid][pRank] == 1) { rangz = "Рядовой"; }
			        }
			        if(PlayerInfo[playerid][pMember] == 4)
			        {
						if(PlayerInfo[playerid][pRank] == 8) { rangz = "Глав. врач"; }
						else if(PlayerInfo[playerid][pRank] == 7) { rangz = "Терапевт"; }
						else if(PlayerInfo[playerid][pRank] == 6) { rangz = "Хирург"; }
						else if(PlayerInfo[playerid][pRank] == 5) { rangz = "Педиатр"; }
						else if(PlayerInfo[playerid][pRank] == 4) { rangz = "Санитар"; }
						else if(PlayerInfo[playerid][pRank] == 3) { rangz = "Интерн"; }
						else if(PlayerInfo[playerid][pRank] == 2) { rangz = "Стажёр"; }
						else if(PlayerInfo[playerid][pRank] == 1) { rangz = "Практикант"; }
			        }
					if(PlayerInfo[playerid][pMember] == 5)
			        {
						if(PlayerInfo[playerid][pRank] == 10) { rangz = "Дон"; }
						else if(PlayerInfo[playerid][pRank] == 9) { rangz = "Консильери"; }
						else if(PlayerInfo[playerid][pRank] == 8) { rangz = "Младший Босс"; }
						else if(PlayerInfo[playerid][pRank] == 7) { rangz = "Капо"; }
						else if(PlayerInfo[playerid][pRank] == 6) { rangz = "Сотто-Капо"; }
						else if(PlayerInfo[playerid][pRank] == 5) { rangz = "Боец"; }
						else if(PlayerInfo[playerid][pRank] == 4) { rangz = "Солдато"; }
						else if(PlayerInfo[playerid][pRank] == 3) { rangz = "Сомбаттенте"; }
						else if(PlayerInfo[playerid][pRank] == 2) { rangz = "Ассосиато"; }
						else if(PlayerInfo[playerid][pRank] == 1) { rangz = "Новицио"; }
			        }
			        if(PlayerInfo[playerid][pMember] == 6)
			        {
						if(PlayerInfo[playerid][pRank] == 10) { rangz = "Кумите"; }
						else if(PlayerInfo[playerid][pRank] == 9) { rangz = "Оябун-кобун"; }
						else if(PlayerInfo[playerid][pRank] == 8) { rangz = "Cайко комон"; }
						else if(PlayerInfo[playerid][pRank] == 7) { rangz = "Оядзи"; }
						else if(PlayerInfo[playerid][pRank] == 6) { rangz = "Камбу"; }
						else if(PlayerInfo[playerid][pRank] == 5) { rangz = "Со-хобунтё"; }
						else if(PlayerInfo[playerid][pRank] == 4) { rangz = "Вакагасира"; }
						else if(PlayerInfo[playerid][pRank] == 3) { rangz = "Сятейгасира"; }
						else if(PlayerInfo[playerid][pRank] == 2) { rangz = "Кёдай"; }
						else if(PlayerInfo[playerid][pRank] == 1) { rangz = "Вакасю"; }
			        }
			        if(PlayerInfo[playerid][pMember] == 7)
			        {
						if(PlayerInfo[playerid][pRank] == 6) { rangz = "Мэр"; }
						else if(PlayerInfo[playerid][pRank] == 5) { rangz = "Зам. мэра"; }
						else if(PlayerInfo[playerid][pRank] == 4) { rangz = "Начальник охраны"; }
						else if(PlayerInfo[playerid][pRank] == 3) { rangz = "Охранник"; }
						else if(PlayerInfo[playerid][pRank] == 2) { rangz = "Адвокат"; }
						else if(PlayerInfo[playerid][pRank] == 1) { rangz = "Секретарь"; }
			        }
			        if(PlayerInfo[playerid][pMember] == 8)
			        {
						if(PlayerInfo[playerid][pRank] == 2) { rangz = "Менеджер"; }
						else if(PlayerInfo[playerid][pRank] == 1) { rangz = "Крупье"; }
			        }
			        if(PlayerInfo[playerid][pMember] == 9)
			        {
						if(PlayerInfo[playerid][pRank] == 6) { rangz = "Главный редактор"; }
						else if(PlayerInfo[playerid][pRank] == 5) { rangz = "Редактор"; }
						else if(PlayerInfo[playerid][pRank] == 4) { rangz = "Журналист"; }
						else if(PlayerInfo[playerid][pRank] == 3) { rangz = "Папарацци"; }
						else if(PlayerInfo[playerid][pRank] == 2) { rangz = "Фотограф"; }
						else if(PlayerInfo[playerid][pRank] == 1) { rangz = "Стажер"; }
			        }
			        if(PlayerInfo[playerid][pMember] == 10)
			        {
						if(PlayerInfo[playerid][pRank] == 15) { rangz = "Шериф"; }
						else if(PlayerInfo[playerid][pRank] == 14) { rangz = "Полковник"; }
						else if(PlayerInfo[playerid][pRank] == 13) { rangz = "Подполковник";}
						else if(PlayerInfo[playerid][pRank] == 12) { rangz = "Майор"; }
						else if(PlayerInfo[playerid][pRank] == 11) { rangz = "Капитан"; }
						else if(PlayerInfo[playerid][pRank] == 10) { rangz = "Ст. Лейтенант"; }
						else if(PlayerInfo[playerid][pRank] == 9) { rangz = "Лейтенант"; }
						else if(PlayerInfo[playerid][pRank] == 8) { rangz = "Мл. Лейтенант"; }
						else if(PlayerInfo[playerid][pRank] == 7) { rangz = "Ст. Прапорщик"; }
						else if(PlayerInfo[playerid][pRank] == 6) { rangz = "Прапорщик"; }
						else if(PlayerInfo[playerid][pRank] == 5) { rangz = "Ст. Сержант"; }
						else if(PlayerInfo[playerid][pRank] == 4) { rangz = "Сержант"; }
						else if(PlayerInfo[playerid][pRank] == 3) { rangz = "Мл. Сержант"; }
						else if(PlayerInfo[playerid][pRank] == 2) { rangz = "Офицер"; }
						else if(PlayerInfo[playerid][pRank] == 1) { rangz = "Кадет"; }
			        }
			        if(PlayerInfo[playerid][pMember] == 11)
			        {
						if(PlayerInfo[playerid][pRank] == 8) { rangz = "Управляющий"; }
						else if(PlayerInfo[playerid][pRank] == 7) { rangz = "Директор"; }
						else if(PlayerInfo[playerid][pRank] == 6) { rangz = "Старший менеджер"; }
						else if(PlayerInfo[playerid][pRank] == 5) { rangz = "Мл. менеджер"; }
						else if(PlayerInfo[playerid][pRank] == 4) { rangz = "Кординатор"; }
						else if(PlayerInfo[playerid][pRank] == 3) { rangz = "Инструктор"; }
						else if(PlayerInfo[playerid][pRank] == 2) { rangz = "Экзаменатор"; }
						else if(PlayerInfo[playerid][pRank] == 1) { rangz = "Стажёр"; }
			        }
			  		if(PlayerInfo[playerid][pMember] == 12)
			        {
						if(PlayerInfo[playerid][pRank] == 10) { rangz = "Биг Вилли"; }
						else if(PlayerInfo[playerid][pRank] == 9) { rangz = "Райч Нига"; }
						else if(PlayerInfo[playerid][pRank] == 8) { rangz = "Фолкс"; }
						else if(PlayerInfo[playerid][pRank] == 7) { rangz = "Федерал Блок"; }
						else if(PlayerInfo[playerid][pRank] == 6) { rangz = "Гангстер"; }
						else if(PlayerInfo[playerid][pRank] == 5) { rangz = "Ап Бро"; }
						else if(PlayerInfo[playerid][pRank] == 4) { rangz = "Гун брo"; }
						else if(PlayerInfo[playerid][pRank] == 3) { rangz = "Крэкер"; }
						else if(PlayerInfo[playerid][pRank] == 2) { rangz = "Младший Нига"; }
						else if(PlayerInfo[playerid][pRank] == 1) { rangz = "Блайд"; }
			        }
			        if(PlayerInfo[playerid][pMember] == 13)
			        {
						if(PlayerInfo[playerid][pRank] == 11) { rangz = "Падре"; }
						else if(PlayerInfo[playerid][pRank] == 10) { rangz = "Падрино"; }
						else if(PlayerInfo[playerid][pRank] == 9) { rangz = "Лидер V.E.G."; }
						else if(PlayerInfo[playerid][pRank] == 8) { rangz = "Асесор"; }
						else if(PlayerInfo[playerid][pRank] == 7) { rangz = "Авторитарио"; }
						else if(PlayerInfo[playerid][pRank] == 6) { rangz = "Асесино"; }
						else if(PlayerInfo[playerid][pRank] == 5) { rangz = "Амиго"; }
						else if(PlayerInfo[playerid][pRank] == 4) { rangz = "Эстимадо"; }
						else if(PlayerInfo[playerid][pRank] == 3) { rangz = "Сольдадо"; }
						else if(PlayerInfo[playerid][pRank] == 2) { rangz = "Криминаль"; }
						else if(PlayerInfo[playerid][pRank] == 1) { rangz = "Новато"; }
			        }
			        if(PlayerInfo[playerid][pMember] == 14)
			        {
						if(PlayerInfo[playerid][pRank] == 10) { rangz = "Авторитет"; }
						else if(PlayerInfo[playerid][pRank] == 9) { rangz = "Вор в законе"; }
						else if(PlayerInfo[playerid][pRank] == 8) { rangz = "Вор"; }
						else if(PlayerInfo[playerid][pRank] == 7) { rangz = "Браток"; }
						else if(PlayerInfo[playerid][pRank] == 6) { rangz = "Свояк"; }
						else if(PlayerInfo[playerid][pRank] == 5) { rangz = "Блатной"; }
						else if(PlayerInfo[playerid][pRank] == 4) { rangz = "Барыга"; }
						else if(PlayerInfo[playerid][pRank] == 3) { rangz = "Бык"; }
						else if(PlayerInfo[playerid][pRank] == 2) { rangz = "Фраер"; }
						else if(PlayerInfo[playerid][pRank] == 1) { rangz = "Шнырь"; }
			        }
			        if(PlayerInfo[playerid][pMember] == 15)
			        {
						if(PlayerInfo[playerid][pRank] == 10) { rangz = "Мэд Дог"; }
						else if(PlayerInfo[playerid][pRank] == 9) { rangz = "Легенд"; }
						else if(PlayerInfo[playerid][pRank] == 8) { rangz = "Де Кинг"; }
						else if(PlayerInfo[playerid][pRank] == 7) { rangz = "Мобста"; }
						else if(PlayerInfo[playerid][pRank] == 6) { rangz = "О.Г."; }
						else if(PlayerInfo[playerid][pRank] == 5) { rangz = "Гангста"; }
						else if(PlayerInfo[playerid][pRank] == 4) { rangz = "Юонг"; }
						else if(PlayerInfo[playerid][pRank] == 3) { rangz = "Килла"; }
						else if(PlayerInfo[playerid][pRank] == 2) { rangz = "Хастла"; }
						else if(PlayerInfo[playerid][pRank] == 1) { rangz = "Плэйя"; }
			        }
			        if(PlayerInfo[playerid][pMember] == 16)
			        {
						if(PlayerInfo[playerid][pRank] == 6) { rangz = "Главный редактор"; }
						else if(PlayerInfo[playerid][pRank] == 5) { rangz = "Редактор"; }
						else if(PlayerInfo[playerid][pRank] == 4) { rangz = "Журналист"; }
						else if(PlayerInfo[playerid][pRank] == 3) { rangz = "Папарации"; }
						else if(PlayerInfo[playerid][pRank] == 2) { rangz = "Фотограф"; }
						else if(PlayerInfo[playerid][pRank] == 1) { rangz = "Стажер"; }
					}
			        if(PlayerInfo[playerid][pMember] == 17)
			        {
						if(PlayerInfo[playerid][pRank] == 10) { rangz = "Падре"; }
						else if(PlayerInfo[playerid][pRank] == 9) { rangz = "Нестро"; }
						else if(PlayerInfo[playerid][pRank] == 8) { rangz = "Тесосеро"; }
						else if(PlayerInfo[playerid][pRank] == 7) { rangz = "Инвасор"; }
						else if(PlayerInfo[playerid][pRank] == 6) { rangz = "Сабио"; }
						else if(PlayerInfo[playerid][pRank] == 5) { rangz = "Мирандо"; }
						else if(PlayerInfo[playerid][pRank] == 4) { rangz = "Лас Геррас"; }
						else if(PlayerInfo[playerid][pRank] == 3) { rangz = "Геттор"; }
						else if(PlayerInfo[playerid][pRank] == 2) { rangz = "Тирадор"; }
						else if(PlayerInfo[playerid][pRank] == 1) { rangz = "Перро"; }
			        }
			        if(PlayerInfo[playerid][pMember] == 18)
			        {
						if(PlayerInfo[playerid][pRank] == 10) { rangz = "Падре"; }
						else if(PlayerInfo[playerid][pRank] == 9) { rangz = "Аджунто"; }
						else if(PlayerInfo[playerid][pRank] == 8) { rangz = "Ауторидад"; }
						else if(PlayerInfo[playerid][pRank] == 7) { rangz = "Бандидо"; }
						else if(PlayerInfo[playerid][pRank] == 6) { rangz = "Эрмано"; }
						else if(PlayerInfo[playerid][pRank] == 5) { rangz = "Джуниор"; }
						else if(PlayerInfo[playerid][pRank] == 4) { rangz = "Мачo"; }
						else if(PlayerInfo[playerid][pRank] == 3) { rangz = "Амиго"; }
						else if(PlayerInfo[playerid][pRank] == 2) { rangz = "Ладрон"; }
						else if(PlayerInfo[playerid][pRank] == 1) { rangz = "Новато"; }
			        }
			        if(PlayerInfo[playerid][pMember] == 19)
			        {
						if(PlayerInfo[playerid][pRank] == 16) { rangz = "Генерал"; }
						else if(PlayerInfo[playerid][pRank] == 15) { rangz = "Полковник"; }
						else if(PlayerInfo[playerid][pRank] == 14) { rangz = "Подполковник"; }
						else if(PlayerInfo[playerid][pRank] == 13) { rangz = "Майор";}
						else if(PlayerInfo[playerid][pRank] == 12) { rangz = "Капитан"; }
						else if(PlayerInfo[playerid][pRank] == 11) { rangz = "Старший лейтенант"; }
						else if(PlayerInfo[playerid][pRank] == 10) { rangz = "Лейтенант"; }
						else if(PlayerInfo[playerid][pRank] == 9) { rangz = "Младший лейтенант"; }
						else if(PlayerInfo[playerid][pRank] == 8) { rangz = "Старший прапорщик"; }
						else if(PlayerInfo[playerid][pRank] == 7) { rangz = "Прапорщик"; }
						else if(PlayerInfo[playerid][pRank] == 6) { rangz = "Старшина"; }
						else if(PlayerInfo[playerid][pRank] == 5) { rangz = "Ст. Сержант"; }
						else if(PlayerInfo[playerid][pRank] == 4) { rangz = "Сержант"; }
						else if(PlayerInfo[playerid][pRank] == 3) { rangz = "Мл. Сержант"; }
						else if(PlayerInfo[playerid][pRank] == 2) { rangz = "Ефрейтор"; }
						else if(PlayerInfo[playerid][pRank] == 1) { rangz = "Рядовой"; }
			        }
			        if(PlayerInfo[playerid][pMember] == 20)
			        {
						if(PlayerInfo[playerid][pRank] == 6) { rangz = "Главный редактор"; }
						else if(PlayerInfo[playerid][pRank] == 5) { rangz = "Редактор"; }
						else if(PlayerInfo[playerid][pRank] == 4) { rangz = "Журналист"; }
						else if(PlayerInfo[playerid][pRank] == 3) { rangz = "Папарации"; }
						else if(PlayerInfo[playerid][pRank] == 2) { rangz = "Фотограф"; }
						else if(PlayerInfo[playerid][pRank] == 1) { rangz = "Стажер"; }
					}
			        if(PlayerInfo[playerid][pMember] == 21)
			        {
						if(PlayerInfo[playerid][pRank] == 15) { rangz = "Шериф"; }
						else if(PlayerInfo[playerid][pRank] == 14) { rangz = "Полковник"; }
						else if(PlayerInfo[playerid][pRank] == 13) { rangz = "Подполковник";}
						else if(PlayerInfo[playerid][pRank] == 12) { rangz = "Майор"; }
						else if(PlayerInfo[playerid][pRank] == 11) { rangz = "Капитан"; }
						else if(PlayerInfo[playerid][pRank] == 10) { rangz = "Ст. Лейтенант"; }
						else if(PlayerInfo[playerid][pRank] == 9) { rangz = "Лейтенант"; }
						else if(PlayerInfo[playerid][pRank] == 8) { rangz = "Мл. Лейтенант"; }
						else if(PlayerInfo[playerid][pRank] == 7) { rangz = "Ст. Прапорщик"; }
						else if(PlayerInfo[playerid][pRank] == 6) { rangz = "Прапорщик"; }
						else if(PlayerInfo[playerid][pRank] == 5) { rangz = "Ст. Сержант"; }
						else if(PlayerInfo[playerid][pRank] == 4) { rangz = "Сержант"; }
						else if(PlayerInfo[playerid][pRank] == 3) { rangz = "Мл. Сержант"; }
						else if(PlayerInfo[playerid][pRank] == 2) { rangz = "Офицер"; }
						else if(PlayerInfo[playerid][pRank] == 1) { rangz = "Кадет"; }
			        }
			        if(PlayerInfo[playerid][pMember] == 22)
			        {
						if(PlayerInfo[playerid][pRank] == 8) { rangz = "Глав. врач"; }
						else if(PlayerInfo[playerid][pRank] == 7) { rangz = "Терапевт"; }
						else if(PlayerInfo[playerid][pRank] == 6) { rangz = "Хирург"; }
						else if(PlayerInfo[playerid][pRank] == 5) { rangz = "Педиатр"; }
						else if(PlayerInfo[playerid][pRank] == 4) { rangz = "Санитар"; }
						else if(PlayerInfo[playerid][pRank] == 3) { rangz = "Интерн"; }
						else if(PlayerInfo[playerid][pRank] == 2) { rangz = "Стажёр"; }
						else if(PlayerInfo[playerid][pRank] == 1) { rangz = "Практикант"; }
			        }
			        if(PlayerInfo[playerid][pMember] == 23)
			        {
						if(PlayerInfo[playerid][pRank] == 8) { rangz = "Глав. врач"; }
						else if(PlayerInfo[playerid][pRank] == 7) { rangz = "Терапевт"; }
						else if(PlayerInfo[playerid][pRank] == 6) { rangz = "Хирург"; }
						else if(PlayerInfo[playerid][pRank] == 5) { rangz = "Педиатр"; }
						else if(PlayerInfo[playerid][pRank] == 4) { rangz = "Санитар"; }
						else if(PlayerInfo[playerid][pRank] == 3) { rangz = "Интерн"; }
						else if(PlayerInfo[playerid][pRank] == 2) { rangz = "Стажёр"; }
						else if(PlayerInfo[playerid][pRank] == 1) { rangz = "Практикант"; }
			        }
			        else if(PlayerInfo[playerid][pMember] == 24)
			        {
			            if(PlayerInfo[playerid][pRank] == 1) { rangz = "Начинающий"; }
			            else if(PlayerInfo[playerid][pRank] == 2) { rangz = "Киллер"; }
			            else if(PlayerInfo[playerid][pRank] == 3) { rangz = "Снайпер"; }
			            else if(PlayerInfo[playerid][pRank] == 4) { rangz = "Стрелок"; }
			            else if(PlayerInfo[playerid][pRank] == 5) { rangz = "Агент"; }
			            else if(PlayerInfo[playerid][pRank] == 6) { rangz = "Профессионал"; }
			            else if(PlayerInfo[playerid][pRank] == 7) { rangz = "Элитный убийца"; }
			            else if(PlayerInfo[playerid][pRank] == 8) { rangz = "Тренер"; }
			            else if(PlayerInfo[playerid][pRank] == 9) { rangz = "Хитман"; }
			            else if(PlayerInfo[playerid][pRank] == 10) { rangz = "Ген. Директор"; }
			        }
					if(IsACop(giveplayerid))
					{
                        if(PlayerInfo[playerid][pWantedLevel] > 0)
						{
							SendClientMessage(giveplayerid, COLOR_REDD, "Внимание! Это человек в розыске! Подробнее по команде: (( /mdc )) ");
						}
					}
					new number[20];
					if(PlayerInfo[playerid][pPhone] == 0) { number = "Нет"; }
					else if(PlayerInfo[playerid][pPhone] == 1) { number = "Сотовый"; }
					else if(PlayerInfo[playerid][pPhone] == 2) { number = "Смартфон"; }
                    new msggg[] = "{FFFFFF}Имя: {FFCC33}%s\n{FFFFFF}Телефон: {FFCC33}%s\n{FFFFFF}Возраст: {FFCC33}%d\n{FFFFFF}Фракция: {FFCC33}%s\n{FFFFFF}Должность: {FFCC33}%s\n{FFFFFF}Работа: {FFCC33}%s\n{FFFFFF}Разрешение на оружие: {FFCC33}Неизвестно\n{FFFFFF}Законопослушность: {FFCC33}%d\n{FFFFFF}Пол: {FFCC33}%s";
     				format(string, sizeof(string), msggg, sendername,number,level,ttext,rangz, jtext, PlayerInfo[playerid][pLabiding],atext);
     				ShowPlayerDialog(giveplayerid, 69, DIALOG_STYLE_MSGBOX, "Паспорт",string, "Готово", "");
					format(string,sizeof(string), "показал свой паспорт %s'у",giveplayer);
					SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s показал(a) свой паспорт", sendername);
					ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
					return true;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			return true;
		}
		return true;
	}
	if(strcmp(cmd, "/showudost",true) == 0)
	{
		if(IsACop(playerid))
		{
 			tmp = strtok(cmdtext, idx);
		   	if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /showudost [id]");
		   	giveplayerid = ReturnUser(tmp);
		   	if(IsPlayerConnected(giveplayerid))
		   	{
		   		if(giveplayerid != INVALID_PLAYER_ID)
   				{
			   		if(ProxDetectorS(8.0, playerid, giveplayerid))
			   		{
		   				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		   				GetPlayerName(playerid, sendername, sizeof(sendername));
   						new ttext[32];
	   				 	if(PlayerInfo[playerid][pMember] == 0) { ttext = "Гражданин"; }
						else if(PlayerInfo[playerid][pMember] == 1) { ttext = "LSPD"; }
  						else if(PlayerInfo[playerid][pMember] == 2) { ttext = "FBI"; }
  						else if(PlayerInfo[playerid][pMember] == 10) { ttext = "SFPD"; }
  						else if(PlayerInfo[playerid][pMember] == 21) { ttext = "LVPD"; }
  						new rank = PlayerInfo[playerid][pRank];
		   				new level = PlayerInfo[playerid][pLevel];
		   				new msg[] = "Имя: %s\nТелефон: %d\nВозраст: %d\nПодразделение: %s\nРанг: %d";
                        format(string, sizeof(string), msg, sendername,PlayerInfo[playerid][pPnumber],level,ttext,rank);
						ShowPlayerDialog(giveplayerid, 69, DIALOG_STYLE_MSGBOX, "Удостоверение",string, "Готово", "");
						format(string, sizeof(string), "%s показал своё удостоверение %s'у", sendername, giveplayer);
		   				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        format(string,sizeof(string), "показал своё удостоверение %s'у",giveplayer);
						SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
 					}
  					else
   					{
		   				SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
						return true;
	   				}
 	   			}
	   		}
	   		else
	   		{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				return true;
	   		}
     	}
		return true;
	}
	if(!strcmp(cmd, "/gzcolor",true))
	{
		if(PlayerInfo[playerid][pAdmin] >= 10)
		{
		    if(dostup[playerid] != 1) return OnPlayerCommandText(playerid, "/alogin");
			tmp = strtok(cmdtext,idx);
			new l = strval(tmp);
			if(!IsInAllowedF(l)) return SendClientMessage(playerid,-1, "{e23434}Введите: /gzcolor [банда]");
			for(new i = 0; i < sizeof(GZInfo); i++)
			{
				if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
				{
					GZInfo[i][gFrakVlad] = l;
					GangZoneStopFlashForAll(GZInfo[i][gID]);
					GangZoneHideForAll(GZInfo[i][gID]);
					GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
					SaveGZ();
					return true;
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/tazerall", true) ==0)
	{
		if(PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] >= 3)
		{
			giveplayerid = GetClosestPlayer(playerid);
			if(!ProxDetectorS(6.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Нет никого рядом");
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Невозможно использовать в машине");
			if(Tazer[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Перезарядка электрошокера ещё не прошла");
			format(string, sizeof(string), "Агент FBI %s оглушил всех на 10 секунд", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			TogglePlayerControllable(giveplayerid, 0);
			SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_HANDSUP);
			SetTimerEx("UnFreeze", 10000, false, "i", giveplayerid);
			Tazer[playerid] = 1;
			TazerTime[playerid] = 11;
		}
		return true;
	}
	if(strcmp(cmd, "/ftazer", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
		{
			new MyName[255];
			GetPlayerName(playerid,MyName,sizeof(MyName));
			if(IsPlayerConnected(playerid))
			{
				new x_job[256];
				x_job = strtok(cmdtext, idx);
				if(!strlen(x_job))
				{
					SendClientMessage(playerid,COLOR_WHITE,"{e23434}Введите: /ftazer [1/2/3]");
					return true;
				}
				if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Невозможно использовать в машине");
				if(Tazer[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Перезарядка электрошокера ещё не прошла");
				if(strcmp(x_job,"1", true) == 0)
				{
					format(string, sizeof(string), "Агент FBI %s оглушил всех", MyName);
					ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
						new Float:X,Float:Y,Float:Z;
						GetPlayerPos(playerid,X,Y,Z);
						if(IsPlayerConnected(i))
						{
							if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
							{
								TogglePlayerControllable(i, 0);
								SendClientMessage(i,-1,"Вы заморожены на 10 секунд");
								SetPlayerSpecialAction(i, SPECIAL_ACTION_HANDSUP);
								SetTimerEx("UnFreeze", 10000, false, "i", i);
								Tazer[playerid] = 1;
								TazerTime[playerid] = 11;
							}
						}
					}
				}
				if(strcmp(x_job,"2", true) == 0)
				{
					format(string, sizeof(string), "Агент FBI %s оглушил всех рядомстоящих законников", MyName);
                    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    for(new i = 0; i < MAX_PLAYERS; i++)
                    {
                        new Float:X,Float:Y,Float:Z;
                        GetPlayerPos(playerid,X,Y,Z);
                        if(IsPlayerConnected(i))
                        {
                            if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
                            {
                                if(PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1 ||PlayerInfo[i][pMember] == 2 || PlayerInfo[i][pLeader] == 2 ||PlayerInfo[i][pMember] == 3 || PlayerInfo[i][pLeader] == 3)
                                {
                                    TogglePlayerControllable(i,0);
                                    SendClientMessage(i,-1,"Вы заморожены на 10 секунд");
                                    SetPlayerSpecialAction(i,SPECIAL_ACTION_HANDSUP);
                                    SetTimerEx("UnFreeze", 10000, false, "i", i);
									Tazer[playerid] = 1;
									TazerTime[playerid] = 11;
                                }
                            }
                        }
                    }
                }
                if(strcmp(x_job,"3", true) == 0)
                {
                    format(string, sizeof(string), "Агент FBI %s оглушил всех рядомстоящих жителей", MyName);
                    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    for(new i = 0; i < MAX_PLAYERS; i++)
                    {
                        new Float:X,Float:Y,Float:Z;
                        GetPlayerPos(playerid,X,Y,Z);
                        if(IsPlayerConnected(i))
                        {
                            if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
                            {
                                if(PlayerInfo[i][pMember] == 0 && PlayerInfo[i][pLeader] == 0)
                                {
                                    TogglePlayerControllable(i,0);
                                    SendClientMessage(i,-1,"Вы заморожены на 10 секунд");
                                    SetPlayerSpecialAction(i,SPECIAL_ACTION_HANDSUP);
                                    SetTimerEx("UnFreeze", 10000, false, "i", i);
									Tazer[playerid] = 1;
									TazerTime[playerid] = 11;
                                }
                            }
                        }
                    }
                }
            }
        }
        return true;
    }
	if(strcmp(cmd, "/tazer", true) == 0)
	{
		if(IsACop(playerid) || PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] == 3)
		{
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Невозможно использовать в машине");
			if(Tazer[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Перезарядка электрошокера ещё не прошла");
			new suspect = GetClosestPlayer(playerid);
			if(IsPlayerConnected(suspect))
			{
				if(PlayerCuffed[suspect] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже в наручниках");
				if(GetDistanceBetweenPlayers(playerid,suspect) < 5)
				{
					if(IsACop(suspect)) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете ударить электрошокером законника");
					if(IsPlayerInAnyVehicle(suspect)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине");
					GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Вас обездвижил электрошокером %s на 10 секунд", sendername);
					SendClientMessage(suspect, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы обездвижили электрошокером %s на 10 секунд", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "%s проводит задержание %s", sendername ,giveplayer);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					TogglePlayerControllable(suspect, 0);
                    SetPlayerSpecialAction(suspect, SPECIAL_ACTION_HANDSUP);
                    SetTimerEx("UnFreeze", 10000, false, "i", suspect);
                    Tazer[playerid] = 1;
					TazerTime[playerid] = 11;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Рядом с вами некого нет");
					return true;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		}
		return true;
	}
	if(strcmp(cmd, "/itazer", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 11 && PlayerInfo[playerid][pRank] <= 3)
		{
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Невозможно использовать в машине");
			if(Tazer[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Перезарядка электрошокера ещё не прошла");
			new suspect = GetClosestPlayer(playerid);
			if(IsPlayerConnected(suspect))
			{
				if(PlayerCuffed[suspect] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже в наручниках");
				if(GetDistanceBetweenPlayers(playerid,suspect) < 5)
				{
					if(IsACop(suspect)) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете ударить электрошокером законника");
					if(IsPlayerInAnyVehicle(suspect)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине");
					GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Вас обездвижил электрошокером %s на 10 секунд", sendername);
					SendClientMessage(suspect, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы обездвижили электрошокером %s на 10 секунд", giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "Инуструктор %s обезвредил %s", sendername ,giveplayer);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					TogglePlayerControllable(suspect, 0);
                    SetPlayerSpecialAction(suspect, SPECIAL_ACTION_HANDSUP);
                    SetTimerEx("UnFreeze", 10000, false, "i", suspect);
                    Tazer[playerid] = 1;
					TazerTime[playerid] = 11;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Рядом с вами некого нет");
					return true;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		}
		return true;
	}
	if(strcmp(cmd, "/cuff", true) == 0)
	{
		if(IsACop(playerid) && FormaFrac[playerid] == 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /cuff [id]");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(WantedPoints[giveplayerid] == 0)return SendClientMessage(playerid, COLOR_GREY, "Данный человек не в розыске!");
					if(IsACop(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете надеть наручники на законника");
					if(PlayerCuffed[giveplayerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже в наручниках");
					if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
						if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы не можете надеть наручники на самого себя"); return true; }
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
						    format(string, sizeof(string), "%s надел вам наручники", sendername);
						    SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_CUFFED);
							SetPlayerAttachedObject(giveplayerid, 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
							SendClientMessage(giveplayerid, 0x6495EDFF, string);
							format(string, sizeof(string), "~r~cuffed");
							GameTextForPlayer(giveplayerid, string, 5000, 3);
							format(string, sizeof(string), "Вы надели наручники на %s", giveplayer);
							SendClientMessage(playerid, 0x6495EDFF, string);
							format(string, sizeof(string), "%s надел наручники", sendername);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							TogglePlayerControllable(giveplayerid, 0);
							PlayerCuffed[giveplayerid] = 2;
							PlayerCuffedTime[giveplayerid] = 3600;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Рядом с вами никого нет");
						return true;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				return true;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		}
		return true;
	}
	if(strcmp(cmd, "/uncuff", true) == 0)
	{
		if(IsACop(playerid) && FormaFrac[playerid] == 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /uncuff [id]");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
						if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы не можете снять наручники с самого себя"); return true; }
						if(PlayerCuffed[giveplayerid])
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "С Вас снял наручники %s", sendername);
							SetPlayerSpecialAction(giveplayerid,SPECIAL_ACTION_NONE);
							RemovePlayerAttachedObject(giveplayerid,0);
							SendClientMessage(giveplayerid, 0x6495EDFF, string);
							format(string, sizeof(string), "Вы сняли наручники с %s", giveplayer);
							SendClientMessage(playerid, 0x6495EDFF, string);
							TogglePlayerControllable(giveplayerid, 1);
							PlayerCuffed[giveplayerid] = 0;
							format(string, sizeof(string), "~g~uncuffed");
							GameTextForPlayer(giveplayerid, string, 5000, 3);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в наручниках");
							return true;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Рядом с вами никого нет");
						return true;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				return true;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		}
		return true;
	}
	if(strcmp(cmd, "/cput", true) == 0)
	{
		if(IsACop(playerid))
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 490 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 596 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 597 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 598 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 590) return SendClientMessage(playerid, COLOR_GREY, "Вы не в патрульной машине");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return  SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /cput [playerid]");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				{
					if(!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
					if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете затащить в машину самого себя");
					if(!WantedLevel[giveplayerid]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не приступник");
					if(GetPlayerState(giveplayerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, COLOR_GREY, "Игрок в автомобиле");
					new mesto2,vehicle = GetPlayerVehicleID(playerid);
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
                        if(IsPlayerInVehicle(i,vehicle))
                        {
                            mesto2 = GetPlayerVehicleSeat(i);
                            if(mesto2 == 2) return SendClientMessage(playerid, COLOR_GREY, "Место в машине уже занято");
                        }
                    }
                    PutPlayerInVehicle(giveplayerid,vehicle,2);
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    format(string,sizeof(string), "Вы были затащены в машину офицером/агентом FBI %s",sendername);
                    SendClientMessage(giveplayerid,0x64E96EDFF,string);
                    format(string,sizeof(string), "Вы затащили в машину преступника %s",giveplayer);
                    SendClientMessage(playerid,0x64E96EDFF,string);
                    format(string,sizeof(string), "Заталкнул преступника %s в автомобиль",giveplayer);
                    SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
                }
            }
        }
        else SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
    }
	if(strcmp(cmd, "/ceject", true) == 0)
    {
        if(IsACop(playerid))
        {
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 490 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 596 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 597 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 598 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 590) return SendClientMessage(playerid, COLOR_GREY, "Вы не в патрульной машине");
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) return  SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /ceject [playerid]");
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
                if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не в вашем авто");
                RemovePlayerFromVehicle(giveplayerid);
                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                GetPlayerName(playerid, sendername, sizeof(sendername));
                if(IsPlayerInRangeOfPoint(giveplayerid,5.0,1568.6144,-1689.9901,6.2188))
                {
					SetPlayerInterior(giveplayerid,6);
					ACP_SetPlayerPos(giveplayerid,268.4186,77.6443,1001.0391);
					SetPlayerFacingAngle(giveplayerid, 85.7670);
                    format(string,sizeof(string), "Вы были высажены с машины офицером %s в участок Лос Сантоса",sendername);
                    SendClientMessage(giveplayerid,0x64E96EDFF,string);
                    format(string,sizeof(string), "Вы высадили подозреваемого %s в полицейский участок Лос Сантоса",giveplayer);
                    SendClientMessage(playerid,0x64E96EDFF,string);
                    format(string,sizeof(string), "Затолкал(а) подозреваемого %s в полицейский участок",giveplayer);
                    SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
                }
                else if(IsPlayerInRangeOfPoint(giveplayerid,5.0,-1594.2096,716.1803,-4.9063))
                {
					SetPlayerInterior(giveplayerid,10);
					ACP_SetPlayerPos(giveplayerid,220.1259,114.6476,999.0156);
					SetPlayerFacingAngle(giveplayerid, 95.3400);
                    format(string,sizeof(string), "Вы были высажены с машины офицером %s в участок Сан Фиеро",sendername);
                    SendClientMessage(giveplayerid,0x64E96EDFF,string);
                    format(string,sizeof(string), "Вы высадили подозреваемого %s в полицейский участок Сан Фиерро",giveplayer);
                    SendClientMessage(playerid,0x64E96EDFF,string);
                    format(string,sizeof(string), "Затолкал(а) подозреваемого %s в полицейский участок",giveplayer);
                    SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
                }
                else if(IsPlayerInRangeOfPoint(giveplayerid,5.0,2297.1138,2451.4346,10.8203))
                {
					SetPlayerInterior(giveplayerid,3);
					SetPlayerVirtualWorld(giveplayerid, 122);
					ACP_SetPlayerPos(giveplayerid,198.1339,158.4835,1003.0234);
					SetPlayerFacingAngle(giveplayerid, 354.8164);
                    format(string,sizeof(string), "Вы были высажены с машины офицером %s в участок Лас Вентурас",sendername);
                    SendClientMessage(giveplayerid,0x64E96EDFF,string);
                    format(string,sizeof(string), "Вы высадили подозреваемого %s в полицейский участок Лас Вентурас",giveplayer);
                    SendClientMessage(playerid,0x64E96EDFF,string);
                    format(string,sizeof(string), "Затолкал(а) подозреваемого %s в полицейский участок",giveplayer);
                    SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
                }
                else
                {
                    format(string,sizeof(string), "Вы были высажены с машины офицером/агентом FBI %s",sendername);
                    SendClientMessage(giveplayerid,0x64E96EDFF,string);
                    format(string,sizeof(string), "Вы вытащили с машины подозреваемого %s",giveplayer);
                    SendClientMessage(playerid,0x64E96EDFF,string);
                    format(string,sizeof(string), "Вытащил(а) из машины подозреваемого %s",giveplayer);
                    SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
                }
            }
        }
        else SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
    }
	if(strcmp(cmd, "/accept",true)==0)
    {
		new x_job[256];
		x_job = strtok(cmdtext, idx);
		if(!strlen(x_job)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /accept [name]");
		if(strcmp(x_job, "debt",true) == 0)
		{
			if(KrishaOffer[playerid] < 999)
			{
				GetPlayerName(KrishaOffer[playerid], giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "Вы приняли крышу от %s'a", giveplayer);
				SendClientMessage(playerid, 0x6495EDFF, string);
				format(string, sizeof(string), "%s согласился на вашу крышу", sendername);
				SendClientMessage(KrishaOffer[playerid], 0x6495EDFF, string);
				KrishaOffer[playerid] = 999;
				PlayerInfo[playerid][pUseMafiaRoof] = 1;
				PlayerInfo[playerid][pMafiaRoof] = Krisha[playerid];
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вам ни кто не предлагал крышу");
				return true;
			}
		}
		else if(strcmp(x_job, "marriage",true) == 0)
		{
			if(ProposeOffer[playerid] < 999)
			{
				if(!PlayerToPoint(10.0, playerid, -2021.9148,1005.9236,1418.4869)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в загсе (( /gps > Важные ))");
				if(IsPlayerConnected(ProposeOffer[playerid]))
				{
					if(ProxDetectorS(10.0, playerid, ProposeOffer[playerid]))
					{
						GetPlayerName(ProposeOffer[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы приняли предложение от %s's", giveplayer);
						SendClientMessage(playerid, 0x6495EDFF, string);
						format(string, sizeof(string), "%s приняла Ваш запрос быть Вашей Женой.", sendername);
						SendClientMessage(ProposeOffer[playerid], 0x6495EDFF, string);
						format(string, sizeof(string), "{FFFFFF}%s{FF3399} и {FFFFFF}%s{FF3399} обвенчались! Поздравляем молодоженов!",giveplayer, sendername);
						SendClientMessageToAll(0xFF3399AA,string);
						format(string, sizeof(string), "%s.ini",giveplayer);
						new files = ini_openFile(string);
						if(files < 0) print("нет файла");
						else
						{
							ini_setString(files, "MarriedTo",sendername);
							ini_closeFile(files);
						}
						format(string, sizeof(string), "%s.ini",sendername);
						new file = ini_openFile(string);
						if(file < 0) print("нет файла");
						else
						{
							ini_setString(file, "MarriedTo",giveplayer);
							ini_closeFile(file);
						}
						PlayerInfo[ProposeOffer[playerid]][pCash] -= 100000;
						PlayerInfo[playerid][pMarried] = 1;
						PlayerInfo[ProposeOffer[playerid]][pMarried] = 1;
						ProposedTo[playerid] = 999;
						ProposeOffer[playerid] = 999;
					}
					return true;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
					return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вам никто не предлогил жениться/замуж");
				return true;
			}
		}
		else if(strcmp(x_job, "gcontract",true) == 0)
		{
			if(JobOffer[playerid] == 999) return SendClientMessage(playerid, COLOR_WHITE, "Никто не предлагал вас контракт");
			if(Employer[playerid] != 999) return SendClientMessage(playerid, COLOR_WHITE, "Вы уже заключали контракт");
			if(Prorab[JobOffer[playerid]] == true) return SendClientMessage(playerid,COLOR_WHITE, "Прораб уже не работает");
			if(!IsPlayerConnected(JobOffer[playerid])) return SendClientMessage(playerid,COLOR_WHITE, "Игрок не найден");
			if(!ProxDetectorS(5.0, playerid, JobOffer[playerid])) return SendClientMessage(playerid,COLOR_WHITE, "Игрок далеко от вас");
			GetPlayerName(JobOffer[playerid], giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			Employer[playerid] = JobOffer[playerid];
			JobOffer[playerid] = 0;
			JobAmmount[Employer[playerid]] += 1;
			format(string, sizeof(string), "Вы заключили контакт с %s", Employer[playerid]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "Прораб %s заключил с вами контракт", sendername);
			SendClientMessage(Employer[playerid], COLOR_LIGHTBLUE, string);
			SendClientMessage(Employer[playerid], COLOR_WHITE, "/gpayday выдать зарплату");
		}
		else if(strcmp(x_job, "taxi",true) == 0)
		{
			if(TransportDuty[playerid] != 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не таксист");
			if(TaxiCallTime[playerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже приняли вызов");
			if(TaxiCall < 999)
			{
				if(IsPlayerConnected(TaxiCall))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(TaxiCall, giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "Вы приняли вызов от %s",giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "Водитель такси %s принял ваш вызов, оставайтесь на месте",sendername);
					SendClientMessage(TaxiCall, COLOR_GREEN, string);
					TaxiCall = 999;
					return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вызовов не поступало");
				return true;
			}
		}
		else if(strcmp(x_job, "fight",true) == 0)
		{
			if(BoxOffer[playerid] < 999)
			{
				if(IsPlayerConnected(BoxOffer[playerid]))
				{
					GetPlayerName(BoxOffer[playerid], giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Вы приняли вызов на бой от %s",giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "%s принял ваш вызов на бой",sendername);
					SendClientMessage(BoxOffer[playerid], COLOR_LIGHTBLUE, string);
					SetPlayerHealthAC(playerid, 100);
					SetPlayerHealthAC(BoxOffer[playerid], 100);
					PlayerInfo[playerid][pHP] = 100;
					PlayerInfo[BoxOffer[playerid]][pHP] = 100;
					SetPlayerInterior(playerid, 5);
					SetPlayerInterior(BoxOffer[playerid], 5);
					ACP_SetPlayerPos(playerid, 762.9852,2.4439,1001.5942);
					SetPlayerFacingAngle(playerid, 131.8632);
					ACP_SetPlayerPos(BoxOffer[playerid], 758.7064,-1.8038,1001.5942);
					SetPlayerFacingAngle(BoxOffer[playerid], 313.1165);
					TogglePlayerControllable(playerid, 0); TogglePlayerControllable(BoxOffer[playerid], 0);
					GameTextForPlayer(playerid, "~r~Waiting", 3000, 1);
					GameTextForPlayer(BoxOffer[playerid], "~r~Waiting", 3000, 1);
					new name[MAX_PLAYER_NAME];
					new dstring[MAX_PLAYER_NAME];
					new wstring[MAX_PLAYER_NAME];
					GetPlayerName(playerid, name, sizeof(name));
					format(dstring, sizeof(dstring), "%s", name);
					strmid(wstring, dstring, 0, strlen(dstring), 255);
					BoxWaitTime[playerid] = 1;
					BoxWaitTime[BoxOffer[playerid]] = 1;
					if(BoxDelay < 1)
					{
						BoxDelay = 5;
					}
					InRing = 1;
					Boxer1 = BoxOffer[playerid];
					Boxer2 = playerid;
					PlayerBoxing[playerid] = 1;
					PlayerBoxing[BoxOffer[playerid]] = 1;
					BoxOffer[playerid] = 999;
					return true;
				}
				return true;
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Вам ни кто не предлагал бой");
		}
		else if(strcmp(x_job, "ticket",true) == 0)
		{
			if(TicketOffer[playerid] < 999)
			{
				if(IsPlayerConnected(TicketOffer[playerid]))
				{
					if (ProxDetectorS(5.0, playerid, TicketOffer[playerid]))
					{
						GetPlayerName(TicketOffer[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы оплатили штраф в размере %d вирт офицеру %s", TicketMoney[playerid], giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						format(string, sizeof(string), "%s оплатил штраф в размере %d вирт", sendername, TicketMoney[playerid]);
						SendClientMessage(TicketOffer[playerid], COLOR_BLUE, string);
						PlayerInfo[playerid][pCash] -= TicketMoney[playerid];
						PlayerInfo[TicketOffer[playerid]][pCash] += TicketMoney[playerid];
						TicketOffer[playerid] = 999;
						TicketMoney[playerid] = 0;
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Полицейскйи не рядом с вами");
						return true;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вам не выписывали штраф");
				return true;
			}
		}
		else if(strcmp(x_job, "drugs",true) == 0)
		{
			if(DrugOffer[playerid] < 999)
			{
				if(PlayerInfo[playerid][pCash] > DrugPrice[playerid])
				{
					if(PlayerInfo[playerid][pDrugs] < 7)
					{
						if(IsPlayerConnected(DrugOffer[playerid]))
						{
							GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы купили %d грамм за %d вирт у %s",DrugGramm[playerid],DrugPrice[playerid],giveplayer);
							SendClientMessage(playerid, 0x6495EDFF, string);
							format(string, sizeof(string), "%s купил(а) у вас %d грамм за %d вирт",sendername,DrugGramm[playerid],DrugPrice[playerid]);
							SendClientMessage(DrugOffer[playerid], 0x6495EDFF, string);
							PlayerInfo[playerid][pCash] -= DrugPrice[playerid];
							GiveMoney(DrugOffer[playerid], DrugPrice[playerid]);
							PlayerInfo[playerid][pDrugs] += DrugGramm[playerid];
							PlayerInfo[DrugOffer[playerid]][pDrugs] -= DrugGramm[playerid];
							format(string, sizeof(string), "%s достал бумажник и передал деньги %s", sendername, giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							return true;
						}
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "У вас и так много наркотиков");
						return true;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
					return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вам никто не предлагал купить наркотики");
				return true;
			}
		}
		else if(strcmp(x_job, "vehicle",true) == 0)
		{
			if(CarOffer[playerid] < 999)
			{
				if(ProxDetectorS(8.0, playerid, CarOffer[playerid]))
				{
					if(PlayerInfo[playerid][pCash] < CarPrice[playerid]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег на руках!");
 					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(CarOffer[playerid], giveplayer, sizeof(giveplayer));
					PlayerInfo[playerid][pCash] -= CarPrice[playerid];
					PlayerInfo[playerid][pCar] = PlayerInfo[CarOffer[playerid]][pCar];
					PlayerInfo[playerid][pColor] = PlayerInfo[CarOffer[playerid]][pColor];
					PlayerInfo[playerid][pColor1] = PlayerInfo[CarOffer[playerid]][pColor1];
					PlayerInfo[playerid][pPaintJob] = PlayerInfo[CarOffer[playerid]][pPaintJob];
					PlayerInfo[playerid][pWheels] = PlayerInfo[CarOffer[playerid]][pWheels];
					PlayerInfo[playerid][pSpoiler] = PlayerInfo[CarOffer[playerid]][pSpoiler];
					PlayerInfo[playerid][pBumper1] = PlayerInfo[CarOffer[playerid]][pBumper1];
					PlayerInfo[playerid][pBumper2] = PlayerInfo[CarOffer[playerid]][pBumper2];
                    PlayerInfo[playerid][pYubki] = PlayerInfo[CarOffer[playerid]][pYubki];
                    PlayerInfo[playerid][pYubki2] = PlayerInfo[CarOffer[playerid]][pYubki2];
                    PlayerInfo[playerid][pVih] = PlayerInfo[CarOffer[playerid]][pVih];
                    PlayerInfo[playerid][pVozd] = PlayerInfo[CarOffer[playerid]][pVozd];
					PlayerInfo[playerid][pNitro] = PlayerInfo[CarOffer[playerid]][pNitro];
					PlayerInfo[playerid][pHydrawlic] = PlayerInfo[CarOffer[playerid]][pHydrawlic];
					PlayerInfo[playerid][pProcents] = PlayerInfo[CarOffer[playerid]][pProcents];
					PlayerInfo[CarOffer[playerid]][pCash] += CarPrice[playerid];
					PlayerInfo[CarOffer[playerid]][pCar] = 481;
					PlayerInfo[CarOffer[playerid]][pColor] = 0;
					PlayerInfo[CarOffer[playerid]][pColor1] = 0;
					CompVehDel(CarOffer[playerid]);
					PlayerInfo[CarOffer[playerid]][pProcents] = 100;
					format(string, sizeof(string), "Вы продали машину %s за %d вирт", sendername, CarPrice[playerid]);
					SendClientMessage(CarOffer[playerid], 0x6495EDFF, string);
					format(string, sizeof(string), "Вы купили машину у %s за %d вирт", giveplayer, CarPrice[playerid]);
					SendClientMessage(playerid, 0x6495EDFF, string);
					DestroyVehicle(caridhouse[playerid]);
					DestroyVehicle(caridhouse[CarOffer[playerid]]);
					OnPropUpdate();
					OnPlayerUpdateAc(playerid);
					CarOffer[playerid] = 999;
					CarPrice[playerid] = 0;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
					return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вам никто не предлагал купить машину");
				return true;
			}
		}
		else if(strcmp(x_job, "house",true) == 0)
		{
			if(HouseOffer[playerid] < 999)
			{
				new h = PlayerInfo[HouseOffer[playerid]][pPHousekey];
				//new house = PlayerInfo[playerid][pPHousekey];
				if(ProxDetectorS(8.0, playerid, HouseOffer[playerid]))
				{
					if(PlayerInfo[playerid][pCash] < HousePrice[playerid])return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег на руках!");
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(HouseOffer[playerid], giveplayer, sizeof(giveplayer));
					PlayerInfo[playerid][pPHousekey] = PlayerInfo[HouseOffer[playerid]][pPHousekey];
					PlayerInfo[HouseOffer[playerid]][pPHousekey] = 255;
					DestroyVehicle(caridhouse[playerid]);
					PlayerInfo[playerid][pCash] -= HousePrice[playerid];
					PlayerInfo[HouseOffer[playerid]][pCash] += HousePrice[playerid];
					strmid(HouseInfo[h][hOwner], sendername, 0, strlen(sendername), 255);
					format(string, sizeof(string), "Вы продали дом %s за %d вирт", sendername, HousePrice[playerid]);
					SendClientMessage(HouseOffer[playerid], 0x6495EDFF, string);
					format(string, sizeof(string), "Вы купили дом у %s за %d вирт", giveplayer, HousePrice[playerid]);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SetPlayerInterior(playerid,HouseInfo[h][hInt]);
					ACP_SetPlayerPos(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]);
					PlayerInfo[playerid][pInt] = HouseInfo[h][hInt];
					PlayerInfo[playerid][pLocal] = h;
					DestroyVehicle(caridhouse[playerid]);
					caridhouse[playerid] = CreateVehicle(PlayerInfo[playerid][pCar], 2505.4902,1074.3763,-89.9699,179.9438, PlayerInfo[playerid][pColor], PlayerInfo[playerid][pColor1], 86400);
			        LinkVehicleToInterior(caridhouse[playerid], 0);
					SetVehicleVirtualWorld(caridhouse[playerid], PlayerInfo[playerid][pPHousekey]);
					SetPlayerVirtualWorld(playerid,h+50);
					BuyHouse();
					OnPropUpdate();
					HouseOffer[playerid] = 999;
					HousePrice[playerid] = 0;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
					return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вам никто не предлагал купить дом");
				return true;
			}
		}
		else if(strcmp(x_job, "medic",true) == 0)
		{
			if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pLeader] == 22 || PlayerInfo[playerid][pMember] == 23 || PlayerInfo[playerid][pLeader] == 23)
			{
				if(MedicCallTime[playerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже приняли вызов!");
				if(MedicCall < 999)
				{
					if(IsPlayerConnected(MedicCall))
					{
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerName(MedicCall, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "Вы приняли запрос от %s",giveplayer);
						SendClientMessage(playerid, 0x6495EDFF, string);
						format(string, sizeof(string), "Медик %s принял ваш вызов",sendername);
						SendClientMessage(MedicCall, COLOR_GREEN, string);
						new Float:X,Float:Y,Float:Z;
						GetPlayerPos(MedicCall, X, Y, Z);
						SetPlayerCheckpoint(playerid, X, Y, Z, 5);
						MedicCall = 999;
						return true;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вызовов не поступало");
					return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данный параметр");
				return true;
			}
		}
		else if(strcmp(x_job, "police",true) == 0)
		{
			if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данный параметр");
			if(PoliceCallTime[playerid] > 0) return  SendClientMessage(playerid, COLOR_GREY, "Вы уже приняли вызов");
			if(PoliceCall < 999)
			{
				if(IsPlayerConnected(PoliceCall))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(PoliceCall, giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "Вы приняли вызов от %s",giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "Патрульный %s принял ваш вызов",sendername);
					SendClientMessage(PoliceCall, COLOR_GREEN, string);
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(PoliceCall, X, Y, Z);
					SetPlayerCheckpoint(playerid, X, Y, Z, 5);
					PoliceCall = 999;
					return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вызовов не поступало");
				return true;
			}
		}
		else if(strcmp(x_job, "mechanic",true) == 0)
		{
			if(PlayerInfo[playerid][pJob] != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данный параметр");
			if(MechanicCallTime[playerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже приняли вызов");
			if(MechanicCall < 999)
			{
				if(IsPlayerConnected(MechanicCall))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(MechanicCall, giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "Вы приняли вызов от %s",giveplayer);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "Механик %s принял Ваш вызов!",sendername);
					SendClientMessage(MechanicCall, COLOR_GREEN, string);
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(MechanicCall, X, Y, Z);
					SetPlayerCheckpoint(playerid, X, Y, Z, 5);
					MechanicCall = 999;
					return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вызовов не поступало");
				return true;
			}
		}
		else if(strcmp(x_job,"livels",true) == 0)
		{
			if(LiveOfferls[playerid] < 999)
			{
				if(IsPlayerConnected(LiveOfferls[playerid]))
				{
					if(ProxDetectorS(5.0, playerid, LiveOfferls[playerid]))
					{
					    TalkingLivels[LiveOfferls[playerid]] = 2;
						SendClientMessage(LiveOfferls[playerid], COLOR_WHITE, "{e23434}Введите: /live чтобы закончить интервью");
						lNews[playerid] = 0;
						gNews[playerid] = 1;
						LvNews[playerid] = 1;
						lNews[LiveOfferls[playerid]] = 0;
						gNews[LiveOfferls[playerid]] = 1;
						LvNews[LiveOfferls[playerid]] = 1;
						LiveOfferls[playerid] = 999;
						TalkingLivels[playerid] = 2;
						TalkingLivelsa[playerid] = 255;
						SendClientMessage(playerid, COLOR_YELLOW, "Вы даёте интервью в прямом эфире радио Los Santos");
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Вы далеко от репортёра");
						return true;
					}
				}
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вам никто не предлагал дать интервью");
				return true;
			}
		}
		else if(strcmp(x_job,"livesf",true) == 0)
		{
			if(LiveOffer[playerid] < 999)
			{
				if(IsPlayerConnected(LiveOffer[playerid]))
				{
					if(ProxDetectorS(5.0, playerid, LiveOffer[playerid]))
					{
					    TalkingLive[LiveOffer[playerid]] = 2;
						SendClientMessage(LiveOffer[playerid], COLOR_WHITE, "{e23434}Введите: /live чтобы закончить интервью");
						lNews[playerid] = 1;
						gNews[playerid] = 0;
						LvNews[playerid] = 1;
						lNews[LiveOffer[playerid]] = 1;
						gNews[LiveOffer[playerid]] = 0;
						LvNews[LiveOffer[playerid]] = 1;
						LiveOffer[playerid] = 999;
						TalkingLive[playerid] = 2;
						TalkingLivesfa[playerid] = 255;
						SendClientMessage(playerid, COLOR_YELLOW, "Вы даёте интервью в прямом эфире радио San Fierro");
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Вы далеко от репортёра");
						return true;
					}
				}
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вам никто не предлагал дать интервью");
				return true;
			}
		}
		else if(strcmp(x_job,"livelv",true) == 0)
		{
			if(LiveOfferlv[playerid] < 999)
			{
				if(IsPlayerConnected(LiveOfferlv[playerid]))
				{
					if(ProxDetectorS(5.0, playerid, LiveOfferlv[playerid]))
					{
						TalkingLivelv[LiveOfferlv[playerid]] = 2;
						SendClientMessage(LiveOfferlv[playerid], COLOR_WHITE, "{e23434}Введите: /live чтобы закончить интервью");
						lNews[playerid] = 1;
						gNews[playerid] = 1;
						LvNews[playerid] = 0;
						lNews[LiveOfferlv[playerid]] = 1;
						gNews[LiveOfferlv[playerid]] = 1;
						LvNews[LiveOfferlv[playerid]] = 0;
						LiveOfferlv[playerid] = 999;
						TalkingLivelv[playerid] = 2;
						TalkingLivelva[playerid] = 255;
						SendClientMessage(playerid, COLOR_YELLOW, "Вы даёте интервью в прямом эфире радио Las Venturas");
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Вы далеко от репортёра");
						return true;
					}
				}
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вам никто не предлагал дать интервью");
				return true;
			}
		}
		else if(strcmp(x_job, "refill",true) == 0)
		{
			if(RefillOffer[playerid] < 999)
			{
				if(IsPlayerConnected(RefillOffer[playerid]))
				{
					if(PlayerInfo[playerid][pCash] > RefillPrice[playerid])
					{
						GetPlayerName(RefillOffer[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new car = GetPlayerVehicleID(RefillOffer[playerid]);
						format(string, sizeof(string), "Автомеханик %s заправил ваш автомобиль на 300 литров за %d вирт",giveplayer,RefillPrice[playerid]);
						SendClientMessage(playerid, 0x6495EDFF, string);
						format(string, sizeof(string), "Вы заправили машину %s за %d вирт",sendername,RefillPrice[playerid]);
						SendClientMessage(RefillOffer[playerid], 0x6495EDFF, string);
		                format(string, sizeof(string), "~r~-%d", RefillPrice[playerid]);
		                GameTextForPlayer(playerid, string, 5000, 1);
						PlayerInfo[playerid][pCash] -= RefillPrice[playerid];
						PlayerInfo[RefillOffer[playerid]][pCash] += RefillPrice[playerid];
						if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetVehicleModel(car) == 481 || GetVehicleModel(car) == 509 || GetVehicleModel(car) == 510) return SendClientMessage(playerid,COLOR_YELLOW, "Вы не в автомобиле или этот транспорт нельзя заправить.");
						Fuell[GetPlayerVehicleID(playerid)] = 300;
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег");
						return true;
					}
				}
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вам не предлагали заправиться");
				return true;
			}
		}
		else if(strcmp(x_job, "zone",true) == 0)
		{
			if(ZoneOffer[playerid] < 999)
			{
				if(IsPlayerConnected(ZoneOffer[playerid]))
				{
					if(PlayerInfo[playerid][pCash] > ZonePrice[playerid])
					{
						for(new i = 0; i < sizeof(GZInfo); i++)
						{
							if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
							{
								if(GZInfo[i][gFrakVlad] != sellzone[playerid]) return SendClientMessage(playerid, COLOR_WHITE, "Вам не предлагали купить эту территорию");
								GZInfo[i][gFrakVlad] = PlayerInfo[playerid][pMember];
								GangZoneStopFlashForAll(GZInfo[i][gID]);
								GangZoneHideForAll(GZInfo[i][gID]);
								GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
								SaveGZ();
							}
						}
						GetPlayerName(ZoneOffer[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы купили территорию у %s за %d вирт",giveplayer, ZonePrice[playerid]);
						SendClientMessage(playerid, 0x6495EDFF, string);
						format(string, sizeof(string), "Вы продали территорию %s за %d вирт",sendername,ZonePrice[playerid]);
						SendClientMessage(ZoneOffer[playerid], 0x6495EDFF, string);
						PlayerInfo[playerid][pCash] -= ZonePrice[playerid];
						PlayerInfo[ZoneOffer[playerid]][pCash]+= ZonePrice[playerid];
						ZoneOffer[playerid] = 999;
						ZonePrice[playerid] = 0;
						sellzone[playerid] = 0;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						return true;
					}
				}
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вам ни кто не предлагал территорию");
				return true;
			}
		}
		else if(strcmp(x_job, "eat",true) == 0)
		{
			new Float:health;
			if(HotdogOffer[playerid] < 999)
			{
				if(IsPlayerConnected( HotdogOffer[playerid]))
				{
					if(PlayerInfo[playerid][pCash] > HotdogPrice[playerid])
					{
						GetPlayerName(HotdogOffer[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerHealth(playerid, health);
						PlayerInfo[playerid][pSatiety] += 50;
						if(PlayerInfo[playerid][pSatiety] > 100)
						{
							PlayerInfo[playerid][pSatiety] = 100;
						}
						format(string, sizeof(string), "Вы купили ХотДог у %s за %d вирт",giveplayer, HotdogPrice[playerid]);
						SendClientMessage(playerid, 0x6495EDFF, string);
						format(string,128, "«Сытость» пополнена до %d",PlayerInfo[playerid][pSatiety]);
						SendClientMessage(playerid,COLOR_WHITE,string);
						ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0,1);
						format(string,sizeof(string), "съел(a) ХотДог");
						SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
						format(string, sizeof(string), "Вы продали ХотДог %s за %d вирт",sendername,HotdogPrice[playerid]);
						SendClientMessage(HotdogOffer[playerid], 0x6495EDFF, string);
						PlayerInfo[playerid][pCash] -= HotdogPrice[playerid];
						PlayerInfo[HotdogOffer[playerid]][pCash]+= HotdogPrice[playerid];
						HotdogOffer[playerid] = 999;
						HotdogPrice[playerid] = 0;
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						return true;
					}
				}
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вам ни кто не предлагал купить ХотДог");
				return true;
			}
		}
		else if(strcmp(x_job, "free",true) == 0)
		{
			if(FreeOffer[playerid] < 999)
			{
				if(IsPlayerConnected( FreeOffer[playerid]))
				{
					if(PlayerInfo[playerid][pCash] > FreePrice[playerid])
					{
						GetPlayerName(FreeOffer[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы заплотили адвокату %s %d вирт",giveplayer, FreePrice[playerid]);
						SendClientMessage(playerid, 0x6495EDFF, string);
						format(string, sizeof(string), "Вы выпустили %s из тюрьмы за %d вирт",sendername, FreePrice[playerid]);
						SendClientMessage(FreeOffer[playerid], 0x6495EDFF, string);
						PlayerInfo[playerid][pCash] -= FreePrice[playerid];
						PlayerInfo[FreeOffer[playerid]][pCash]+= FreePrice[playerid];
						FreeOffer[playerid] = 999;
						FreePrice[playerid] = 0;
						SposobOffer[playerid] = 0;
						SetPlayerInterior(playerid, 0);
						ACP_SetPlayerPos(playerid,1553.4962,-1675.2714,16.1953);
						SetPlayerFacingAngle(playerid, 95.0636);
						PlayerInfo[playerid][pJailTime] = 0;
						PlayerInfo[playerid][pJailed] = 0;
						PlayerInfo[playerid][pWantedLevel] = 0;
						SendClientMessage(playerid, COLOR_YELLOW, "Вы свободны");
						SendClientMessage(playerid, COLOR_GREEN, "Вы заплатили свой долг обществу");
						WantedLevel[playerid] = 0;
						WantedTime[playerid] = 0;
						WantedPoints[playerid] = 0;
						SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
						SetPlayerVirtualWorld(playerid, 0);
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						return true;
					}
				}
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вам ни кто не предлагал услуги адвоката");
				return true;
			}
		}
		else if(strcmp(x_job, "repair",true) == 0)
		{
			if(RepairOffer[playerid] < 999)
			{
				if(PlayerInfo[playerid][pCash] > RepairPrice[playerid])
				{
					if(IsPlayerInAnyVehicle(playerid))
					{
						if(IsPlayerConnected(RepairOffer[playerid]))
						{
							GetPlayerName(RepairOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							RepairCar[playerid] = GetPlayerVehicleID(playerid);
							SetVehicleHealth(RepairCar[playerid], 1000.0);
							AnRepairVehicle(GetPlayerVehicleID(playerid));
							format(string, sizeof(string), "Вашу машину отремонтировал(а) за %d вирт, Механик %s", RepairPrice[playerid], giveplayer);
							SendClientMessage(playerid, 0x6495EDFF, string);
							format(string, sizeof(string), "Вы починили атомобиль %s за %d вирт",sendername,RepairPrice[playerid]);
							SendClientMessage(RepairOffer[playerid], 0x6495EDFF, string);
							PlayerInfo[playerid][pCash] -= RepairPrice[playerid];
							PlayerInfo[RepairOffer[playerid]][pCash] += RepairPrice[playerid];
							RepairOffer[playerid] = 999;
							RepairPrice[playerid] = 0;
							return true;
						}
						return true;
					}
					return true;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
					return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вам не предлагали чинить машину");
				return true;
			}
		}
		else
		{
			return true;
		}
	}
	if(strcmp(cmd, "/refill", true) == 0)
	{
		if(PlayerInfo[playerid][pJob] != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не механик");
		if(gcontract[playerid] != 1) return SendClientMessage(playerid, COLOR_GREY, "У вас не подписан контракт с заправкой");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /refill [id]");
		new playa;
		playa = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if(IsPlayerConnected(playa))
		{
			if(playa != INVALID_PLAYER_ID)
			{
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SendClientMessage(playerid, COLOR_GREY, "Вы не на эвакуаторе");
				if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
				{
					if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
					GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Вы предложили %s заправить его машину за %d вирт.",giveplayer,cenabenza[playerid]);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "Механик %s хочет заправить ваш автомобиль за %d вирт, (( /accept refill ))",sendername,cenabenza[playerid]);
					SendClientMessage(playa, 0x6495EDFF, string);
					RefillOffer[playa] = playerid;
					RefillPrice[playa] = cenabenza[playerid];
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Он не в машине");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/changehouse", true) == 0)
	{
		if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома!");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /changehouse [id] [цена]");
		new playa;
		new money;
		playa = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		money = strval(tmp);
		if(money < 1 || money > 100000000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 100000000 вирт");
		if(IsPlayerConnected(playa))
		{
			if(playa != INVALID_PLAYER_ID)
			{
				if(ProxDetectorS(8.0, playerid, playa))
				{
					if(playa == playerid)
					{
						SendClientMessage(playerid, COLOR_GREY, "Вы не можете продать самому себе дом");
						return true;
					}
					GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Вы предложили %s купить ваш дом за %d вирт",giveplayer,money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "%s предлагает вам купить его дом за %d вирт. Введите (/accept house),чтобы совершить сделку",sendername,money);
					SendClientMessage(playa, 0x6495EDFF, string);
					format(string, sizeof(string), "%s предложил(а) купить дом %s", sendername ,giveplayer);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					HouseOffer[playa] = playerid;
					HousePrice[playa] = money;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/changecar", true) == 0)
	{
		new caren = GetVehicleModel(caridhouse[playerid]);
		if(caren == 481) return SendClientMessage(playerid, COLOR_GREY, "У вас велосипед");
		if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid,COLOR_RED, "У вас нет дома");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /changecar [id] [цена]");
		new playa;
		new money;
		playa = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		money = strval(tmp);
		if(money < 1 || money > 10000000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 10000000 вирт");
		if(IsPlayerConnected(playa))
		{
			if(playa != INVALID_PLAYER_ID)
			{
				if(ProxDetectorS(8.0, playerid, playa))
				{
					if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы не можете продать самому себе машину!"); return true; }
					GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Вы предложили %s купить вашу машину за %d вирт",giveplayer,money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "%s предлагает вам купить его машину за %d вирт Введите (/accept vehicle), чтобы совершить сделку.",sendername,money);
					SendClientMessage(playa, 0x6495EDFF, string);
					format(string, sizeof(string), "%s предложил(а) %s купить его машину", sendername ,giveplayer);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CarOffer[playa] = playerid;
					CarPrice[playa] = money;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/repair", true) == 0)
	{
		if(PlayerInfo[playerid][pJob] != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не механик");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /repair [id] [цена]");
		new playa;
		new money;
		playa = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		money = strval(tmp);
		if(money < 1 || money > 10000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1, и больше 10000 вирт");
		if(IsPlayerConnected(playa))
		{
			if(playa != INVALID_PLAYER_ID)
			{
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SendClientMessage(playerid, COLOR_GREY, "Вы не на эвакуаторе!");
 				if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
				{
					if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете чинить машину самому себе");
					GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Вы предложили %s отремонтировать его машину за %d вирт.",giveplayer,money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "Механик %s предлагает отремонтировать ваш автомобиль за %d вирт,(( /accept repair ))",sendername,money);
					SendClientMessage(playa, 0x6495EDFF, string);
					RepairOffer[playa] = playerid;
					RepairPrice[playa] = money;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Он не в машине!");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/eject", true) == 0)
	{
		new State;
		if(IsPlayerInAnyVehicle(playerid))
		{
 			State = GetPlayerState(playerid);
			if(State != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_GREY, "Вы не водитель!");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "{e23434}Введите: /eject [id]");
			new playa;
			playa = ReturnUser(tmp);
			new test;
			test = GetPlayerVehicleID(playerid);
			if(IsPlayerConnected(playa))
			{
				if(playa != INVALID_PLAYER_ID)
				{
					if(playa == playerid)
					{
						SendClientMessage(playerid, COLOR_GREY, "Вы не можете выкинуть из машины себя!");
						return true;
					}
					if(IsPlayerInVehicle(playa,test))
					{
						new PName[MAX_PLAYER_NAME];
						GetPlayerName(playerid,PName,sizeof(PName));
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "Вы выбросили из автомобиля %s", giveplayer);
						SendClientMessage(playerid, 0x6495EDFF, string);
						format(string, sizeof(string), "Вас выбросил из автомобиля %s", PName);
						SendClientMessage(playa, 0x6495EDFF, string);
						RemovePlayerFromVehicleAc(playa);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с вами");
						return true;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в машине");
		}
	}
	return true;
}
stock ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(!BigEar[i])
				{
				if(GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
				{
					GetPlayerPos(i, posx, posy, posz);
					tempposx = (oldposx -posx);
					tempposy = (oldposy -posy);
					tempposz = (oldposz -posz);
					if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{
						SendClientMessage(i, col1, string);
					}
					else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{
						SendClientMessage(i, col2, string);
					}
					else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{
						SendClientMessage(i, col3, string);
					}
					else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{
						SendClientMessage(i, col4, string);
					}
					else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{
						SendClientMessage(i, col5, string);
					}
					}
				}
				else
				{
					SendClientMessage(i, col1, string);
				}
			}
		}
	}
	return true;
}
stock IsPlayerApplyAnimation(playerid, animation[])
{
    if(!GetPlayerAnimationIndex(playerid)) return false;
    else
    {
        new animlib[32], animname[32];
        GetAnimationName(GetPlayerAnimationIndex(playerid), animlib, sizeof(animlib), animname, sizeof(animname));
        if(!strcmp(animname, animation, true)) return true;
    }
    return false;
}
stock strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}
	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}
stock ProxDetectorS(Float:radi, playerid, targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		if(((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return true;
		}
	}
	return false;
}
public CustomPickups()
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new string[128];
	new enters[256];
	NameTimer();
	DollahScoreUpdate();
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
			if(startaddiction[i] == 1)
			{
				if(PlayerInfo[i][pAddiction] >= 1000)
				{
		    		if(send[i] == 0)
		    		{
						SendClientMessage(i, COLOR_REDD, "~~~~~~~~ У вас началась ломка ~~~~~~~~");
						SendClientMessage(i, COLOR_WHITE, "(( Вызвать медика - /call => [2] Скорая помощь    ||    Принять наркотик - /usedrugs ))");
						send[i] = 1;
					}
					ApplyAnimation(i, "CRACK", "crckdeth1", 4.0, 1, 0, 0, 0, 0);
					send[i] = 1;
				}
			}
			if(BoxWaitTime[i] > 0)
            {
                if(BoxWaitTime[i] >= BoxDelay)
                {
                    BoxDelay = 0;
                    BoxWaitTime[i] = 0;
                    PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
                    GameTextForPlayer(i, "~g~Match Started", 5000, 1);
                    TogglePlayerControllable(i, 1);
                    RoundStarted = 1;
                }
                else
                {
                    format(string, sizeof(string), "%d", BoxDelay - BoxWaitTime[i]);
                    GameTextForPlayer(i, string, 1500, 6);
                    BoxWaitTime[i] += 1;
                }
            }
            if(RoundStarted > 0)
            {
                if(PlayerBoxing[i] > 0)
                {
                    new trigger = 0;
                    new Lost = 0;
                    new Float:angle;
                    new Float:health;
                    GetPlayerHealth(i, health);
                    if(health < 12)
                    {
                        if(i == Boxer1)
						{
							Lost = 1;
							trigger = 1;
						}
                        else if(i == Boxer2)
						{
							Lost = 2;
							trigger = 1;
						}
                    }
                    if(health < 28)
					{
						GetPlayerFacingAngle(i, angle);
						SetPlayerFacingAngle(i, angle + 85);
					}
                    if(trigger)
                    {
                        new loser[MAX_PLAYER_NAME];
                        new titel[MAX_PLAYER_NAME];
                        if(Lost == 1)
                        {
                            if(IsPlayerConnected(Boxer1) && IsPlayerConnected(Boxer2))
                            {
                                ACP_SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186);
                                ACP_SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
                                SetPlayerInterior(Boxer1, 5); SetPlayerInterior(Boxer2, 5);
                                GetPlayerName(Boxer1, loser, sizeof(loser));
                                GetPlayerName(Boxer2, winner, sizeof(winner));
                                if(PlayerInfo[Boxer1][pJob] == 12) { PlayerInfo[Boxer1][pLoses] += 1; }
                                if(PlayerInfo[Boxer2][pJob] == 12) { PlayerInfo[Boxer2][pWins] += 1; }
                                if(TBoxer < 255)
                                {
                                    if(IsPlayerConnected(TBoxer))
                                    {
                                        if(TBoxer != Boxer2)
                                        {
                                            if(PlayerInfo[Boxer2][pJob] == 10)
                                            {
                                                TBoxer = Boxer2;
                                                GetPlayerName(TBoxer, titel, sizeof(titel));
                                                new nstring[MAX_PLAYER_NAME];
                                                format(nstring, sizeof(nstring), "%s", titel);
                                                strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
                                                Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
                                                Titel[TitelLoses] = PlayerInfo[TBoxer][pLoses];
                                                SaveBoxer();
                                            }
                                        }
                                        else
                                        {
                                            GetPlayerName(TBoxer, titel, sizeof(titel));
                                            Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
                                            Titel[TitelLoses] = PlayerInfo[Boxer2][pLoses];
                                            SaveBoxer();
                                        }
                                    }
                                }
                                format(string, sizeof(string), "Вы проиграли борьбу против %s.", winner);
                                SendClientMessage(Boxer1, COLOR_LIGHTBLUE, string);
                                GameTextForPlayer(Boxer1, "~r~You lost", 3500, 1);
                                format(string, sizeof(string), "Вы выиграли борьбу против %s.", loser);
                                SendClientMessage(Boxer2, COLOR_LIGHTBLUE, string);
                                GameTextForPlayer(Boxer2, "~r~You won", 3500, 1);
                                GameTextForPlayer(Boxer1, "~g~Match Over", 5000, 1); GameTextForPlayer(Boxer2, "~g~Match Over", 5000, 1);
                                PlayerBoxing[Boxer1] = 0;
                                PlayerBoxing[Boxer2] = 0;
                            }
                        }
                        else if(Lost == 2)
                        {
                            if(IsPlayerConnected(Boxer1) && IsPlayerConnected(Boxer2))
                            {
                                ACP_SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186); ACP_SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
                                SetPlayerInterior(Boxer1, 5); SetPlayerInterior(Boxer2, 5);
                                GetPlayerName(Boxer1, winner, sizeof(winner));
                                GetPlayerName(Boxer2, loser, sizeof(loser));
                                if(TBoxer < 255)
                                {
                                    if(IsPlayerConnected(TBoxer))
                                    {
                                        if(TBoxer != Boxer1)
                                        {
                                            if(PlayerInfo[Boxer1][pJob] == 10)
                                            {
                                                TBoxer = Boxer1;
                                                GetPlayerName(TBoxer, titel, sizeof(titel));
                                                new nstring[MAX_PLAYER_NAME];
                                                format(nstring, sizeof(nstring), "%s", titel);
                                                strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
                                                Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
                                                Titel[TitelLoses] = PlayerInfo[TBoxer][pLoses];
                                                SaveBoxer();
                                            }
                                        }
                                        else
                                        {
                                            GetPlayerName(TBoxer, titel, sizeof(titel));
                                            Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
                                            Titel[TitelLoses] = PlayerInfo[Boxer1][pLoses];
                                            SaveBoxer();
                                        }
                                    }
                                }
                                format(string, sizeof(string), "Вы проиграли борьбу против %s.", winner);
                                SendClientMessage(Boxer1, COLOR_LIGHTBLUE, string);
                                GameTextForPlayer(Boxer1, "~r~You lost", 3500, 1);
                                format(string, sizeof(string), "Вы выиграли борьбу против %s.", loser);
                                SendClientMessage(Boxer2, COLOR_LIGHTBLUE, string);
                                GameTextForPlayer(Boxer2, "~r~You won", 3500, 1);
                                GameTextForPlayer(Boxer1, "~g~Match Over", 5000, 1); GameTextForPlayer(Boxer2, "~g~Match Over", 5000, 1);
                                PlayerBoxing[Boxer1] = 0;
                                PlayerBoxing[Boxer2] = 0;
                            }
                        }
                        InRing = 0;
                        RoundStarted = 0;
                        Boxer1 = 255;
                        Boxer2 = 255;
                        TBoxer = 255;
                        trigger = 0;
					}
				}
			}
			GetPlayerPos(i, oldposx, oldposy, oldposz);
			if(oldposx != 0.0 && oldposy != 0.0 && oldposz != 0.0)
			{
	 			for(new b = 0; b < sizeof(BizzInfo); b++)
				{
					if(PlayerToPoint(1, i,BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]))
					{
						if(GetPlayerState(i) != PLAYER_STATE_DRIVER)
						{
							if(BizzInfo[b][bOwned] == 0)
							{
								SetPlayerInterior(i,BizzInfo[b][bInterior]);
								ACP_SetPlayerPos(i,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
								PlayerInfo[i][pInt] = BizzInfo[b][bInterior];
								SetPlayerVirtualWorld(i,0);
								return true;
							}
							if(b == 0 || b == 1 || b == 2 || b == 3 ||b == 4 || b == 5 || b == 6)
							{
								if(enterbiz[i] == 0)
								{
									if(BizzInfo[b][bLocked] == 1) return SendClientMessage(i, COLOR_GREY, "Бизнес закрыт");
			 						format(enters,sizeof(enters), "Цена входа %d вирт\nВы хотите войти?",BizzInfo[b][bEntranceCost]);
			   				 		ShowPlayerDialog(i,9898,DIALOG_STYLE_MSGBOX, "Вход", enters, "Да", "Отмена");
			           				return true;
		   				 		}
								if(PlayerInfo[i][pPBiskey] == 255)
								{
								}
		   				 		else
		   				 		{
									SetPlayerInterior(i,BizzInfo[b][bInterior]);
									ACP_SetPlayerPos(i,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
									PlayerInfo[i][pInt] = BizzInfo[b][bInterior];
									SetPlayerVirtualWorld(i,0);
									return true;
		   				 		}
								if(PlayerInfo[i][pPBiskey] == b)
								{
									if(BizzInfo[b][bLocked] == 1) return SendClientMessage(i, COLOR_GREY, "Бизнес закрыт");
									SetPlayerInterior(i,BizzInfo[b][bInterior]);
									ACP_SetPlayerPos(i,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
									PlayerInfo[i][pInt] = BizzInfo[b][bInterior];
									SetPlayerVirtualWorld(i,0);
			       					return true;
								}
							}
							else
							{
								SetPlayerInterior(i,BizzInfo[b][bInterior]);
								ACP_SetPlayerPos(i,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
								PlayerInfo[i][pInt] = BizzInfo[b][bInterior];
								SetPlayerVirtualWorld(i, 0);
								return true;
							}
						}
					}
				}
			}
  		}
	}
	return true;
}
stock ClearMarriage(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new sendername[MAX_PLAYER_NAME];
	    new string[100];
		GetPlayerName(playerid, sendername, sizeof(sendername));
	 	format(string, sizeof(string), "%s.ini",sendername);
	 	new files = ini_openFile(string);
		if(files < 0) print("нет файла");
	 	else
		{
			ini_setInteger(files, "MarriedTo",0);
			ini_setInteger(files, "Married",0);
			ini_closeFile(files);
		}
	}
	return true;
}
public OnPlayerText(playerid, text[])
{
	new sendername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, sendername, sizeof(sendername));
	new tmp[256];
	new string[256];
 	new ip[26];
	GetPlayerIp(playerid,ip,sizeof(ip));
	if(!CheckString(playerid,text))return 0;
	if(TalkingLive[playerid] == 1)
	{
		if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У вас бан чата!"); return false; }
		format(string, sizeof(string), "< [Тел] SF News > %s: %s", sendername, text);
		OOCNews(COLOR_GREEN, string);
	}
	if(TalkingLivels[playerid] == 1)
	{
		if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У вас бан чата!"); return false; }
 		format(string, sizeof(string), "< [Тел] LS News %s: %s", sendername, text);
		LSNews(0x0073B7AA, string);
	}
	if(TalkingLivelv[playerid] == 1)
	{
		if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У вас бан чата!"); return false; }
		format(string, sizeof(string), "< [Тел] LV News > %s: %s", sendername, text);
		LVNews(TEAM_CYAN_COLOR, string);
	}
    if(TalkingLive[playerid] == 2)
	{
		if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У вас бан чата!"); return false; }
		if(PlayerInfo[playerid][pMember] == 9)
		{
		    format(string, sizeof(string), "< SF News > Ведущий %s: %s", sendername, text);
			OOCNews(COLOR_GREEN, string);
			return false;
		}
		else
		{
		    format(string, sizeof(string), "< SF News > Гость %s: %s", sendername, text);
			OOCNews(COLOR_GREEN, string);
			return false;
		}
	}
	if(TalkingLivels[playerid] == 2)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У вас бан чата!"); return false; }
		if(PlayerInfo[playerid][pMember] == 16)
		{
		    format(string, sizeof(string), "< LS News > Ведущий %s: %s", sendername, text);
			LSNews(0x0073B7AA, string);
			return false;
		}
		else
		{
		    format(string, sizeof(string), "< LS News > Гость %s: %s", sendername, text);
			LSNews(0x0073B7AA, string);
			return false;
		}
	}
	if(TalkingLivelv[playerid] == 2)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У вас бан чата!"); return false; }
		if(PlayerInfo[playerid][pMember] == 20)
		{
		    format(string, sizeof(string), "< LV News > Ведущий %s: %s", sendername, text);
			LVNews(TEAM_CYAN_COLOR, string);
			return false;
		}
		else
		{
		    format(string, sizeof(string), "< LV News > Гость %s: %s", sendername, text);
			LVNews(TEAM_CYAN_COLOR, string);
			return false;
		}
	}
	if(Tel[playerid] == 1)
	{
		new idx;
		tmp = strtok(text, idx);
		if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У вас бан чата!"); return false; }
		format(string, sizeof(string), "[Телефон] %s: %s", sendername, text);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		return false;
	}
	if(Mobile[playerid] != 255)
	{
		new idx;
		tmp = strtok(text, idx);
		if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У вас бан чата!"); return false; }
		format(string, sizeof(string), "[Телефон] %s: %s", sendername, text);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	}
	if(IsPlayerConnected(Mobile[playerid]))
	{
		if(Mobile[Mobile[playerid]] == playerid)
		{
			SendClientMessage(Mobile[playerid], COLOR_YELLOW,string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "На второй линии ни кого нет");
		}
		return false;
	}
	if(strval(text) == Viktorina)
    {
        new str[148], prize;
        prize = random(vMaxP); // ???? + ????????? ?????
        format(str,sizeof(str),"Викторина: Игрок {ffff00}%s [%d]{ffffff} дал(а) правильный ответ! Ответ был: {ffff00}%d{ffffff}. Приз: {ffff00}%d Вирт.",sendername,playerid,Viktorina,prize);
        SendClientMessageToAll(-1, str); // ??????? ???? ??????? ? ???
        PlayerInfo[playerid][pCash] +=prize; // ?????? ???????? ? ??????? ?? pMoney - ?????? , ? ???? ?? ??? ????? ????
        Viktorina = -5415614561541; // ????????? ?????
    }
	if(PEfir[playerid] != 255)
	{
		if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
		{
			if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У вас бан чата!");return false; }
		    format(string, sizeof(string), "< SF News > %s: %s", sendername, text);
			OOCNews(COLOR_GREEN, string);
		}
		if(PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
		{
			if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У вас бан чата!"); return false; }
		    format(string, sizeof(string), "< LV News > %s: %s", sendername, text);
			LVNews(TEAM_CYAN_COLOR, string);
		}
		if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
		{
			if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У вас бан чата!"); return false; }
		    format(string, sizeof(string), "< LS News > %s: %s", sendername, text);
			LSNews(0x0073B7AA, string);
		}
		if(Pefir[playerid] == 1)
		{
			if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У вас бан чата!"); return false; }
		    format(string, sizeof(string), "< SF News > %s: %s", sendername, text);
			OOCNews(COLOR_GREEN, string);
		}
		if(Pefir[playerid] == 2)
		{
			if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У вас бан чата!"); return false; }
		    format(string, sizeof(string), "< LS News > %s: %s", sendername, text);
			LSNews(0x0073B7AA, string);
		}
		if(Pefir[playerid] == 3)
		{
			if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У вас бан чата!"); return false; }
		    format(string, sizeof(string), "< LV News > %s: %s", sendername, text);
			LSNews(TEAM_CYAN_COLOR, string);
		}
		return false;
	}
	else if(strcmp(text, "xD", true) == 0 || strcmp(text, "xd", true) == 0 || strcmp(text, ":В", true) == 0 || strcmp(text, ":в", true) == 0 )
	{
	    format(string, sizeof(string), "%s смеётся", sendername);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    SetPlayerChatBubble(playerid, "смеётся", COLOR_PURPLE, 30.0, 10000);
	    return false;
	}
	else if(strcmp(text, "чВ", true) == 0 || strcmp(text, "хД", true) == 0 || strcmp(text, "хд", true) == 0 || strcmp(text, "xDD", true) == 0)
	{
	    format(string, sizeof(string), "%s валяется от смеха", sendername);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    SetPlayerChatBubble(playerid, "валяется от смеха",COLOR_PURPLE,30.0,10000);
	    return false;
	}
	else if(strcmp(text, ")", true) == 0 || strcmp(text, "))", true) == 0)
	{
	    format(string, sizeof(string), "%s улыбается", sendername);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    SetPlayerChatBubble(playerid, "улыбается",COLOR_PURPLE,30.0,10000);
	    return false;
	}
	else if(strcmp(text, "(", true) == 0 || strcmp(text, "((", true) == 0)
	{
	    format(string, sizeof(string), "%s грустит", sendername);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    SetPlayerChatBubble(playerid, "грустит",COLOR_PURPLE,30.0,10000);
	    return false;
	}
	else if(strcmp(text, ":C", true) == 0 || strcmp(text, ":CC", true) == 0)
	{
	    format(string, sizeof(string), "%s плачет", sendername);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    SetPlayerChatBubble(playerid, "плачет",COLOR_PURPLE,30.0,10000);
	    return false;
	}
	else if(strcmp(text, "-_-", true) == 0 || strcmp(text, "-__-", true) == 0)
	{
	    format(string, sizeof(string), "%s приложил руку к лицу (facepalm)", sendername);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    SetPlayerChatBubble(playerid, "facepalm",COLOR_PURPLE,30.0,10000);
	    return false;
	}
	else if(strcmp(text, ":D", true) == 0)
	{
	    format(string, sizeof(string), "%s хохочет во весь голос", sendername);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    SetPlayerChatBubble(playerid, "хохочет во весь голос",COLOR_PURPLE,30.0,10000);
	    return false;
	}
	if(strcmp(text, "q", true) == 0)//азтеки
	{
	    if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			//GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s показал(a) распальцовку ADMINS TEAM", sendername);
        	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        	format(string,sizeof(string), "показал(a) распальцовку ADMINS TEAM");
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
        	ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,0);
			return 0;
		}
	    if(PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18)
		{
			//GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s показал(a) распальцовку The Rifa Gang", sendername);
        	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        	format(string,sizeof(string), "показал(a) распальцовку The Rifa Gang");
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
        	ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,0);
			return 0;
		}
		else if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
		{
			//GetPlayerName(playerid, sendername, sizeof(sendername));//Смеётся
			format(string, sizeof(string), "%s показал(a) распальцовку Varios Los Aztecas Gang", sendername);
        	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        	format(string,sizeof(string), "показал(a) распальцовку Varios Los Aztecas Gang");
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
        	ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,0);
			return 0;
		}
		else if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
		{
			//GetPlayerName(playerid, sendername, sizeof(sendername));//Смеётся
			format(string, sizeof(string), "%s показал(a) распальцовку Grove Street Gang", sendername);
        	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        	format(string,sizeof(string), "показал(a) распальцовку Grove Street Gang");
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
        	ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,0);
			return 0;
		}
		else if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)
		{
			//GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s показал(a) распальцовку Los Santos Vagos Gang", sendername);
        	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        	format(string,sizeof(string), "показал(a) распальцовку Los Santos Vagos Gang");
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
        	ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,0);
			return 0;
		}
		else if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
		{
			//GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s показал(a) распальцовку The Ballas Gang", sendername);
        	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        	format(string,sizeof(string), "показал(a) распальцовку The Ballas Gang");
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
        	ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,0);
			return 0;
		}
		else if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
		{
			//GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s показал(a) распальцовку The Ballas Gang", sendername);
        	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        	format(string,sizeof(string), "показал(a) распальцовку The Ballas Gang");
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
        	ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,0);
			return 0;
		}
	}
	if(realchat)
	{
		if(gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Необходимо авторизоваться!");
  			/*format(string, sizeof(string), "[AntiCheatLog]: Игрок %s: Был кикнут за NoLoginCHAT.",sendername);
  			ABroadCast(0xCC3300AA, string, 1);
  			FixKickedPlayer[playerid] = 1;*/
  			return false;
		}
		if(PlayerInfo[playerid][pMuted] == 1)
		{
			format(string, sizeof(string), "У вас бан чата! До снятия: %d секунд(ы)",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return false;
		}
		if(PlayerInfo[playerid][pLevel] <= 1)
		{
			new succ;
			for(new i; i < strlen(text); i++)
			{
				if(PText[playerid][i] == text[i]) succ++;
			}
			if(succ == strlen(text))
			{
				SendClientMessage(playerid,0xFFD5BBAA, "Не флуди!");
	     		return false;
			}
		}
		strmid(PText[playerid],text,0,256,256);
      	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
      	{
	        ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,1,1,1,1);
			SetTimerEx("RukiOff", 1400, 0, "d", playerid);
        }
		format(string, sizeof(string), "- %s (%s)[%d]",text,sendername,playerid);
		SetPlayerChatBubble(playerid, text, 0x6495EDFF, 20.0, 10000);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		return false;
	}
	return true;
}
stock ClearAnim(playerid)
{
	ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,0,1);
	return true;
}
public OnPlayerUpdate(playerid)
{
    if(GetPlayerMoney(playerid) > 1000000)
    {
    SetPlayerAttachedObject(playerid,3,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);
    }
	new plname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, plname, sizeof(plname));
 	new string[128];
 	SetGravity_OnPlayerUpdate(playerid);
	SetPVarInt(playerid, "NewPlayerAmmo", GetPlayerAmmo(playerid));
	if(GetPVarInt(playerid, "NewPlayerAmmo") != GetPVarInt(playerid, "PlayerAmmo"))
	{
	    OnPlayerAmmoChange(playerid, GetPVarInt(playerid, "NewPlayerAmmo"), GetPVarInt(playerid, "PlayerAmmo"));
	    SetPVarInt(playerid, "PlayerAmmo", GetPVarInt(playerid, "NewPlayerAmmo"));
 	}
 	if(plafk[playerid] > -2)
	{
		if(plafk[playerid] > 0)
		{
			format(string,sizeof(string),"Время вашего отсутствия: {FFFFFF}%s",ConvertSeconds(plafk[playerid]));
			SendClientMessage(playerid, COLOR_ORANGE, string);
			SetPlayerChatBubble(playerid, "AFK: {FFFFFF}Завершено", COLOR_GREEN, 10.0, 10);
		}
		plafk[playerid] = 0;
	}
	if(Works[playerid] == true && JobCP[playerid] == 2)
	{
		if(IsPlayerApplyAnimation(playerid, "FALL_back") ||
		IsPlayerApplyAnimation(playerid, "FALL_collapse") ||
		IsPlayerApplyAnimation(playerid, "FALL_fall") ||
		IsPlayerApplyAnimation(playerid, "FALL_front") ||
		IsPlayerApplyAnimation(playerid, "FALL_glide") ||
		IsPlayerApplyAnimation(playerid, "FALL_land") ||
		IsPlayerApplyAnimation(playerid, "FALL_skyDive") ||
		IsPlayerApplyAnimation(playerid, "JUMP_glide") ||
		IsPlayerApplyAnimation(playerid, "JUMP_land") ||
		IsPlayerApplyAnimation(playerid, "JUMP_launch") ||
		IsPlayerApplyAnimation(playerid, "JUMP_launch_R"))
		{
			Bags[playerid] = 1;
			if(PlayerToPoint(2.0,playerid,278.7468,1797.6921,17.6406)) return true;
			SendClientMessage(playerid,COLOR_RED, "Вы уронили мешок!");
			DisablePlayerCheckpoint(playerid);
			ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,1,1);
			if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
			SetPlayerCheckpoint(playerid,2230.3528,-2286.1353,14.3751,1.5);
			JobCP[playerid] = 1;
		}
	}
	new Keys,ud,lr;
	GetPlayerKeys(playerid,Keys,ud,lr);
	if(Upravakazino[playerid] == true)
	{
	    if(IsPlayerInRangeOfPoint(playerid,1.5,2242.7837,1620.9683,1006.1769) || IsPlayerInRangeOfPoint(playerid,1.5,2231.1338,1621.2253,1006.1768))
		{
			if(ud > 0) Stavkarul1up(playerid);
			else if(ud < 0) Stavkarul1down(playerid);
			if(lr > 0) Stavkarul1left(playerid);
			else if(lr < 0) Stavkarul1right(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid,1.5,2231.0769,1620.5939,1006.1772) || IsPlayerInRangeOfPoint(playerid,1.5,2242.8293,1618.1311,1006.1790))
		{
			if(ud > 0) Stavkarul1down(playerid);
			else if(ud < 0) Stavkarul1up(playerid);
			if(lr > 0) Stavkarul1right(playerid);
			else if(lr < 0) Stavkarul1left(playerid);
		}
		else
		{
			if(ud > 0) Stavkarul1down(playerid);
			else if(ud < 0) Stavkarul1up(playerid);
			if(lr > 0) Stavkarul1right(playerid);
			else if(lr < 0) Stavkarul1left(playerid);
		}
	}
	clearanim[playerid] -= 1;
	if(clearanim[playerid] == 10)
	{
		ApplyAnimation(playerid, "PED", "getup_front", 4.1, 0, 1, 1, 1, 1, 1);
	}
	if(clearanim[playerid] == 0)
	{
	 	ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,0,1);
	}
	AntiCheatTimer(playerid);
    if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK)
    {
	    GetPlayerName(playerid, plname, MAX_PLAYER_NAME);
	    PlayerInfo[playerid][pVWarn] += 1;
		PlayerInfo[playerid][pWarns] += 1;
		if(PlayerInfo[playerid][pWarns] >= 3)
		{
			format(string, sizeof(string), "{FF9900}[Античит]: {FFFFFF}%s {FF9900}был забанен за использование читов [3 варна]", plname);
			SendClientMessageToAll(COLOR_LIGHTRED, string);
			PlayerInfo[playerid][pMember] = 0;
			PlayerInfo[playerid][pLeader] = 0;
			PlayerInfo[playerid][pWdraw] = 0;
			PlayerInfo[playerid][pLocked] = 1;
			FixKickedPlayer[playerid] = 1;
		   	return true;
		}
		GetPlayerName(playerid, plname, sizeof(plname));
		format(string,sizeof(string), "{FF9900}[Античит]: {FFFFFF}%s {FF9900}получил Warn за использование читов (USEJETPACK)",plname);
		SendClientMessageToAll(COLOR_LIGHTRED, string);
		PlayerInfo[playerid][pMember] = 0;
		PlayerInfo[playerid][pWdraw] = 0;
		PlayerInfo[playerid][pLeader] = 0;
		FixKickedPlayer[playerid] = 1;
	}
	new weap = GetPlayerWeapon(playerid);
	if(weap != 0 && !Weapons[playerid][weap] && weap != 40)
	{
		if(PlayerInfo[playerid][pAdmin] == 0)
		{
            new sendername[MAX_PLAYER_NAME];
            GetPlayerName(playerid, sendername, sizeof(sendername));
            SendClientMessage(playerid, COLOR_LIGHTRED, "Вы были кикнуты по подозрению в читерстве. Чит [!WeaponHack]");
            format(string, sizeof(string), "<Kicked> Чит [!WeaponHack]. Игрок: %s",sendername);
			ABroadCast(0xFF2F00AA, string, 1);
			DelGun(playerid);
			FixKickedPlayer[playerid] = 1;
		}
	}
	if(acstruct[playerid][checkmaptp] == 1) // FF6347
	{
		new Float:dis = GetPlayerDistanceFromPoint(playerid, acstruct[playerid][maptp][0], acstruct[playerid][maptp][1], acstruct[playerid][maptp][2]);
		if(dis < 5.0)
		{
			new Float:disd = GetPlayerDistanceFromPoint(playerid, acstruct[playerid][LastOnFootPosition][0], acstruct[playerid][LastOnFootPosition][1], acstruct[playerid][LastOnFootPosition][2]);
			if(disd > 25.0)
			{
			    new sendername[MAX_PLAYER_NAME];
	            GetPlayerName(playerid, sendername, sizeof(sendername));
	            SendClientMessage(playerid, COLOR_LIGHTRED, "Вы были кикнуты по подозрению в читерстве. Чит [!Teleport]");
	            format(string, sizeof(string), "<Kicked> Чит [!Teleport]. Игрок: %s",sendername);
	    		ABroadCast(0xFF2F00AA, string, 1);
				FixKickedPlayer[playerid] = 1;
			}
			acstruct[playerid][checkmaptp] = 0;
		}
		GetPlayerPos(playerid, acstruct[playerid][LastOnFootPosition][0], acstruct[playerid][LastOnFootPosition][1], acstruct[playerid][LastOnFootPosition][2]);
	}
	new vehicleID;
	vehicleID = GetPlayerVehicleID(playerid);
	if(IsPlayerInVehicle(playerid, vehicleID) && (GetPlayerWeapon(playerid) == 24 || GetPlayerWeapon(playerid) == 25 || GetPlayerWeapon(playerid) == 26 || GetPlayerWeapon(playerid) == 38 || GetPlayerWeapon(playerid) == 29))
	{
		SetPlayerArmedWeapon(playerid, 0);
 	}
	new animlib[30], animname[30];
	GetAnimationName(GetPlayerAnimationIndex(playerid), animlib, sizeof(animlib), animname, sizeof(animname));
	if(!IsPlayerInAnyVehicle(playerid))
	{
		if(PlayerInfo[playerid][pAdmin] == 0)
		{
			new Float:posx, Float:posy, Float:posz;
			GetPlayerPos(playerid, posx, posy, posz);
			if(posz >= 9)
			{
				if(PlayerSpeed(playerid) > 60 && strcmp(animlib, "SWIM", true) == 0 && strcmp(animname, "SWIM_crawl", true) == 0)
				{
					new sendername[24];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[playerid][pAntiCheat] += 1;
				}
			}
		}
	}
	if(PlayerInfo[playerid][pAntiCheat] > 25)
	{
		if(PlayerInfo[playerid][pAdmin] == 0)
		PlayerInfo[playerid][pAntiCheat] = 0;
  		new sendername[MAX_PLAYER_NAME];
  		GetPlayerName(playerid, sendername, sizeof(sendername));
        SendClientMessage(playerid, COLOR_LIGHTRED, "Вы были кикнуты по подозрению в читерстве. Чит [!Invisible/FLY]");
        format(string, sizeof(string), "<Kicked> Чит [!Invisible/FLY]. Игрок: %s",sendername);
  		ABroadCast(0xFF2F00AA, string, 1);
		FixKickedPlayer[playerid] = 1;
	}
    if(PlayerInfo[playerid][pSatiety] > 100)
	{
		PlayerInfo[playerid][pSatiety] = 100;
	}
    if(PlayerInfo[playerid][pSatiety] < 0)
	{
		PlayerInfo[playerid][pSatiety] = 0;
	}
    if(PlayerInfo[playerid][pWantedLevel] > 6)
	{
		PlayerInfo[playerid][pWantedLevel] = 6;
	}
    if(PlayerInfo[playerid][pWantedLevel] < 0)
	{
		PlayerInfo[playerid][pWantedLevel] = 0;
	}
    if(WantedLevel[playerid] > 6)
	{
		WantedLevel[playerid] = 6;
	}
    if(WantedLevel[playerid] < 0)
	{
		WantedLevel[playerid] = 0;
	}
    if(PlayerInfo[playerid][pLabiding] > 100)
	{
		PlayerInfo[playerid][pLabiding] = 100;
	}
    if(PlayerInfo[playerid][pLabiding] < 0)
	{
		PlayerInfo[playerid][pLabiding] = 0;
	}
    return true;
}
stock FixHour(hour)
{
	hour = timeshift+hour;
	if (hour < 0)
	{
		hour = hour+24;
	}
	else if (hour > 23)
	{
		hour = hour-24;
	}
	shifthour = hour;
	return true;
}
public Ddchat()
{
	dchat = 1;
	return true;
}
public AdvertiseTimer()
{
	SendClientMessageToAll(COLOR_LIGHTGREEN,"{CC0000}Увидели читера или нарушитель правилы? тогда пишите в /report");
}
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	new string[500];
	if(newkeys == 16)
	{
		if(IsPlayerInRangeOfPoint(playerid,2.0,2231.0784,1619.5814,1007.1223))
		{
			if(Kazkamera[playerid] == 0)
			{
   				if(Maxis[0] > 10) return SendClientMessage(playerid,COLOR_WHITE,"За этим столом нет свободных мест");
				new Float:xi,Float:yi,Float:zi;
				GetPlayerPos(playerid,xi,yi,zi);
				SetPlayerCameraPos(playerid,xi,yi,zi+2);
				SetPlayerCameraLookAt(playerid,2230.8989,1619.2358,1006.1888);
				Kazkamera[playerid] = 1;
				TogglePlayerControllable(playerid, 0);
				RuletkaStol[playerid] = 1;
				fishechkax[playerid]= 2230.2999;
				fishechkay[playerid]= 1619.5603;
				NumberFishka[playerid] = 0;
				Upravakazino[playerid] = true;
				Fishka[playerid]= CreateObject(1913,fishechkax[playerid],fishechkay[playerid], 1006.0690,0.00,0.00,0.00);
				Maxis[0] += 1;
			}
			else
			{
				Kazvihod(playerid);
			}
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid,2.0,2242.4980,1619.5001,1006.2346))
		{
			if(Kazkamera[playerid] == 0)
			{
   				if(Maxis[1] > 10) return SendClientMessage(playerid,COLOR_WHITE,"За этим столом нет свободных мест");
				new Float:xi,Float:yi,Float:zi;
				GetPlayerPos(playerid,xi,yi,zi);
				SetPlayerCameraPos(playerid,xi,yi,zi+2);
				SetPlayerCameraLookAt(playerid,2242.4980,1619.5001,1006.2346);
				Kazkamera[playerid] = 1;
				TogglePlayerControllable(playerid, 0);
				RuletkaStol[playerid] = 2;
				fishechkax[playerid]= 2241.9082;
				fishechkay[playerid]= 1619.5603;
				NumberFishka[playerid] = 0;
				Upravakazino[playerid] = true;
				Maxis[1] += 1;
				Fishka[playerid]= CreateObject(1913,2241.9082,1619.5603, 1006.0690,0.00,0.00,0.00);
			}
			else
			{
				Kazvihod(playerid);
			}
			return true;
		}
	}
	if(newkeys == 8)
	{
	    new nearveh = GetNearestVehicle(playerid);
	    if(nearveh == ugoncar[playerid])
	    {
		    if(RobbingCar[playerid] == true)
		    {
				new Float:cx,Float:cy,Float:cz;
				GetVehiclePos(nearveh, cx, cy, cz);
				if(PlayerToPoint(4.0, playerid, cx, cy, cz))
				{
					RobbingCar[playerid] = false;
					GameTextForPlayer(playerid, "~b~Wait", 1000, 6);
					SendClientMessage(playerid, 0x6495EDFF, "SMS: Вот тачка которую мы заказывали. {FFFFFF}(( Держите клавишу пока не откроеться ))");
					SendClientMessage(playerid, 0x6495EDFF, "SMS: Тачка открыта, пора уносить ноги.");
					format(string, sizeof(string), "~w~CAR ~g~UNLOCK");
					GameTextForPlayer(playerid, string, 5000, 3);
					PlayerInfo[playerid][pWantedLevel] += 1;
					WantedPoints[playerid] += 1;
					WantedLevel[playerid] += 1;
				    SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
					SetPlayerCriminal(playerid, 255, "Угон автомобиля");
					SendClientMessage(playerid, COLOR_WHITE, "Ваша узнаваемость повысилась");
					UnLockCar(nearveh);
					IsLocked[nearveh] = 0;
				}
			}
		}
	}
	if(newkeys == 1024)
	{
		if(IsAEat(playerid))
		{
		    if(PlayerInfo[playerid][pLevel] >= 2)
		    {
			    new Float:healthhh;
	    		GetPlayerHealth(playerid, healthhh);
			    format(string,sizeof(string),"{FF9900}Ваша сытость {FFFFFF}%d{FF9900} / {FFFFFF}100\n{FF9900}Состояние вашего здоровья: {FFFFFF}%.0f{FF9900} / {FFFFFF}100\n{FF9900}Желаете подкрепиться и пополнить здоровье?(Цена: {FFFFFF}100${FF9900})",PlayerInfo[playerid][pSatiety],healthhh);
			    ShowPlayerDialog(playerid,1355,DIALOG_STYLE_MSGBOX,"Закусочная",string,"Да","Нет");
			}
			else
			{
			    new Float:healthhh;
	    		GetPlayerHealth(playerid, healthhh);
			    format(string,sizeof(string),"{FF9900}Ваша сытость {FFFFFF}%d{FF9900} / {FFFFFF}100\n{FF9900}Состояние вашего здоровья: {FFFFFF}%.0f{FF9900} / {FFFFFF}100\n{FF9900}Желаете подкрепиться и пополнить здоровье?(Цена: {FFFFFF}Бесплатно!{FF9900})",PlayerInfo[playerid][pSatiety],healthhh);
			    ShowPlayerDialog(playerid,1355,DIALOG_STYLE_MSGBOX,"Закусочная",string,"Да","Нет");
			}
			
		}
	}
	if(newkeys == 1024)//833.2015,1.4539,994.5490
	{
	    if(PlayerToPoint(1.5,playerid,833.2015,1.4539,994.5490))
	    {
	        ShowPlayerDialog(playerid,1337,DIALOG_STYLE_LIST,"МТС","Купить телефон\nПополнить баланс телефона\nПомощь","Выбрать", "Отмена");
	    }
	}
	if(newkeys == 1024)
	{
	    for(new h = 0; h < sizeof(HouseInfo); h++)
      	{
        	if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]))
        	{
				//if(Dpic[i] == 1) continue; else GetPlayerPos(i,PosPic[0][i],PosPic[1][i],PosPic[2][i]),Dpic[i] = 1;
				if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
				{
				    //if(GetPVarInt(i,"House") > gettime()) { return 0; }
					if(HouseInfo[h][hOwned] == 1)
					{
			        	new ttextt[32];
			        	new ktext[32];
			        	if(IsPlayerConnected(GetPlayerID(HouseInfo[h][hOwner])))
						{
							ttextt = "[{22ff00}В сети!{F2EEF0}]";
						}
						else if(!IsPlayerConnected(GetPlayerID(HouseInfo[h][hOwner])))
						{
							ttextt = "[{ff001c}Не в сети!{F2EEF0}]";
						}
						switch(HouseInfo[h][hKlass])
						{
						    case 0: { ktext = "N"; }
						    case 1: { ktext = "D"; }
						    case 2: { ktext = "C"; }
						    case 3: { ktext = "B"; }
						    case 4: { ktext = "A"; }
						    case 5: { ktext = "S"; }
						}
						format(string, sizeof(string), "{3399FF}Владелец: {FFFFFF}%s %s\n{3399FF}Класс: {FFFFFF}%s\n{3399FF}Номер дома: {FFFFFF}%d",HouseInfo[h][hOwner],ttextt,ktext,h);
						ShowPlayerDialog(playerid,10075,DIALOG_STYLE_MSGBOX, "{e23434}Дом занят",string, "Войти", "Отмена");
						//SetPVarInt(i,"House",gettime() + 3);
						return true;
					}
					else
					{
					    new ktext[32];
					    switch(HouseInfo[h][hKlass])
					    {
					        case 0: { ktext = "N"; }
						    case 1: { ktext = "D"; }
						    case 2: { ktext = "C"; }
						    case 3: { ktext = "B"; }
						    case 4: { ktext = "A"; }
						    case 5: { ktext = "S"; }
						}
						format(string, sizeof(string), "{3399FF}Цена: {FFFFFF}%d\n{3399FF}Класс: {FFFFFF}%s\n{3399FF}Номер дома: {FFFFFF}%d",HouseInfo[h][hValue],ktext,h);
	                    ShowPlayerDialog(playerid,10026,DIALOG_STYLE_MSGBOX, "{33FF00}Дом свободен",string, "Купить", "Отмена");
	                    //SetPVarInt(i,"House",gettime() + 3);
	                    return true;
					}
				}
			}
		}
	}
	if(newkeys == 65536)
	{
	    if(IsAKosti(playerid))
		{
	        if(KostiName[playerid] < 999)
	        {
   				new pnamee[MAX_PLAYER_NAME];
				GetPlayerName(playerid, pnamee, sizeof(pnamee));
				new kname[MAX_PLAYER_NAME];
				GetPlayerName(KostiName[playerid], kname, sizeof(kname));
                new dice0 = random(12)+1;
                new dice1 = random(12)+1;
                if(dice0 > dice1)
                {
                    new stavka = KostiMoney[playerid]+KostiMoney[KostiName[playerid]];
                    PlayerInfo[KostiName[playerid]][pCash] += KostiMoney[playerid];
                    PlayerInfo[playerid][pCash] -= KostiMoney[playerid];
                    SendClientMessage(KostiName[playerid], COLOR_GREEN, "Поздравляем, Вы выиграли!");
                    SendClientMessage(playerid, COLOR_ORANGE, "К сожалению, Вы проиграли!");
                    format(string, sizeof(string), "~g~+%d$", KostiMoney[playerid]);
                    GameTextForPlayer(KostiName[playerid], string, 3000, 1);
                    format(string, sizeof(string), "~r~-%d$", KostiMoney[playerid]);
                    GameTextForPlayer(playerid, string, 3000, 1);
                    format(string,sizeof(string), "Выпало: %i",dice1);
                    SetPlayerChatBubble(playerid,string,COLOR_ORANGE,30.0,10000);
                    format(string,sizeof(string), "Выпало: %i",dice0);
                    SetPlayerChatBubble(KostiName[playerid],string,TEAM_GROVE_COLOR,30.0,10000);
                    format(string, sizeof(string), "{FFFFFF}%s{FF3366} и {FFFFFF}%s{FF3366} бросили кости. Результат: {CC9900}%i{FFFFFF} : {CC9900}%i",kname,pnamee,dice0,dice1);
					SendClientMessage(playerid, 0xFF3366FF, string);
					format(string, sizeof(string), "{FFFFFF}%s{FF3366} и {FFFFFF}%s{FF3366} бросили кости. Результат: {CC9900}%i{FFFFFF} : {CC9900}%i",kname,pnamee,dice0,dice1);
					SendClientMessage(KostiName[playerid], 0xFF3366FF, string);
                    dicetime = gettime() + 5;
                    ZapretDice[playerid] = 0;
                    ZapretDice[KostiName[playerid]] = 0;
                    KostiMoney[playerid] = 0;
                    KostiName[playerid] = 999;
                    switch(kaligmaf1)
					{
						case 5:
						{
							MafiaBank[0][nLcn]+=stavka/50;
						}
						case 6:
						{
							MafiaBank[0][nYakuza]+=stavka/50;
						}
						case 14:
						{
							MafiaBank[0][nRm]+=stavka/50;
						}
					}
                }
                if(dice0 < dice1)
                {
                	new stavka = KostiMoney[playerid]+KostiMoney[KostiName[playerid]];
                    PlayerInfo[KostiName[playerid]][pCash] -= KostiMoney[playerid];
                    PlayerInfo[playerid][pCash] += KostiMoney[playerid];
                    SendClientMessage(playerid, COLOR_GREEN, "Поздравляем, Вы выиграли!");
                    SendClientMessage(KostiName[playerid], COLOR_ORANGE, "К сожалению, Вы проиграли!");
                    format(string, sizeof(string), "~g~+%d$", KostiMoney[playerid]);
                    GameTextForPlayer(playerid, string, 3000, 1);
                    format(string, sizeof(string), "~r~-%d$", KostiMoney[playerid]);
                    GameTextForPlayer(KostiName[playerid], string, 3000, 1);
                    format(string,sizeof(string), "Выпало: %i",dice1);
                    SetPlayerChatBubble(playerid,string,TEAM_GROVE_COLOR,30.0,10000);
                    format(string,sizeof(string), "Выпало: %i",dice0);
					SetPlayerChatBubble(KostiName[playerid],string,COLOR_ORANGE,30.0,10000);
					format(string, sizeof(string), "{FFFFFF}%s{FF3366} и {FFFFFF}%s{FF3366} бросили кости. Результат: {CC9900}%i{FFFFFF} : {CC9900}%i",kname,pnamee,dice0,dice1);
					SendClientMessage(playerid, 0xFF3366FF, string);
					format(string, sizeof(string), "{FFFFFF}%s{FF3366} и {FFFFFF}%s{FF3366} бросили кости. Результат: {CC9900}%i{FFFFFF} : {CC9900}%i",kname,pnamee,dice0,dice1);
					SendClientMessage(KostiName[playerid], 0xFF3366FF, string);
                    dicetime = gettime() + 5;
                    ZapretDice[playerid] = 0;
                    ZapretDice[KostiName[playerid]] = 0;
                    KostiMoney[playerid] = 0;
                    KostiName[playerid] = 999;
                    switch(kaligmaf1)
					{
						case 5:
						{
							MafiaBank[0][nLcn]+=stavka/50;
						}
						case 6:
						{
							MafiaBank[0][nYakuza]+=stavka/50;
						}
						case 14:
						{
							MafiaBank[0][nRm]+=stavka/50;
						}
					}
                }
                if(dice0 == dice1)
                {
                    new stavka = KostiMoney[playerid]+KostiMoney[KostiName[playerid]];
                    SendClientMessage(playerid, COLOR_ORANGE, "Игра закончилась в ничью!");
                    SendClientMessage(KostiName[playerid], COLOR_ORANGE, "Игра закончилась в ничью!");
                    format(string,sizeof(string), "Выпало: %i",dice1);
                    SetPlayerChatBubble(playerid,string,COLOR_LIGHTBLUE,30.0,10000);
                    format(string,sizeof(string), "Выпало: %i",dice0);
                    SetPlayerChatBubble(KostiName[playerid],string,COLOR_LIGHTBLUE,30.0,10000);
                    format(string, sizeof(string), "{FFFFFF}%s{FF3366} и {FFFFFF}%s{FF3366} бросили кости. Результат: {CC9900}%i{FFFFFF} : {CC9900}%i",kname,pnamee,dice0,dice1);
					SendClientMessage(playerid, 0xFF3366FF, string);
					format(string, sizeof(string), "{FFFFFF}%s{FF3366} и {FFFFFF}%s{FF3366} бросили кости. Результат: {CC9900}%i{FFFFFF} : {CC9900}%i",kname,pnamee,dice0,dice1);
					SendClientMessage(KostiName[playerid], 0xFF3366FF, string);
                    dicetime = gettime() + 5;
                    ZapretDice[playerid] = 0;
                    ZapretDice[KostiName[playerid]] = 0;
                    KostiMoney[playerid] = 0;
                    KostiName[playerid] = 999;
                    switch(kaligmaf1)
					{
						case 5:
						{
							MafiaBank[0][nLcn]+=stavka/50;
						}
						case 6:
						{
							MafiaBank[0][nYakuza]+=stavka/50;
						}
						case 14:
						{
							MafiaBank[0][nRm]+=stavka/50;
						}
					}
				}
	        }
	        else
	        {
	                SendClientMessage(playerid, -1, "Вам никто не предлагал бросить кости");
	                return true;
	        }
	        return true;
		}
	}
	if(newkeys == 131072)
	{
        if(KostiName[playerid] < 999)
        {
            KostiName[playerid] = 999;
            KostiMoney[playerid] = 0;
        }
	}
	if(newkeys & KEY_SPRINT)
	{
		if(Upravakazino[playerid] == true)
		{
			switch(NumberFishka[playerid])
			{
				case 0..36:
				{
					RuletTip[playerid]= NumberFishka[playerid]+1;
				}
				case 45,46:
				{
					RuletTip[playerid] = NumberFishka[playerid]-7;
				}
				case 40..42:
				{
					RuletTip[playerid] = NumberFishka[playerid];
				}
				case 43:
				{
					RuletTip[playerid] = 43;
				}
				case 48:
				{
					RuletTip[playerid] = 44;
				}
				case 44:
				{
					RuletTip[playerid] = 45;
				}
				case 47:
				{
					RuletTip[playerid] = 46;
				}
				case 37..39:
				{
					RuletTip[playerid] = NumberFishka[playerid]+10;
				}
			}
			if(RuletkaStol[playerid]==1)
			{
				format(string,sizeof(string), "Можно поставить от 200 до 1000000 вирт");
				ShowPlayerDialog(playerid,5576,DIALOG_STYLE_INPUT,"Введите сумму ставки",string,"Играть","Назад");
			}
			else
			{
   				format(string,sizeof(string), "Можно поставить от 200 до 1000000 вирт");
				ShowPlayerDialog(playerid,5576,DIALOG_STYLE_INPUT,"Введите сумму ставки",string,"Играть","Назад");
			}
		}
	}
	if(newkeys == 16)
	{
		if(SelectCharPlace[playerid] != 0)
		{
			TogglePlayerControllable(playerid, 0);
			if(PlayerInfo[playerid][pMember] > 0)
			{
				ShowMenuForPlayer(ChoseSkin,playerid);
			}
			if(PlayerInfo[playerid][pMember] == 0)
			{
				if(PlayerInfo[playerid][pSex] == 1)
				{
					ShowMenuForPlayer(skinshopmagaz[0],playerid);
				}
				if(PlayerInfo[playerid][pSex] == 2)
				{
					ShowMenuForPlayer(skinshopmagaz[1],playerid);
				}
 			}
			if(PlayerInfo[playerid][pTut] == 0)
			{
				if(PlayerInfo[playerid][pSex] == 1)
				{
					ShowMenuForPlayer(bomj[0],playerid);
				}
				if(PlayerInfo[playerid][pSex] == 2)
				{
					ShowMenuForPlayer(bomj[1],playerid);
				}
			}
		}
	}
	if(newkeys & KEY_SPRINT && newkeys & KEY_JUMP)
	{
	    if(!IsPlayerInAnyVehicle(playerid))
	    {
	        if(times[playerid] == true)
			{
				SetTimerEx("AntiBunny", 850,false, "i",playerid);
	        }
	    }
	}
	if(newkeys & KEY_SPRINT && newkeys & KEY_SECONDARY_ATTACK)
	{
		if(IsAAntidm(playerid))
		{
			if(!IsPlayerInAnyVehicle(playerid))
			{
			    new dmname[MAX_PLAYER_NAME];
			    GetPlayerName(playerid,dmname,sizeof(dmname));
				if(AntiDM[playerid] == 5)
				{
					format(string,sizeof(string),"Игрок %s был кикнут с сервера. Причина: DM в Зеленой зоне.",dmname);
					SendClientMessageToAll(COLOR_LIGHTRED,string);
					AntiDM[playerid] = 0;
					FixKickedPlayer[playerid] = 1;
				}
			    else
			    {
					if(PlayerInfo[playerid][pAdmin] == 0)
					{
				        AntiDM[playerid] += 1;
					    format(string,sizeof(string),"Это Anti DM зона, здесь драться запрещено!\nЕсли уровень предупреждений достигнет максимального , вас кикнет с сервера!\nПредупреждений: %d/5",AntiDM[playerid]);
					    ShowPlayerDialog(playerid,165,DIALOG_STYLE_MSGBOX,"AntiDM",string,"Ок","");
		                ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,3000,1);
						return true;
					}
				}
			}
		}
	}
	if(newkeys == KEY_CROUCH)
	{
		if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19 || proverkaforma[playerid] == 1)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerToPoint(8.0,playerid,290.2172,1822.6295,17.6406))
				{
					if (GetPlayerState(playerid) == 2)
					{
						if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 416 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 432 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 433)
						{
							SendClientMessage(playerid,COLOR_GREY, "Попробуйте в объезд!");
							return true;
						}
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, 282.0428, 1822.5503, 17.6406);
						TelePos[playerid][0] = 0.0;
						TelePos[playerid][1] = 0.0;
					}
				}
				else if(PlayerToPoint(8.0,playerid,282.0428,1822.5503,17.6406))
				{
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 416 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 432 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 433)
					{
						SendClientMessage(playerid,COLOR_GREY, "Попробуйте в объезд!");
						return true;
					}
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 290.2172,1822.6295,17.6406);
					TelePos[playerid][0] = 0.0;
					TelePos[playerid][1] = 0.0;
					return true;
				}
			}
		}
	}
	if(newkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK)
	{
		if(IsAMafia(playerid))
		{
			new giveplayerid;
			if(GetPlayerState(playerid)!=PLAYER_STATE_ONFOOT) return true;
			if(GetPlayerState(giveplayerid)!=PLAYER_STATE_ONFOOT) return true;
			giveplayerid = GetClosestPlayer(playerid);
			new Float:health;
			GetPlayerHealth(giveplayerid,health);
			if(ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PlayerInfo[playerid][pMember] == 6)
				{
					if(KrishaOffer[giveplayerid] < 999)
					{
						if(health <= 25 && PlayerInfo[giveplayerid][pJob] != 0)
						{
							SendClientMessage(playerid,COLOR_GREEN, "Вы избили должника до 25 хп, крыша была автоматически установлена!");
							PlayerInfo[giveplayerid][pMafiaRoof] = 6;
							KrishaOffer[giveplayerid] = 999;
							return true;
						}
					}
				}
			}
			if(ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PlayerInfo[playerid][pMember] == 5)
				{
					if(KrishaOffer[giveplayerid] < 999)
					{
						if(health <= 25 && PlayerInfo[giveplayerid][pJob] != 0)
						{
							SendClientMessage(playerid,COLOR_GREEN, "Вы избили должника до 25 хп, крыша была автоматически установлена!");
							PlayerInfo[giveplayerid][pMafiaRoof] = 5;
							KrishaOffer[giveplayerid] = 999;
							return true;
						}
					}
				}
			}
			if(PlayerInfo[playerid][pMember] == 14)
			{
				if(KrishaOffer[giveplayerid] < 999)
				{
					if(health <= 25 && PlayerInfo[giveplayerid][pJob] != 0)
					{
						SendClientMessage(playerid,COLOR_GREEN, "Вы избили должника до 25 хп, крыша была автоматически установлена!");
						PlayerInfo[giveplayerid][pMafiaRoof] = 14;
						KrishaOffer[giveplayerid] = 999;
						return true;
					}
				}
			}
		}
	}
	if(newkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK)
	{
		if(IsAMafia(playerid))
		{
			new giveplayerid;
			if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return true;
			if(GetPlayerState(giveplayerid) != PLAYER_STATE_ONFOOT) return true;
			giveplayerid = GetClosestPlayer(playerid);
			new Float:health;
			GetPlayerHealth(giveplayerid,health);
			if(ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PlayerInfo[giveplayerid][pMafiaRoof] == 6)
				{
					if(health <= 25 && PlayerInfo[giveplayerid][pUseMafiaRoof] != 0)
					{
						if(PlayerInfo[giveplayerid][pDebt] < 50) return SendClientMessage(playerid,COLOR_GREY, "Он/Она еще ни чего не заработал(а)!");
						SendClientMessage(playerid,COLOR_GREEN, "Вы избили должника до 25 хп, долг был выбит");
						MafiaBank[0][nYakuza]+=PlayerInfo[giveplayerid][pDebt];
						PlayerInfo[giveplayerid][pDebt] = 0;
						PlayerInfo[giveplayerid][pUseMafiaRoof] = 0;
						return true;
					}
				}
			}
			if(ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PlayerInfo[giveplayerid][pMafiaRoof] == 5)
				{
					if(health <= 25 && PlayerInfo[giveplayerid][pUseMafiaRoof] != 0)
					{
						if(PlayerInfo[giveplayerid][pDebt] < 50) return SendClientMessage(playerid,COLOR_GREY, "Он/Она еще ни чего не заработал(а)!");
						SendClientMessage(playerid,COLOR_GREEN, "Вы избили должника до 25 хп, долг был выбит");
						MafiaBank[0][nLcn]+=PlayerInfo[giveplayerid][pDebt];
						PlayerInfo[giveplayerid][pDebt] = 0;
						PlayerInfo[giveplayerid][pUseMafiaRoof] = 0;
						return true;
					}
				}
			}
			if(ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PlayerInfo[giveplayerid][pMafiaRoof] == 14)
				{
					if(health <= 25 && PlayerInfo[giveplayerid][pUseMafiaRoof] != 0)
					{
						if(PlayerInfo[giveplayerid][pDebt] < 50) return SendClientMessage(playerid,COLOR_GREY, "Он/Она еще ни чего не заработал(а)!");
						SendClientMessage(playerid,COLOR_GREEN, "Вы избили должника до 25 хп, долг был выбит");
						MafiaBank[0][nRm]+=PlayerInfo[giveplayerid][pDebt];
						PlayerInfo[giveplayerid][pDebt] = 0;
						PlayerInfo[giveplayerid][pUseMafiaRoof] = 0;
						return true;
					}
				}
			}
		}
	}
	if(newkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK)
	{
		if(PlayerToPoint(1.0,playerid,768.9395,14.4115,1000.6994))
		{
			if(PlayerInfo[playerid][pBoxstyle] == 1)
			{
				if(PlayerInfo[playerid][pBoxSkill] >= 200)
				{
					if(PlayerInfo[playerid][pBoxSkill] == 200)
					{
						SendClientMessage(playerid, COLOR_GREEN, "Вы научились новому стилю боя. Для его включения введите /box 1");
					}
					if(PlayerInfo[playerid][pBoxSkill] >= 200) return SendClientMessage(playerid, COLOR_GREY, "Вы уже владеете данным стилем искусства");
		  		 	SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
		  		 	PlayerInfo[playerid][pBoxSkill] += 1;
		            format(string, sizeof(string), "~g~%d/200", PlayerInfo[playerid][pBoxSkill]);
					GameTextForPlayer(playerid, string, 2000, 4);
		   			return true;
  		 		}
              	PlayerInfo[playerid][pBoxSkill] += 1;
            	format(string, sizeof(string), "~g~%d/200", PlayerInfo[playerid][pBoxSkill]);
				GameTextForPlayer(playerid, string, 2000, 4);
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
    			return true;
			}
			else
			{
				return true;
			}
		}
	}
	if(newkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK)
	{
		if(PlayerToPoint(1.0,playerid,767.1391,-3.5077,1000.6994))
		{
			if(PlayerInfo[playerid][pKickstyle] == 1)
			{
		   	 	if(PlayerInfo[playerid][pKickboxSkill] >= 200)
				{
					if(PlayerInfo[playerid][pKickboxSkill] == 200)
					{
						SendClientMessage(playerid, COLOR_GREEN, "Вы научились новому стилю боя. Для его включения введите /kickbox 1");
					}
					if(PlayerInfo[playerid][pKickboxSkill] >= 200) return SendClientMessage(playerid, COLOR_GREY, "Вы уже владеете данным стилем искусства");
		  		 	PlayerInfo[playerid][pKickboxSkill] += 1;
		            format(string, sizeof(string), "~g~%d/200", PlayerInfo[playerid][pKickboxSkill]);
					GameTextForPlayer(playerid, string, 2000, 4);
					SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
		   			return true;
  		 		}
              	PlayerInfo[playerid][pKickboxSkill] += 1;
                format(string, sizeof(string), "~g~%d/200", PlayerInfo[playerid][pKickboxSkill]);
				GameTextForPlayer(playerid, string, 2000, 4);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
				return true;
			}
			else
			{
				return true;
			}
		}
	}
	if(newkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK)
	{
		if(PlayerToPoint(1.0,playerid,771.1103,14.3903,1000.6994))
		{
			if(PlayerInfo[playerid][pKstyle] == 1 )
			{
				if(PlayerInfo[playerid][pKongfuSkill] >= 200)
				{
					if(PlayerInfo[playerid][pKongfuSkill] == 200)
					{
						SendClientMessage(playerid, COLOR_GREEN, "Вы научились новому стилю боя. Для его включения введите /kongfu 1");
					}
					if(PlayerInfo[playerid][pKongfuSkill] >= 200) return SendClientMessage(playerid, COLOR_GREY, "Вы уже владеете данным стилем искусства");
	  		      	PlayerInfo[playerid][pKongfuSkill] += 1;
	               	format(string, sizeof(string), "~g~%d/200", PlayerInfo[playerid][pKongfuSkill]);
					GameTextForPlayer(playerid, string, 2000, 4);
					SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
					return true;
				}
		     	PlayerInfo[playerid][pKongfuSkill] += 1;
		  		format(string, sizeof(string), "~g~%d/200", PlayerInfo[playerid][pKongfuSkill]);
				GameTextForPlayer(playerid, string, 2000, 4);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
				return true;
	        }
	        else
			{
				return true;
			}
		}
	}
	if(newkeys & KEY_FIRE || (newkeys & KEY_SPRINT && newkeys & KEY_FIRE))
	{
		if(IsAAntidm(playerid))
		{
			if(!IsPlayerInAnyVehicle(playerid))
			{
			    new dmname[MAX_PLAYER_NAME];
			    GetPlayerName(playerid,dmname,sizeof(dmname));
				if(AntiDM[playerid] == 5)
				{
					format(string,sizeof(string),"Игрок %s был кикнут с сервера. Причина: DM в Зеленой зоне.",dmname);
					SendClientMessageToAll(COLOR_LIGHTRED,string);
					AntiDM[playerid] = 0;
					FixKickedPlayer[playerid] = 1;
				}
			    else
			    {
					if(PlayerInfo[playerid][pAdmin] == 0)
					{
				        AntiDM[playerid] += 1;
					    format(string,sizeof(string),"Это Anti DM зона, здесь драться запрещено!\nЕсли уровень предупреждений достигнет максимального , вас кикнет с сервера!\nПредупреждений: %d/5",AntiDM[playerid]);
					    ShowPlayerDialog(playerid,165,DIALOG_STYLE_MSGBOX,"AntiDM",string,"Ок","");
		                ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,3000,1);
						return true;
					}
				}
			}
		}
	}
	if(newkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK)
	{
	    if(IsAAntidm(playerid))
		{
			if(!IsPlayerInAnyVehicle(playerid))
			{
			    new dmname[MAX_PLAYER_NAME];
			    GetPlayerName(playerid,dmname,sizeof(dmname));
				if(AntiDM[playerid] == 5)
				{
					format(string,sizeof(string),"Игрок %s был кикнут с сервера. Причина: DM в Зеленой зоне.",dmname);
					SendClientMessageToAll(COLOR_LIGHTRED,string);
					AntiDM[playerid] = 0;
					FixKickedPlayer[playerid] = 1;
				}
			    else
			    {
					if(PlayerInfo[playerid][pAdmin] == 0)
					{
				        AntiDM[playerid] += 1;
					    format(string,sizeof(string),"Это Anti DM зона, здесь драться запрещено!\nЕсли уровень предупреждений достигнет максимального , вас кикнет с сервера!\nПредупреждений: %d/5",AntiDM[playerid]);
					    ShowPlayerDialog(playerid,165,DIALOG_STYLE_MSGBOX,"AntiDM",string,"Ок","");
		                ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,3000,1);
						return true;
					}
				}
			}
		}
	}
	if(newkeys == KEY_SUBMISSION)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			OnPlayerCommandText(playerid, "/en");
		}
	}
	if((newkeys & KEY_SPRINT && newkeys & KEY_JUMP))
	{
 		if(Works[playerid] == true && JobCP[playerid] == 2)
		{
			Bags[playerid] = 1;
			if(IsPlayerInRangeOfPoint(playerid,2.0,2230.3528,-2286.1353,14.3751)) return true;
			SendClientMessage(playerid,COLOR_RED, "Вы уронили мешок!");
			DisablePlayerCheckpoint(playerid);
			ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,1,1);
			if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
			SetPlayerCheckpoint(playerid,2230.3528,-2286.1353,14.3751,1.5);
			JobCP[playerid] = 1;
			return true;
		}
	}
 	if((newkeys & KEY_JUMP) && !(oldkeys & KEY_JUMP))
	{
		if(Works[playerid] == true && JobCP[playerid] == 2)
		{
			Bags[playerid] = 1;
		    if(IsPlayerInRangeOfPoint(playerid,2.0,2230.3528,-2286.1353,14.3751)) return true;
			SendClientMessage(playerid,COLOR_RED, "Вы уронили мешок!");
			DisablePlayerCheckpoint(playerid);
			ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,1,1);
			if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
			SetPlayerCheckpoint(playerid,2230.3528,-2286.1353,14.3751,1.5);
			JobCP[playerid] = 1;
			return true;
		}
	}
	if(newkeys & KEY_SECONDARY_ATTACK || (newkeys & KEY_SUBMISSION && newkeys & KEY_SECONDARY_ATTACK))
	{
	    if(Works[playerid] == true && JobCP[playerid] == 2)
		{
			Bags[playerid] = 1;
		    if(IsPlayerInRangeOfPoint(playerid,2.0,2230.3528,-2286.1353,14.3751)) return true;
			SendClientMessage(playerid,COLOR_RED, "Вы уронили мешок!");
			DisablePlayerCheckpoint(playerid);
			ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,1,1);
			if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
			SetPlayerCheckpoint(playerid,2230.3528,-2286.1353,14.3751,1.5);
			JobCP[playerid] = 1;
			return true;
		}
	}
	if(newkeys & KEY_FIRE)
	{
	    if(Works[playerid] == true && JobCP[playerid] == 2)
		{
			Bags[playerid] = 1;
		    if(IsPlayerInRangeOfPoint(playerid,2.0,2230.3528,-2286.1353,14.3751)) return true;
	        SendClientMessage(playerid,COLOR_RED, "Вы уронили мешок!");
			DisablePlayerCheckpoint(playerid);
			ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,1,1);
			if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
			SetPlayerCheckpoint(playerid,2230.3528,-2286.1353,14.3751,1.5);
			JobCP[playerid] = 1;
			return true;
		}
	}
	if(newkeys == 1024) // Банкомат //IsABankomat(playerid) // if(PlayerToPoint(3.0,playerid,1395.4872,-1690.9338,13.6929))
	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
			if(IsABankomat(playerid))
			{
				OnPlayerCommandText(playerid,"/atm");
				return true;
			}
		}
	}
	if(newkeys == 1024)
	{
	    for(new i = 0; i < sizeof(HouseInfo); i++)
		{
	        if(PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
	        {
	            if(GetPlayerVirtualWorld(playerid) == i+50)
				{
					ShowPlayerDialog(playerid,10230,DIALOG_STYLE_MSGBOX, "Выход", "Куда желаете выйти?", "Улица", "Гараж");
				}
			}
		}
	}
	if(newkeys == 1024)
	{
	    if(PlayerToPoint(3,playerid,-692.2068,939.3858,13.6328))
		{
			OnPlayerCommandText(playerid,"/hitmask");
		}
	}
	if(newkeys == 16)
	{
		if(IsAFoods(playerid))
		{
			ClearAnimations(playerid, 1);
			SendClientMessage(playerid,COLOR_RED, "Автомат сломан");
			return true;
		}
	}
	if(newkeys & KEY_SPRINT && newkeys & KEY_JUMP)
	{
	    if(IsAGang(playerid))
	    {
	        if(usemats[playerid] == 1)
	        {
				RemovePlayerAttachedObject(playerid,1);
				SendClientMessage(playerid,COLOR_LIGHTRED, "Вы уронили ящик");
				usemats[playerid] = 0;
				usegruz[playerid] = 0;
				return true;
			}
		}
	}
	if(newkeys == KEY_FIRE)
	{
	    if(IsAGang(playerid))
	    {
	        if(usemats[playerid] == 1)
	        {
				RemovePlayerAttachedObject(playerid,1);
				SendClientMessage(playerid,COLOR_LIGHTRED, "Вы уронили ящик");
				usemats[playerid] = 0;
				usegruz[playerid] = 0;
				return true;
			}
		}
	}
	if(newkeys & KEY_SECONDARY_ATTACK || (newkeys & KEY_SUBMISSION && newkeys & KEY_SECONDARY_ATTACK))
	{
	    if(IsAGang(playerid))
	    {
	        if(usemats[playerid] == 1)
	        {
				RemovePlayerAttachedObject(playerid,1);
				SendClientMessage(playerid,COLOR_LIGHTRED, "Вы уронили ящик");
				usemats[playerid] = 0;
				usegruz[playerid] = 0;
				return true;
			}
		}
	}
	if(newkeys == 2) // IDINAHUY
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
			if(PlayerToPoint(10.0,playerid,-710.3568,964.9134,12.4041))
			{
			    OnPlayerCommandText(playerid,"/hitopen1");
			}
			else if(PlayerToPoint(10.0,playerid,1547.0994,-1627.2382,13.3828))
			{
			    OnPlayerCommandText(playerid,"/gate");
			}
		}
	}
	return true;
}
public OnVehicleStreamIn(vehicleid, forplayerid)
{
	SetVehicleParamsForPlayer(vehicleid, forplayerid, 0, gCarLock[vehicleid]);
}
public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	if(PlayerInfo[playerid][pMember] == 11)
	{
		if(duty[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вам нужно начать рабочий день в автошколе");
		new listitems[] = " [0] Водительские права\n [1] Лицензия на полёты\n [2] Лицензия на рыболовлю\n [3] Лицензия на вождение водного транспорта\n [4] Лицензия на оружие\n [5] Лицензия на бизнес\n [6] Начать урок\n [7] Завершить урок";
		ShowPlayerDialog(playerid, 7777, DIALOG_STYLE_LIST, "Выдача лицензий", listitems, "Выбрать", "Отмена");
		ChosenPlayer[playerid] = clickedplayerid;
	}
	return true;
}
stock strvalEx(const string[])
{
	if(strlen(string) >= 50) return false;
	return strval(string);
}
stock printr(message[])
{
	FixConsole(message);
	print(message);
	return true;
}
stock GiveMoney(playerid, amount)
{
    PlayerInfo[playerid][pCash] += amount;
    GivePlayerMoney(playerid, amount);
}
stock IsAnAmbulance(carid)
{
	if(carid >= medicssf[0] && carid <= medicssf[7] || carid == medmav || carid >= medicsls[0] && carid <= medicsls[5] || carid >= medicslv[0] && carid <= medicslv[7])
	{
		return true;
	}
	return false;
}
stock CarLic(carid)
{
    switch (GetVehicleModel(carid))
    {
	    case 400..416,418..424,426..429,431..445,449,451,455,456,458,459,461: return true;
	    case 463,466..468,470,471,474,475,477..480,482,483,485,486,489..492,494..496,498..508: return true;
	    case 514..518,521..531,533..537,539..547,549..551,554..562,564..568,572..576,578..583,585..589,596..605,609: return true;
    }
	return false;
}
stock DeleteObjects(playerid)
{
	//== MARIA
	RemoveBuildingForPlayer(playerid, 4024, 1479.8672, -1790.3984, 56.0234, 0.25);
    RemoveBuildingForPlayer(playerid, 4044, 1481.1875, -1785.0703, 22.3828, 0.25);
    RemoveBuildingForPlayer(playerid, 4046, 1479.5234, -1852.6406, 24.5156, 0.25);
    RemoveBuildingForPlayer(playerid, 4047, 1531.6328, -1852.6406, 24.5156, 0.25);
    RemoveBuildingForPlayer(playerid, 4217, 1449.2500, -1852.5703, 22.3672, 0.25);
    RemoveBuildingForPlayer(playerid, 1266, 1482.0859, -1859.9688, 25.0391, 0.25);
    RemoveBuildingForPlayer(playerid, 4170, 1433.9531, -1844.4063, 21.4219, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1456.3984, -1832.5313, 11.9844, 0.25);
    RemoveBuildingForPlayer(playerid, 1260, 1482.0859, -1859.9688, 25.0391, 0.25);
    RemoveBuildingForPlayer(playerid, 4004, 1479.5234, -1852.6406, 24.5156, 0.25);
    RemoveBuildingForPlayer(playerid, 4171, 1503.3984, -1848.3359, 21.4609, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1504.8438, -1832.5313, 11.9844, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1447.9063, -1748.2266, 12.9063, 0.25);
    RemoveBuildingForPlayer(playerid, 4002, 1479.8672, -1790.3984, 56.0234, 0.25);
    RemoveBuildingForPlayer(playerid, 3980, 1481.1875, -1785.0703, 22.3828, 0.25);
    RemoveBuildingForPlayer(playerid, 4003, 1481.0781, -1747.0313, 33.5234, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1516.0000, -1748.6016, 13.0078, 0.25);
    RemoveBuildingForPlayer(playerid, 4048, 1531.6328, -1852.6406, 24.5156, 0.25);
    RemoveBuildingForPlayer(playerid, 1527, 1448.2344, -1755.8984, 14.5234, 0.25);
	//==
    RemoveBuildingForPlayer(playerid, 11654, -681.8750, 965.8906, 11.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -698.9609, 909.6719, 11.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -687.3125, 909.6016, 11.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -710.6094, 909.7422, 11.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -709.3203, 991.1641, 12.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 691, -701.7422, 1006.1328, 11.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 700, -700.6563, 984.1406, 11.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -697.6719, 990.9922, 12.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -686.0234, 990.8203, 11.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -665.5625, 912.9453, 11.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -675.6641, 909.5313, 12.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1223, -656.9297, 915.7578, 10.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 11492, -681.8750, 965.8906, 11.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -656.5781, 974.4688, 11.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -674.3750, 990.6484, 11.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -674.0234, 998.0000, 11.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -662.7266, 990.4766, 11.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 691, -665.8906, 1004.1797, 11.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 691, -652.5547, 999.9063, 11.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -650.1953, 928.1953, 11.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -645.8828, 937.9063, 11.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -645.7109, 949.5547, 11.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -645.5391, 961.2031, 11.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -645.3672, 972.8516, 12.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -645.1953, 984.5000, 12.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -651.0781, 990.3047, 11.9219, 0.25);
	//==============================
    RemoveBuildingForPlayer(playerid, 700, 1240.5547, -1840.0938, 13.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1256.2266, -1839.9766, 12.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1249.5078, -1840.3828, 12.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1235.8359, -1839.8125, 14.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1244.5000, -1839.8125, 14.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1227.5547, -1839.1250, 12.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 4183, 1227.1875, -1820.1250, 14.7266, 0.25);
	//==============================
	RemoveBuildingForPlayer(playerid, 3744, 2193.2578, -2286.2891, 14.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2193.2578, -2286.2891, 14.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3630, 2217.5859, -2284.6641, 15.2344, 0.25);
	//==================== АВТОСАЛОН
	RemoveBuildingForPlayer(playerid, 4025, 1777.8359, -1773.9063, 12.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 4070, 1719.7422, -1770.7813, 23.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 1531, 1724.7344, -1741.5000, 14.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 4215, 1777.5547, -1775.0391, 36.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 3986, 1719.7422, -1770.7813, 23.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 4019, 1777.8359, -1773.9063, 12.5234, 0.25);
	//=============================
	RemoveBuildingForPlayer(playerid, 1411, 347.1953, 1799.2656, 18.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 342.9375, 1796.2891, 18.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 950, -2021.5469, -118.9141, 1034.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2034.8047, -117.4531, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2028.1563, -117.6719, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2028.1563, -117.0391, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2028.1406, -116.4375, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2026.6094, -117.6719, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2025.1250, -117.6719, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2023.4766, -117.6719, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2026.5859, -117.0391, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2025.1250, -117.0391, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2023.4766, -117.0391, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2026.6094, -116.4375, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2025.1563, -116.4375, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2023.4766, -116.4375, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2033.0625, -114.3594, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2028.1563, -115.7813, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2026.6094, -115.7813, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2025.1250, -115.7813, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2023.4766, -115.7813, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 950, -2021.5469, -113.8125, 1034.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 985, 2497.4063, 2777.0703, 11.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 986, 2497.4063, 2769.1094, 11.5313, 0.25);
	//==========================================================================
	RemoveBuildingForPlayer(playerid, 3672, 1889.6563, -2666.0078, 18.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 3672, 1822.7344, -2666.0078, 18.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 3672, 1682.7266, -2666.0078, 18.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 3672, 1617.2813, -2666.0078, 18.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 3672, 1754.1719, -2666.0078, 18.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 3629, 1617.2813, -2666.0078, 18.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 1290, 1649.0625, -2641.4063, 18.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3629, 1682.7266, -2666.0078, 18.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 3629, 1754.1719, -2666.0078, 18.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 3629, 1822.7344, -2666.0078, 18.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 1290, 1855.7969, -2641.4063, 18.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3629, 1889.6563, -2666.0078, 18.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 1290, 1922.2031, -2641.4063, 18.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2273.4609, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2268.7188, 1596.4688, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2273.4609, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2268.7188, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2263.6563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2258.2578, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2253.2344, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2263.6563, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2258.2578, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2253.2344, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2254.1797, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2259.2188, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2264.6250, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2269.6719, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2274.4063, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2274.4063, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2269.6563, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2264.6094, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2259.1875, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2254.1563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1588.0938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1588.5703, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1592.3984, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1592.8750, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2217.0156, 1602.8125, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2217.5469, 1602.7969, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2217.0234, 1603.9297, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1835, 2217.0156, 1605.0469, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2217.0313, 1603.9219, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2217.5469, 1603.8984, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2217.5469, 1603.9141, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 1834, 2217.5469, 1605.0391, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1614.2422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1614.7188, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1618.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1619.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1588.0938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1588.0781, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1588.6016, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1588.5703, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1588.3359, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1589.1875, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2242.3672, 1589.1875, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1592.3828, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1592.9063, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1592.6406, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1592.3984, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1592.8750, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1594.7578, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2242.3672, 1594.7578, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2220.6719, 1602.8125, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2221.2031, 1602.7969, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2230.3750, 1602.7500, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2241.3125, 1602.7500, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2220.6797, 1603.9297, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2221.2031, 1603.8984, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2220.6875, 1603.9219, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2221.2031, 1603.9141, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2243.1250, 1604.4375, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2232.1875, 1604.4375, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2239.4297, 1604.4531, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2228.4922, 1604.4531, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1834, 2221.2031, 1605.0391, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1835, 2220.6719, 1605.0469, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2241.3125, 1606.2734, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2230.3750, 1606.2734, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1614.2266, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1614.2422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1614.4844, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1614.7500, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1614.7188, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1614.5938, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2241.4453, 1614.5547, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1618.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1618.5625, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1619.0859, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1619.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1618.8203, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1619.6563, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2241.4453, 1619.6094, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 2252.0313, 1584.4219, 1007.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 2261.6328, 1584.4297, 1007.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2264.6094, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2263.6563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2258.2578, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2253.2344, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2259.1875, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2254.1563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2258.2578, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2263.6563, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2253.2344, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2254.1797, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2259.2188, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2264.6250, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2253.1250, 1609.6406, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1563, 1609.6016, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2257.2422, 1609.6406, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2255.2109, 1609.8750, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2253.1016, 1610.1172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2257.2500, 1610.1172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1875, 1610.1250, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2253.1016, 1614.1641, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2253.1250, 1613.6875, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1563, 1613.6484, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2257.2500, 1614.1641, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2257.2422, 1613.6875, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1875, 1614.1719, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2255.2109, 1613.9141, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2253.1250, 1617.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2257.2422, 1617.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1563, 1617.5469, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2255.2109, 1617.8125, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2253.1016, 1618.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2257.2500, 1618.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1875, 1618.0703, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 2271.7266, 1584.4219, 1007.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2268.7188, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2269.6563, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2268.7188, 1596.4688, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2269.6719, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2269.2578, 1604.5938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2269.7344, 1604.6172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2269.7734, 1606.6484, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2269.2578, 1608.7422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2269.2500, 1606.6797, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2269.7344, 1608.7344, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2269.5078, 1606.7031, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2273.4609, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2274.4063, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2273.4609, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2274.4063, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2273.2969, 1606.6797, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2273.3047, 1604.5938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2273.3047, 1608.7422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2273.5469, 1606.7031, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2273.8203, 1606.6484, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2273.7813, 1604.6172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2273.7813, 1608.7344, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 966, -2436.8516, 495.4531, 28.9531, 0.25);// FBI
	RemoveBuildingForPlayer(playerid, 967, -2438.7266, 495.0078, 29.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 968, -2436.8125, 495.4688, 29.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1098.4141, -1725.7422, 12.1563, 0.25); // АШ
	RemoveBuildingForPlayer(playerid, 16273, 422.9141, 1513.4141, 10.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 3427, 422.9141, 1513.4141, 10.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 1092.5938, -1717.1016, 15.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 1123.9141, -1717.2344, 15.9297, 0.25);
	
}
stock Avtosalon()
{
   //Isso no Topo Do Script
	new Pilastra[28];
	new ChaoTerrio[8];
	new VagaCarrosSalao[32];
	new ChaoTeto[20];
	new Rampa[4];
	new TextoConce[4];
	new ChaoExterno[2];

	//ISSO NA OnGameModeInit ou OnFilterScriptInit
	ChaoTerrio[0] = CreateObject(3113, 1802.2002, -1758.7002, 12.1, 0, 284.996, 0, 200.0);
	ChaoTerrio[1] = CreateObject(3113, 1802.2002, -1781.2998, 12.1, 0, 284.991, 0, 200.0);
	ChaoTerrio[2] = CreateObject(3113, 1791, -1758.7002, 12.1, 0, 284.991, 0, 200.0);
	ChaoTerrio[3] = CreateObject(3113, 1779.7998, -1758.7002, 12.1, 0, 284.991, 0, 200.0);
	ChaoTerrio[4] = CreateObject(3113, 1791, -1781.2998, 12.1, 0, 284.991, 0, 200.0);
	ChaoTerrio[5] = CreateObject(3113, 1779.7998, -1781.2998, 12.1, 0, 284.991, 0, 200.0);
	ChaoTerrio[6] = CreateObject(3113, 1768.5996, -1758.7002, 12.1, 0, 284.991, 0, 200.0);
	ChaoTerrio[7] = CreateObject(3113, 1768.5996, -1781.2998, 12.1, 0, 284.991, 0, 200.0);
	for(new TexturizarID; TexturizarID < 8; TexturizarID++){SetObjectMaterial(ChaoTerrio[TexturizarID], 0, 2774, "airp_prop", "cj_white_wall2", 0xFFFFFFFF);}

	Pilastra[0] = CreateObject(2774, 1790.7002, -1792.7002, 15.1, 0, 179.995, 0, 200.0);
	Pilastra[1] = CreateObject(2774, 1805.9004, -1747.7998, 15.1, 0, 179.995, 0, 200.0);
	Pilastra[2] = CreateObject(2774, 1774.7998, -1792.7002, 15.1, 0, 179.995, 0, 200.0);
	Pilastra[3] = CreateObject(2774, 1761.4004, -1792.7002, 15.1, 0, 179.995, 0, 200.0);
	Pilastra[4] = CreateObject(2774, 1761.4004, -1763.5, 15.1, 0, 179.995, 0, 200.0);
	Pilastra[5] = CreateObject(2774, 1761.4004, -1778.0996, 15.1, 0, 179.995, 0, 200.0);
	Pilastra[6] = CreateObject(2774, 1805.9004, -1792.7002, 15.1, 0, 179.995, 0, 200.0);
	Pilastra[7] = CreateObject(2774, 1790.7002, -1747.7998, 15.1, 0, 179.995, 0, 200.0);
	Pilastra[8] = CreateObject(2774, 1774.7998, -1747.7998, 15.1, 0, 179.995, 0, 200.0);
	Pilastra[9] = CreateObject(2774, 1761.4, -1747.8, 15.1, 0, 179.995, 0, 200.0);
	Pilastra[10] = CreateObject(2774, 1805.9004, -1763.5, 15.1, 0, 179.995, 0, 200.0);
	Pilastra[11] = CreateObject(2774, 1805.9004, -1778.0996, 15.1, 0, 179.995, 0, 200.0);
	Pilastra[12] = CreateObject(2774, 1773.7002, -1747.7998, 19.2, 0, 270, 179.995, 200.0);
	Pilastra[13] = CreateObject(2774, 1793.5996, -1747.9004, 19.2, 0, 270, 359.995, 200.0);
	Pilastra[14] = CreateObject(2774, 1793.5, -1792.5996, 19.2, 0, 270, 359.984, 200.0);
	Pilastra[15] = CreateObject(2774, 1773.7002, -1792.5996, 19.2, 0, 270, 179.995, 200.0);
	Pilastra[16] = CreateObject(2774, 1805.7998, -1780.2998, 19.2, 0, 270, 269.989, 200.0);
	Pilastra[17] = CreateObject(2774, 1805.7998, -1760.0996, 19.2, 0, 270, 89.984, 200.0);
	Pilastra[18] = CreateObject(2774, 1761.5, -1760.0996, 19.2, 0, 270, 89.984, 200.0);
	Pilastra[19] = CreateObject(2774, 1761.4004, -1780.4004, 19.2, 0, 270, 269.989, 200.0);
	Pilastra[20] = CreateObject(2774, 1761.5, -1760.1, 26.7, 0, 270, 89.984, 200.0);
	Pilastra[21] = CreateObject(2774, 1761.4004, -1780.4004, 26.7, 0, 270, 269.989, 200.0);
	Pilastra[22] = CreateObject(2774, 1773.7002, -1792.5996, 26.7, 0, 270, 179.995, 200.0);
	Pilastra[23] = CreateObject(2774, 1793.5, -1792.5996, 26.7, 0, 270, 359.984, 200.0);
	Pilastra[24] = CreateObject(2774, 1805.7998, -1780.2998, 26.7, 0, 270, 269.989, 200.0);
	Pilastra[25] = CreateObject(2774, 1805.7998, -1760.0996, 26.7, 0, 270, 89.984, 200.0);
	Pilastra[26] = CreateObject(2774, 1793.5996, -1747.9004, 26.7, 0, 270, 359.995, 200.0);
	Pilastra[27] = CreateObject(2774, 1773.7002, -1747.7998, 26.7, 0, 270, 179.995, 200.0);
	for(new TexturizarID; TexturizarID < 28; TexturizarID++){SetObjectMaterial(Pilastra[TexturizarID], 1, 2774, "airp_prop", "cj_white_wall2", 0xFF000080), SetObjectMaterial(Pilastra[TexturizarID], 2, 2774, "none", "none", 0xFF000080), SetObjectMaterial(Pilastra[TexturizarID], 0, 2774, "none", "none", 0xFF000080);}

	ChaoTeto[0] = CreateObject(7191, 1764.2002, -1769.9004, 19.6, 0, 90, 0, 200.0);
	ChaoTeto[1] = CreateObject(7191, 1768.1, -1769.9, 19.6, 0, 89.995, 0, 200.0);
	ChaoTeto[2] = CreateObject(7191, 1772, -1769.9, 19.6, 0, 89.995, 0, 200.0);
	ChaoTeto[3] = CreateObject(7191, 1775.9, -1769.9, 19.6, 0, 89.995, 0, 200.0);
	ChaoTeto[4] = CreateObject(7191, 1779.8, -1769.9, 19.6, 0, 89.995, 0, 200.0);
	ChaoTeto[5] = CreateObject(7191, 1783.7002, -1769.9004, 19.6, 0, 89.995, 0, 200.0);
	ChaoTeto[6] = CreateObject(7191, 1787.5996, -1769.7998, 19.6, 0, 89.995, 0, 200.0);
	ChaoTeto[7] = CreateObject(7191, 1791.5, -1769.7998, 19.6, 0, 89.995, 0, 200.0);
	ChaoTeto[8] = CreateObject(7191, 1804.4, -1770.5, 19.6, 0, 89.995, 180, 200.0);
	ChaoTeto[9] = CreateObject(7191, 1764.2, -1769.9, 26.6, 0, 90, 0, 200.0);
	ChaoTeto[10] = CreateObject(7191, 1768.0996, -1769.9004, 26.6, 0, 89.995, 0, 200.0);
	ChaoTeto[11] = CreateObject(7191, 1772, -1769.9004, 26.6, 0, 89.995, 0, 200.0);
	ChaoTeto[12] = CreateObject(7191, 1775.9004, -1769.9004, 26.6, 0, 89.995, 0, 200.0);
	ChaoTeto[13] = CreateObject(7191, 1779.7998, -1769.9004, 26.6, 0, 89.995, 0, 200.0);
	ChaoTeto[14] = CreateObject(7191, 1783.7002, -1769.9004, 26.6, 0, 89.995, 0, 200.0);
	ChaoTeto[15] = CreateObject(7191, 1787.5996, -1769.7998, 26.6, 0, 89.995, 0, 200.0);
	ChaoTeto[16] = CreateObject(7191, 1791.5, -1769.7998, 26.6, 0, 89.995, 0, 200.0);
	ChaoTeto[17] = CreateObject(7191, 1803.2, -1770.5, 26.6, 0, 89.995, 179.995, 200.0);
	ChaoTeto[18] = CreateObject(7191, 1795.4, -1769.8, 26.6, 0, 89.995, 0, 200.0);
	ChaoTeto[19] = CreateObject(7191, 1799.3, -1769.8, 26.6, 0, 89.995, 0, 200.0);
	for(new TexturizarID; TexturizarID < 20; TexturizarID++){SetObjectMaterial(ChaoTeto[TexturizarID], 0, 2774, "airp_prop", "cj_white_wall2", 0xFFFFFFFF);}

	Rampa[0] = CreateObject(3095, 1798, -1787.2998, 19.1, 0, 0, 0, 200.0);
	Rampa[1] = CreateObject(3095, 1798, -1778.6, 18, 345.5, 0, 0, 200.0);
	Rampa[2] = CreateObject(3095, 1798, -1769.9004, 15.75, 345.493, 0, 0, 200.0);
	Rampa[3] = CreateObject(3095, 1798, -1761.2998, 13.25, 341.993, 0, 0, 200.0);
	for(new TexturizarID; TexturizarID < 4; TexturizarID++){SetObjectMaterial(Rampa[TexturizarID], 0, 2774, "airp_prop", "cj_white_wall2", 0xFFFFFFFF), SetObjectMaterial(Rampa[TexturizarID], 1, 2774, "airp_prop", "cj_white_wall2", 0xFF000080);}

	VagaCarrosSalao[0] = CreateObject(4084, 1767.5, -1752, 12.7, 0, 90.5, 310, 200.0);
	VagaCarrosSalao[1] = CreateObject(4084, 1765.5, -1759.6, 12.7, 0, 90.5, 69.999, 200.0);
	VagaCarrosSalao[2] = CreateObject(4084, 1777.8, -1752.7, 12.7, 0, 90.5, 339.999, 200.0);
	VagaCarrosSalao[3] = CreateObject(4084, 1787, -1753.1, 12.7, 0, 90.494, 29.994, 200.0);
	VagaCarrosSalao[4] = CreateObject(4084, 1766.2, -1782.6, 12.7, 0, 90.494, 119.995, 200.0);
	VagaCarrosSalao[5] = CreateObject(4084, 1769.4, -1787.7, 12.7, 0, 90.489, 159.993, 200.0);
	VagaCarrosSalao[6] = CreateObject(4084, 1778.6, -1788.2, 12.7, 0, 90.483, 199.988, 200.0);
	VagaCarrosSalao[7] = CreateObject(4084, 1786.5, -1788.2, 12.7, 0, 90.478, 159.984, 200.0);
	VagaCarrosSalao[8] = CreateObject(4084, 1793.7, -1788.5, 12.7, 0, 90.472, 199.983, 200.0);
	VagaCarrosSalao[9] = CreateObject(4084, 1800.4, -1788.8, 12.7, 0, 90.467, 149.979, 200.0);
	VagaCarrosSalao[10] = CreateObject(4084, 1802, -1781.7, 12.7, 0, 90.461, 79.977, 200.0);
	VagaCarrosSalao[11] = CreateObject(4084, 1801.2, -1774, 12.7, 0, 90.461, 109.975, 200.0);
	VagaCarrosSalao[12] = CreateObject(4084, 1766, -1759.6, 19.7, 0, 90.244, 101.994, 200.0);
	VagaCarrosSalao[13] = CreateObject(4084, 1769.3, -1753.3, 19.7, 0, 90.242, 19.99, 200.0);
	VagaCarrosSalao[14] = CreateObject(4084, 1779.5, -1753.4, 19.7, 0, 90.236, 19.984, 200.0);
	VagaCarrosSalao[15] = CreateObject(4084, 1786.3, -1752.8, 19.7, 0, 90.236, 349.984, 200.0);
	VagaCarrosSalao[16] = CreateObject(4084, 1766.2, -1766.7, 19.7, 0, 90.242, 101.992, 200.0);
	VagaCarrosSalao[17] = CreateObject(4084, 1766.3, -1773.7, 19.7, 0, 90.242, 71.992, 200.0);
	VagaCarrosSalao[18] = CreateObject(4084, 1766.3, -1781.5, 19.7, 0, 90.236, 101.988, 200.0);
	VagaCarrosSalao[19] = CreateObject(4084, 1766.5, -1787, 19.7, 0, 90.231, 121.986, 200.0);
	VagaCarrosSalao[20] = CreateObject(4084, 1771.9, -1788.2, 19.7, 0, 90.225, 151.981, 200.0);
	VagaCarrosSalao[21] = CreateObject(4084, 1778.4, -1788, 19.7, 0, 90.22, 191.979, 200.0);
	VagaCarrosSalao[22] = CreateObject(4084, 1785.4, -1787.7, 19.7, 0, 90.214, 161.975, 200.0);
	VagaCarrosSalao[23] = CreateObject(4084, 1778.5, -1765.1, 12.7, 0, 90.494, 69.994, 200.0);
	VagaCarrosSalao[24] = CreateObject(4084, 1789.2, -1772.7, 12.7, 0, 90.494, 111.994, 200.0);
	VagaCarrosSalao[25] = CreateObject(4084, 1780.2, -1778.4, 12.7, 0, 90.489, 141.989, 200.0);
	VagaCarrosSalao[26] = CreateObject(4084, 1771, -1771.2, 12.7, 0, 90.483, 71.987, 200.0);
	VagaCarrosSalao[27] = CreateObject(4084, 1776.9, -1763.9, 19.7, 0, 90.242, 71.992, 200.0);
	VagaCarrosSalao[28] = CreateObject(4084, 1777.7, -1771.4, 19.7, 0, 90.236, 111.988, 200.0);
	VagaCarrosSalao[29] = CreateObject(4084, 1778.5, -1778.9, 19.7, 0, 90.231, 111.984, 200.0);
	VagaCarrosSalao[30] = CreateObject(4084, 1788.9, -1766.2, 19.7, 0, 90.231, 151.984, 200.0);
	VagaCarrosSalao[31] = CreateObject(4084, 1789, -1775.1, 19.7, 0, 90.225, 151.979, 200.0);
	for(new TexturizarID; TexturizarID < 32; TexturizarID++){SetObjectMaterial(VagaCarrosSalao[TexturizarID], 0, 3113, "carrierxr", "ws_shipmetal1", 0xFFFF0000);}

	TextoConce[0] = CreateObject(9527, 1761, -1770.7, 19.2, 0, 0, 270, 200.0);
	TextoConce[1] = CreateObject(9527, 1783, -1793, 19.2, 0, 0, 0, 200.0);
	TextoConce[2] = CreateObject(9527, 1806.2, -1770.5, 19.2, 0, 0, 90, 200.0);
	TextoConce[3] = CreateObject(9527, 1782.1, -1747.3, 19.2, 0, 0, 180, 200.0);
	for(new TexturizarID; TexturizarID < 4; TexturizarID++){SetObjectMaterialText(TextoConce[TexturizarID], "АВТОСАЛОН", 0, OBJECT_MATERIAL_SIZE_256x128, "Arial black", 35, 0, 0xFFFFFFFF, 0xFF0000FF, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);}

	ChaoExterno[0] = CreateObject(3983, 1722.40002, -1775.5, 14.5370, 0, 0, 0);
	ChaoExterno[1] = CreateObject(4012, 1777.4343, -1782.3, 12.6499, 0, 0, 0);
	SetObjectMaterial(ChaoExterno[0], 1, 10936, "stadiumground_sfse", "ws_shipmetal1", 0xFF1C1C1C);
	SetObjectMaterial(ChaoExterno[1], 2, 10936, "stadiumground_sfse", "ws_shipmetal1", 0xFF1C1C1C);

	CreateObject(3858, 1782.7002, -1792.7002, 23, 0, 0, 44.995, 200.0);
	CreateObject(3858, 1798.5996, -1747.7998, 23, 0, 0, 44.995, 200.0);
	CreateObject(3858, 1767.9004, -1792.7002, 23, 0, 0, 44.995, 200.0);
	CreateObject(3858, 1806.0996, -1755.5, 23, 0, 0, 314.995, 200.0);
	CreateObject(3858, 1806.0996, -1770.0996, 23, 0, 0, 314.995, 200.0);
	CreateObject(3858, 1806.0996, -1785.2998, 23, 0, 0, 314.995, 200.0);
	CreateObject(3858, 1798.5996, -1792.4004, 23, 0, 0, 44.995, 200.0);
	CreateObject(3858, 1782.7002, -1747.7998, 23, 0, 0, 44.995, 200.0);
	CreateObject(3858, 1767.9004, -1747.5996, 23, 0, 0, 44.995, 200.0);
	CreateObject(3858, 1761.5996, -1785.2998, 23, 0, 0, 314.995, 200.0);
	CreateObject(3858, 1761.6, -1755.5, 23, 0, 0, 314.995, 200.0);
	CreateObject(3858, 1767.9004, -1747.5996, 15.6, 0, 0, 44.995, 200.0);
	CreateObject(3858, 1782.7002, -1747.7998, 15.6, 0, 0, 44.995, 200.0);
	CreateObject(3858, 1798.5996, -1747.7998, 15.6, 0, 0, 44.995, 200.0);
	CreateObject(3858, 1806.0996, -1755.5, 15.6, 0, 0, 314.995, 200.0);
	CreateObject(3858, 1806.0996, -1770.0996, 15.6, 0, 0, 314.995, 200.0);
	CreateObject(3858, 1806.0996, -1785.2998, 15.6, 0, 0, 314.995, 200.0);
	CreateObject(3858, 1798.5996, -1792.4004, 15.6, 0, 0, 44.995, 200.0);
	CreateObject(3858, 1782.7002, -1792.7002, 15.6, 0, 0, 44.995, 200.0);
	CreateObject(3858, 1767.9004, -1792.7002, 15.6, 0, 0, 44.995, 200.0);
	CreateObject(3858, 1761.5996, -1785.2998, 15.6, 0, 0, 314.995, 200.0);
	CreateObject(3858, 1761.5996, -1755.5, 15.6, 0, 0, 314.995, 200.0);
	CreateObject(3858, 1761.5, -1770.3, 23, 0, 0, 314.995, 200.0);
	CreateObject(996, 1793.2, -1749.4, 20.3, 0, 0, 270, 200.0);
	CreateObject(996, 1793.2002, -1757.5996, 20.3, 0, 0, 270, 200.0);
	CreateObject(996, 1793.2, -1765.8, 20.3, 0, 0, 270, 200.0);
	CreateObject(996, 1793.2, -1774, 20.3, 0, 0, 270, 200.0);
	CreateObject(996, 1802.6, -1749.4, 20.3, 0, 0, 270, 200.0);
	CreateObject(996, 1802.6, -1757.6, 20.3, 0, 0, 270, 200.0);
	CreateObject(996, 1802.6, -1765.8, 20.3, 0, 0, 270, 200.0);
	CreateObject(996, 1802.6, -1774, 20.3, 0, 0, 270, 200.0);
	CreateObject(996, 1802.6, -1782.2, 20.3, 0, 0, 270, 200.0);
	CreateObject(996, 1793.7, -1775.3, 18.4, 0, 345.5, 270, 200.0);
	CreateObject(996, 1802.3, -1775.3, 18.4, 0, 345.498, 270, 200.0);
	CreateObject(996, 1802.3, -1767.3, 16.3, 0, 345.498, 270, 200.0);
	CreateObject(996, 1793.7, -1767.4, 16.3, 0, 345.498, 270, 200.0);
	CreateObject(996, 1793.7, -1759.5, 13.9, 0, 342.998, 270, 200.0);
	CreateObject(996, 1802.3, -1759.4, 13.9, 0, 342.993, 270, 200.0);
	CreateObject(1223, 1760.8, -1747.2, 12.5, 0, 0, 140.75, 200.0);
	CreateObject(1223, 1760.8, -1763.5, 12.5, 0, 0, 179.995, 200.0);
	CreateObject(1223, 1760.8, -1778.1, 12.5, 0, 0, 179.995, 200.0);
	CreateObject(1223, 1760.8, -1793.4, 12.5, 0, 0, 217.995, 200.0);
	CreateObject(1223, 1774.8, -1793.3, 12.5, 0, 0, 269.995, 200.0);
	CreateObject(1223, 1790.8, -1793.3, 12.5, 0, 0, 269.989, 200.0);
	CreateObject(1223, 1806.6, -1793.3, 12.5, 0, 0, 309.989, 200.0);
	CreateObject(1223, 1806.5, -1778, 12.5, 0, 0, 359.989, 200.0);
	CreateObject(1223, 1806.5, -1763.5, 12.5, 0, 0, 359.984, 200.0);
	CreateObject(1223, 1806.5, -1747.1, 12.5, 0, 0, 39.984, 200.0);
	CreateObject(1223, 1790.7, -1747.2, 12.5, 0, 0, 89.984, 200.0);
	CreateObject(1223, 1774.8, -1747.2, 12.5, 0, 0, 89.984, 200.0);
	CreateObject(10183, 1725.5, -1765, 12.7, 359.497, 359.995, 224.991, 200.0);
	CreateObject(10183, 1725.5, -1772.8, 12.6, 359.995, 0.492, 44.989, 200.0);
	CreateObject(10183, 1724.3, -1791.9, 12.6, 359.495, 0.234, 224.233, 200.0);
	CreateObject(10183, 1787.1, -1808.9, 12.6, 359.495, 0.484, 224.235, 200.0);
	CreateObject(1232, 1716, -1742.7998, 15.2, 0, 0, 0, 200.0);
	CreateObject(1232, 1726, -1742.7998, 15.2, 0, 0, 0, 200.0);
	CreateObject(1232, 1736.0996, -1742.7998, 15.2, 0, 0, 0, 200.0);
	CreateObject(1232, 1746.0996, -1742.7998, 15.2, 0, 0, 0, 200.0);
	CreateObject(1232, 1706.0996, -1742.7998, 15.2, 0, 0, 0, 200.0);
	CreateObject(1232, 1704.2, -1795.7, 15.2, 0, 0, 0, 200.0);
	CreateObject(1232, 1714.3, -1796, 15.2, 0, 0, 0, 200.0);
	CreateObject(1232, 1724.3, -1796.2, 15.2, 0, 0, 0, 200.0);
	CreateObject(1232, 1734.3, -1796.3, 15.2, 0, 0, 0, 200.0);
	CreateObject(1232, 1744.2, -1796.5, 15.2, 0, 0, 0, 200.0);
	CreateObject(1231, 1705.2002, -1768.7002, 15.5, 0, 0, 90, 200.0);
	CreateObject(1231, 1715.4, -1768.8, 15.5, 0, 0, 90, 200.0);
	CreateObject(1231, 1725.4, -1768.9, 15.5, 0, 0, 90, 200.0);
	CreateObject(1231, 1735.4, -1769, 15.5, 0, 0, 90, 200.0);
	CreateObject(1231, 1745.4, -1769.1, 15.5, 0, 0, 90, 200.0);
	CreateObject(7662, 1709.3, -1743, 13.4, 0, 0, 270, 200.0);
	CreateObject(7662, 1726.6, -1742.9, 13.4, 0, 0, 270, 200.0);
	CreateObject(7662, 1702.8, -1786.3, 13.4, 0, 0, 0, 200.0);
	CreateObject(7662, 1810.4, -1783.2, 13.4, 0, 0, 0, 200.0);
	CreateObject(7662, 1810.3, -1799.8, 13.4, 0, 0, 0, 200.0);
	CreateObject(620, 1795.2, -1742.6, 12.5, 0, 0, 30.234, 200.0);
	CreateObject(620, 1784, -1742.5, 12.5, 0, 0, 30.234, 200.0);
	CreateObject(620, 1773.5, -1742.6, 12.5, 0, 0, 30.234, 200.0);
	CreateObject(620, 1806.5, -1742.5, 12.5, 0, 0, 30.234, 200.0);
	CreateObject(1698, 1749.9, -1748, 13.5, 0, 0, 220, 150.0);
	CreateObject(3440, 1747.7, -1748.4, 11.2, 0, 0, 0, 200.0);
	CreateObject(1698, 1748.4, -1749.3, 13.5, 0, 0, 219.996, 200.0);
	CreateObject(1698, 1750.4, -1751.7, 13, 339.995, 0, 219.996, 200.0);
	CreateObject(3440, 1749.2, -1747, 11.2, 0, 0, 0, 200.0);
	CreateObject(3440, 1750.7, -1748.8, 11.2, 0, 0, 0, 200.0);
	CreateObject(3440, 1749.1, -1750, 11.2, 0, 0, 0, 200.0);
	CreateObject(1698, 1751.9, -1750.4, 13, 339.994, 0, 219.99, 200.0);
	CreateObject(1698, 1738.8, -1748, 13.5, 0, 0, 179.996, 200.0);
	CreateObject(1698, 1736.8, -1748, 13.5, 0, 0, 179.995, 200.0);
	CreateObject(1698, 1738.8, -1751.1, 13, 339.994, 0, 179.99, 200.0);
	CreateObject(1698, 1736.8, -1751.1, 13, 339.988, 0, 179.989, 200.0);
	CreateObject(3440, 1738.9, -1747, 11.2, 0, 0, 0, 200.0);
	CreateObject(3440, 1738.9, -1749, 11.2, 0, 0, 0, 200.0);
	CreateObject(3440, 1736.8, -1747, 11.2, 0, 0, 0, 200.0);
	CreateObject(3440, 1736.9, -1749.3, 11.2, 0, 0, 0, 200.0);
	CreateObject(1698, 1728.6, -1748.4, 13.5, 0, 0, 179.995, 200.0);
	CreateObject(1698, 1726.7, -1748.4, 13.5, 0, 0, 179.995, 200.0);
	CreateObject(1698, 1726.7, -1751.5, 13, 339.988, 0, 179.989, 200.0);
	CreateObject(1698, 1728.6, -1751.5, 13, 339.988, 0, 179.989, 200.0);
	CreateObject(3440, 1728.8, -1747.4, 11.2, 0, 0, 0, 200.0);
	CreateObject(3440, 1726.7, -1747.3, 11.2, 0, 0, 0, 200.0);
	CreateObject(3440, 1726.7, -1749.6, 11.2, 0, 0, 0, 200.0);
	CreateObject(3440, 1728.6, -1749.5, 11.2, 0, 0, 0, 200.0);
	CreateObject(1698, 1716.9, -1748.1, 13.5, 0, 0, 159.995, 200.0);
	CreateObject(1698, 1718.8, -1748.8, 13.5, 0, 0, 159.994, 200.0);
	CreateObject(1698, 1717.7, -1751.7, 13, 339.988, 0, 159.989, 200.0);
	CreateObject(1698, 1715.8, -1751, 13, 339.988, 0, 159.988, 200.0);
	CreateObject(3440, 1717.3, -1747.2, 11.2, 0, 0, 0, 200.0);
	CreateObject(3440, 1719.2, -1747.7, 11.2, 0, 0, 0, 200.0);
	CreateObject(3440, 1718.3, -1750.1, 11.2, 0, 0, 0, 200.0);
	CreateObject(3440, 1716.4, -1749.4, 11.2, 0, 0, 0, 200.0);
	CreateObject(1698, 1706.2, -1749.1, 13.5, 0, 0, 229.994, 200.0);
	CreateObject(1698, 1707.4, -1747.7, 13.5, 0, 0, 229.993, 200.0);
	CreateObject(1698, 1708.6, -1751.2, 13, 339.988, 0, 229.988, 200.0);
	CreateObject(1698, 1709.8, -1749.7, 13, 339.988, 0, 229.988, 200.0);
	CreateObject(3440, 1706.6, -1747, 11.2, 0, 0, 0, 200.0);
	CreateObject(3440, 1705.2, -1748.3, 11.2, 0, 0, 0, 200.0);
	CreateObject(3440, 1707.1, -1750, 11.2, 0, 0, 0, 200.0);
	CreateObject(3440, 1708.2, -1748.4, 11.2, 0, 0, 0, 200.0);
	CreateObject(2185, 1789.1, -1779.7, 12.8, 0, 0, 270, 200.0);
	CreateObject(2185, 1788.5, -1763.9, 12.8, 0, 0, 270, 200.0);
	CreateObject(2185, 1788.2, -1759.4, 19.7, 0, 0, 270, 200.0);
	CreateObject(1714, 1789.6, -1764.5, 12.8, 0, 0, 284, 200.0);
	CreateObject(1714, 1789.5996, -1764.5, 12.8, 0, 0, 283.997, 200.0);
	CreateObject(1714, 1787.3, -1765.1, 12.8, 0, 0, 103.997, 200.0);
	CreateObject(1714, 1787.2, -1764.3, 12.8, 0, 0, 72.497, 200.0);
	CreateObject(1714, 1787.9, -1780, 12.8, 0, 0, 72.493, 200.0);
	CreateObject(1714, 1787.9004, -1781.0996, 12.8, 0, 0, 104.491, 200.0);
	CreateObject(1714, 1789.5, -1760, 19.8, 0, 0, 270.491, 200.0);
	CreateObject(1714, 1786.9, -1760.2, 19.8, 0, 0, 80.489, 200.0);
	CreateObject(1714, 1786.8, -1759.4, 19.8, 0, 0, 80.486, 200.0);
	CreateObject(1714, 1789.9, -1780.5, 12.8, 0, 0, 304.491, 200.0);
}
stock CreateObjects()
{
    new NRP = CreateObject(7905, 1219.6950, -1812.4197, 24.7378, 0.0000, 0.0000, 7.5369);
	SetObjectMaterialText(NRP, "Arizona RP", 0, 50, "Arial", 20, 1, -65536, 0, 1);
	//== GARAGE
	new tmpobjidg;
	tmpobjidg = CreateDynamicObjectEx(18981,2501.2580566,1073.5030518,-91.1969986,0.0000000,90.0000000,0.0000000,300.000,300.000);//POL
	SetDynamicObjectMaterial(tmpobjidg, 0, 5710, "cemetery_law", "brickgrey", 0);
	tmpobjidg = CreateDynamicObjectEx(19464,2513.5471191,1063.5670166,-88.1449966,0.0000000,0.0000000,0.0000000,230.000,230.000);
	SetDynamicObjectMaterial(tmpobjidg, 0, 4600, "theatrelan2", "sl_whitewash1", 0);
	tmpobjidg = CreateDynamicObjectEx(19464,2513.5490723,1069.4830322,-88.1449966,0.0000000,0.0000000,0.0000000,230.000,230.000);
	SetDynamicObjectMaterial(tmpobjidg, 0, 4600, "theatrelan2", "sl_whitewash1", 0);
	tmpobjidg = CreateDynamicObjectEx(19464,2513.5549316,1075.4000244,-88.1449966,0.0000000,0.0000000,0.0000000,230.000,230.000);
	SetDynamicObjectMaterial(tmpobjidg, 0, 4600, "theatrelan2", "sl_whitewash1", 0);
	tmpobjidg = CreateDynamicObjectEx(19464,2513.5549316,1081.3149414,-88.1449966,0.0000000,0.0000000,0.0000000,230.000,230.000);
	SetDynamicObjectMaterial(tmpobjidg, 0, 4600, "theatrelan2", "sl_whitewash1", 0);
	tmpobjidg = CreateDynamicObjectEx(19464,2513.5529785,1087.2230225,-88.1449966,0.0000000,0.0000000,0.0000000,230.000,230.000);
	SetDynamicObjectMaterial(tmpobjidg, 0, 4600, "theatrelan2", "sl_whitewash1", 0);
	tmpobjidg = CreateDynamicObjectEx(19464,2510.7648926,1085.7690430,-88.1449966,0.0000000,0.0000000,90.0000000,230.000,230.000);
	SetDynamicObjectMaterial(tmpobjidg, 0, 4600, "theatrelan2", "sl_whitewash1", 0);
	tmpobjidg = CreateDynamicObjectEx(19464,2504.8620605,1085.7790527,-88.1449966,0.0000000,0.0000000,90.0000000,230.000,230.000);
	SetDynamicObjectMaterial(tmpobjidg, 0, 4600, "theatrelan2", "sl_whitewash1", 0);
	tmpobjidg = CreateDynamicObjectEx(19464,2498.9331055,1085.7790527,-88.1449966,0.0000000,0.0000000,90.0000000,230.000,230.000);
	SetDynamicObjectMaterial(tmpobjidg, 0, 4600, "theatrelan2", "sl_whitewash1", 0);
	tmpobjidg = CreateDynamicObjectEx(19464,2492.9970703,1085.7709961,-88.1449966,0.0000000,0.0000000,90.0000000,230.000,230.000);
	SetDynamicObjectMaterial(tmpobjidg, 0, 4600, "theatrelan2", "sl_whitewash1", 0);
	tmpobjidg = CreateDynamicObjectEx(19464,2490.2089844,1082.6750488,-88.1449966,0.0000000,0.0000000,0.0000000,230.000,230.000);
	SetDynamicObjectMaterial(tmpobjidg, 0, 4600, "theatrelan2", "sl_whitewash1", 0);
	tmpobjidg = CreateDynamicObjectEx(19464,2490.1999512,1076.7380371,-88.1449966,0.0000000,0.0000000,0.0000000,230.000,230.000);
	SetDynamicObjectMaterial(tmpobjidg, 0, 4600, "theatrelan2", "sl_whitewash1", 0);
	tmpobjidg = CreateDynamicObjectEx(19464,2490.1850586,1070.8039551,-88.1449966,0.0000000,0.0000000,0.0000000,230.000,230.000);
	SetDynamicObjectMaterial(tmpobjidg, 0, 4600, "theatrelan2", "sl_whitewash1", 0);
	tmpobjidg = CreateDynamicObjectEx(19464,2490.1960449,1064.8669434,-88.1449966,0.0000000,0.0000000,0.0000000,230.000,230.000);
	SetDynamicObjectMaterial(tmpobjidg, 0, 4600, "theatrelan2", "sl_whitewash1", 0);
	tmpobjidg = CreateDynamicObjectEx(19464,2493.2241211,1062.4859619,-88.1449966,0.0000000,0.0000000,90.0000000,230.000,230.000);
	SetDynamicObjectMaterial(tmpobjidg, 0, 4600, "theatrelan2", "sl_whitewash1", 0);
	tmpobjidg = CreateDynamicObjectEx(19464,2499.1359863,1062.4859619,-88.1449966,0.0000000,0.0000000,90.0000000,230.000,230.000);
	SetDynamicObjectMaterial(tmpobjidg, 0, 4600, "theatrelan2", "sl_whitewash1", 0);
	tmpobjidg = CreateDynamicObjectEx(19464,2505.0490723,1062.4849854,-88.1449966,0.0000000,0.0000000,90.0000000,230.000,230.000);
	SetDynamicObjectMaterial(tmpobjidg, 0, 4600, "theatrelan2", "sl_whitewash1", 0);
	tmpobjidg = CreateDynamicObjectEx(19464,2510.9819336,1062.4790039,-88.1449966,0.0000000,0.0000000,90.0000000,230.000,230.000);
	SetDynamicObjectMaterial(tmpobjidg, 0, 4600, "theatrelan2", "sl_whitewash1", 0);
	tmpobjidg = CreateDynamicObjectEx(18981,2501.2580566,1073.5030518,-85.8720016,0.0000000,90.0000000,0.0000000,230.000,230.000);
	SetDynamicObjectMaterial(tmpobjidg, 0, 4600, "theatrelan2", "sl_whitewash1", 0);
	tmpobjidg = CreateDynamicObjectEx(19465,2496.0419922,1075.0899658,-88.1449966,0.0000000,0.0000000,0.0000000,230.000,230.000);
	SetDynamicObjectMaterial(tmpobjidg, 0, 4600, "theatrelan2", "sl_whitewash1", 0);
	tmpobjidg = CreateDynamicObjectEx(19464,2493.0690918,1072.2490234,-88.1449966,0.0000000,0.0000000,90.0000000,230.000,230.000);
	SetDynamicObjectMaterial(tmpobjidg, 0, 4600, "theatrelan2", "sl_whitewash1", 0);
	tmpobjidg = CreateDynamicObjectEx(19464,2496.0590820,1081.0300293,-88.1449966,0.0000000,0.0000000,0.0000000,230.000,230.000);
	SetDynamicObjectMaterial(tmpobjidg, 0, 4600, "theatrelan2", "sl_whitewash1", 0);
	tmpobjidg = CreateDynamicObjectEx(19464,2496.0549316,1086.9489746,-88.1449966,0.0000000,0.0000000,0.0000000,230.000,230.000);
	SetDynamicObjectMaterial(tmpobjidg, 0, 4600, "theatrelan2", "sl_whitewash1", 0);
	CreateDynamicObject(18981,2501.2580566,1073.5030518,-85.8720016,0.0000000,90.0000000,0.0000000); //object(concrete1mx25mx25m) (3)
	CreateDynamicObject(19465,2496.0419922,1075.0899658,-88.1449966,0.0000000,0.0000000,0.0000000); //object(wall105) (1)
	CreateDynamicObject(927,2491.0480957,1072.3609619,-87.2949982,0.0000000,0.0000000,0.0000000); //object(piping_detail) (1)
	CreateDynamicObject(958,2491.8139648,1072.8430176,-89.8199997,0.0000000,0.0000000,0.0000000); //object(cj_chip_maker) (1)
	CreateDynamicObject(914,2494.5529785,1072.3740234,-87.2340012,0.0000000,0.0000000,0.0000000); //object(grill) (1)
	CreateDynamicObject(914,2494.8530273,1072.1040039,-87.4680023,0.0000000,0.0000000,180.0000000); //object(grill) (2)
	CreateDynamicObject(8332,2505.0100098,1086.9670410,-89.8339996,0.0000000,0.0000000,359.0000000); //object(vgsbboardsigns19) (1)
	CreateDynamicObject(8310,2488.4008789,1063.9699707,-90.3440018,0.0000000,0.0000000,18.5000000); //object(vgsbboardsigns06) (1)
	CreateDynamicObject(2254,2495.9230957,1081.8950195,-87.7839966,0.0000000,0.0000000,270.0000000); //object(frame_clip_1) (1)
	CreateDynamicObject(2262,2495.4460449,1078.9549561,-88.6220016,0.0000000,0.0000000,270.0000000); //object(frame_slim_3) (1)
	CreateDynamicObject(2256,2490.3378906,1078.4010010,-87.4489975,0.0000000,0.0000000,90.0000000); //object(frame_clip_3) (1)
	CreateDynamicObject(2239,2490.8369141,1062.9189453,-90.6969986,0.0000000,0.0000000,140.0000000); //object(cj_mlight16) (1)
	CreateDynamicObject(2239,2513.0410156,1062.9449463,-90.6969986,0.0000000,0.0000000,229.9988098); //object(cj_mlight16) (2)
	CreateDynamicObject(2239,2513.0449219,1085.1760254,-90.6969986,0.0000000,0.0000000,319.9932861); //object(cj_mlight16) (3)
	CreateDynamicObject(1706,2492.1440430,1071.5980225,-90.6969986,0.0000000,0.0000000,0.0000000); //object(kb_couch03) (1)
	CreateDynamicObject(1706,2490.8620605,1069.3800049,-90.6969986,0.0000000,0.0000000,90.0000000); //object(kb_couch03) (2)
	CreateDynamicObject(2251,2490.7858887,1071.4169922,-89.8539963,0.0000000,0.0000000,0.0000000); //object(plant_pot_20) (2)
	CreateDynamicObject(1658,2504.6918945,1075.4919434,-86.9069977,0.0000000,0.0000000,0.0000000); //object(htl_fan_static_nt) (1)
	CreateDynamicObject(1657,2504.7028809,1075.4909668,-86.8970032,0.0000000,0.0000000,0.0000000); //object(htl_fan_rotate_nt) (1)
	CreateDynamicObject(1744,2493.9108887,1072.7800293,-88.9469986,0.0000000,0.0000000,0.0000000); //object(med_shelf) (1)
	CreateDynamicObject(2024,2492.1311035,1069.4670410,-90.7220001,0.0000000,0.0000000,0.0000000); //object(mrk_liv_tble) (1)
	CreateDynamicObject(2063,2496.6350098,1084.2810059,-89.7880020,0.0000000,0.0000000,89.7500000); //object(cj_greenshelves) (1)
	CreateDynamicObject(2063,2496.6259766,1081.6590576,-89.7880020,0.0000000,0.0000000,89.7473145); //object(cj_greenshelves) (2)
	CreateDynamicObject(18019,2500.9729004,1072.5949707,-92.1080017,0.0000000,0.0000000,0.0000000); //object(int_burger_furn) (1)
	CreateDynamicObject(1492,2496.0891113,1074.3389893,-90.6969986,0.0000000,0.0000000,90.0000000); //object(gen_doorint02) (1)
	CreateDynamicObject(1569,2492.4399414,1085.6829834,-90.7470016,0.0000000,0.0000000,0.0000000); //object(adam_v_door) (1)
	CreateDynamicObject(10150,2507.7529297,1062.5729980,-88.6660004,0.0000000,0.0000000,90.0000000); //object(fdorsfe) (1)
	CreateDynamicObject(10150,2502.7290039,1062.5679932,-88.6660004,0.0000000,0.0000000,90.0000000); //object(fdorsfe) (2)
	CreateDynamicObject(2841,2492.6970215,1084.7089844,-90.6969986,0.0000000,0.0000000,0.0000000); //object(gb_bedrug03) (1)
	CreateDynamicObject(2855,2492.1088867,1069.9219971,-90.1880035,0.0000000,0.0000000,250.0000000); //object(gb_bedmags05) (1)
	CreateDynamicObject(2226,2494.4770508,1072.4429932,-88.6139984,0.0000000,0.0000000,180.0000000); //object(low_hi_fi_3) (1)
	CreateDynamicObject(11711,2493.2360840,1085.6710205,-87.8300018,0.0000000,0.0000000,0.0000000); //object(exitsign1) (1)
	CreateDynamicObject(11738,2496.8120117,1084.7700195,-90.2969971,0.0000000,0.0000000,96.7500000); //object(mediccase1) (1)
	CreateDynamicObject(19305,2500.2548828,1062.5510254,-89.0019989,0.0000000,0.0000000,180.0000000); //object(sec_keypad2) (1)
	CreateDynamicObject(19609,2492.3540039,1064.7609863,-90.6969986,0.0000000,0.0000000,160.0000000); //object(drumkit1) (1)
	CreateDynamicObject(19621,2496.7880859,1082.1030273,-90.1880035,0.0000000,0.0000000,0.0000000); //object(oilcan1) (1)
	CreateDynamicObject(19622,2496.6369629,1080.1920166,-89.9860001,341.2502441,359.7359314,359.9151611); //object(broom1) (1)
	CreateDynamicObject(19815,2496.1721191,1078.2850342,-89.3219986,0.0000000,0.0000000,89.7500000); //object(toolboard1) (1)
	CreateDynamicObject(19816,2496.3439941,1077.2099609,-90.4359970,0.0000000,0.0000000,0.0000000); //object(oxygencylinder1) (1)
	CreateDynamicObject(19816,2496.5739746,1077.2330322,-90.4359970,0.0000000,0.0000000,0.0000000); //object(oxygencylinder1) (2)
	CreateDynamicObject(19816,2496.3601074,1077.3750000,-90.4359970,0.0000000,0.0000000,0.0000000); //object(oxygencylinder1) (3)
	CreateDynamicObject(19816,2496.5629883,1077.3959961,-90.4359970,0.0000000,0.0000000,0.0000000); //object(oxygencylinder1) (4)
	CreateDynamicObject(19820,2496.6931152,1084.6519775,-88.9940033,0.0000000,0.0000000,0.0000000); //object(alcoholbottle1) (1)
	CreateDynamicObject(19820,2496.5500488,1084.3590088,-88.9940033,0.0000000,0.0000000,60.0000000); //object(alcoholbottle1) (2)
	CreateDynamicObject(19823,2492.8669434,1070.3420410,-90.1880035,0.0000000,0.0000000,122.0000000); //object(alcoholbottle4) (1)
	CreateDynamicObject(19818,2493.0371094,1070.5240479,-90.1129990,0.0000000,0.0000000,0.0000000); //object(wineglass1) (1)
	CreateDynamicObject(19818,2491.7849121,1069.4830322,-90.1129990,0.0000000,0.0000000,0.0000000); //object(wineglass1) (2)
	CreateDynamicObject(19828,2496.1730957,1076.1810303,-89.6600037,0.0000000,0.0000000,90.0000000); //object(lightswitch3off) (1)
	CreateDynamicObject(19903,2513.1069336,1079.7209473,-90.6969986,0.0000000,0.0000000,180.0000000); //object(mechaniccomputer1) (1)
	CreateDynamicObject(19899,2512.9819336,1082.4739990,-90.6969986,0.0000000,0.0000000,180.0000000); //object(toolcabinet1) (1)
	CreateDynamicObject(19319,2491.4790039,1062.6199951,-89.0719986,0.0000000,0.0000000,180.0000000); //object(warlock01) (1)
	CreateDynamicObject(19317,2491.9819336,1062.7209473,-89.9069977,349.7500000,0.0000000,170.0000000); //object(bassguitar01) (1)
	CreateDynamicObject(1085,2496.3039551,1079.1390381,-90.2300034,0.0000000,0.0000000,0.0000000); //object(wheel_gn2) (2)
	CreateDynamicObject(1085,2496.2529297,1078.1719971,-90.2300034,0.0000000,0.0000000,0.0000000); //object(wheel_gn2) (3)
	CreateDynamicObject(1140,2496.2009277,1080.9420166,-88.5599976,0.0000000,0.0000000,88.0000000); //object(rbmp_c_s) (1)
	CreateDynamicObject(1153,2496.2019043,1081.0780029,-89.0120010,0.0000000,0.0000000,268.0000000); //object(fbmp_a_f) (1)
	CreateDynamicObject(1081,2497.7180176,1085.5579834,-90.2549973,0.0000000,0.0000000,270.0000000); //object(wheel_sr4) (1)
	CreateDynamicObject(1081,2498.7390137,1085.4689941,-90.2549973,0.0000000,0.0000000,270.0000000); //object(wheel_sr4) (2)
	CreateDynamicObject(1081,2499.7099609,1085.3850098,-90.2549973,0.0000000,0.0000000,270.0000000); //object(wheel_sr4) (3)
	CreateDynamicObject(1081,2500.7309570,1085.2960205,-90.2549973,0.0000000,0.0000000,270.0000000); //object(wheel_sr4) (4)
	CreateDynamicObject(1421,2498.8330078,1063.1259766,-89.9339981,0.0000000,0.0000000,0.0000000); //object(dyn_boxes) (1)
	//== MARIA
	CreateObject(10377,1481.3000500,-1835.0000000,29.3000000,0.0000000,0.0000000,90.0000000); //object(cityhall_sfs) (1)
    CreateObject(10381,1531.6999500,-1786.3000500,25.1000000,0.0000000,0.0000000,0.0000000); //object(artgallery_sfs) (1)
    CreateObject(10023,1483.1999500,-1764.9000200,20.7000000,0.0000000,0.0000000,0.0000000); //object(sfe_archybald1) (2)
    CreateObject(10379,1432.5999800,-1791.0999800,21.9000000,0.0000000,0.0000000,270.0000000); //object(cityhall2_sfs) (1)
    CreateObject(2773,1483.0000000,-1815.6999500,13.6000000,0.0000000,0.0000000,0.0000000); //object(cj_airprt_bar) (1)
    CreateObject(2773,1479.8000500,-1815.6999500,13.6000000,0.0000000,0.0000000,0.0000000); //object(cj_airprt_bar) (2)
    CreateObject(943,1518.5000000,-1813.5000000,13.3000000,0.0000000,0.0000000,0.0000000); //object(generator_low) (1)
    CreateObject(1617,1519.8000500,-1811.4000200,19.0000000,0.0000000,0.0000000,0.0000000); //object(nt_aircon1_01) (1)
    CreateObject(1617,1519.6999500,-1762.0999800,18.4000000,0.0000000,0.0000000,0.0000000); //object(nt_aircon1_01) (2)
    CreateObject(1617,1470.3000500,-1820.3000500,17.2000000,0.0000000,0.0000000,0.0000000); //object(nt_aircon1_01) (3)
    CreateObject(1689,1447.4000200,-1828.0000000,33.8000000,0.0000000,0.0000000,0.0000000); //object(gen_roofbit3) (1)
    CreateObject(1233,1400.5999800,-1861.5999800,14.1000000,0.0000000,0.0000000,0.0000000); //object(noparkingsign1) (1)
    CreateObject(1233,1557.4000200,-1860.1999500,14.1000000,0.0000000,0.0000000,0.0000000); //object(noparkingsign1) (2)
    CreateObject(1233,1510.1999500,-1746.0000000,14.1000000,0.0000000,0.0000000,178.0000000); //object(noparkingsign1) (3)
    CreateObject(1233,1451.4000200,-1745.5999800,14.1000000,0.0000000,0.0000000,177.9950000); //object(noparkingsign1) (4)
    CreateObject(2745,1494.5999800,-1816.3000500,13.8000000,0.0000000,0.0000000,198.0000000); //object(cj_stat_3) (1)
    CreateObject(983,1534.6999500,-1818.0000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (1)
    CreateObject(1251,1446.6999500,-1797.1999500,12.7000000,0.0000000,0.0000000,0.0000000); //object(smashbar) (1)
    CreateObject(1251,1442.4000200,-1797.1999500,12.7000000,0.0000000,0.0000000,0.0000000); //object(smashbar) (2)
    CreateObject(1251,1438.1999500,-1797.1999500,12.7000000,0.0000000,0.0000000,0.0000000); //object(smashbar) (3)
    CreateObject(1251,1434.0000000,-1797.1999500,12.7000000,0.0000000,0.0000000,0.0000000); //object(smashbar) (4)
    CreateObject(1251,1429.8000500,-1797.1999500,12.7000000,0.0000000,0.0000000,0.0000000); //object(smashbar) (5)
    CreateObject(1251,1450.3000500,-1801.0000000,12.7000000,0.0000000,0.0000000,270.0000000); //object(smashbar) (6)
    CreateObject(1251,1450.1999500,-1805.3000500,12.7000000,0.0000000,0.0000000,269.9950000); //object(smashbar) (7)
    CreateObject(1251,1450.1999500,-1809.5000000,12.7000000,0.0000000,0.0000000,269.9950000); //object(smashbar) (8)
    CreateObject(1251,1450.1999500,-1813.5999800,12.7000000,0.0000000,0.0000000,269.9950000); //object(smashbar) (9)
    CreateObject(1251,1450.1999500,-1817.8000500,12.7000000,0.0000000,0.0000000,269.9950000); //object(smashbar) (10)
    CreateObject(1211,1469.1999500,-1817.0000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(fire_hydrant) (1)
    CreateObject(1215,1487.5999800,-1754.0999800,13.1000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (1)
    CreateObject(1215,1478.9000200,-1754.0999800,13.1000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (2)
    CreateObject(1216,1447.5999800,-1757.5999800,13.2000000,0.0000000,0.0000000,0.0000000); //object(phonebooth1) (1)
    CreateObject(1439,1521.1999500,-1816.1999500,12.5000000,0.0000000,0.0000000,0.0000000); //object(dyn_dumpster_1) (1)
    CreateObject(1415,1524.4995100,-1816.3991700,12.6480800,0.0000000,0.0000000,0.0000000); //object(dyn_dumpster) (1)
    CreateObject(1359,1518.8000500,-1788.9000200,15.1000000,0.0000000,0.0000000,0.0000000); //object(cj_bin1) (1)
    CreateObject(1359,1484.8000500,-1815.1999500,13.8000000,0.0000000,0.0000000,0.0000000); //object(cj_bin1) (2)
    CreateObject(2922,1479.0999800,-1816.0999800,14.8000000,0.0000000,0.0000000,0.0000000); //object(kmb_keypad) (1)
    CreateObject(2921,1489.3000500,-1816.0000000,21.5000000,0.0000000,0.0000000,0.0000000); //object(kmb_cam) (1)
    CreateObject(2921,1523.0999800,-1823.6999500,26.3000000,0.0000000,0.0000000,0.0000000); //object(kmb_cam) (2)
    CreateObject(2921,1418.9000200,-1801.5000000,28.7000000,0.0000000,0.0000000,0.0000000); //object(kmb_cam) (3)
    CreateObject(7921,1551.9000200,-1782.6999500,13.9000000,0.0000000,0.0000000,0.0000000); //object(vgwstnewall6904) (4)
    CreateObject(7921,1551.9000200,-1786.0000000,13.9000000,0.0000000,0.0000000,0.0000000); //object(vgwstnewall6904) (6)
    CreateObject(7921,1551.9000200,-1789.3000500,13.9000000,0.0000000,0.0000000,0.0000000); //object(vgwstnewall6904) (7)
    CreateObject(1269,1447.0000000,-1800.3000500,13.4000000,0.0000000,0.0000000,0.0000000); //object(parkingmeter) (1)
    CreateObject(1231,1507.0000000,-1758.0999800,15.3000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (1)
    CreateObject(1231,1459.1999500,-1758.1999500,15.3000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (2)
    CreateObject(11489,1509.1999500,-1811.4000200,12.5000000,0.0000000,0.0000000,218.0000000); //object(dam_statues) (1)
    CreateObject(7090,1492.3000500,-1818.9000200,27.3000000,0.0000000,0.0000000,0.0000000); //object(vegasflag1) (1)
    CreateObject(996,1421.0999800,-1794.0999800,13.3000000,0.0000000,0.0000000,0.0000000); //object(lhouse_barrier1) (1)
    CreateObject(996,1419.5999800,-1794.6999500,13.3000000,0.0000000,0.0000000,270.0000000); //object(lhouse_barrier1) (2)
    CreateObject(10184,1496.9000200,-1857.5999800,15.1000000,0.0000000,0.0000000,270.0000000); //object(sfcopdr) (1)
	//==
	//new VKNRP = CreateObject(7905, 1220.0697, -1812.4108, 22.0171, 0.0000, 0.0000, 7.4699);
	CreateObject(1568, 1235.865966,-1825.010253,12.544012, 0.000000,0.000000,0.000000);
	CreateObject(1257, 1227.756958,-1843.592285,13.762811, 0.000000,0.000000,91.000007);
	CreateObject(1333, 1218.369628,-1818.048217,13.453495, 0.000000,0.000000,0.000000);
	CreateObject(1333, 1213.607177,-1817.922241,13.465131, 0.000000,0.000000,0.000000);
	CreateObject(2675, 1215.806640,-1819.267333,12.670950, 0.000000,0.000000,0.000000);
	CreateObject(19125, 1230.987670,-1843.661132,13.086874, 0.000000,0.000000,0.000000);
	CreateObject(19125, 1224.245483,-1843.705322,13.036870, 0.000000,0.000000,0.000000);
	//==== LSPD
	CreateDynamicObject(970, 1545.45996, -1634.93994, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1545.45996, -1637.02002, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1226, 1544.88000, -1631.95728, 16.42190,   0.00000, 0.00000, -82.32000);
	CreateDynamicObject(970, 1577.47998, -1620.45996, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1573.35999, -1620.45996, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1569.23999, -1620.45996, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1565.12000, -1620.45996, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1561.00000, -1620.45996, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1556.88000, -1620.45996, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1552.76001, -1620.45996, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1548.64001, -1620.45996, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8168, 1543.21997, -1620.35999, 14.40000,   0.00000, 0.00000, 16.80000);
	CreateDynamicObject(2921, 1606.59998, -1702.30005, 10.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2921, 1593.59998, -1636.40002, 17.10000,   0.00000, 0.00000, 6.00000);
	CreateDynamicObject(2921, 1554.19995, -1700.50000, 26.00000,   0.00000, 0.00000, 5.99854);
	CreateDynamicObject(2921, 1547.30005, -1637.50000, 18.40000,   0.00000, 0.00000, -14.88145);
	CreateDynamicObject(2886, 1543.69995, -1631.19995, 13.50000,   0.00000, 0.00000, 0.00000);
	//==== хИТМАНЫ
	CreateDynamicObject(9241, -630.80, 892.00, 2.60,   0.00, 0.00, 320.00);
	CreateDynamicObject(10245, -645.08, 909.79, 5.90,   0.00, 0.00, 190.00);
	CreateDynamicObject(10244, -641.70, 902.14, -0.60,   0.00, 0.00, 52.00);
	CreateDynamicObject(987, -671.41, 912.51, 10.40,   0.00, 0.00, 358.00);
	CreateDynamicObject(987, -704.50, 913.60, 11.10,   0.00, 0.00, 357.99);
	CreateDynamicObject(987, -680.78, 912.55, 10.60,   0.00, 0.00, 359.37);
	CreateDynamicObject(987, -692.60, 913.00, 11.00,   0.00, 0.00, 357.99);
	CreateDynamicObject(987, -716.00, 914.00, 11.10,   0.00, 0.00, 357.99);
	CreateDynamicObject(987, -711.20, 996.20, 11.40,   0.00, 0.00, 270.00);
	CreateDynamicObject(987, -716.00, 925.80, 11.10,   0.00, 0.00, 270.00);
	CreateDynamicObject(987, -716.20, 937.80, 11.20,   0.00, 0.00, 270.00);
	CreateDynamicObject(987, -711.20, 984.30, 11.40,   0.00, 0.00, 270.00);
	CreateDynamicObject(3749, -710.30, 965.80, 17.30,   0.00, 0.00, 270.00);
	CreateDynamicObject(987, -712.50, 949.00, 11.30,   0.00, 0.00, 252.00);
	CreateDynamicObject(987, -708.70, 959.30, 11.10,   0.00, 0.00, 249.86);
	CreateDynamicObject(987, -711.03, 1007.15, 11.40,   0.00, 0.00, 269.34);
	CreateDynamicObject(987, -698.94, 1007.03, 11.40,   0.00, 0.00, 180.66);
	CreateDynamicObject(987, -688.01, 1007.15, 11.40,   0.00, 0.00, 180.84);
	CreateDynamicObject(987, -676.15, 1007.16, 11.40,   0.00, 0.00, 179.82);
	CreateDynamicObject(987, -664.34, 1007.18, 11.40,   0.00, 0.00, 180.36);
	CreateDynamicObject(987, -652.43, 1007.07, 11.26,   0.00, 0.00, 178.80);
	CreateDynamicObject(987, -651.89, 983.29, 11.13,   0.00, 0.00, 91.32);
	CreateDynamicObject(987, -651.83, 974.37, 11.13,   0.00, 0.00, 90.66);
	CreateDynamicObject(987, -652.03, 965.39, 11.13,   0.00, 0.00, 88.38);
	CreateDynamicObject(987, -652.29, 956.49, 11.13,   0.00, 0.00, 88.38);
	CreateDynamicObject(987, -652.53, 947.56, 11.13,   0.00, 0.00, 88.38);
	CreateDynamicObject(987, -652.80, 938.69, 11.13,   0.00, 0.00, 88.38);
	CreateDynamicObject(987, -653.02, 929.85, 11.12,   0.00, 0.00, 88.38);
	CreateDynamicObject(987, -653.28, 920.94, 11.01,   0.00, 0.00, 88.38);
	CreateDynamicObject(987, -653.37, 917.99, 11.01,   0.00, 0.00, 88.38);
	CreateDynamicObject(3253, -675.64, 937.05, 11.39,   0.00, 0.00, 0.00);
	CreateDynamicObject(9254, -680.53, 990.08, 11.84,   0.00, -0.36, 180.60);
	CreateDynamicObject(987, -652.12, 992.35, 11.13,   0.00, 0.00, 91.20);
	CreateDynamicObject(987, -652.23, 995.33, 11.13,   0.00, 0.00, 91.20);
	CreateDynamicObject(1308, -696.44, 975.71, 11.25,   3.12, -0.18, -1.81);
	CreateDynamicObject(11563, -711.34, 946.85, 22.59,   3.14, 0.00, 77.54);
	CreateDynamicObject(1308, -704.63, 941.36, 11.25,   3.12, -0.18, -1.81);
	CreateDynamicObject(1308, -737.81, 912.63, 11.25,   3.12, -0.18, -27.31);
	CreateDynamicObject(970, -706.10, 972.87, 12.14,   0.00, 0.36, 0.30);
	CreateDynamicObject(970, -701.98, 972.88, 12.12,   0.00, 0.36, 0.54);
	CreateDynamicObject(970, -697.86, 972.89, 12.09,   0.00, 0.36, 0.72);
	CreateDynamicObject(970, -693.74, 972.98, 12.07,   0.00, 0.36, 0.54);
	CreateDynamicObject(970, -689.63, 973.01, 12.04,   0.00, 0.36, 0.54);
	CreateDynamicObject(970, -685.49, 973.05, 12.02,   0.00, 0.36, 0.54);
	CreateDynamicObject(970, -670.01, 973.25, 11.93,   0.00, 0.36, 0.54);
	hitmansvorota2 = CreateDynamicObject(980, -709.96, 965.80, 14.19,   0.00, 0.00, 90.24);//Если вы все же решили использовать ворота, то не удаляйте hitmansvorota2, если ворота вам не нужны, оставьте код без hitmansvorota2 =
	//--- РЕСПА
	CreateObject(737, 1241.686889,-1840.187744,12.717546, 0.000000,0.000000,0.000000);
	CreateObject(3472, 1248.149536,-1839.999389,12.172805, 0.000000,0.000000,0.000000);
	CreateObject(3472, 1233.318725,-1840.035156,12.032805, 0.000000,0.000000,0.000000);
	CreateObject(640, 1226.442871,-1837.626586,13.207731, 0.000000,0.000000,90.000045);
	CreateObject(640, 1231.802246,-1837.626831,13.207240, 0.000000,0.000000,89.999961);
	CreateObject(640, 1237.181884,-1837.627319,13.207071, 0.000000,0.000000,89.999954);
	CreateObject(640, 1242.522705,-1837.632202,13.202460, 0.000000,0.000000,89.899993);
	CreateObject(640, 1247.887939,-1837.621459,13.206862, 0.000000,0.000000,90.000061);
	CreateObject(640, 1253.252685,-1837.630004,13.206418, -0.099999,0.000000,89.999969);
    CreateObject(640, 1257.317749,-1837.623168,13.238265, 0.000000,0.000000,89.599952);
    CreateObject(640, 1259.640502,-1840.002319,13.245384, 0.000000,0.000000,0.100000);
	CreateObject(640, 1257.285766,-1842.324218,13.239241, 0.000000,0.000000,-89.899986);
	CreateObject(640, 1251.969116,-1842.304321,13.237151, 0.000000,0.000000,-90.500076);
	CreateObject(640, 1246.618652,-1842.230346,13.246478, 0.000000,0.000000,-91.099975);
	CreateObject(640, 1241.261596,-1842.123291,13.245253, 0.000000,0.000000,-91.199951);
	CreateObject(640, 1235.906616,-1842.026000,13.246873, 0.000000,0.000000,-90.900009);
	CreateObject(640, 1230.577880,-1841.960449,13.265352, -0.499999,0.000000,-90.500007);
	CreateObject(640, 1226.392944,-1841.941772,13.286877, 0.000000,0.000000,-89.799957);
	CreateObject(640, 1224.077026,-1839.951538,13.227860, 0.000000,0.000000,179.800231);
	CreateObject(8991, 1252.136718,-1841.227172,13.120812, 0.000000,0.000000,0.000000);
	CreateObject(8991, 1240.469360,-1841.300781,12.979115, 0.000000,0.000000,0.000000);
	CreateObject(8991, 1231.205444,-1841.314697,13.118836, 0.000000,0.000000,0.000000);
	CreateObject(8991, 1231.892333,-1838.462524,13.248856, 0.000000,0.000000,-179.699966);
	CreateObject(8991, 1242.499511,-1838.343627,13.279105, 0.000000,0.000000,-179.799942);
	CreateObject(8991, 1252.740112,-1838.678833,12.986745, 0.000000,0.000000,0.000000);
	CreateObject(617, 1256.843505,-1840.287231,12.431010, 0.000000,0.000000,0.000000);
	CreateObject(617, 1226.435913,-1840.117797,12.401522, 0.000000,0.000000,0.000000);
	CreateObject(3515, 1228.967651,-1839.639282,11.643739, 0.000000,0.000000,0.000000);
	CreateObject(3515, 1237.181274,-1839.988525,11.427585, 0.000000,0.000000,0.000000);
	CreateObject(3515, 1245.050292,-1839.900634,11.580058, 0.000000,0.000000,0.000000);
	CreateObject(3515, 1251.930908,-1840.001831,11.545228, 0.000000,0.000000,0.000000);
	CreateObject(3660, 1246.833374,-1839.913208,14.076897, 0.000000,0.000000,0.000000);
	CreateObject(3660, 1234.736938,-1839.618041,14.037542, 0.000000,0.000000,0.000000);
	//============== ФБР
	new tmpobjidd;
	tmpobjidd = CreateDynamicObjectEx(19453,-1758.941,964.642,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19376,-1754.368,969.487,1037.833,0.000,90.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14623, "mafcasmain", "casino_carp", 0);
	tmpobjidd = CreateDynamicObjectEx(19376,-1743.866,969.487,1037.833,0.000,90.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14623, "mafcasmain", "casino_carp", 0);
	tmpobjidd = CreateDynamicObjectEx(19376,-1733.371,969.487,1037.833,0.000,90.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14623, "mafcasmain", "casino_carp", 0);
	tmpobjidd = CreateDynamicObjectEx(19453,-1749.309,964.642,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19376,-1764.866,969.487,1037.833,0.000,90.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14623, "mafcasmain", "casino_carp", 0);
	tmpobjidd = CreateDynamicObjectEx(19376,-1775.364,969.487,1037.833,0.000,90.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14623, "mafcasmain", "casino_carp", 0);
	tmpobjidd = CreateDynamicObjectEx(19369,-1762.152,964.642,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19369,-1746.095,964.642,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19361,-1763.840,966.324,1037.161,0.000,179.994,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19361,-1744.415,966.329,1037.161,0.000,179.994,0.087,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19369,-1744.415,966.329,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19369,-1763.840,966.324,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19390,-1763.840,969.529,1037.161,0.000,179.994,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19397,-1763.840,969.533,1040.661,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19367,-1780.636,966.468,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19395,-1763.842,969.532,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19453,-1768.721,966.251,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19453,-1775.742,966.256,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19459,-1775.742,966.250,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19459,-1768.721,966.251,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19367,-1763.842,966.324,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19453,-1780.636,971.160,1037.161,0.000,179.994,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(1649,-1780.605,970.287,1040.568,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 9515, "bigboxtemp1", "mullcar01_law", 0);
	tmpobjidd = CreateDynamicObjectEx(19367,-1780.636,974.115,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19453,-1775.791,974.374,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19453,-1768.721,974.375,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19453,-1763.840,975.951,1037.161,0.000,179.994,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19459,-1768.725,974.375,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19459,-1775.791,974.374,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19461,-1763.840,975.949,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19459,-1763.841,975.946,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19376,-1754.368,979.120,1037.833,0.000,90.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14623, "mafcasmain", "casino_carp", 0);
	tmpobjidd = CreateDynamicObjectEx(19376,-1743.866,979.118,1037.833,0.000,90.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14623, "mafcasmain", "casino_carp", 0);
	tmpobjidd = CreateDynamicObjectEx(19376,-1764.867,979.119,1037.833,0.000,90.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14623, "mafcasmain", "casino_carp", 0);
	tmpobjidd = CreateDynamicObjectEx(19361,-1756.139,971.827,1037.161,0.000,179.994,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19361,-1752.323,971.827,1037.161,0.000,179.994,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19369,-1756.137,971.836,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19369,-1752.323,971.827,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19369,-1754.625,970.144,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19369,-1753.841,970.146,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19376,-1775.367,979.119,1037.833,0.000,90.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14623, "mafcasmain", "casino_carp", 0);
	tmpobjidd = CreateDynamicObjectEx(19361,-1754.589,973.344,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19361,-1753.842,973.346,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19390,-1763.840,982.371,1037.161,0.000,179.994,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19397,-1763.837,982.371,1040.661,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19395,-1763.842,982.362,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19459,-1768.729,983.879,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19453,-1768.729,983.879,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19453,-1780.636,980.791,1037.161,0.000,179.994,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(1649,-1780.605,979.157,1040.568,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 9515, "bigboxtemp1", "mullcar01_law", 0);
	tmpobjidd = CreateDynamicObjectEx(19440,-1780.646,976.142,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19367,-1780.636,982.981,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19453,-1775.744,983.886,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19459,-1775.744,983.886,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19390,-1752.521,984.014,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19397,-1752.521,984.014,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19376,-1733.371,979.118,1037.833,0.000,90.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14623, "mafcasmain", "casino_carp", 0);
	tmpobjidd = CreateDynamicObjectEx(19369,-1754.589,980.500,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19361,-1753.842,980.497,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19369,-1753.842,973.344,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19369,-1753.842,980.497,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19361,-1754.589,980.500,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19369,-1754.619,973.346,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19461,-1756.139,975.617,1042.159,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19461,-1752.319,975.617,1042.159,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19390,-1744.409,982.371,1037.161,0.000,179.994,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19397,-1744.413,982.371,1040.661,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19395,-1744.409,982.370,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19453,-1739.682,984.014,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19459,-1739.682,984.014,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19361,-1744.409,979.166,1037.161,0.000,179.994,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19369,-1744.413,975.958,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19367,-1744.409,979.166,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19453,-1739.527,974.269,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19453,-1732.936,974.272,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19376,-1753.368,988.752,1037.833,0.000,90.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14623, "mafcasmain", "casino_carp", 0);
	tmpobjidd = CreateDynamicObjectEx(19453,-1746.100,984.028,1037.161,0.000,179.994,90.098,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19461,-1765.353,984.009,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19453,-1748.054,988.914,1037.161,0.000,179.994,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19453,-1752.895,990.893,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19453,-1756.385,988.914,1037.161,0.000,179.994,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19461,-1752.895,990.893,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19461,-1748.054,988.914,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19461,-1756.385,988.914,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19361,-1744.409,975.958,1037.161,0.000,179.994,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19369,-1744.413,979.166,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19367,-1744.401,975.958,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19459,-1739.667,974.269,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19459,-1732.936,974.272,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19459,-1735.131,979.122,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19453,-1735.131,979.122,1037.161,0.000,179.994,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(2190,-1740.309,978.525,1038.681,0.000,0.000,107.270,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 2, 10434, "hashblock2b_sfs", "ws_mural2", 0);
	tmpobjidd = CreateDynamicObjectEx(19453,-1739.670,964.642,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19390,-1744.409,972.746,1037.161,0.000,179.994,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19361,-1744.415,969.535,1037.161,0.000,179.994,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19369,-1744.415,969.535,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19397,-1744.409,972.745,1040.661,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19376,-1763.861,988.752,1037.833,0.000,90.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14623, "mafcasmain", "casino_carp", 0);
	tmpobjidd = CreateDynamicObjectEx(19361,-1755.728,984.014,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19369,-1755.728,984.010,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19390,-1758.934,984.014,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19397,-1758.934,984.009,1040.661,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19453,-1765.351,984.014,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19461,-1746.100,984.028,1040.660,0.000,0.000,90.098,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 4860, "railway_las", "lasunion7", 0);
	tmpobjidd = CreateDynamicObjectEx(19453,-1762.528,990.893,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19453,-1763.792,988.909,1037.161,0.000,179.994,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19395,-1744.406,972.742,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19367,-1744.406,969.535,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19367,-1744.406,966.328,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19367,-1742.713,964.642,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19367,-1739.327,967.007,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19367,-1736.117,967.007,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19440,-1741.022,966.293,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19361,-1736.117,967.007,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19361,-1739.327,967.007,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19453,-1732.937,964.642,1037.161,0.000,179.994,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19367,-1732.917,964.642,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19367,-1729.711,964.642,1040.660,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19453,-1728.185,969.535,1037.161,0.000,179.994,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(1649,-1728.212,969.409,1040.568,0.000,0.000,270.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 9515, "bigboxtemp1", "mullcar01_law", 0);
	tmpobjidd = CreateDynamicObjectEx(19367,-1728.185,965.583,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19367,-1728.185,973.229,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(2255,-1735.646,967.577,1039.677,0.000,0.000,179.994,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 1583, "targets", "target1", 0);
	tmpobjidd = CreateDynamicObjectEx(2255,-1739.953,967.577,1039.677,0.000,0.000,179.994,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 1583, "targets", "target3", 0);
	tmpobjidd = CreateDynamicObjectEx(19434,-1734.605,965.518,1037.161,0.000,179.994,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19434,-1741.022,966.293,1037.161,0.000,179.994,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19440,-1741.023,965.518,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19440,-1734.603,966.293,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19440,-1734.605,965.518,1040.660,0.000,0.000,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjidd = CreateDynamicObjectEx(19434,-1734.603,966.293,1037.161,0.000,179.994,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(19434,-1741.023,965.518,1037.161,0.000,179.994,0.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 13007, "sw_bankint", "bank_wall1", 0);
	tmpobjidd = CreateDynamicObjectEx(2190,-1731.174,968.678,1038.696,0.000,0.000,270.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 2, 13761, "lahills_whisky", "discharger", 0);
	tmpobjidd = CreateDynamicObjectEx(2190,-1731.207,970.195,1038.696,0.000,0.000,270.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 2, 2811, "gb_ornaments01", "GB_photo02", 0);
	tmpobjidd = CreateDynamicObjectEx(2190,-1730.695,970.656,1038.696,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 2, 14420, "dr_gsbits", "mp_apt1_pic8", 0);
	tmpobjidd = CreateDynamicObjectEx(2190,-1730.685,969.113,1038.696,0.000,0.000,90.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 2, 14420, "dr_gsbits", "mp_apt1_pic6", 0);
	tmpobjidd = CreateDynamicObjectEx(1649,-1749.614,964.700,1040.568,0.000,0.000,180.000,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 9515, "bigboxtemp1", "mullcar01_law", 0);
	tmpobjidd = CreateDynamicObjectEx(1649,-1754.058,964.700,1040.568,0.000,0.000,179.994,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 9515, "bigboxtemp1", "mullcar01_law", 0);
	tmpobjidd = CreateDynamicObjectEx(1649,-1758.495,964.700,1040.568,0.000,0.000,179.994,300.000,300.000);
	SetDynamicObjectMaterial(tmpobjidd, 0, 9515, "bigboxtemp1", "mullcar01_law", 0);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjidd = CreateDynamicObjectEx(18757,-1754.256,972.079,1039.832,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(18756,-1754.262,972.077,1039.832,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1492,-1763.842,968.768,1037.920,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19325,-1763.840,972.112,1042.487,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2258,-1763.741,966.852,1039.728,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2008,-1765.429,973.208,1037.920,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2008,-1768.227,973.206,1037.920,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2008,-1771.152,973.250,1037.920,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2008,-1774.095,973.284,1037.920,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2008,-1776.803,973.311,1037.920,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2008,-1779.113,973.320,1037.920,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2008,-1768.261,968.191,1037.920,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2008,-1771.116,968.280,1037.920,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2008,-1773.999,968.421,1037.920,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2008,-1776.678,968.370,1037.920,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2008,-1779.054,968.447,1037.920,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2356,-1769.111,967.338,1037.920,0.000,0.000,308.583,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2356,-1774.810,967.567,1037.920,0.000,0.000,259.925,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2356,-1777.625,967.847,1037.920,0.000,0.000,277.481,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2356,-1780.075,973.127,1037.920,0.000,0.000,253.092,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2356,-1777.928,972.826,1037.920,0.000,0.000,288.890,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2356,-1775.120,972.887,1037.920,0.000,0.000,249.988,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2356,-1772.166,972.445,1037.920,0.000,0.000,310.006,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2356,-1766.254,972.037,1037.920,0.000,0.000,310.006,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1671,-1769.096,972.486,1038.380,0.000,0.000,49.284,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1671,-1771.940,967.502,1038.380,0.000,0.000,120.888,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1671,-1779.950,967.913,1038.380,0.000,0.000,82.842,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2812,-1765.296,973.097,1038.733,0.000,0.000,231.690,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2828,-1771.045,968.087,1038.733,0.000,0.000,51.240,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2855,-1774.101,973.063,1038.733,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2829,-1779.005,968.158,1038.733,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2816,-1771.027,973.141,1038.733,0.000,0.000,280.755,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2831,-1773.959,968.197,1038.733,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2612,-1763.972,972.252,1039.729,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2606,-1771.231,966.307,1040.459,19.995,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2606,-1773.213,966.307,1040.459,19.989,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2610,-1764.138,967.836,1038.744,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2610,-1764.138,967.344,1038.744,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2164,-1765.720,966.333,1037.920,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2011,-1764.821,966.831,1037.897,0.000,0.000,341.460,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19171,-1775.743,974.292,1040.239,90.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19168,-1771.743,974.292,1040.239,90.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19169,-1767.743,974.292,1040.239,90.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(10837,-1764.869,984.620,1041.923,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(10837,-1764.868,986.419,1041.923,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(10837,-1764.869,971.780,1041.923,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(10837,-1764.869,973.583,1041.923,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1492,-1763.842,981.613,1037.920,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19325,-1763.840,984.939,1042.487,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(14632,-1770.403,990.153,1039.420,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(14632,-1763.418,990.153,1039.420,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2167,-1770.546,977.157,1037.905,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2167,-1770.491,977.101,1037.905,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2167,-1769.627,977.156,1037.905,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2167,-1768.708,977.156,1037.905,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2167,-1767.822,977.155,1037.905,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2167,-1769.574,977.101,1037.905,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2167,-1768.657,977.102,1037.905,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2167,-1767.740,977.102,1037.905,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2197,-1770.647,980.150,1037.373,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2197,-1767.742,980.133,1037.373,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2197,-1768.714,980.141,1037.373,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2197,-1769.707,980.141,1037.373,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1811,-1774.922,981.091,1038.508,0.000,0.000,61.616,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1811,-1775.916,981.115,1038.508,0.000,0.000,98.684,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1811,-1776.639,981.132,1038.508,0.000,0.000,86.407,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1811,-1777.486,981.152,1038.508,0.000,0.000,177.242,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1954,-1774.918,977.244,1038.019,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1954,-1777.517,977.287,1038.019,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2186,-1776.764,977.042,1037.902,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2226,-1775.881,981.074,1040.970,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(14600,-1771.557,984.069,1039.526,0.000,0.000,96.135,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(11245,-1773.096,974.509,1040.097,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(14455,-1763.988,976.005,1039.475,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(18751,-1597.651,174.766,-8.711,0.000,0.000,50.328,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19302,-1756.185,974.293,1039.170,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19302,-1752.266,974.293,1039.170,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19304,-1756.188,976.917,1038.545,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19304,-1756.188,976.917,1039.786,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19302,-1756.192,979.541,1039.170,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19304,-1752.266,976.917,1039.786,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19304,-1752.266,976.917,1038.545,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19302,-1752.266,979.541,1039.170,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1800,-1755.480,974.521,1037.866,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1800,-1755.480,974.521,1038.832,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2255,-1754.191,973.918,1039.234,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2846,-1754.461,977.709,1037.920,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2671,-1753.672,976.371,1037.920,0.000,0.000,272.752,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2673,-1753.413,974.611,1038.008,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2670,-1753.959,979.458,1038.011,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(10837,-1745.442,984.620,1041.923,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(10837,-1745.442,986.417,1041.923,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1492,-1744.389,983.149,1037.920,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1753,-1755.584,986.667,1037.881,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2011,-1755.482,985.250,1037.906,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2011,-1755.601,989.911,1037.906,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2311,-1754.007,986.893,1037.920,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2827,-1754.000,987.659,1038.425,0.000,0.000,125.595,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2296,-1748.409,988.312,1037.920,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(18961,-1748.482,988.391,1038.427,0.000,0.000,163.751,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(18868,-1748.640,986.279,1038.401,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(18868,-1748.456,986.129,1038.401,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(18868,-1748.604,986.038,1038.401,0.000,0.000,80.765,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(18868,-1748.295,986.311,1038.401,0.000,0.000,43.934,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(18868,-1748.259,988.622,1038.401,0.000,0.000,129.122,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(18868,-1748.519,988.239,1038.401,0.000,0.000,220.198,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2200,-1749.383,984.198,1037.920,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2292,-1748.975,990.132,1037.881,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2164,-1753.820,990.803,1037.920,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2167,-1752.049,990.817,1037.920,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2167,-1751.130,990.818,1037.920,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2101,-1754.927,990.577,1037.920,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1943,-1754.927,990.805,1039.244,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2254,-1754.395,984.116,1039.871,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(10837,-1754.459,987.133,1041.923,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(10837,-1752.676,987.133,1041.923,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1492,-1753.317,984.019,1037.920,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19325,-1744.413,979.799,1042.487,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19325,-1750.566,984.014,1042.487,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2184,-1740.562,980.216,1037.920,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1715,-1738.931,978.811,1037.905,0.000,0.000,313.104,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1715,-1738.936,979.601,1037.905,0.000,0.000,255.162,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2190,-1740.130,980.225,1038.681,0.000,0.000,71.669,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1670,-1739.935,979.073,1038.707,0.000,0.000,93.894,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(367,-1740.277,979.406,1038.718,0.000,0.000,150.737,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2257,-1735.241,979.463,1040.425,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1744,-1735.053,982.464,1039.469,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(18636,-1735.416,982.497,1039.848,0.000,0.000,96.135,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(18636,-1735.373,982.115,1039.848,0.000,0.000,157.510,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(18636,-1735.406,981.287,1039.848,0.000,0.000,289.440,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(18642,-1735.378,981.850,1039.808,90.000,179.994,211.915,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(18642,-1735.421,981.615,1039.808,90.000,180.005,2.642,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(18642,-1735.288,981.572,1039.808,90.000,180.005,2.642,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(18642,-1735.384,982.818,1039.808,90.000,180.005,50.515,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(15037,-1737.954,975.244,1038.327,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2894,-1737.752,975.279,1038.732,0.000,0.000,31.036,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2100,-1735.318,982.219,1037.920,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2232,-1735.245,983.884,1039.795,0.000,0.000,314.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(14867,-1739.832,984.089,1039.449,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2161,-1735.217,977.431,1039.266,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2161,-1735.218,976.101,1037.920,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2161,-1735.218,976.101,1039.266,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2161,-1735.217,977.431,1037.920,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2164,-1744.325,979.112,1037.912,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2163,-1744.386,977.334,1037.912,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2163,-1744.386,977.334,1038.828,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2199,-1744.244,975.389,1037.920,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2200,-1740.712,974.449,1037.920,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(10837,-1760.881,987.133,1041.923,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(10837,-1759.088,987.133,1041.923,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1492,-1759.735,984.007,1037.920,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19325,-1758.731,984.014,1042.487,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19385,-1758.933,984.011,1040.657,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19428,-1757.106,984.021,1040.657,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19355,-1762.143,984.011,1040.657,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19447,-1756.390,988.875,1040.657,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19447,-1761.292,990.891,1040.657,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19447,-1763.792,988.912,1040.657,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(14782,-1760.066,990.500,1038.921,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(15027,-1760.712,992.764,1038.224,0.000,0.000,14.727,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1368,-1763.378,987.386,1038.609,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1368,-1756.803,987.386,1038.609,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2845,-1763.471,984.262,1037.920,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2390,-1759.076,990.578,1039.212,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2389,-1760.700,984.303,1039.269,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2399,-1761.911,984.303,1039.265,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2397,-1763.036,984.303,1039.296,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2383,-1757.165,984.351,1039.265,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2386,-1756.911,987.410,1038.624,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2384,-1763.201,987.390,1038.624,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2578,-1756.568,985.335,1038.916,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(10837,-1745.442,976.791,1041.923,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(10837,-1745.442,974.992,1041.923,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1492,-1744.389,973.519,1037.920,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19325,-1744.413,970.285,1042.487,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2208,-1738.217,970.375,1037.905,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2207,-1734.708,969.477,1037.993,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2207,-1734.708,971.328,1038.010,0.000,179.994,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2614,-1737.800,967.132,1040.092,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1958,-1742.694,966.552,1038.421,0.000,0.000,21.368,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2292,-1743.847,965.166,1037.881,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2292,-1741.572,965.196,1037.881,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2239,-1742.715,965.263,1037.889,0.000,0.000,182.905,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1823,-1743.174,966.057,1037.920,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1806,-1736.123,969.277,1037.909,0.000,0.000,23.878,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1806,-1737.797,969.224,1037.909,0.000,0.000,325.848,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1806,-1737.768,971.834,1037.909,0.000,0.000,196.160,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1806,-1736.218,971.845,1037.909,0.000,0.000,160.268,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1714,-1733.610,970.538,1037.885,0.000,0.000,282.892,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(14455,-1734.113,974.133,1039.567,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2894,-1737.587,970.410,1038.759,0.000,0.000,29.058,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2816,-1735.147,970.255,1038.770,0.000,0.000,119.218,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2827,-1736.351,970.438,1038.770,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2183,-1730.291,968.192,1037.905,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1806,-1732.381,968.849,1037.909,0.000,0.000,276.009,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1806,-1729.412,970.729,1037.909,0.000,0.000,111.956,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1806,-1729.487,968.435,1037.909,0.000,0.000,58.348,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1806,-1732.165,970.237,1037.909,0.000,0.000,312.791,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1546,-1731.510,968.080,1038.792,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2251,-1730.544,971.305,1039.558,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2813,-1730.429,968.068,1038.708,0.000,0.000,82.144,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2163,-1734.586,965.505,1039.010,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2163,-1728.155,966.349,1039.010,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2163,-1728.155,973.265,1039.010,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2164,-1729.931,964.728,1037.920,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2167,-1731.698,964.721,1037.920,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2197,-1732.449,965.609,1037.915,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2200,-1732.437,974.276,1037.920,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2611,-1744.272,968.159,1039.666,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(3014,-1735.858,983.233,1038.135,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(3014,-1757.272,988.976,1038.135,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(3014,-1763.412,989.793,1038.135,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(3014,-1763.460,989.185,1038.135,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(3014,-1760.923,984.527,1038.135,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(3014,-1761.768,984.490,1038.135,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(14532,-1729.665,973.653,1038.890,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19165,-1744.331,970.357,1039.740,90.000,90.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2163,-1744.386,968.148,1037.895,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2163,-1744.386,969.919,1037.895,0.000,0.000,90.054,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2163,-1742.083,974.267,1037.895,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2619,-1741.678,974.168,1039.682,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19380,-1775.366,979.118,1042.318,0.000,90.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19380,-1764.867,979.119,1042.318,0.000,90.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19380,-1754.368,979.120,1042.318,0.000,90.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19380,-1754.368,969.487,1042.318,0.000,90.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19380,-1743.866,969.487,1042.318,0.000,90.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19380,-1764.866,969.487,1042.318,0.000,90.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19380,-1775.364,969.487,1042.318,0.000,90.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19380,-1763.861,988.752,1042.318,0.000,90.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19380,-1753.368,988.752,1042.318,0.000,90.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19380,-1733.440,969.494,1042.318,0.000,90.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19380,-1733.371,979.118,1042.318,0.000,90.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19380,-1743.866,979.118,1042.318,0.000,90.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(18608,-1748.278,974.885,1043.020,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(18608,-1759.876,974.885,1043.020,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1893,-1754.769,976.968,1042.493,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(16780,-1739.644,979.161,1042.422,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(16780,-1732.407,970.016,1042.422,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(16780,-1738.125,970.218,1042.422,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(16780,-1768.708,970.209,1042.422,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(16780,-1777.611,970.393,1042.422,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(16780,-1772.709,978.963,1042.422,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(16780,-1760.626,987.437,1042.422,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(16780,-1752.735,987.592,1042.422,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2290,-1745.042,969.316,1037.869,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2315,-1746.616,967.583,1037.915,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2827,-1746.541,968.270,1038.411,0.000,0.000,88.654,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2001,-1745.191,965.745,1037.905,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2001,-1745.191,970.699,1037.905,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19174,-1752.231,971.852,1039.727,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(19172,-1756.226,971.885,1039.727,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2256,-1754.116,980.600,1039.754,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2267,-1746.102,964.749,1039.854,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2266,-1762.134,965.221,1039.374,0.000,0.000,179.994,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2290,-1745.042,978.507,1037.869,0.000,0.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2001,-1745.191,974.916,1037.905,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2001,-1745.191,980.055,1037.905,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2315,-1746.616,976.703,1037.915,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2827,-1746.642,977.574,1038.411,0.000,0.000,88.654,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2290,-1749.091,983.369,1037.869,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2001,-1745.574,983.283,1037.905,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2001,-1750.519,983.283,1037.905,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2315,-1748.839,981.794,1037.915,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2894,-1748.798,981.812,1038.406,0.000,0.000,30.300,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2894,-1747.865,981.798,1038.406,0.000,0.000,319.921,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(3111,-1755.628,983.924,1039.849,90.000,90.000,270.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1754,-1756.816,983.425,1037.864,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1742,-1761.909,984.051,1037.920,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(1754,-1754.547,983.425,1037.864,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2001,-1755.637,983.283,1037.905,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2290,-1763.188,977.323,1037.869,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2290,-1763.188,972.559,1037.869,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2315,-1761.489,972.824,1037.915,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2315,-1761.489,977.588,1037.915,0.000,0.000,90.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2826,-1761.577,973.571,1038.411,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2813,-1761.545,978.565,1038.411,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2001,-1763.030,971.243,1037.905,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2001,-1763.030,975.912,1037.905,0.000,0.000,0.000,300.000,300.000);
	tmpobjidd = CreateDynamicObjectEx(2001,-1763.030,980.660,1037.905,0.000,0.000,0.000,300.000,300.000);
	//============== ЦЕРКОВЬ
	new tmpobjid;
	tmpobjid = CreateObject(19375,-2023.961,1010.056,1417.401,0.000,90.000,0.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjid = CreateObject(19379,-2029.131,1010.057,1417.411,0.000,90.000,0.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 14760, "sfhosemed2", "ah_poshwdflr1", 0);
	tmpobjid = CreateObject(19379,-2015.046,1010.057,1417.411,0.000,90.000,0.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 14760, "sfhosemed2", "ah_poshwdflr1", 0);
	tmpobjid = CreateObject(19378,-2022.178,1005.338,1413.199,0.000,0.000,90.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 3961, "lee_kitch", "rack", 0);
	tmpobjid = CreateObject(19375,-2023.962,1019.687,1417.401,0.000,90.000,0.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 14760, "sfhosemed2", "ah_wpaper5", 0);
	tmpobjid = CreateObject(19379,-2015.046,1019.687,1417.411,0.000,90.000,0.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 14760, "sfhosemed2", "ah_poshwdflr1", 0);
	tmpobjid = CreateObject(19379,-2029.131,1019.687,1417.411,0.000,90.000,0.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 14760, "sfhosemed2", "ah_poshwdflr1", 0);
	tmpobjid = CreateObject(19449,-2030.010,1010.088,1419.246,0.000,0.000,0.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 4558, "lanlacmab_lan2", "sl_plazatile02", 0);
	tmpobjid = CreateObject(19449,-2030.012,1019.687,1419.246,0.000,0.000,0.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 4558, "lanlacmab_lan2", "sl_plazatile02", 0);
	tmpobjid = CreateObject(19449,-2014.162,1010.070,1419.246,0.000,0.000,0.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 4558, "lanlacmab_lan2", "sl_plazatile02", 0);
	tmpobjid = CreateObject(19449,-2014.162,1019.653,1419.246,0.000,0.000,0.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 4558, "lanlacmab_lan2", "sl_plazatile02", 0);
	tmpobjid = CreateObject(19379,-2032.241,999.152,1418.411,0.000,90.000,0.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 16136, "des_telescopestuff", "stoneclad1", 0);
	tmpobjid = CreateObject(19378,-2026.916,1000.602,1413.199,0.000,0.000,0.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 3961, "lee_kitch", "rack", 0);
	tmpobjid = CreateObject(19449,-2030.010,1000.486,1419.246,0.000,0.000,0.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 4558, "lanlacmab_lan2", "sl_plazatile02", 0);
	tmpobjid = CreateObject(19378,-2017.447,1000.552,1413.199,0.000,0.000,0.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 3961, "lee_kitch", "rack", 0);
	tmpobjid = CreateObject(19379,-2012.120,999.152,1418.411,0.000,90.000,0.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 16136, "des_telescopestuff", "stoneclad1", 0);
	tmpobjid = CreateObject(19449,-2014.162,1000.448,1419.246,0.000,0.000,0.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 4558, "lanlacmab_lan2", "sl_plazatile02", 0);
	tmpobjid = CreateObject(19379,-2022.178,1000.152,1418.411,0.000,90.000,89.999,300.000);
	SetObjectMaterial(tmpobjid, 0, 16136, "des_telescopestuff", "stoneclad1", 0);
	tmpobjid = CreateObject(19449,-2012.570,999.406,1419.246,0.000,0.000,90.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 4558, "lanlacmab_lan2", "sl_plazatile02", 0);
	tmpobjid = CreateObject(19449,-2031.796,999.406,1419.246,0.000,0.000,90.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 4558, "lanlacmab_lan2", "sl_plazatile02", 0);
	tmpobjid = CreateObject(19449,-2012.571,999.406,1422.746,0.000,0.000,90.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 4558, "lanlacmab_lan2", "sl_plazatile02", 0);
	tmpobjid = CreateObject(19449,-2031.796,999.406,1422.746,0.000,0.000,90.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 4558, "lanlacmab_lan2", "sl_plazatile02", 0);
	tmpobjid = CreateObject(19325,-2020.643,999.376,1420.560,0.000,0.000,270.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 3906, "libertyhi5", "grating 64HV", 0);
	tmpobjid = CreateObject(19325,-2027.287,999.377,1420.560,0.000,0.000,269.994,300.000);
	SetObjectMaterial(tmpobjid, 0, 3906, "libertyhi5", "grating 64HV", 0);
	tmpobjid = CreateObject(19325,-2020.644,999.377,1424.686,0.000,0.000,269.994,300.000);
	SetObjectMaterial(tmpobjid, 0, 3906, "libertyhi5", "grating 64HV", 0);
	tmpobjid = CreateObject(19325,-2027.287,999.376,1424.686,0.000,0.000,269.989,300.000);
	SetObjectMaterial(tmpobjid, 0, 3906, "libertyhi5", "grating 64HV", 0);
	tmpobjid = CreateObject(19377,-2027.250,1004.106,1423.646,0.000,45.000,0.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 8591, "olympic01", "vgscityhwal1", 0);
	tmpobjid = CreateObject(19377,-2027.250,1013.520,1423.646,0.000,44.994,0.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 8591, "olympic01", "vgscityhwal1", 0);
	tmpobjid = CreateObject(19377,-2027.250,1022.883,1423.646,0.000,44.994,0.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 8591, "olympic01", "vgscityhwal1", 0);
	tmpobjid = CreateObject(19377,-2017.108,1004.106,1423.748,0.000,315.000,0.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 8591, "olympic01", "vgscityhwal1", 0);
	tmpobjid = CreateObject(19377,-2017.108,1013.635,1423.748,0.000,315.000,0.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 8591, "olympic01", "vgscityhwal1", 0);
	tmpobjid = CreateObject(19377,-2017.108,1023.148,1423.748,0.000,315.000,0.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 8591, "olympic01", "vgscityhwal1", 0);
	tmpobjid = CreateObject(19378,-2022.043,1016.110,1425.817,0.000,90.000,89.994,300.000);
	SetObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", 0);
	tmpobjid = CreateObject(19378,-2022.043,1005.688,1425.817,0.000,90.000,89.994,300.000);
	SetObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", 0);
	tmpobjid = CreateObject(19378,-2022.043,995.190,1425.817,0.000,90.000,89.999,300.000);
	SetObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", 0);
	tmpobjid = CreateObject(19356,-2022.134,997.676,1418.746,270.000,179.994,179.994,300.000);
	SetObjectMaterial(tmpobjid, 0, 1929, "kbroul2", "oliveash_256", 0);
	tmpobjid = CreateObject(19356,-2022.134,997.676,1421.907,270.000,180.005,179.983,300.000);
	SetObjectMaterial(tmpobjid, 0, 1929, "kbroul2", "oliveash_256", 0);
	tmpobjid = CreateObject(19356,-2022.200,997.826,1421.792,0.000,90.000,0.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 1929, "kbroul2", "oliveash_256", 0);
	tmpobjid = CreateObject(19377,-2022.162,999.139,1423.748,0.000,180.000,90.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 14785, "gen_offtrackint", "otb_rooftile1", 0);
	tmpobjid = CreateObject(19449,-2012.570,1021.158,1419.246,0.000,0.000,90.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 4558, "lanlacmab_lan2", "sl_plazatile02", 0);
	tmpobjid = CreateObject(19449,-2012.570,1021.158,1422.746,0.000,0.000,90.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 4558, "lanlacmab_lan2", "sl_plazatile02", 0);
	tmpobjid = CreateObject(19449,-2031.796,1021.158,1419.246,0.000,0.000,90.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 4558, "lanlacmab_lan2", "sl_plazatile02", 0);
	tmpobjid = CreateObject(19449,-2031.796,1021.158,1422.746,0.000,0.000,90.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 4558, "lanlacmab_lan2", "sl_plazatile02", 0);
	tmpobjid = CreateObject(19325,-2023.711,1021.138,1419.550,0.000,0.000,270.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 3906, "libertyhi5", "grating 64HV", 0);
	tmpobjid = CreateObject(19325,-2017.067,1021.138,1419.550,0.000,0.000,270.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 3906, "libertyhi5", "grating 64HV", 0);
	tmpobjid = CreateObject(19325,-2023.711,1021.138,1423.676,0.000,0.000,270.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 3906, "libertyhi5", "grating 64HV", 0);
	tmpobjid = CreateObject(19325,-2017.067,1021.138,1423.676,0.000,0.000,270.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 3906, "libertyhi5", "grating 64HV", 0);
	tmpobjid = CreateObject(19377,-2022.166,1021.270,1422.738,0.000,179.994,90.000,300.000);
	SetObjectMaterial(tmpobjid, 0, 14785, "gen_offtrackint", "otb_rooftile1", 0);
	tmpobjid = CreateObject(1537,-2029.889,1020.952,1417.496,0.000,0.000,90.000,300.000);
	SetObjectMaterial(tmpobjid, 1, 14847, "mp_policesf", "mp_cop_lectern", 0);
	SetObjectMaterial(tmpobjid, 2, 18058, "mp_diner2", "mp_diner_table", 0);
	tmpobjid = CreateObject(1537,-2029.880,1019.468,1417.496,0.000,0.000,90.000,300.000);
	SetObjectMaterial(tmpobjid, 1, 14847, "mp_policesf", "mp_cop_lectern", 0);
	SetObjectMaterial(tmpobjid, 2, 18058, "mp_diner2", "mp_diner_table", 0);
	tmpobjid = CreateObject(1537,-2014.270,1019.500,1417.496,0.000,0.000,270.000,300.000);
	SetObjectMaterial(tmpobjid, 1, 14847, "mp_policesf", "mp_cop_lectern", 0);
	SetObjectMaterial(tmpobjid, 2, 18058, "mp_diner2", "mp_diner_table", 0);
	tmpobjid = CreateObject(1537,-2014.270,1017.992,1417.496,0.000,0.000,270.000,300.000);
	SetObjectMaterial(tmpobjid, 1, 14847, "mp_policesf", "mp_cop_lectern", 0);
	SetObjectMaterial(tmpobjid, 2, 18058, "mp_diner2", "mp_diner_table", 0);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateObject(19461,-2020.350,1010.238,1415.757,0.000,0.000,0.000,300.000);
	tmpobjid = CreateObject(19461,-2020.349,1019.857,1415.757,0.000,0.000,0.000,300.000);
	tmpobjid = CreateObject(19461,-2023.921,1010.236,1415.757,0.000,0.000,0.000,300.000);
	tmpobjid = CreateObject(19461,-2023.921,1019.862,1415.757,0.000,0.000,0.000,300.000);
	tmpobjid = CreateObject(19375,-2023.961,1029.313,1417.401,0.000,90.000,0.000,300.000);
	tmpobjid = CreateObject(19461,-2012.505,1021.000,1419.246,270.000,0.000,90.000,300.000);
	tmpobjid = CreateObject(19461,-2012.505,1018.000,1419.246,270.000,180.000,270.000,300.000);
	tmpobjid = CreateObject(19461,-2012.505,1015.000,1419.246,269.994,0.000,90.000,300.000);
	tmpobjid = CreateObject(19461,-2012.505,1012.000,1419.246,269.994,0.000,90.000,300.000);
	tmpobjid = CreateObject(19461,-2012.505,1009.000,1419.246,269.994,0.000,90.000,300.000);
	tmpobjid = CreateObject(19461,-2012.505,1006.000,1419.246,270.000,180.000,270.000,300.000);
	tmpobjid = CreateObject(2639,-2018.641,1008.434,1418.125,0.000,0.000,180.000,300.000);
	tmpobjid = CreateObject(2639,-2016.059,1008.446,1418.125,0.000,0.000,179.994,300.000);
	tmpobjid = CreateObject(2639,-2016.059,1010.400,1418.125,0.000,0.000,179.994,300.000);
	tmpobjid = CreateObject(2639,-2018.641,1010.400,1418.125,0.000,0.000,179.994,300.000);
	tmpobjid = CreateObject(2639,-2016.059,1012.400,1418.125,0.000,0.000,179.994,300.000);
	tmpobjid = CreateObject(2639,-2028.253,1010.400,1418.125,0.000,0.000,179.994,300.000);
	tmpobjid = CreateObject(2639,-2018.641,1012.400,1418.125,0.000,0.000,179.994,300.000);
	tmpobjid = CreateObject(2639,-2018.641,1016.400,1418.125,0.000,0.000,179.994,300.000);
	tmpobjid = CreateObject(2639,-2016.059,1014.400,1418.125,0.000,0.000,179.994,300.000);
	tmpobjid = CreateObject(2639,-2025.591,1010.400,1418.125,0.000,0.000,179.994,300.000);
	tmpobjid = CreateObject(2639,-2016.059,1016.400,1418.125,0.000,0.000,179.994,300.000);
	tmpobjid = CreateObject(2639,-2018.641,1014.400,1418.125,0.000,0.000,179.994,300.000);
	tmpobjid = CreateObject(2639,-2025.591,1008.434,1418.125,0.000,0.000,179.994,300.000);
	tmpobjid = CreateObject(2639,-2028.253,1008.434,1418.125,0.000,0.000,179.994,300.000);
	tmpobjid = CreateObject(14409,-2029.006,1005.812,1415.300,0.000,0.000,0.000,300.000);
	tmpobjid = CreateObject(14409,-2015.459,1005.812,1415.300,0.000,0.000,0.000,300.000);
	tmpobjid = CreateObject(19461,-2012.505,1003.000,1419.246,270.000,180.000,269.994,300.000);
	tmpobjid = CreateObject(19461,-2012.505,999.557,1420.246,270.000,180.000,269.994,300.000);
	tmpobjid = CreateObject(19461,-2031.665,999.562,1420.246,90.000,189.875,260.125,300.000);
	tmpobjid = CreateObject(19461,-2031.665,1003.000,1420.246,90.000,187.973,262.021,300.000);
	tmpobjid = CreateObject(19461,-2031.665,1006.000,1419.246,90.000,173.366,276.622,300.000);
	tmpobjid = CreateObject(19461,-2031.665,1009.000,1419.246,90.000,174.171,275.812,300.000);
	tmpobjid = CreateObject(19461,-2031.665,1012.000,1419.246,90.000,174.651,275.327,300.000);
	tmpobjid = CreateObject(19461,-2031.665,1015.000,1419.246,90.000,184.915,265.057,300.000);
	tmpobjid = CreateObject(19461,-2031.665,1018.000,1419.246,90.000,184.272,265.693,300.000);
	tmpobjid = CreateObject(19461,-2031.665,1021.000,1419.246,90.000,175.297,274.663,300.000);
	tmpobjid = CreateObject(19461,-2024.975,1016.330,1427.466,0.000,180.000,0.000,300.000);
	tmpobjid = CreateObject(19461,-2024.975,1006.664,1427.466,0.000,179.994,0.000,300.000);
	tmpobjid = CreateObject(19461,-2024.975,997.057,1427.466,0.000,179.994,0.000,300.000);
	tmpobjid = CreateObject(19461,-2019.265,1016.239,1427.466,0.000,179.994,0.000,300.000);
	tmpobjid = CreateObject(19461,-2019.265,1006.659,1427.466,0.000,179.994,0.000,300.000);
	tmpobjid = CreateObject(19461,-2019.265,997.046,1427.466,0.000,179.994,0.000,300.000);
	tmpobjid = CreateObject(19461,-2017.302,997.752,1420.246,270.000,180.000,180.000,300.000);
	tmpobjid = CreateObject(19461,-2027.064,997.752,1420.246,270.000,179.999,179.999,300.000);
	tmpobjid = CreateObject(2639,-2025.591,1012.400,1418.125,0.000,0.000,179.994,300.000);
	tmpobjid = CreateObject(2639,-2025.591,1014.400,1418.125,0.000,0.000,179.994,300.000);
	tmpobjid = CreateObject(2639,-2025.591,1016.400,1418.125,0.000,0.000,179.994,300.000);
	tmpobjid = CreateObject(2639,-2028.253,1012.400,1418.125,0.000,0.000,179.994,300.000);
	tmpobjid = CreateObject(2639,-2028.253,1014.400,1418.125,0.000,0.000,179.994,300.000);
	tmpobjid = CreateObject(2639,-2028.253,1016.400,1418.125,0.000,0.000,179.994,300.000);
	tmpobjid = CreateObject(19461,-2027.066,1022.812,1419.246,270.000,179.994,0.000,300.000);
	tmpobjid = CreateObject(19461,-2017.303,1022.815,1419.246,270.000,179.994,0.000,300.000);
	tmpobjid = CreateObject(19461,-2012.505,1022.809,1420.000,0.000,270.000,0.000,300.000);
	tmpobjid = CreateObject(19461,-2031.665,1022.809,1420.000,0.000,90.000,0.000,300.000);
	tmpobjid = CreateObject(2205,-2022.656,1004.554,1418.496,0.000,0.000,0.000,300.000);
	tmpobjid = CreateObject(2309,-2021.995,1003.379,1418.496,0.000,0.000,0.000,300.000);
	tmpobjid = CreateObject(2894,-2021.970,1004.530,1419.433,0.000,0.000,0.000,300.000);
	tmpobjid = CreateObject(630,-2029.339,1017.335,1418.521,0.000,0.000,0.000,300.000);
	tmpobjid = CreateObject(630,-2027.333,1020.669,1418.521,0.000,0.000,0.000,300.000);
	tmpobjid = CreateObject(630,-2016.932,1020.552,1418.521,0.000,0.000,0.000,300.000);
	tmpobjid = CreateObject(630,-2014.512,1017.344,1418.521,0.000,0.000,0.000,300.000);
	tmpobjid = CreateObject(630,-2014.839,999.883,1419.521,0.000,0.000,0.000,300.000);
	tmpobjid = CreateObject(630,-2029.334,999.851,1419.521,0.000,0.000,0.000,300.000);
	tmpobjid = CreateObject(18075,-2019.551,1006.838,1425.645,0.000,0.000,0.000,300.000);
	tmpobjid = CreateObject(18075,-2019.551,1018.989,1425.645,0.000,0.000,0.000,300.000);
	//==============
    lspdslak = CreateObject(968,1544.69995117,-1630.80004883,13.10000038,0.00000000,90.00000000,90.00000000);
	//КОСТИ
	CreateObject(1824, 2230.718505,1612.093750,1005.711547, 0.000000,0.000000,0.000000);
	CreateObject(1824, 2242.250000,1612.207031,1005.679687, 0.000000,0.000000,0.000000);
	CreateObject(14628, 1206.501098,-1746.465332,21.179649, 0.000000,0.000000,44.399982);
	//-- САЛОН СОТОВОЙ СВЯЗИ
	CreateDynamicObject(1337, 415.671875, 2541.5830078125, 10.772832870483, 0, 0, 0);
	CreateDynamicObject(19358, 825.8662109375, 6.4228515625, 995.19500732422, 0, 0, 0);
	CreateDynamicObject(19379, 831.11199951172, 3.319000005722, 993.46301269531, 0, 90, 0);
	CreateDynamicObject(19358, 833.3017578125, 8.1181640625, 995.19500732422, 0, 0, 90);
	CreateDynamicObject(19358, 830.1611328125, 8.1181640625, 995.19500732422, 0, 0, 90);
	CreateDynamicObject(19358, 826.9765625, 8.1181640625, 995.19500732422, 0, 0, 90);
	CreateDynamicObject(19358, 825.8662109375, 3.23828125, 995.19500732422, 0, 0, 0);
	CreateDynamicObject(19358, 825.86602783203, 0.14599999785423, 995.19500732422, 0, 0, 0);
	CreateDynamicObject(19358, 834.8046875, 6.4228515625, 995.19500732422, 0, 0, 0);
	CreateDynamicObject(19358, 834.8046875, 3.23828125, 995.19500732422, 0, 0, 0);
	CreateDynamicObject(19358, 834.8046875, 0.146484375, 995.19500732422, 0, 0, 0);
	CreateDynamicObject(19358, 833.3017578125, -1.5263671875, 995.19500732422, 0, 0, 90);
	CreateDynamicObject(19358, 830.1611328125, -1.5263671875, 995.19500732422, 0, 0, 90);
	CreateDynamicObject(19358, 826.9765625, -1.5263671875, 995.19500732422, 0, 0, 90);
	CreateDynamicObject(19377, 831.11199951172, 3.319000005722, 996.89697265625, 0, 90, 0);
	CreateDynamicObject(1557, 828.80999755859, -1.4880000352859, 993.39801025391, 0, 0, 179.74731445313);
	CreateDynamicObject(2459, 835.01800537109, 0.70300000905991, 993.32501220703, 0, 0, 90);
	CreateDynamicObject(18872, 834.46801757813, 2.4619998931885, 994.73199462891, 0, 0, 273.9990234375);
	CreateDynamicObject(18865, 834.4873046875, 2.283203125, 994.73199462891, 0, 0, 271.99951171875);
	CreateDynamicObject(18867, 834.4658203125, 1.9638671875, 994.42297363281, 0, 0, 267.99499511719);
	CreateDynamicObject(18868, 834.4404296875, 1.8505859375, 994.73199462891, 0, 0, 271.99951171875);
	CreateDynamicObject(18869, 834.48797607422, 2.3699998855591, 994.42297363281, 0, 0, 273.9990234375);
	CreateDynamicObject(18871, 834.4365234375, 2.1494140625, 994.42297363281, 0, 0, 273.99353027344);
	CreateDynamicObject(2165, 831.33099365234, 7.5640001296997, 993.52398681641, 0, 0, 0);
	CreateDynamicObject(2166, 833.27301025391, 7.5599999427795, 993.52301025391, 0, 0, 270);
	CreateDynamicObject(2356, 833.04400634766, 6.6230001449585, 993.54699707031, 0, 0, 315.99975585938);
	CreateDynamicObject(2356, 831.96197509766, 6.710000038147, 993.54901123047, 0, 0, 11.991577148438);
	CreateDynamicObject(2161, 830.04602050781, 8.0129995346069, 993.52301025391, 0, 0, 0);
	CreateDynamicObject(1723, 826.44500732422, 5.5310001373291, 993.47497558594, 0, 0, 90);
	CreateDynamicObject(2249, 829.89099121094, 7.7709999084473, 995.57598876953, 0, 0, 0);
	CreateDynamicObject(2251, 831.68499755859, -1.0099999904633, 994.26702880859, 0, 0, 179.99450683594);
	CreateDynamicObject(2239, 828.14398193359, 7.683000087738, 993.52301025391, 0, 0, 0);
	CreateDynamicObject(2239, 834.36102294922, 4.9489998817444, 993.52301025391, 0, 0, 271.99951171875);
	//CreateDynamicObject(2754, 830.41802978516, -1.5240000486374, 994.45098876953, 0, 0, 270);
	//CreateDynamicObject(2754, 833.02099609375, -1.5240000486374, 994.45098876953, 0, 0, 270);
	//CreateDynamicObject(2754, 834.71899414063, 3.5520000457764, 994.45098876953, 0, 0, 0);
	//==========================================
	CreateDynamicObject(18009,1421.55664062,-1476.41503906,108.81269836,0.00000000,0.00000000,0.24719238); //object(int_rest_main) (1)
	CreateDynamicObject(9339,1420.00195312,-1485.98437500,106.26802063,0.00000000,0.00000000,90.00000000); //object(sfnvilla001_cm) (1)
	CreateDynamicObject(9339,1420.00195312,-1485.18432617,105.81802368,0.00000000,90.00000000,90.00000000); //object(sfnvilla001_cm) (1)
	CreateDynamicObject(2591,1425.74645996,-1484.36608887,109.15025330,0.00000000,0.00000000,0.00000000); //object(ab_partition1) (1)
	CreateDynamicObject(14455,1410.30786133,-1474.29858398,107.24227142,0.00000000,0.00000000,270.00000000); //object(gs_bookcase) (2)
	CreateDynamicObject(2168,1422.08178711,-1485.69152832,106.01467133,0.00000000,0.00000000,0.00000000); //object(partition) (1)
	CreateDynamicObject(2168,1415.02416992,-1485.73022461,105.96894836,0.00000000,0.00000000,0.00000000); //object(partition) (2)
	CreateDynamicObject(1723,1419.08398438,-1485.31469727,105.96894836,0.00000000,0.00000000,180.00000000); //object(mrk_seating1) (1)
	CreateDynamicObject(1724,1421.29687500,-1484.85644531,105.96894836,0.00000000,0.00000000,209.99816895); //object(mrk_seating1b) (1)
	CreateDynamicObject(1724,1415.74707031,-1485.39160156,105.96894836,0.00000000,0.00000000,144.49768066); //object(mrk_seating1b) (2)
	CreateDynamicObject(2229,1417.21325684,-1479.09765625,105.96894836,0.00000000,0.00000000,0.00000000); //object(swank_speaker) (1)
	CreateDynamicObject(1829,1425.18774414,-1485.10229492,106.43347931,0.00000000,0.00000000,181.00000000); //object(man_safenew) (1)
	CreateDynamicObject(1786,1418.14428711,-1479.04687500,106.62519836,0.00000000,0.00000000,0.00000000); //object(swank_tv_4) (1)
	CreateDynamicObject(2101,1418.23950195,-1479.37695312,105.96894836,0.00000000,0.00000000,0.00000000); //object(med_hi_fi_3) (1)
	CreateDynamicObject(2229,1419.86352539,-1479.07641602,105.96894836,0.00000000,0.00000000,0.00000000); //object(swank_speaker) (2)
	CreateDynamicObject(14651,1416.64697266,-1477.13720703,107.81197357,0.00000000,0.00000000,0.00000000); //object(trukstp05) (1)
	CreateDynamicObject(3003,1416.34631348,-1476.28381348,106.71875763,0.00000000,0.00000000,0.00000000); //object(k_poolballcue) (1)
	CreateDynamicObject(3001,1416.48364258,-1476.90319824,106.71836090,0.00000000,0.00000000,0.00000000); //object(k_poolballstp07) (1)
	CreateDynamicObject(3000,1416.15295410,-1476.84497070,106.71836090,0.00000000,0.00000000,0.00000000); //object(k_poolballstp06) (1)
	CreateDynamicObject(2999,1416.35668945,-1476.83203125,106.71836090,0.00000000,0.00000000,0.00000000); //object(k_poolballstp05) (2)
	CreateDynamicObject(2998,1415.67321777,-1477.64367676,106.71836090,0.00000000,0.00000000,0.00000000); //object(k_poolballstp04) (1)
	CreateDynamicObject(2997,1416.18164062,-1477.38500977,106.71836090,0.00000000,0.00000000,0.00000000); //object(k_poolballstp03) (1)
	CreateDynamicObject(2996,1416.17443848,-1476.03356934,106.71836090,0.00000000,0.00000000,0.00000000); //object(k_poolballstp02) (1)
	CreateDynamicObject(2995,1415.93994141,-1477.10058594,106.71836090,0.00000000,0.00000000,0.00000000); //object(k_poolballstp01) (1)
	CreateDynamicObject(3089,1425.65625000,-1482.68359375,107.29795074,0.00000000,0.00000000,90.49987793); //object(ab_casdorlok) (3)
	CreateDynamicObject(3089,1425.63317871,-1479.70898438,107.29795074,0.00000000,0.00000000,270.50000000); //object(ab_casdorlok) (4)
	CreateDynamicObject(3089,1425.64367676,-1480.98962402,108.62991333,180.00000000,90.00000000,270.24707031); //object(ab_casdorlok) (7)
	CreateDynamicObject(3089,1425.65332031,-1481.18945312,108.62991333,179.99450684,90.00000000,270.24169922); //object(ab_casdorlok) (8)
	CreateDynamicObject(2606,1415.56835938,-1479.31054688,109.29582977,0.00000000,0.00000000,0.24719238); //object(cj_police_counter2) (1)
	CreateDynamicObject(2606,1417.54284668,-1479.30444336,109.29582977,0.00000000,0.00000000,0.24719238); //object(cj_police_counter2) (4)
	CreateDynamicObject(2606,1419.50927734,-1479.29504395,109.29582977,0.00000000,0.00000000,0.24719238); //object(cj_police_counter2) (6)
	CreateDynamicObject(2606,1420.48291016,-1479.28979492,109.29582977,0.00000000,0.00000000,0.24719238); //object(cj_police_counter2) (8)
	CreateDynamicObject(1815,1417.70898438,-1483.37109375,105.96894836,0.00000000,0.00000000,0.00000000); //object(coffee_low_2) (1)
	CreateDynamicObject(1723,1411.22277832,-1473.70483398,105.57051086,0.00000000,0.00000000,0.00000000); //object(mrk_seating1) (3)
	CreateDynamicObject(14824,1426.66381836,-1481.71398926,107.22100830,0.00000000,0.00000000,89.75000000); //object(gym1_doorway) (1)
	CreateDynamicObject(3503,1415.56628418,-1479.25891113,107.84841919,0.00000000,0.00000000,0.25000000); //object(vgsnscffple) (1)
	CreateDynamicObject(3503,1420.47753906,-1479.22753906,107.84841919,0.00000000,0.00000000,0.24719238); //object(vgsnscffple) (3)
	CreateDynamicObject(2854,1418.18090820,-1482.96203613,106.46540070,0.00000000,0.00000000,0.00000000); //object(gb_bedmags04) (1)
	CreateDynamicObject(2828,1421.26721191,-1485.96716309,106.97288513,0.00000000,0.00000000,0.00000000); //object(gb_ornament02) (1)
	CreateDynamicObject(2827,1416.14843750,-1479.22558594,106.62519836,0.00000000,0.00000000,189.99755859); //object(gb_novels05) (1)
	CreateDynamicObject(14446,1425.78173828,-1476.48657227,106.15816498,0.00000000,0.00000000,270.00000000); //object(smokes_bed) (1)
	CreateDynamicObject(2628,1411.57714844,-1484.84875488,105.96894836,0.00000000,0.00000000,140.00000000); //object(gym_bench2) (2)
	CreateDynamicObject(2591,1416.38769531,-1473.19921875,108.08360291,0.00000000,0.00000000,90.00000000); //object(ab_partition1) (3)
	CreateDynamicObject(2591,1419.73852539,-1473.17944336,108.08360291,0.00000000,0.00000000,90.00000000); //object(ab_partition1) (3)
	CreateDynamicObject(2855,1420.90148926,-1479.25085449,106.62519836,0.00000000,0.00000000,32.00000000); //object(gb_bedmags05) (1)
	CreateDynamicObject(2833,1425.42797852,-1481.72595215,105.96894836,0.00000000,0.00000000,91.00000000); //object(gb_livingrug02) (2)
	CreateDynamicObject(2344,1418.07580566,-1483.23376465,106.47547913,0.00000000,0.00000000,150.00000000); //object(cj_remote) (1)
	CreateDynamicObject(1557,1410.52185059,-1482.92675781,105.96894836,0.00000000,0.00000000,90.00000000); //object(gen_doorext19) (1)
	CreateDynamicObject(2811,1419.93200684,-1485.54138184,105.96894836,0.00000000,0.00000000,0.00000000); //object(gb_romanpot01) (1)
	CreateDynamicObject(2811,1416.13049316,-1485.51489258,105.96894836,0.00000000,0.00000000,0.00000000); //object(gb_romanpot01) (2)
	CreateDynamicObject(2252,1425.06628418,-1485.41906738,107.23534393,0.00000000,0.00000000,0.00000000); //object(plant_pot_21) (1)
	CreateDynamicObject(2251,1420.01110840,-1479.19641113,107.46805573,0.00000000,0.00000000,0.00000000); //object(plant_pot_20) (1)
	CreateDynamicObject(2802,1423.44104004,-1485.06787109,106.29920959,0.00000000,0.00000000,278.00000000); //object(castable1) (2)
	CreateDynamicObject(2801,1423.46447754,-1485.06628418,106.28816986,0.00000000,0.00000000,8.25000000); //object(castable1top) (5)
	CreateDynamicObject(1814,1419.24145508,-1476.99511719,105.57051086,0.00000000,0.00000000,0.00000000); //object(coffee_med_1) (1)
	CreateDynamicObject(1724,1418.71789551,-1478.53723145,105.57051086,0.00000000,0.00000000,144.49771118); //object(mrk_seating1b) (2)
	CreateDynamicObject(1724,1421.41003418,-1477.97778320,105.57051086,0.00000000,0.00000000,209.99816895); //object(mrk_seating1b) (1)
	CreateDynamicObject(2257,1423.75402832,-1473.15869141,107.45019531,0.00000000,0.00000000,0.25000000); //object(frame_clip_4) (1)
	CreateDynamicObject(2260,1427.09069824,-1478.01611328,107.73090363,0.00000000,0.00000000,270.50000000); //object(frame_slim_1) (2)
	CreateDynamicObject(2267,1427.53063965,-1476.59716797,107.77743530,0.00000000,0.00000000,270.50000000); //object(frame_wood_3) (1)
	CreateDynamicObject(2263,1427.04516602,-1475.05761719,107.83457947,0.00000000,0.00000000,270.25000000); //object(frame_slim_4) (1)
	CreateDynamicObject(2275,1411.06738281,-1480.37634277,107.39463806,0.00000000,0.00000000,90.25000000); //object(frame_fab_4) (1)
	CreateDynamicObject(2276,1411.17529297,-1483.91027832,107.22693634,0.00000000,0.00000000,90.00000000); //object(frame_fab_3) (1)
	CreateDynamicObject(2827,1419.32348633,-1476.53100586,106.07695007,0.00000000,0.00000000,146.00000000); //object(gb_novels05) (3)
	CreateDynamicObject(2853,1420.09118652,-1476.51049805,106.07695007,0.00000000,0.00000000,0.00000000); //object(gb_bedmags03) (1)
	CreateDynamicObject(1724,1419.25317383,-1474.72656250,105.57051086,0.00000000,0.00000000,0.00000000); //object(mrk_seating1b) (1)
	//=========== БАНК
	new bank_interior;
    bank_interior = CreateDynamicObjectEx(19379,1375.020,893.325,1105.004,0.000,90.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 11301, "carshow_sfse", "concpanel_la", 0);
    bank_interior = CreateDynamicObjectEx(19378,1369.701,899.980,1104.144,0.000,90.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 11301, "carshow_sfse", "concpanel_la", 0);
    bank_interior = CreateDynamicObjectEx(19448,1374.559,899.470,1103.342,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(14387,1372.138,899.271,1104.099,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 11301, "carshow_sfse", "concpanel_la", 0);
    bank_interior = CreateDynamicObjectEx(19448,1374.162,904.211,1103.342,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 3980, "cityhall_lan", "LAcityhwal1", 0);
    bank_interior = CreateDynamicObjectEx(19379,1364.526,893.325,1105.004,0.000,90.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 11301, "carshow_sfse", "concpanel_la", 0);
    bank_interior = CreateDynamicObjectEx(19379,1364.393,902.943,1105.004,0.000,90.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 11301, "carshow_sfse", "concpanel_la", 0);
    bank_interior = CreateDynamicObjectEx(19442,1369.712,901.620,1104.488,90.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10765, "airportgnd_sfse", "white", 0);
    bank_interior = CreateDynamicObjectEx(19448,1374.569,904.211,1106.835,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 3980, "cityhall_lan", "LAcityhwal1", 0);
    bank_interior = CreateDynamicObjectEx(19379,1364.392,912.572,1105.004,0.000,90.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 11301, "carshow_sfse", "concpanel_la", 0);
    bank_interior = CreateDynamicObjectEx(19448,1372.757,904.830,1106.835,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 3980, "cityhall_lan", "LAcityhwal1", 0);
    bank_interior = CreateDynamicObjectEx(19448,1374.559,899.470,1106.835,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 3980, "cityhall_lan", "LAcityhwal1", 0);
    bank_interior = CreateDynamicObjectEx(19442,1369.712,898.163,1104.441,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10765, "airportgnd_sfse", "white", 0);
    bank_interior = CreateDynamicObjectEx(19386,1366.363,904.830,1106.835,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 3980, "cityhall_lan", "LAcityhwal1", 0);
    bank_interior = CreateDynamicObjectEx(19448,1368.455,909.729,1106.835,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 3980, "cityhall_lan", "LAcityhwal1", 0);
    bank_interior = CreateDynamicObjectEx(19448,1364.245,911.222,1106.835,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 3980, "cityhall_lan", "LAcityhwal1", 0);
    bank_interior = CreateDynamicObjectEx(19448,1359.897,909.648,1106.835,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 3980, "cityhall_lan", "LAcityhwal1", 0);
    bank_interior = CreateDynamicObjectEx(19448,1359.897,900.038,1106.835,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 3980, "cityhall_lan", "LAcityhwal1", 0);
    bank_interior = CreateDynamicObjectEx(19448,1359.897,890.430,1106.835,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 3980, "cityhall_lan", "LAcityhwal1", 0);
    bank_interior = CreateDynamicObjectEx(19448,1364.501,889.018,1106.835,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 3980, "cityhall_lan", "LAcityhwal1", 0);
    bank_interior = CreateDynamicObjectEx(19448,1374.126,889.018,1106.835,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 3980, "cityhall_lan", "LAcityhwal1", 0);
    bank_interior = CreateDynamicObjectEx(19448,1374.559,889.843,1106.835,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 3980, "cityhall_lan", "LAcityhwal1", 0);
    bank_interior = CreateDynamicObjectEx(19362,1374.124,891.020,1106.830,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1372.650,889.508,1106.830,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1371.133,887.991,1106.830,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1375.643,892.539,1106.830,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19449,1374.535,893.339,1103.541,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19449,1366.282,889.032,1103.541,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(2446,1372.499,892.950,1104.937,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10398, "countryclub_sfs", "hc_wall1", 0);
    bank_interior = CreateDynamicObjectEx(2446,1371.508,892.950,1104.937,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10398, "countryclub_sfs", "hc_wall1", 0);
    bank_interior = CreateDynamicObjectEx(2446,1370.879,892.947,1104.935,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10398, "countryclub_sfs", "hc_wall1", 0);
    bank_interior = CreateDynamicObjectEx(2446,1370.636,892.663,1104.939,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10398, "countryclub_sfs", "hc_wall1", 0);
    bank_interior = CreateDynamicObjectEx(2446,1370.636,891.678,1104.939,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10398, "countryclub_sfs", "hc_wall1", 0);
    bank_interior = CreateDynamicObjectEx(2446,1370.634,890.956,1104.937,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10398, "countryclub_sfs", "hc_wall1", 0);
    bank_interior = CreateDynamicObjectEx(19386,1360.917,901.759,1106.835,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 3980, "cityhall_lan", "LAcityhwal1", 0);
    bank_interior = CreateDynamicObjectEx(19356,1363.332,901.761,1106.835,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 3980, "cityhall_lan", "LAcityhwal1", 0);
    bank_interior = CreateDynamicObjectEx(2414,1363.273,900.208,1104.908,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(bank_interior, 2, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    SetDynamicObjectMaterial(bank_interior, 3, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19356,1364.844,903.311,1106.835,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 3980, "cityhall_lan", "LAcityhwal1", 0);
    bank_interior = CreateDynamicObjectEx(2414,1363.273,898.207,1104.908,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(bank_interior, 2, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    SetDynamicObjectMaterial(bank_interior, 3, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(2414,1363.273,896.213,1104.908,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(bank_interior, 2, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    SetDynamicObjectMaterial(bank_interior, 3, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(2414,1363.273,894.221,1104.908,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(bank_interior, 2, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    SetDynamicObjectMaterial(bank_interior, 3, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(2414,1363.273,892.233,1104.908,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(bank_interior, 2, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    SetDynamicObjectMaterial(bank_interior, 3, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(2414,1363.273,890.233,1104.908,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(bank_interior, 2, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    SetDynamicObjectMaterial(bank_interior, 3, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(2414,1363.273,888.249,1104.908,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 3980, "cityhall_lan", "LAcityhwal1", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(bank_interior, 2, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    SetDynamicObjectMaterial(bank_interior, 3, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19449,1363.637,893.929,1103.541,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19450,1363.624,893.869,1104.187,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 3980, "cityhall_lan", "LAcityhwal1", 0);
    bank_interior = CreateDynamicObjectEx(19450,1363.621,896.913,1104.187,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 3980, "cityhall_lan", "LAcityhwal1", 0);
    bank_interior = CreateDynamicObjectEx(19449,1363.635,896.917,1103.541,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19450,1362.962,893.918,1104.211,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 3980, "cityhall_lan", "LAcityhwal1", 0);
    bank_interior = CreateDynamicObjectEx(19450,1362.960,896.894,1104.211,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 3980, "cityhall_lan", "LAcityhwal1", 0);
    bank_interior = CreateDynamicObjectEx(19449,1356.660,889.032,1103.541,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19449,1359.912,893.926,1103.541,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19449,1359.912,903.541,1103.541,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19356,1363.253,903.312,1106.835,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 3980, "cityhall_lan", "LAcityhwal1", 0);
    bank_interior = CreateDynamicObjectEx(19327,1373.322,889.605,1107.310,0.000,0.000,180.000,300.000,300.000);
    SetDynamicObjectMaterialText(bank_interior, 0, "GREEN", 130, "Ariel", 90, 1, -1, 0, 1);
    bank_interior = CreateDynamicObjectEx(19449,1359.912,913.141,1103.541,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19449,1364.391,911.205,1103.541,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(2229,1363.781,888.874,1105.031,0.000,0.000,-90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10765, "airportgnd_sfse", "white", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(2229,1363.781,891.302,1105.031,0.000,0.000,-90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10765, "airportgnd_sfse", "white", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(2229,1363.781,893.802,1105.031,0.000,0.000,-90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10765, "airportgnd_sfse", "white", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(2229,1363.781,896.302,1105.031,0.000,0.000,-90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10765, "airportgnd_sfse", "white", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(2229,1363.781,898.802,1105.031,0.000,0.000,-90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10765, "airportgnd_sfse", "white", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(2229,1363.781,901.302,1105.031,0.000,0.000,-90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10765, "airportgnd_sfse", "white", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(2229,1362.881,889.490,1105.031,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10765, "airportgnd_sfse", "white", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(2229,1362.881,891.918,1105.031,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10765, "airportgnd_sfse", "white", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(2229,1362.881,894.417,1105.031,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10765, "airportgnd_sfse", "white", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(2229,1362.881,896.916,1105.031,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10765, "airportgnd_sfse", "white", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(2229,1362.881,899.417,1105.031,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10765, "airportgnd_sfse", "white", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(2229,1362.881,901.917,1105.031,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10765, "airportgnd_sfse", "white", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19452,1366.751,895.460,1105.014,0.000,90.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
    bank_interior = CreateDynamicObjectEx(19355,1366.573,900.316,1103.372,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19447,1364.988,895.589,1103.373,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19355,1366.925,900.316,1103.370,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19447,1368.448,895.590,1103.373,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19355,1366.506,890.729,1103.372,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19355,1366.933,890.729,1103.374,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(1257,1358.671,906.378,1106.896,0.000,90.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 3, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    SetDynamicObjectMaterial(bank_interior, 4, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(1257,1364.213,912.473,1106.896,0.000,90.000,-90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 3, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    SetDynamicObjectMaterial(bank_interior, 4, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19380,1371.883,908.729,1108.517,0.000,90.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
    bank_interior = CreateDynamicObjectEx(19380,1371.883,899.117,1108.517,0.000,90.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
    bank_interior = CreateDynamicObjectEx(19380,1371.883,889.494,1108.517,0.000,90.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
    bank_interior = CreateDynamicObjectEx(19380,1361.389,908.729,1108.517,0.000,90.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
    bank_interior = CreateDynamicObjectEx(19380,1361.389,899.117,1108.517,0.000,90.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
    bank_interior = CreateDynamicObjectEx(19380,1361.389,889.494,1108.517,0.000,90.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1366.751,890.786,1108.078,0.000,90.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1368.268,890.711,1109.741,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1361.385,887.991,1106.830,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1359.867,889.510,1106.830,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1360.299,891.071,1106.830,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1358.990,896.100,1106.830,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1360.508,897.619,1106.341,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1368.268,893.904,1109.741,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1368.268,897.090,1109.741,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1366.751,894.274,1108.078,0.000,90.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1366.751,897.767,1108.078,0.000,90.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1368.270,897.913,1109.741,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1366.751,899.430,1109.741,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1365.232,890.706,1109.741,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1365.232,893.878,1109.741,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1365.232,897.063,1109.741,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1363.588,899.430,1109.741,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1363.553,897.767,1108.078,0.000,90.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1360.350,897.767,1108.078,0.000,90.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1360.420,899.430,1109.741,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1363.597,896.101,1109.741,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1360.395,896.101,1109.741,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1358.990,899.430,1106.830,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1360.506,897.912,1106.341,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19325,1369.719,900.879,1106.236,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10023, "bigwhitesfe", "sfe_arch8", 0);
    bank_interior = CreateDynamicObjectEx(19442,1369.712,904.015,1104.441,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10765, "airportgnd_sfse", "white", 0);
    bank_interior = CreateDynamicObjectEx(19442,1369.712,904.015,1107.920,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10765, "airportgnd_sfse", "white", 0);
    bank_interior = CreateDynamicObjectEx(19442,1369.712,898.163,1107.920,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10765, "airportgnd_sfse", "white", 0);
    bank_interior = CreateDynamicObjectEx(1499,1365.580,904.822,1105.072,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    bank_interior = CreateDynamicObjectEx(1499,1360.139,901.755,1105.072,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    bank_interior = CreateDynamicObjectEx(19449,1368.438,909.718,1103.541,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19449,1371.912,904.849,1103.541,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19442,1369.710,900.621,1104.488,90.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10765, "airportgnd_sfse", "white", 0);
    bank_interior = CreateDynamicObjectEx(19442,1369.710,900.621,1109.023,90.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10765, "airportgnd_sfse", "white", 0);
    bank_interior = CreateDynamicObjectEx(19442,1369.712,901.620,1109.023,90.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10765, "airportgnd_sfse", "white", 0);
    bank_interior = CreateDynamicObjectEx(19834,1369.719,900.045,1106.156,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19834,1369.719,902.377,1106.156,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19834,1369.719,902.377,1106.401,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19834,1369.719,900.045,1106.401,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19834,1369.721,902.377,1106.401,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19834,1369.721,900.045,1106.401,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19834,1369.721,900.045,1106.156,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19834,1369.721,902.377,1106.156,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19449,1374.535,902.950,1103.541,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19449,1371.914,904.810,1103.541,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19449,1374.549,904.190,1103.541,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19362,1375.642,901.920,1105.907,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1372.463,903.807,1105.907,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1374.124,903.438,1105.907,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1374.124,903.438,1109.386,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1375.642,901.920,1109.386,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1372.463,903.807,1109.386,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1370.946,905.324,1105.907,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1370.946,905.324,1109.386,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1374.124,900.265,1109.470,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1374.124,897.066,1109.470,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1374.126,893.905,1109.470,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1375.644,900.407,1107.807,0.000,90.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1375.644,896.932,1107.807,0.000,90.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1375.644,893.495,1107.807,0.000,90.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19449,1355.331,901.774,1103.541,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19449,1355.331,901.742,1103.541,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19357,1363.256,901.742,1103.541,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19357,1363.347,901.740,1103.541,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19357,1364.865,903.255,1103.541,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19430,1364.790,904.810,1103.541,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19357,1363.256,901.774,1103.541,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19430,1364.788,904.849,1103.541,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19430,1363.952,904.847,1103.541,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19430,1363.237,904.132,1103.541,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19430,1363.237,902.614,1103.541,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 18029, "genintintsmallrest", "GB_restaursmll08", 0);
    bank_interior = CreateDynamicObjectEx(19431,1363.701,911.204,1106.856,90.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 2823, "gb_kitchtake", "GB_pizzabox01", 0);
    bank_interior = CreateDynamicObjectEx(19431,1364.821,911.206,1106.856,90.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 2823, "gb_kitchtake", "GB_pizzabox01", 0);
    bank_interior = CreateDynamicObjectEx(19431,1359.922,905.911,1106.856,90.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 2823, "gb_kitchtake", "GB_pizzabox01", 0);
    bank_interior = CreateDynamicObjectEx(19431,1359.920,906.998,1106.856,90.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 2823, "gb_kitchtake", "GB_pizzabox01", 0);
    bank_interior = CreateDynamicObjectEx(949,1367.924,905.467,1105.676,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 727, "gtatreesh04", "sprucebark", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(bank_interior, 2, 825, "gta_proc_bigbush", "veg_bush4", 0);
    SetDynamicObjectMaterial(bank_interior, 3, 18029, "genintintsmallrest", "GB_restaursmll16b", 0);
    bank_interior = CreateDynamicObjectEx(2247,1370.738,893.086,1106.262,0.000,0.000,-18.299,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    bank_interior = CreateDynamicObjectEx(2165,1364.137,909.858,1105.083,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 3, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(2164,1359.984,909.641,1105.067,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 1, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(2162,1364.755,904.912,1105.067,0.000,0.000,180.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 1, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(2164,1363.162,903.777,1105.067,0.000,0.000,-90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 1, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(2164,1368.347,910.325,1105.067,0.000,0.000,-90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 1, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(2161,1368.356,908.567,1105.048,0.000,0.000,-90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 1, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(2161,1368.356,908.567,1106.386,0.000,0.000,-90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 1, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(2164,1368.343,907.236,1105.067,0.000,0.000,-90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 1, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1366.941,906.664,1108.078,0.000,90.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1364.776,906.664,1108.080,0.000,90.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1364.770,908.326,1109.742,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1367.941,908.326,1109.742,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1363.251,906.808,1109.742,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19362,1363.255,903.612,1109.742,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19428,1361.585,904.307,1110.150,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10398, "countryclub_sfs", "hc_wall1", 0);
    bank_interior = CreateDynamicObjectEx(19428,1361.585,906.807,1110.150,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10398, "countryclub_sfs", "hc_wall1", 0);
    bank_interior = CreateDynamicObjectEx(19428,1361.572,909.046,1110.150,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10398, "countryclub_sfs", "hc_wall1", 0);
    bank_interior = CreateDynamicObjectEx(19428,1364.132,909.788,1110.150,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10398, "countryclub_sfs", "hc_wall1", 0);
    bank_interior = CreateDynamicObjectEx(19428,1366.632,909.788,1110.150,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10398, "countryclub_sfs", "hc_wall1", 0);
    bank_interior = CreateDynamicObjectEx(2165,1361.116,906.902,1105.083,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 3, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(2293,1368.915,902.629,1105.083,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    bank_interior = CreateDynamicObjectEx(2293,1368.915,901.629,1105.083,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    bank_interior = CreateDynamicObjectEx(2293,1368.915,900.629,1105.083,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    bank_interior = CreateDynamicObjectEx(2293,1368.915,899.629,1105.083,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    bank_interior = CreateDynamicObjectEx(949,1369.044,903.903,1105.676,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 727, "gtatreesh04", "sprucebark", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(bank_interior, 2, 825, "gta_proc_bigbush", "veg_bush4", 0);
    SetDynamicObjectMaterial(bank_interior, 3, 18029, "genintintsmallrest", "GB_restaursmll16b", 0);
    bank_interior = CreateDynamicObjectEx(949,1369.036,898.346,1105.676,0.000,0.000,-55.799,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 727, "gtatreesh04", "sprucebark", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(bank_interior, 2, 825, "gta_proc_bigbush", "veg_bush4", 0);
    SetDynamicObjectMaterial(bank_interior, 3, 18029, "genintintsmallrest", "GB_restaursmll16b", 0);
    bank_interior = CreateDynamicObjectEx(19428,1371.250,892.322,1110.150,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10398, "countryclub_sfs", "hc_wall1", 0);
    bank_interior = CreateDynamicObjectEx(19428,1371.250,894.822,1110.150,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10398, "countryclub_sfs", "hc_wall1", 0);
    bank_interior = CreateDynamicObjectEx(19428,1371.250,897.322,1110.150,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10398, "countryclub_sfs", "hc_wall1", 0);
    bank_interior = CreateDynamicObjectEx(19428,1362.779,894.362,1110.150,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10398, "countryclub_sfs", "hc_wall1", 0);
    bank_interior = CreateDynamicObjectEx(19428,1362.779,892.362,1110.150,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10398, "countryclub_sfs", "hc_wall1", 0);
    bank_interior = CreateDynamicObjectEx(19428,1362.779,890.362,1110.150,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10398, "countryclub_sfs", "hc_wall1", 0);
    bank_interior = CreateDynamicObjectEx(19328,1368.348,904.723,1106.868,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 4806, "ground5_las", "newcut3_LAS", 0);
    bank_interior = CreateDynamicObjectEx(2164,1359.994,893.823,1105.067,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 1, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19327,1366.802,889.145,1106.765,0.000,0.000,180.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 4806, "ground5_las", "newcut3_LAS", 0);
    bank_interior = CreateDynamicObjectEx(19893,1372.242,892.876,1105.977,0.000,0.000,-16.019,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10765, "airportgnd_sfse", "black64", 0);
    bank_interior = CreateDynamicObjectEx(19893,1363.381,890.791,1105.957,0.000,0.000,-79.860,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10765, "airportgnd_sfse", "black64", 0);
    bank_interior = CreateDynamicObjectEx(19893,1363.3380,893.3340,1105.957,0.000,0.000,-93.180,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10765, "airportgnd_sfse", "black64", 0);
    bank_interior = CreateDynamicObjectEx(19893,1363.310,895.917,1105.957,0.000,0.000,-65.040,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10765, "airportgnd_sfse", "black64", 0);
    bank_interior = CreateDynamicObjectEx(19893,1363.266,898.381,1105.957,0.000,0.000,-86.400,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10765, "airportgnd_sfse", "black64", 0);
    bank_interior = CreateDynamicObjectEx(19893,1363.262,900.842,1105.957,0.000,0.000,-70.680,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10765, "airportgnd_sfse", "black64", 0);
    bank_interior = CreateDynamicObjectEx(19325,1363.695,898.140,1104.113,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10023, "bigwhitesfe", "sfe_arch8", 0);
    bank_interior = CreateDynamicObjectEx(19325,1363.695,891.499,1104.113,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10023, "bigwhitesfe", "sfe_arch8", 0);
    bank_interior = CreateDynamicObjectEx(1714,1362.008,900.271,1105.076,0.000,0.000,96.240,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 14708, "labig1int2", "doorframew", 0);
    bank_interior = CreateDynamicObjectEx(1714,1361.909,898.009,1105.076,0.000,0.000,71.999,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 14708, "labig1int2", "doorframew", 0);
    bank_interior = CreateDynamicObjectEx(1714,1361.918,895.450,1105.076,0.000,0.000,107.339,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 14708, "labig1int2", "doorframew", 0);
    bank_interior = CreateDynamicObjectEx(1714,1361.749,892.827,1105.076,0.000,0.000,69.239,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 14708, "labig1int2", "doorframew", 0);
    bank_interior = CreateDynamicObjectEx(1714,1361.725,890.287,1105.076,0.000,0.000,95.519,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 14708, "labig1int2", "doorframew", 0);
    bank_interior = CreateDynamicObjectEx(1721,1364.633,908.487,1105.076,0.000,0.000,-8.760,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10398, "countryclub_sfs", "hc_wall1", 0);
    bank_interior = CreateDynamicObjectEx(1714,1372.149,891.337,1105.076,0.000,0.000,213.179,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 14708, "labig1int2", "doorframew", 0);
    bank_interior = CreateDynamicObjectEx(1721,1362.293,907.627,1105.076,0.000,0.000,100.319,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10398, "countryclub_sfs", "hc_wall1", 0);
    bank_interior = CreateDynamicObjectEx(2826,1363.287,895.136,1105.952,0.000,0.000,-30.360,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 15040, "cuntcuts", "csnewspaper02", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 15040, "cuntcuts", "csnewspaper02", 0);
    SetDynamicObjectMaterial(bank_interior, 2, 15040, "cuntcuts", "csnewspaper02", 0);
    SetDynamicObjectMaterial(bank_interior, 3, 15040, "cuntcuts", "csnewspaper02", 0);
    SetDynamicObjectMaterial(bank_interior, 4, 15040, "cuntcuts", "csnewspaper02", 0);
    SetDynamicObjectMaterial(bank_interior, 5, 15040, "cuntcuts", "csnewspaper02", 0);
    SetDynamicObjectMaterial(bank_interior, 6, 15040, "cuntcuts", "csnewspaper02", 0);
    SetDynamicObjectMaterial(bank_interior, 7, 15040, "cuntcuts", "csnewspaper02", 0);
    SetDynamicObjectMaterial(bank_interior, 8, 15040, "cuntcuts", "csnewspaper02", 0);
    bank_interior = CreateDynamicObjectEx(2826,1363.316,899.938,1105.952,0.000,0.000,144.719,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 1, 15040, "cuntcuts", "csnewspaper02", 0);
    SetDynamicObjectMaterial(bank_interior, 2, 15040, "cuntcuts", "csnewspaper02", 0);
    SetDynamicObjectMaterial(bank_interior, 3, 15040, "cuntcuts", "csnewspaper02", 0);
    SetDynamicObjectMaterial(bank_interior, 4, 15040, "cuntcuts", "csnewspaper02", 0);
    SetDynamicObjectMaterial(bank_interior, 5, 15040, "cuntcuts", "csnewspaper02", 0);
    SetDynamicObjectMaterial(bank_interior, 6, 15040, "cuntcuts", "csnewspaper02", 0);
    SetDynamicObjectMaterial(bank_interior, 7, 15040, "cuntcuts", "csnewspaper02", 0);
    SetDynamicObjectMaterial(bank_interior, 8, 15040, "cuntcuts", "csnewspaper02", 0);
    bank_interior = CreateDynamicObjectEx(1532,1371.678,903.696,1104.209,0.000,0.000,0.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 10765, "airportgnd_sfse", "white", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(bank_interior, 2, 10101, "2notherbuildsfe", "ferry_build14", 0);
    bank_interior = CreateDynamicObjectEx(1721,1372.598,893.685,1105.076,0.000,0.000,100.319,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    SetDynamicObjectMaterial(bank_interior, 1, 10398, "countryclub_sfs", "hc_wall1", 0);
    bank_interior = CreateDynamicObjectEx(19327,1372.836,889.604,1106.840,0.000,0.000,180.000,300.000,300.000);
    SetDynamicObjectMaterialText(bank_interior, 0, "BANK", 130, "Ariel", 199, 1, -1, 0, 1);
    bank_interior = CreateDynamicObjectEx(19327,1372.371,889.601,1106.420,0.000,0.000,180.000,300.000,300.000);
    SetDynamicObjectMaterialText(bank_interior, 0, "SAN ANDREAS", 130, "Ariel", 50, 1, -1, 0, 1);
    bank_interior = CreateDynamicObjectEx(19327,1360.406,890.579,1107.220,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterialText(bank_interior, 0, "CREDIT", 130, "Ariel", 75, 1, -1, 0, 1);
    bank_interior = CreateDynamicObjectEx(19327,1360.408,890.983,1106.779,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterialText(bank_interior, 0, "CARD", 130, "Ariel", 180, 1, -1, 0, 1);
    bank_interior = CreateDynamicObjectEx(19327,1360.398,890.629,1106.390,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterialText(bank_interior, 0, "COMPLIMENTARY", 130, "Ariel", 36, 1, -1, 0, 1);
    bank_interior = CreateDynamicObjectEx(19362,1358.765,892.584,1106.680,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 14387, "dr_gsnew", "mp_cloth_subwall", 0);
    bank_interior = CreateDynamicObjectEx(19442,1364.087,904.830,1106.370,0.000,0.000,90.000,300.000,300.000);
    SetDynamicObjectMaterial(bank_interior, 0, 3980, "cityhall_lan", "LAcityhwal1", 0);
    bank_interior = CreateDynamicObjectEx(19807,1370.747,891.354,1106.037,0.000,0.000,69.720,300.000,300.000);
    bank_interior = CreateDynamicObjectEx(19807,1370.747,891.354,1106.037,0.000,0.000,69.720,300.000,300.000);
    bank_interior = CreateDynamicObjectEx(19807,1363.354,894.461,1106.027,0.000,0.000,-107.879,300.000,300.000);
    bank_interior = CreateDynamicObjectEx(19807,1363.336,892.050,1106.027,0.000,0.000,-107.879,300.000,300.000);
    bank_interior = CreateDynamicObjectEx(19807,1363.356,889.606,1106.027,0.000,0.000,-107.879,300.000,300.000);
    bank_interior = CreateDynamicObjectEx(19807,1363.339,897.146,1106.027,0.000,0.000,-107.879,300.000,300.000);
    bank_interior = CreateDynamicObjectEx(19807,1363.449,899.473,1106.027,0.000,0.000,-107.879,300.000,300.000);
    bank_interior = CreateDynamicObjectEx(19362,1359.959,890.609,1106.130,0.000,0.000,0.000,300.000,300.000);
    bank_interior = CreateDynamicObjectEx(19362,1372.806,889.472,1105.810,0.000,0.000,90.000,300.000,300.000);
	//=========== Автомастерская ==============
	CreateDynamicObject(4682,2519.24316406,-1530.63769531,3.24111104,0.00000000,0.00000000,0.00000000); //object(ladtbuild3_lan2) (1)
	CreateDynamicObject(1211,2521.81665039,-1509.66259766,23.61080551,0.00000000,0.00000000,0.00000000); //object(fire_hydrant) (1)
	CreateDynamicObject(1215,2498.63574219,-1514.54797363,23.56874657,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(9339,2498.24121094,-1533.11621094,23.70349884,0.00000000,0.00000000,0.00000000); //object(sfnvilla001_cm) (3)
	CreateDynamicObject(9339,2539.11328125,-1533.14062500,23.70581436,0.00000000,0.00000000,0.00000000); //object(sfnvilla001_cm) (4)
	CreateDynamicObject(9339,2511.39648438,-1546.04003906,23.70349884,0.00000000,0.00000000,90.00000000); //object(sfnvilla001_cm) (5)
	CreateDynamicObject(9339,2525.97363281,-1546.04394531,23.70349884,0.00000000,0.00000000,90.00000000); //object(sfnvilla001_cm) (5)
	CreateDynamicObject(9339,2539.13574219,-1527.32031250,23.70000076,0.00000000,0.00000000,0.00000000); //object(sfnvilla001_cm) (4)
	CreateDynamicObject(12929,2530.87255859,-1519.97961426,23.00673676,0.00000000,0.00000000,0.00000000); //object(sw_shed06) (1)
	CreateDynamicObject(12928,2530.92187500,-1519.91406250,23.00673676,0.00000000,0.00000000,0.00000000); //object(sw_shedinterior04) (1)
	CreateDynamicObject(9339,2526.21777344,-1514.38281250,23.70349884,0.00000000,0.00000000,90.00000000); //object(sfnvilla001_cm) (5)
	CreateDynamicObject(12929,2530.88769531,-1535.51171875,23.00673676,0.00000000,0.00000000,0.00000000); //object(sw_shed06) (1)
	CreateDynamicObject(12928,2530.88085938,-1535.51855469,23.00673676,0.00000000,0.00000000,0.00000000); //object(sw_shedinterior04) (1)
	CreateDynamicObject(10282,2533.38964844,-1520.02832031,24.01885223,0.00000000,0.00000000,270.67565918); //object(mich_int_sfe) (1)
	CreateDynamicObject(1238,2522.57031250,-1517.77929688,23.32491684,0.00000000,0.00000000,356.03002930); //object(trafficcone) (1)
	CreateDynamicObject(1238,2522.62329102,-1522.24584961,23.32491684,0.00000000,0.00000000,0.00000000); //object(trafficcone) (2)
	CreateDynamicObject(1238,2522.63232422,-1533.32238770,23.32260323,0.00000000,0.00000000,0.00000000); //object(trafficcone) (3)
	CreateDynamicObject(1238,2522.66040039,-1537.83117676,23.32260323,0.00000000,0.00000000,0.00000000); //object(trafficcone) (4)
	CreateDynamicObject(9339,2498.21679688,-1527.37304688,23.70349884,0.00000000,0.00000000,0.00000000); //object(sfnvilla001_cm) (3)
	CreateDynamicObject(994,2498.99316406,-1514.41479492,23.00442314,0.00000000,0.00000000,359.25000000); //object(lhouse_barrier2) (3)
	CreateDynamicObject(966,2506.27734375,-1514.43798828,23.00099945,0.00000000,0.00000000,180.00000000); //object(bar_gatebar01) (1)
	CreateDynamicObject(10282,2533.35351562,-1535.57617188,24.01885223,0.00000000,0.00000000,270.67565918); //object(mich_int_sfe) (2)
	CreateDynamicObject(9093,2506.39038086,-1523.13415527,24.77495384,0.00000000,0.00000000,179.99450684); //object(cmdgrgdoor_lvs) (1)
	CreateDynamicObject(11504,2502.38525391,-1525.69982910,23.00673676,0.00000000,0.00000000,90.00000000); //object(des_garagew) (1)
	CreateDynamicObject(9093,2534.78417969,-1523.85546875,24.77726746,0.00000000,0.00000000,90.00000000); //object(cmdgrgdoor_lvs) (2)
	CreateDynamicObject(9093,2534.65209961,-1539.46423340,24.77726746,0.00000000,0.00000000,90.00000000); //object(cmdgrgdoor_lvs) (3)
	CreateDynamicObject(1215,2505.69531250,-1514.56091309,23.57106018,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,2530.74072266,-1516.55480957,23.57106018,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,2530.69189453,-1532.12951660,23.57106018,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1008,2529.63085938,-1516.41601562,23.88518333,0.00000000,0.00000000,0.00000000); //object(nto_b_l) (2)
	CreateDynamicObject(1008,2529.43090820,-1532.00317383,23.92129135,0.00000000,0.00000000,0.00000000); //object(nto_b_l) (3)
	CreateDynamicObject(1074,2538.46020508,-1520.96044922,23.49887085,0.00000000,0.00000000,173.41137695); //object(wheel_sr3) (1)
	CreateDynamicObject(1080,2531.35058594,-1523.60229492,23.49887085,0.00000000,0.00000000,91.30950928); //object(wheel_sr5) (1)
	CreateDynamicObject(1080,2528.10131836,-1538.98278809,23.49887085,0.00000000,0.00000000,91.30737305); //object(wheel_sr5) (2)
	CreateDynamicObject(1085,2526.53027344,-1531.83264160,23.49887085,0.00000000,0.00000000,268.69067383); //object(wheel_gn2) (1)
	CreateDynamicObject(1226,2537.71533203,-1543.12304688,26.88115692,0.00000000,0.00000000,0.00000000); //object(lamppost3) (1)
	CreateDynamicObject(1226,2537.61059570,-1527.11535645,26.88115692,0.00000000,0.00000000,0.00000000); //object(lamppost3) (2)
	CreateDynamicObject(1226,2499.89257812,-1541.35852051,26.87884331,0.00000000,0.00000000,180.00000000); //object(lamppost3) (3)
	CreateDynamicObject(1226,2508.06909180,-1526.57690430,26.87884331,0.00000000,0.00000000,179.99450684); //object(lamppost3) (4)
	CreateDynamicObject(1358,2532.75683594,-1530.20739746,24.21028328,0.00000000,0.00000000,0.00000000); //object(cj_skip_rubbish) (2)
	CreateDynamicObject(1174,2531.67846680,-1529.40136719,24.14679527,0.00000000,0.00000000,0.00000000); //object(fbmp_lr_br1) (1)
	CreateDynamicObject(1080,2531.59619141,-1530.58312988,24.30549812,0.00000000,0.00000000,27.78979492); //object(wheel_sr5) (3)
	CreateDynamicObject(1008,2532.41503906,-1530.65454102,24.70563126,0.00000000,0.00000000,0.00000000); //object(nto_b_l) (4)
	CreateDynamicObject(1184,2532.46289062,-1529.56311035,24.01376343,0.00000000,0.00000000,0.00000000); //object(rbmp_lr_bl1) (1)
	CreateDynamicObject(1111,2534.15673828,-1530.33813477,24.29695892,0.00000000,0.00000000,0.00000000); //object(bnt_lr_slv1) (1)
	CreateDynamicObject(968,2506.19165039,-1514.42419434,23.76659966,0.00000000,0.00000000,0.00000000); // ШЛАКБАУМ
	//========== АШ ===============
	CreateObject(983, 1126.608886,-1725.414794,13.226872, 0.000000,0.000000,0.000000);
	CreateObject(983, 1075.478759,-1725.419433,13.235543, 0.000000,0.000000,0.000000);
	CreateObject(984, 1120.204956,-1728.604736,13.186001, 0.000000,0.000000,89.800010);
	CreateObject(984, 1107.434204,-1728.563354,13.181540, 0.000000,0.000000,-90.099975);
	CreateObject(984, 1094.585937,-1728.511840,13.166712, 0.000000,0.000000,-90.100013);
	CreateObject(984, 1081.909545,-1728.515869,13.173237, 0.000000,0.000000,-90.200019);
	/************************************[Инт.Мэрии]************************************************/
	CreateDynamicObject(1211,1156.99121094,-1721.34570312,13.31400013,0.00000000,0.00000000,0.00000000); //object(fire_hydrant) (1)//Advanced Role Play
	CreateDynamicObject(1257,1188.16296387,-1749.02502441,13.85000038,0.00000000,0.00000000,359.99450684); //object(bustopm) (2)//Advanced Role Play
	CreateDynamicObject(1258,1165.38000488,-1722.44702148,13.60799980,0.00000000,0.00000000,0.00000000); //object(mpostbox1) (1)//Advanced Role Play
	CreateDynamicObject(1892,371.51901245,167.08299255,1007.38299561,0.00000000,0.00000000,0.00000000); //object(security_gatsh) (1)//Advanced Role Play
	CreateDynamicObject(19356,358.13101196,159.74000549,1012.13299561,0.00000000,0.00000000,0.00000000); //object(wall004) (1)//Advanced Role Play
	CreateDynamicObject(19356,358.13101196,162.65100098,1012.13299561,0.00000000,0.00000000,0.00000000); //object(wall004) (3)//Advanced Role Play
	CreateDynamicObject(19356,358.13101196,165.66099548,1012.13299561,0.00000000,0.00000000,0.00000000); //object(wall004) (4)//Advanced Role Play
	CreateDynamicObject(19356,358.13101196,167.25599670,1012.13299561,0.00000000,0.00000000,0.00000000); //object(wall004) (5)//Advanced Role Play
	CreateDynamicObject(19356,358.13101196,169.53300476,1011.28302002,0.00000000,0.00000000,0.00000000); //object(wall004) (6)//Advanced Role Play
	CreateDynamicObject(19356,358.13101196,169.53300476,1008.30700684,0.00000000,0.00000000,0.00000000); //object(wall004) (7)//Advanced Role Play
	CreateDynamicObject(19356,358.13101196,166.48500061,1006.63299561,0.00000000,0.00000000,0.00000000); //object(wall004) (8)//Advanced Role Play
	CreateDynamicObject(19356,358.13101196,163.49000549,1006.63299561,0.00000000,0.00000000,0.00000000); //object(wall004) (9)//Advanced Role Play
	CreateDynamicObject(19356,358.15100098,160.28999329,1006.63299561,0.00000000,0.00000000,0.00000000); //object(wall004) (10)//Advanced Role Play
	CreateDynamicObject(19356,358.15100098,157.80799866,1006.63299561,0.00000000,0.00000000,0.00000000); //object(wall004) (11)//Advanced Role Play
	CreateDynamicObject(19356,358.13101196,159.53399658,1008.88299561,0.00000000,0.00000000,0.00000000); //object(wall004) (12)//Advanced Role Play
	CreateDynamicObject(19429,357.42898560,159.62500000,1008.28302002,0.00000000,90.00000000,89.99987793); //object(wall069) (1)//Advanced Role Play
	CreateDynamicObject(19429,357.37701416,162.56300354,1008.30700684,0.00000000,90.00000000,89.99981689); //object(wall069) (2)//Advanced Role Play
	CreateDynamicObject(19429,357.37701416,165.82099915,1008.30700684,0.00000000,90.00000000,89.99987793); //object(wall069) (3)//Advanced Role Play
	CreateDynamicObject(19429,357.37695312,169.29199219,1008.30700684,0.00000000,90.00000000,89.99450684); //object(wall069) (4)//Advanced Role Play
	CreateDynamicObject(19429,357.37701416,177.50199890,1008.30700684,0.00000000,90.00000000,90.00000000); //object(wall069) (6)//Advanced Role Play
	CreateDynamicObject(19429,357.37701416,181.00199890,1008.30700684,0.00000000,90.00000000,90.00000000); //object(wall069) (7)//Advanced Role Play
	CreateDynamicObject(19429,357.37701416,184.36199951,1008.30700684,0.00000000,90.00000000,90.00000000); //object(wall069) (8)//Advanced Role Play
	CreateDynamicObject(19429,357.37701416,187.84800720,1008.30700684,0.00000000,90.00000000,90.00000000); //object(wall069) (9)//Advanced Role Play
	CreateDynamicObject(19356,358.13101196,187.96299744,1008.88299561,0.00000000,0.00000000,0.00000000); //object(wall004) (14)//Advanced Role Play
	CreateDynamicObject(19356,358.13101196,187.96299744,1011.13299561,0.00000000,0.00000000,0.00000000); //object(wall004) (15)//Advanced Role Play
	CreateDynamicObject(19356,358.13101196,185.21800232,1006.63299561,0.00000000,0.00000000,0.00000000); //object(wall004) (16)//Advanced Role Play
	CreateDynamicObject(19356,358.13101196,182.14799500,1006.63299561,0.00000000,0.00000000,0.00000000); //object(wall004) (17)//Advanced Role Play
	CreateDynamicObject(19356,358.13101196,178.95799255,1006.63299561,0.00000000,0.00000000,0.00000000); //object(wall004) (18)//Advanced Role Play
	CreateDynamicObject(19356,358.13101196,177.45500183,1011.38299561,0.00000000,0.00000000,0.00000000); //object(wall004) (20)//Advanced Role Play
	CreateDynamicObject(19356,358.13101196,177.45500183,1008.38299561,0.00000000,0.00000000,0.00000000); //object(wall004) (21)//Advanced Role Play
	CreateDynamicObject(19356,358.13101196,184.98699951,1012.13299561,0.00000000,0.00000000,0.00000000); //object(wall004) (22)//Advanced Role Play
	CreateDynamicObject(19356,358.13101196,181.77200317,1012.13299561,0.00000000,0.00000000,0.00000000); //object(wall004) (23)//Advanced Role Play
	CreateDynamicObject(19429,358.13101196,179.63299561,1012.13299561,0.00000000,0.00000000,0.00000000); //object(wall069) (10)//Advanced Role Play
	CreateDynamicObject(19429,357.37701416,171.42201233,1006.65704346,0.00000000,0.00000000,90.00000000); //object(wall069) (11)//Advanced Role Play
	CreateDynamicObject(19429,357.37701416,169.63900757,1008.30700684,0.00000000,90.00000000,90.00000000); //object(wall069) (12)
	CreateDynamicObject(19429,357.37695312,175.71484375,1006.65704346,0.00000000,0.00000000,90.00000000); //object(wall069) (13)//Advanced Role Play
	CreateDynamicObject(19452,390.12399292,173.65499878,1007.43298340,0.00000000,90.00000000,0.00000000); //object(wall092) (1)//Advanced Role Play
	CreateDynamicObject(19452,386.63800049,173.65499878,1007.43298340,0.00000000,90.00000000,0.00000000); //object(wall092) (2)//Advanced Role Play
	CreateDynamicObject(19452,383.21099854,173.65499878,1007.43298340,0.00000000,90.00000000,0.00000000); //object(wall092) (3)//Advanced Role Play
	CreateDynamicObject(19452,380.13598633,173.65499878,1007.43298340,0.00000000,90.00000000,0.00000000); //object(wall092) (4)//Advanced Role Play
	CreateDynamicObject(19452,376.66500854,173.65499878,1007.43298340,0.00000000,90.00000000,0.00000000); //object(wall092) (5)//Advanced Role Play
	CreateDynamicObject(19452,373.25698853,173.65499878,1007.43298340,0.00000000,90.00000000,0.00000000); //object(wall092) (6)//Advanced Role Play
	CreateDynamicObject(19452,369.85800171,173.65499878,1007.43298340,0.00000000,90.00000000,0.00000000); //object(wall092) (7)//Advanced Role Play
	CreateDynamicObject(19452,366.47198486,173.65499878,1007.43298340,0.00000000,90.00000000,0.00000000); //object(wall092) (8)//Advanced Role Play
	CreateDynamicObject(19452,363.01599121,173.65499878,1007.43298340,0.00000000,90.00000000,0.00000000); //object(wall092) (9)//Advanced Role Play
	CreateDynamicObject(19452,359.72198486,173.61700439,1007.43298340,0.00000000,90.00000000,0.00000000); //object(wall092) (10)//Advanced Role Play
	CreateDynamicObject(19450,386.24301147,177.68099976,1009.26898193,0.00000000,0.00000000,90.00000000); //object(wall090) (1)//Advanced Role Play
	CreateDynamicObject(19450,382.28906250,177.68066406,1009.26898193,0.00000000,0.00000000,90.00000000); //object(wall090) (2)//Advanced Role Play
	CreateDynamicObject(19450,386.31600952,170.06300354,1009.26898193,0.00000000,0.00000000,90.00000000); //object(wall090) (3)//Advanced Role Play
	CreateDynamicObject(19450,382.29000854,170.06300354,1009.26898193,0.00000000,0.00000000,90.00000000); //object(wall090) (4)//Advanced Role Play
	CreateDynamicObject(19431,377.37600708,178.51600647,1009.26898193,0.00000000,0.00000000,0.00000000); //object(wall071) (1)//Advanced Role Play
	CreateDynamicObject(19431,377.42001343,169.39500427,1009.26898193,0.00000000,0.00000000,0.00000000); //object(wall071) (2)//Advanced Role Play
	CreateDynamicObject(19429,358.13101196,172.70500183,1012.26501465,90.00000000,165.03674316,14.96322632); //object(wall069) (14)//Advanced Role Play
	CreateDynamicObject(19429,358.13085938,176.00000000,1012.26501465,90.00000000,196.77612305,343.21838379); //object(wall069) (15)//Advanced Role Play
	CreateDynamicObject(19450,358.51599121,158.29100037,1009.22802734,0.00000000,0.00000000,90.00000000); //object(wall090) (5)//Advanced Role Play
	CreateDynamicObject(19450,363.94500732,158.29100037,1009.22802734,0.00000000,0.00000000,90.00000000); //object(wall090) (6)//Advanced Role Play
	CreateDynamicObject(19450,360.95599365,189.35299683,1009.22802734,0.00000000,0.00000000,90.00000000); //object(wall090) (7)//Advanced Role Play
	CreateDynamicObject(19450,351.87799072,189.35299683,1009.22802734,0.00000000,0.00000000,90.00000000); //object(wall090) (8)//Advanced Role Play
	CreateDynamicObject(19450,372.17599487,189.35299683,1009.22802734,0.00000000,0.00000000,90.00000000); //object(wall090) (9)//Advanced Role Play
	CreateDynamicObject(19450,377.06738281,185.02246094,1009.22900391,0.00000000,0.00000000,0.00000000); //object(wall090) (10)//Advanced Role Play
	CreateDynamicObject(19431,377.37600708,179.65199280,1009.24798584,0.00000000,0.00000000,0.00000000); //object(wall071) (3)//Advanced Role Play
	CreateDynamicObject(19450,368.83499146,161.84800720,1009.22802734,0.00000000,0.00000000,0.00000000); //object(wall090) (11)//Advanced Role Play
	CreateDynamicObject(19388,366.52700806,189.35299683,1009.22998047,0.00000000,0.00000000,90.00000000); //object(wall036) (1)//Advanced Role Play
	CreateDynamicObject(1649,358.21701050,162.68499756,1009.04901123,0.00000000,0.00000000,90.00000000); //object(wglasssmash) (1)//Advanced Role Play
	CreateDynamicObject(1649,358.21701050,167.07400513,1009.04901123,0.00000000,0.00000000,90.00000000); //object(wglasssmash) (2)//Advanced Role Play
	CreateDynamicObject(1649,358.21701050,180.73599243,1009.04901123,0.00000000,0.00000000,90.00000000); //object(wglasssmash) (3)//Advanced Role Play
	CreateDynamicObject(1649,358.21701050,185.08500671,1009.04901123,0.00000000,0.00000000,90.00000000); //object(wglasssmash) (4)//Advanced Role Play
	CreateDynamicObject(1649,358.09600830,185.35899353,1010.05902100,0.00000000,0.00000000,271.00000000); //object(wglasssmash) (5)//Advanced Role Play
	CreateDynamicObject(1649,358.19299316,181.04100037,1009.88299561,0.00000000,0.00000000,270.99975586); //object(wglasssmash) (7)//Advanced Role Play
	CreateDynamicObject(1649,358.21701050,166.54299927,1009.93798828,0.00000000,0.00000000,268.99975586); //object(wglasssmash) (8)//Advanced Role Play
	CreateDynamicObject(1649,358.21701050,162.57699585,1009.46600342,0.00000000,0.00000000,268.99475098); //object(wglasssmash) (9)//Advanced Role Play
	CreateDynamicObject(19452,355.36499023,161.65899658,1007.43298340,0.00000000,90.00000000,0.00000000); //object(wall092) (12)//Advanced Role Play
	CreateDynamicObject(19452,355.00900269,180.91099548,1007.43298340,0.00000000,90.00000000,0.00000000); //object(wall092) (15)//Advanced Role Play
	CreateDynamicObject(2894,360.43499756,173.97799683,1008.10900879,0.00000000,0.00000000,290.00000000); //object(kmb_rhymesbook) (1)//Advanced Role Play
	CreateDynamicObject(2828,359.32299805,171.16799927,1008.10900879,0.00000000,0.00000000,0.00000000); //object(gb_ornament02) (1)//Advanced Role Play
	CreateDynamicObject(627,367.85598755,159.57499695,1009.17901611,0.00000000,0.00000000,0.00000000); //object(veg_palmkb3) (1)//Advanced Role Play
	CreateDynamicObject(1723,360.29000854,188.33000183,1007.38299561,0.00000000,0.00000000,0.00000000); //object(mrk_seating1) (1)//Advanced Role Play
	CreateDynamicObject(1724,358.81298828,187.09199524,1007.38299561,0.00000000,0.00000000,48.00000000); //object(mrk_seating1b) (1)//Advanced Role Play
	CreateDynamicObject(1724,363.06799316,188.29200745,1007.38299561,0.00000000,0.00000000,337.99926758); //object(mrk_seating1b) (2)//Advanced Role Play
	CreateDynamicObject(2311,360.75299072,186.54200745,1007.38299561,0.00000000,0.00000000,0.00000000); //object(cj_tv_table2) (1)//Advanced Role Play
	CreateDynamicObject(19452,354.88699341,171.28700256,1007.43298340,0.00000000,90.00000000,0.00000000); //object(wall092) (14)//Advanced Role Play
	CreateDynamicObject(19433,357.35598755,171.85499573,1007.43298340,0.00000000,90.00000000,89.99987793); //object(wall073) (1)//Advanced Role Play
	CreateDynamicObject(19433,357.35598755,175.34800720,1007.43298340,0.00000000,90.00000000,90.00000000); //object(wall073) (2)//Advanced Role Play
	CreateDynamicObject(19452,355.13900757,190.51599121,1007.43298340,0.00000000,90.00000000,0.00000000); //object(wall092) (15)//Advanced Role Play
	CreateDynamicObject(19172,358.21701050,169.55799866,1009.47100830,0.00000000,0.00000000,90.00000000); //object(samppicture1) (1)//Advanced Role Play
	CreateDynamicObject(19174,358.21701050,177.44099426,1009.44799805,0.00000000,0.00000000,90.00000000); //object(samppicture3) (1)//Advanced Role Play
	CreateDynamicObject(1499,151.80000305,1943.59997559,18.89999962,0.00000000,0.00000000,90.49438477); //object(cr1_door) (3)
	//==========================================================================
	new ASH = CreateObject(10671, 1081.0042, -1699.4206, 17.5568, 0.0000, 0.0000, 89.4968);
	SetObjectMaterialText(ASH, "АВТОШКОЛА", 0, 50, "Arial", 23, 1, -16776961, 0, 1);
	new BANK = CreateObject(9527, 1415.8060, -1702.4716, 17.3082, 7.3999, -0.0999, 48.7269);
	SetObjectMaterialText(BANK, "БАНК", 0, 50, "Arial", 40, 1, -1, -16468988, 1);
	new Paint = CreateObject(10671, 1427.5858, -963.8656, 41.5484, 0.0000, 0.0000, -100.8318);
	SetObjectMaterialText(Paint, "ПЕЙНТБОЛ", 0, 50, "Arial", 24, 1, -21761, 0, 1);
	new GGS = CreateObject(9527, 2523.5134, -1520.0479, 26.9767, 0.0000, 0.0000, -89.8477);
	SetObjectMaterialText(GGS,	"Автомастерская №1", 0, 50, "Arial", 16, 1, -16776961, 0, 1);
	new GG = CreateObject(9527, 2523.5368, -1535.6258, 27.0144, 0.0000, 0.0000, -89.8478);
	SetObjectMaterialText(GG, "Автомастерская №2", 0, 50, "Arial", 16, 1, -16776961, 0, 1);
	new MTC = CreateObject(9527, 1420.3134, -1623.7904, 17.0271, -0.8000, 0.0000, 89.2009);
	SetObjectMaterialText(MTC, "MTC", 0, 50, "Arial", 40, 1, -1, -65536, 1);
	//================== СИНГЛ ТЮНИНГ ==========================================
	CreateDynamicObject(17950,2067.2000000,-1832.3000000,14.8000000,0.0000000,0.0000000,90.0000000);
	CreateDynamicObject(17950,1846.8000000,-1855.4000000,14.6000000,0.0000000,0.0000000,0.0000000);
	CreateDynamicObject(17950,487.6000100,-1738.9000000,12.4000000,0.0000000,0.0000000,82.0000000);
	CreateDynamicObject(17950,1042.8000000,-1022.4000000,33.4000000,0.0000000,0.0000000,270.0000000);
	CreateDynamicObject(17950,1024.5000000,-1025.9000000,33.4000000,0.0000000,0.0000000,270.0000000);
	CreateDynamicObject(17950,-1936.1000000,242.3000000,35.6000000,0.0000000,0.0000000,270.0000000);
	CreateDynamicObject(17950,-1903.9000000,281.3999900,42.3000000,0.0000000,0.0000000,270.0000000);
	CreateDynamicObject(17950,-1903.8000000,281.2999900,44.0000000,0.0000000,0.0000000,270.0000000);
	CreateDynamicObject(17950,-2719.8000000,217.0000000,5.6000000,0.0000000,0.0000000,0.0000000);
	CreateDynamicObject(17950,-99.9000000,1116.0000000,21.0000000,0.0000000,0.0000000,0.0000000);
	CreateDynamicObject(17950,1971.9000000,2162.2000000,12.1000000,0.0000000,0.0000000,180.0000000);
	CreateDynamicObject(17950,2386.5000000,1047.1000000,12.1000000,0.0000000,0.0000000,270.0000000);
	//===================
	CreateDynamicObject(9833, 1480.136352,-1639.330566,15.708446, 0.000000,0.000000,0.000000);
	CreateDynamicObject(3515, 1480.494140,-1643.224487,12.698426, 0.000000,0.000000,0.000000);
	CreateDynamicObject(3515, 1476.094116,-1639.423583,12.606099, 0.000000,0.000000,0.000000);
	CreateDynamicObject(3515, 1480.685668,-1635.645507,12.708416, 0.000000,0.000000,0.000000);
	CreateDynamicObject(3515, 1484.411743,-1639.489746,12.678422, 0.000000,0.000000,0.000000);
	CreateDynamicObject(19123, 1475.593017,-1627.044067,13.556862, 0.000000,0.000000,0.000000);
	CreateDynamicObject(19123, 1489.618896,-1648.205810,13.576875, 0.000000,0.000000,0.000000);
	CreateDynamicObject(19123, 1492.149658,-1643.036254,13.576877, 0.000000,0.000000,0.000000);
	CreateDynamicObject(19123, 1492.147705,-1635.332275,13.586877, 0.000000,0.000000,0.000000);
	CreateDynamicObject(19123, 1488.698242,-1630.053710,13.586878, 0.000000,0.000000,0.000000);
	CreateDynamicObject(19123, 1482.101684,-1626.539184,13.576861, 0.000000,0.000000,0.000000);
	CreateDynamicObject(19123, 1470.196411,-1630.264160,13.576874, 0.000000,0.000000,0.000000);
	CreateDynamicObject(19123, 1466.824462,-1643.491699,13.556874, 0.000000,0.000000,0.000000);
	CreateDynamicObject(19123, 1470.400024,-1649.500610,13.586874, 0.000000,0.000000,0.000000);
	CreateDynamicObject(19123, 1483.593994,-1652.348999,13.556862, 0.000000,0.000000,0.000000);
	//================================================== АШ ====================
	CreateDynamicObject(14532, -2026.647705,-119.386001,1035.161376, 0.000000,0.000000,0.000000);
	//===================================================================
	CreateDynamicObject(1408, 1100.168823,-1697.637939,23.057271, 1.400000,0.000000,-0.300048);
	CreateDynamicObject(1408, 1105.374877,-1697.653320,23.046857, 0.000000,0.000000,0.000000);
	CreateDynamicObject(1408, 1110.574707,-1697.671630,23.006875, 0.000000,0.000000,0.000000);
	CreateDynamicObject(1408, 1115.924926,-1696.746948,22.996847, 0.000000,0.000000,19.999996);
	CreateDynamicObject(1408, 1124.136596,-1689.943481,22.966869, 0.000000,0.000000,59.499992);
	CreateDynamicObject(1408, 1125.976074,-1684.922851,23.016857, 0.000000,0.000000,79.400001);
	CreateDynamicObject(1408, 1126.484008,-1679.784423,22.956081, 0.000000,0.000000,88.999984);
	CreateDynamicObject(1408, 1126.530395,-1674.607543,22.966859, 0.000000,0.000000,90.399993);
	CreateDynamicObject(1408, 1126.493652,-1671.422119,22.976873, 0.000000,0.000000,90.099960);
	CreateDynamicObject(1408, 1090.570068,-1697.655517,23.046867, 0.000000,0.000000,0.000000);
	CreateDynamicObject(1408, 1085.390380,-1697.663208,23.046869, 0.000000,0.000000,0.000000);
	CreateDynamicObject(1408, 1079.936523,-1697.661010,23.066869, 0.000000,0.000000,0.000000);
	CreateDynamicObject(1408, 1077.151855,-1697.632446,23.066865, 0.000000,0.000000,0.000000);
	CreateDynamicObject(984, 1080.453002,-1666.893066,23.152027, 0.000000,-1.000000,89.799964);
	CreateDynamicObject(984, 1092.687377,-1666.871337,23.036861, 0.000000,0.000000,-89.900039);
	CreateDynamicObject(984, 1105.526489,-1666.883666,23.146873, 0.000000,0.000000,90.199996);
	CreateDynamicObject(984, 1092.687377,-1666.871337,23.146863, 0.000000,0.000000,-89.900039);
	CreateDynamicObject(983, 1115.028686,-1667.547851,23.196872, 0.000000,0.000000,77.599952);
	CreateDynamicObject(984, 1120.063354,-1668.546630,23.189809, 0.000000,0.000000,88.099990);
	CreateDynamicObject(1726, 1107.228759,-1696.255981,22.586860, 0.000000,0.000000,179.600006);
	CreateDynamicObject(1726, 1107.228759,-1696.255981,22.456857, 0.000000,0.000000,179.600006);
	CreateDynamicObject(1819, 1105.741577,-1694.937500,22.569820, 0.000000,0.000000,0.000000);
	CreateDynamicObject(1551, 1106.121093,-1694.704345,23.296865, 0.000000,0.000000,0.000000);
	CreateDynamicObject(1667, 1106.484863,-1694.798950,23.156867, 0.000000,0.000000,0.000000);
	CreateDynamicObject(1665, 1106.389404,-1694.188110,23.086877, 0.000000,0.000000,0.000000);
	CreateDynamicObject(1485, 1106.191162,-1694.129638,23.076866, 0.000000,0.000000,0.000000);
	CreateDynamicObject(1594, 1113.982299,-1688.061645,23.096855, 0.000000,0.000000,13.599999);
	CreateDynamicObject(2812, 1114.090942,-1688.124145,23.506870, 0.000000,0.000000,0.000000);
	CreateDynamicObject(619, 1088.796752,-1699.306152,12.926870, 0.000000,0.000000,0.000000);
	CreateDynamicObject(619, 1066.134399,-1699.972900,13.176867, 0.000000,0.000000,137.000061);
	CreateDynamicObject(2773, 1097.230590,-1691.170532,23.096860, 0.000000,0.000000,0.000000);
	CreateDynamicObject(2773, 1094.863769,-1691.193359,23.066875, 0.000000,0.000000,0.000000);
	CreateDynamicObject(2773, 1083.230102,-1697.634277,13.106868, 0.000000,0.000000,0.000000);
	CreateDynamicObject(2773, 1079.163452,-1697.621704,13.096870, 0.000000,0.000000,0.000000);
	CreateDynamicObject(2773, 1079.108764,-1699.947265,13.076871, 0.000000,0.000000,0.000000);
	CreateDynamicObject(2773, 1083.248657,-1699.965698,13.096876, 0.000000,0.000000,0.000000);
	CreateDynamicObject(1825, 1110.482177,-1683.989746,22.540582, 0.000000,0.000000,0.000000);
	CreateDynamicObject(2185, 1096.148071,-1668.475585,22.586854, 0.000000,0.000000,0.000000);
	CreateDynamicObject(1808, 1093.946289,-1692.188232,22.526865, 0.000000,0.000000,178.799987);
	CreateDynamicObject(2165, 1101.320068,-1668.401245,22.596858, 0.000000,0.000000,179.599899);
	CreateDynamicObject(2818, 1095.561035,-1692.253906,22.606843, 0.000000,0.000000,0.000000);
	CreateDynamicObject(2818, 1095.555786,-1691.130371,22.616884, 0.000000,0.000000,0.000000);
	CreateDynamicObject(9833, 1112.745239,-1677.629272,25.527952, 0.000000,0.000000,0.000000);
	CreateDynamicObject(2817, 1080.792480,-1697.130249,12.636856, 0.000000,0.000000,0.000000);
	CreateDynamicObject(2817, 1080.780029,-1698.093505,12.626886, 0.000000,0.000000,0.000000);
	CreateDynamicObject(2817, 1080.780273,-1699.022827,12.586872, 0.000000,0.000000,0.000000);
	CreateDynamicObject(2817, 1080.784667,-1699.989624,12.596879, 0.000000,0.000000,0.000000);
	CreateDynamicObject(2817, 1080.774414,-1700.979736,12.626869, 0.000000,0.000000,0.000000);
	CreateDynamicObject(19126, 1083.200561,-1701.214965,13.166871, 0.000000,0.000000,0.000000);
	CreateDynamicObject(19126, 1079.272460,-1701.126098,13.126869, 0.000000,0.000000,0.000000);
	CreateDynamicObject(19126, 1094.982177,-1689.840942,23.086862, 0.000000,0.000000,0.000000);
	CreateDynamicObject(19126, 1097.252685,-1689.877807,23.166868, 0.000000,0.000000,0.000000);
	CreateDynamicObject(14407, 1086.203247,-1680.008300,21.326873, 0.000000,0.000000,-82.599998);
	CreateDynamicObject(1566, 1095.578491,-1692.398925,24.036865, 0.000000,0.000000,0.000000);
	CreateDynamicObject(1408, 1120.616943,-1694.071166,23.006883, 0.000000,0.000000,40.000026);
	CreateDynamicObject(1231, 1092.960205,-1692.034057,23.266864, 0.000000,0.000000,0.000000);
	CreateDynamicObject(1231, 1113.635498,-1696.839599,23.326862, 0.000000,0.000000,14.100001);
	CreateDynamicObject(1231, 1103.066772,-1669.009277,23.356882, 0.000000,0.000000,0.000000);
	CreateDynamicObject(1231, 1125.617309,-1669.202758,23.339801, 0.000000,0.000000,0.000000);
	CreateDynamicObject(1231, 1125.615356,-1684.560180,23.286859, 0.000000,0.000000,0.000000);
	CreateDynamicObject(1231, 1113.684692,-1667.768920,23.326854, 0.000000,0.000000,0.000000);
	CreateDynamicObject(18759,5512.3423,1244.4044,22.188636779785,0.00000000,0.00000000,0.00000000); //Присоyр
 	CreateDynamicObject(1257,1132.17102051,-1721.20275879,13.97465801,0.00000000,0.00000000,270.00000000); //object(bustopm) (1)
	CreateDynamicObject(982,1152.15075684,-1722.22851562,13.64132500,0.00000000,0.00000000,90.00000000); //object(fenceshit) (1)
	CreateDynamicObject(984,1133.00854492,-1722.22851562,13.34931469,358.50000000,0.00000000,90.00000000); //object(fenceshit2) (1)
	//CreateDynamicObject(982,1113.80603027,-1722.22851562,13.23042965,0.00000000,0.00000000,90.00000000); АБЬЕКТ
	//CreateDynamicObject(982,1088.21301270,-1722.22851562,13.23794270,0.00000000,0.00000000,90.00000000); АБЬЕКТ
	CreateDynamicObject(984,1069.08020020,-1722.22851562,13.18355465,0.00000000,0.00000000,90.00000000); //object(fenceshit2) (2)
	CreateDynamicObject(983,1061.10009766,-1722.22851562,13.23042965,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (1)
	CreateDynamicObject(982,1057.89489746,-1735.00000000,13.31189728,0.00000000,0.00000000,0.00000000); //object(fenceshit) (4)
	CreateDynamicObject(982,1057.89489746,-1760.58935547,13.25795174,0.00000000,0.00000000,0.00000000); //object(fenceshit) (5)
	CreateDynamicObject(983,1057.89489746,-1775.00000000,13.23992157,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (2)
	CreateDynamicObject(982,1070.71105957,-1778.17041016,13.19638634,0.00000000,0.00000000,90.00000000); //object(fenceshit) (6)
	CreateDynamicObject(982,1096.30371094,-1778.17041016,13.23059177,0.00000000,0.00000000,90.00000000); //object(fenceshit) (7)
	CreateDynamicObject(983,1109.09997559,-1778.17041016,13.26394463,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (3)
	CreateDynamicObject(983,1112.30480957,-1781.35913086,13.26394463,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (4)
	CreateDynamicObject(983,1164.91748047,-1725.40405273,13.57842827,0.60000610,0.00000000,0.00000000); //object(fenceshit3) (5)
	CreateDynamicObject(994,1158.71533203,-1750.87426758,12.57031250,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (1)
	CreateDynamicObject(994,1158.71533203,-1745.96923828,12.57031250,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (2)
	CreateDynamicObject(994,1158.71533203,-1740.86425781,12.40114498,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (3)
	CreateDynamicObject(994,1158.71533203,-1735.74047852,12.77343750,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (4)
	CreateDynamicObject(983,1164.91748047,-1727.00097656,13.54496384,0.59875488,0.00000000,0.00000000); //object(fenceshit3) (6)
	CreateDynamicObject(994,1158.71533203,-1730.86169434,12.77846527,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (5)
	CreateDynamicObject(994,1161.53601074,-1759.07495117,12.66828537,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (6)
	CreateDynamicObject(1257,1163.23657227,-1755.25585938,13.90364456,0.00000000,0.00000000,180.00000000); //object(bustopm) (1)
	CreateDynamicObject(994,1149.43286133,-1750.87426758,12.57418060,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (7)
	CreateDynamicObject(994,1140.92211914,-1750.87426758,12.57031250,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (8)
	CreateDynamicObject(994,1140.94396973,-1757.52209473,12.58403683,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (9)
	CreateDynamicObject(994,1140.94396973,-1765.00329590,12.59562683,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (10)
	CreateDynamicObject(982,1178.37780762,-1734.99987793,13.32712841,0.29998779,0.00000000,0.00000000); //object(fenceshit) (8)
	CreateDynamicObject(982,1178.37780762,-1760.53796387,13.25386715,0.00000000,0.00000000,0.00000000); //object(fenceshit) (9)
	CreateDynamicObject(984,1178.37780762,-1779.75317383,13.20699215,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (3)
	//================================ HOTDOGERS ===============================
	CreateDynamicObject(1340, 1145.1593017578, -1756.7214355469, 13.741987228394, 0, 0, 0.000);
	CreateDynamicObject(1340, 1414.2425537109, -1718.1134033203, 13.692994117737, 0, 0, 0.000);
	CreateDynamicObject(1340,1471.03857422,-1675.05468750,14.17446136,0.00000000,0.00000000,270.00000000); //object(chillidogcart) (3)
	CreateDynamicObject(1340,1477.06201172,-1675.11145020,14.17446136,0.00000000,0.00000000,270.00000000); //object(chillidogcart) (4)
	CreateDynamicObject(1340,1145.15734863,-1754.31652832,13.74125767,0.00000000,0.00000000,0.00000000); //object(chillidogcart) (5)
	CreateDynamicObject(1340, 2182.3732910156, -2268.9443359375, 13.593506813049, 0, 0, 0.000);//грузкичи
	//============================== Грузчики ==================================
	CreateDynamicObject(983, 2214.6716,-2263.1155,13.3000, 0.0000, 0.0000, 225.000);
	CreateDynamicObject(2060,2172.89526367,-2256.86108398,12.46142387,0.00000000,0.00000000,44.00000000);
	CreateDynamicObject(2060,2172.89453125,-2256.86035156,12.46142387,0.00000000,0.00000000,43.99475098);
	CreateDynamicObject(2060,2172.42309570,-2256.42822266,12.46099281,0.00000000,0.00000000,47.25003052);
	CreateDynamicObject(2060,2173.31835938,-2257.36694336,12.46148300,0.00000000,0.00000000,43.75000000);
	CreateDynamicObject(2060,2172.75854492,-2256.49853516,12.77687645,0.00000000,0.00000000,315.24987793);
	CreateDynamicObject(2060,2172.41381836,-2256.85815430,12.77693558,0.00000000,0.00000000,316.25000000);
	CreateDynamicObject(2060,2173.61865234,-2257.31201172,12.77693558,0.00000000,0.00000000,136.00000000);
	CreateDynamicObject(2060,2173.29321289,-2257.70800781,12.77693558,0.00000000,0.00000000,134.00000000);
	CreateDynamicObject(2060,2173.73193359,-2257.77856445,12.46504116,0.00000000,0.00000000,42.00000000);
	CreateDynamicObject(2060,2172.61962891,-2256.63281250,13.09232903,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(2060,2229.29809570,-2286.05883789,13.53178787,0.00000000,0.00000000,226.00000000);
	CreateDynamicObject(2060,2229.61987305,-2286.45825195,13.53178787,0.00000000,0.00000000,45.00000000);
	CreateDynamicObject(2060,2230.00610352,-2286.81738281,13.53178787,0.00000000,0.00000000,44.00000000);
	CreateDynamicObject(2060,2230.39746094,-2287.23168945,13.53178787,0.00000000,0.00000000,44.00000000);
	CreateDynamicObject(2060,2229.35400391,-2286.54858398,13.80724049,0.00000000,0.00000000,134.00000000);
	CreateDynamicObject(2060,2230.20898438,-2286.95312500,13.82723999,0.00000000,0.00000000,102.00000000);
	CreateDynamicObject(1482,2222.66113281,-2289.36279297,12.31155109,0.00000000,0.00000000,135.00000000);
	//===================================== Стоянка Zone 51 ====================
    CreateDynamicObject(8661,169.00000000,1950.80004883,19.00000000,0.00000000,0.00000000,0.00000000); //object(gnhtelgrnd_lvs) (1)
    CreateDynamicObject(5706,136.60000610,1952.80004883,23.39999962,0.00000000,0.00000000,181.00000000); //object(studiobld03_law) (2)
    CreateDynamicObject(8661,169.00000000,1970.69995117,19.00000000,0.00000000,0.00000000,0.00000000); //object(gnhtelgrnd_lvs) (6)
    CreateDynamicObject(8661,169.00000000,1990.59997559,19.00000000,0.00000000,0.00000000,0.00000000); //object(gnhtelgrnd_lvs) (7)
    CreateDynamicObject(7922,148.10000610,1994.90002441,18.79999924,0.00000000,0.00000000,179.50000000); //object(vgwstnewall6905) (1)
    CreateDynamicObject(7922,148.30000305,1973.90002441,18.89999962,0.00000000,0.00000000,269.74926758); //object(vgwstnewall6905) (2)
    CreateDynamicObject(7922,149.39999390,1996.90002441,19.00000000,0.00000000,271.00012207,88.74707031); //object(vgwstnewall6905) (3)
    CreateDynamicObject(7922,149.39999390,1998.90002441,19.00000000,0.00000000,270.99975586,89.99438477); //object(vgwstnewall6905) (4)
    CreateDynamicObject(8657,149.19999695,1957.40002441,19.10000038,0.00000000,0.00000000,180.75000000); //object(shbbyhswall10_lvs) (1)
    CreateDynamicObject(9339,176.10000610,1942.30004883,19.70000076,0.00000000,0.00000000,268.75000000); //object(sfnvilla001_cm) (1)
    CreateDynamicObject(9339,176.10000610,1942.30004883,21.00000000,0.00000000,0.00000000,268.74755859); //object(sfnvilla001_cm) (2)
    CreateDynamicObject(9339,152.89999390,1942.80004883,21.00000000,0.00000000,0.00000000,268.74755859); //object(sfnvilla001_cm) (4)
    CreateDynamicObject(9339,152.89999390,1942.80004883,19.70000076,0.00000000,0.00000000,268.74755859); //object(sfnvilla001_cm) (5)
    CreateDynamicObject(9339,188.80000305,1955.19995117,19.70000076,0.00000000,0.00000000,179.99755859); //object(sfnvilla001_cm) (6)
    CreateDynamicObject(9339,188.80000305,1987.69995117,19.70000076,0.00000000,0.00000000,179.99731445); //object(sfnvilla001_cm) (7)
    CreateDynamicObject(9339,188.80000305,1973.30004883,19.70000076,0.00000000,0.00000000,179.99731445); //object(sfnvilla001_cm) (8)
    CreateDynamicObject(9339,188.80000305,1955.19995117,21.00000000,0.00000000,0.00000000,179.99450684); //object(sfnvilla001_cm) (9)
    CreateDynamicObject(9339,188.80000305,1973.30004883,21.00000000,0.00000000,0.00000000,179.99450684); //object(sfnvilla001_cm) (10)
    CreateDynamicObject(9339,188.80000305,1987.69995117,21.00000000,0.00000000,0.00000000,179.99450684); //object(sfnvilla001_cm) (11)
    CreateDynamicObject(9339,188.80000305,1987.69995117,18.29999924,0.00000000,0.00000000,179.99450684); //object(sfnvilla001_cm) (12)
    CreateDynamicObject(9339,188.80000305,1973.30004883,18.39999962,0.00000000,0.00000000,179.99450684); //object(sfnvilla001_cm) (13)
    CreateDynamicObject(9339,188.89999390,1954.50000000,18.29999924,0.00000000,0.00000000,180.49450684); //object(sfnvilla001_cm) (14)
    CreateDynamicObject(8657,163.89999390,2000.69995117,18.89999962,0.00000000,0.00000000,89.99707031); //object(shbbyhswall10_lvs) (3)
    CreateDynamicObject(8657,173.80000305,2000.69995117,18.89999962,0.00000000,0.00000000,89.99157715); //object(shbbyhswall10_lvs) (4)
    CreateDynamicObject(8657,173.80000305,2000.69995117,16.60000038,0.00000000,0.00000000,89.98901367); //object(shbbyhswall10_lvs) (5)
    CreateDynamicObject(8657,173.30000305,1942.09997559,17.79999924,0.00000000,0.00000000,89.23901367); //object(shbbyhswall10_lvs) (6)
    CreateDynamicObject(8657,142.30000305,1942.50000000,17.79999924,0.00000000,0.00000000,89.23645020); //object(shbbyhswall10_lvs) (7)
    CreateDynamicObject(3029,139.10000610,1940.09997559,18.29999924,0.00000000,0.00000000,272.49963379); //object(cr1_door) (2)
    CreateDynamicObject(8557,186.80000305,1965.30004883,20.60000038,0.00000000,0.00000000,270.00000000); //object(vgshseing27) (1)
    CreateDynamicObject(8557,169.69999695,1965.09997559,20.50000000,0.00000000,0.00000000,90.00000000); //object(vgshseing27) (2)
    CreateDynamicObject(10183,184.50000000,1962.69995117,19.10000038,0.00000000,0.00000000,316.00000000); //object(ferspaces) (1)
    CreateDynamicObject(10183,184.39999390,1977.80004883,19.10000038,0.00000000,0.00000000,315.99975586); //object(ferspaces) (2)
    CreateDynamicObject(10183,172.69999695,1965.69995117,19.10000038,0.00000000,0.00000000,135.74975586); //object(ferspaces) (3)
    CreateDynamicObject(1215,148.69999695,2000.80004883,20.00000000,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
    CreateDynamicObject(1215,188.19999695,2001.00000000,20.70000076,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
    CreateDynamicObject(1215,149.00000000,1965.09997559,20.20000076,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
    CreateDynamicObject(1278,166.30000305,1975.40002441,25.20000076,0.00000000,0.00000000,0.00000000); //object(sub_floodlite) (1)
    CreateDynamicObject(1278,166.30000305,1962.09997559,25.10000038,0.00000000,0.00000000,0.00000000); //object(sub_floodlite) (2)
    CreateDynamicObject(973,148.89999390,1970.30004883,21.10000038,0.00000000,0.00000000,92.00000000); //object(sub_roadbarrier) (1)
    CreateDynamicObject(973,149.30000305,1959.90002441,21.10000038,0.00000000,0.00000000,91.99951172); //object(sub_roadbarrier) (2)
    CreateDynamicObject(1237,166.30000305,1962.19995117,18.89999962,0.00000000,359.24987793,1.75000000); //object(strtbarrier01) (1)
    CreateDynamicObject(1237,166.39999390,1975.50000000,18.79999924,0.00000000,359.24743652,0.74707031); //object(strtbarrier01) (2)
    CreateDynamicObject(8661,129.50000000,1984.50000000,15.50000000,0.00000000,349.99993896,0.00000000); //object(gnhtelgrnd_lvs) (8)
    CreateDynamicObject(1251,152.89999390,1972.69995117,19.10000038,0.00000000,0.00000000,268.00000000); //object(smashbar) (1)
    CreateDynamicObject(1251,152.80000305,1967.59997559,19.00000000,0.00000000,0.00000000,270.74902344); //object(smashbar) (2)
    CreateDynamicObject(1251,155.30000305,1961.30004883,19.00000000,0.00000000,0.00000000,273.99902344); //object(smashbar) (3)
    CreateDynamicObject(1251,155.60000610,1955.09997559,19.00000000,0.00000000,0.00000000,273.99902344); //object(smashbar) (4)
    CreateDynamicObject(7922,152.19999695,1944.30004883,19.89999962,0.00000000,270.99426270,270.48901367); //object(vgwstnewall6905) (5)
    CreateDynamicObject(3029,153.30000305,1943.69995117,18.89999962,0.00000000,0.00000000,0.49938965); //object(cr1_door) (3)
    CreateDynamicObject(973,152.39999390,1974.50000000,19.79999924,0.00000000,0.00000000,359.49951172); //object(sub_roadbarrier) (4)
  	//===================================== Грузчики ===========================
	CreateDynamicObject(2754,1919.78381348,-1766.21813965,13.44901943,0.00000000,0.00000000,270.00000000); //object(otb_machine) (4)
	CreateDynamicObject(2754,2236.16186523,-1665.79772949,15.27980804,0.00000000,0.00000000,344.00000000); //object(otb_machine) (6)
	CreateDynamicObject(2754,1367.56359863,-1290.13696289,13.44901943,0.00000000,0.00000000,0.00000000); //object(otb_machine) (7)
	CreateDynamicObject(2754,1142.44287109,-1763.92932129,13.59816360,0.00000000,0.00000000,180.00000000); //object(otb_machine) (8)
	CreateDynamicObject(2754,557.32824707,-1294.28137207,17.24994087,0.00000000,0.00000000,270.00000000); //object(otb_machine) (9)
	CreateDynamicObject(2754,847.58093262,-1799.19348145,13.71945286,0.00000000,0.00000000,354.00000000); //object(otb_machine) (10)
	CreateDynamicObject(2754,-78.74282837,-1171.64892578,1.95329499,0.00000000,0.00000000,336.00000000); //object(otb_machine) (11)
	CreateDynamicObject(2754,-1551.53637695,-2737.33691406,48.64560318,0.00000000,0.00000000,146.00000000); //object(otb_machine) (13)
	CreateDynamicObject(2754,661.71307373,-576.21777344,16.25428581,0.00000000,0.00000000,0.00000000); //object(otb_machine) (14)
	CreateDynamicObject(1696,-1334.93273926,487.19998169,10.39754200,355.00000000,0.00000000,180.00000000);
	CreateDynamicObject(2754,-2035.70605469,-102.35491180,35.07402039,0.00000000,0.00000000,270.00000000); //object(otb_machine) (16)
	CreateDynamicObject(2754,-2033.32604980,159.50723267,28.94120598,0.00000000,0.00000000,178.00000000); //object(otb_machine) (17)
	CreateDynamicObject(2754,-1676.34570312,434.01806641,7.08183193,0.00000000,0.00000000,226.00000000); //object(otb_machine) (19)
	CreateDynamicObject(2754,-2421.45410156,958.35540771,45.18632126,0.00000000,0.00000000,88.00000000); //object(otb_machine) (20)
	CreateDynamicObject(2754,-2621.31445312,1415.23510742,6.88521862,0.00000000,0.00000000,158.00000000); //object(otb_machine) (22)
	CreateDynamicObject(2754,-2452.32275391,2252.62988281,4.87058449,0.00000000,0.00000000,92.00000000); //object(otb_machine) (23)
	CreateDynamicObject(2754,-1282.38098145,2715.18652344,50.16842651,0.00000000,0.00000000,28.00000000); //object(otb_machine) (24)
	CreateDynamicObject(2754,91.92106628,1180.56555176,18.56620598,0.00000000,0.00000000,90.00000000); //object(otb_machine) (25)
	CreateDynamicObject(2754,-818.55200195,1567.63708496,27.01933098,0.00000000,0.00000000,178.00000000); //object(otb_machine) (26)
	CreateDynamicObject(2754,2174.20336914,1402.93469238,10.96464443,0.00000000,0.00000000,0.00000000); //object(otb_machine) (27)
	CreateDynamicObject(2754,1587.30920410,2218.34838867,10.96464443,0.00000000,0.00000000,88.00000000); //object(otb_machine) (28)
	CreateDynamicObject(2754,2187.36035156,2478.89160156,11.14433193,0.00000000,0.00000000,180.00000000); //object(otb_machine) (29)
	CreateDynamicObject(2754,2843.30444336,1286.17187500,11.29276943,0.00000000,0.00000000,270.00000000); //object(otb_machine) (30)
	//================================ Мостик ==================================
	CreateDynamicObject(7191,-1330.23962402,411.70687866,5.86217785,0.00000000,90.00000000,180.00000000); //object(vegasnnewfence2b) (1)
	CreateDynamicObject(7191,-1330.25866699,367.41680908,5.86217785,0.00000000,90.00000000,0.00000000); //object(vegasnnewfence2b) (2)
	CreateDynamicObject(994,-1332.18188477,350.85299683,5.94952583,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (1)
	CreateDynamicObject(994,-1328.31640625,345.79153442,5.85952473,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (2)
	CreateDynamicObject(994,-1328.31640625,354.84710693,5.85952473,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (3)
	CreateDynamicObject(994,-1332.18188477,386.53088379,5.94952583,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (4)
	CreateDynamicObject(994,-1328.31640625,381.78265381,5.85952473,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (5)
	CreateDynamicObject(994,-1328.31640625,391.44033813,5.94952583,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (6)
	CreateDynamicObject(994,-1328.31640625,417.81451416,5.94952583,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (7)
	CreateDynamicObject(994,-1328.31640625,426.36065674,5.94952583,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (8)
	CreateDynamicObject(994,-1332.18188477,422.44912720,5.94952583,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (9)
	//=============================== Шоссе ====================================
	CreateDynamicObject(982, 1304.06,-1698.00,13.22,0.00,0.00,0.00);
	CreateDynamicObject(982, 1304.06,-1723.61,13.22,0.00,0.00,0.00);
	CreateDynamicObject(982, 1304.06,-1749.24,13.22,0.00,0.00,0.00);
	CreateDynamicObject(982, 1304.06,-1774.84,13.22,0.00,0.00,0.00);
	CreateDynamicObject(982, 1304.06,-1800.46,13.22,0.00,0.00,0.00);
	CreateDynamicObject(982, 1304.06,-1826.04,13.22,0.00,0.00,0.00);
	CreateDynamicObject(983, 1304.06,-1840.46,13.22,0.00,0.00,0.00);
 	//================================ AIR =====================================
	CreateDynamicObject(969, 1961.7924,-2189.6584,12.7000, 0.0000, 0.0000, 180.000);
	CreateDynamicObject(969, 1970.2289,-2189.7229,12.7000, 0.0000, 0.0000, 180.000);
	CreateDynamicObject(5706,135.93359375,1953.40722656,23.30762100,0.00000000,0.00000000,179.99450684); //object(studiobld03_law) (1)
	CreateDynamicObject(3361,130.43261719,1935.47949219,25.07071495,0.00000000,0.00000000,270.00000000); //object(cxref_woodstair) (1)
	CreateDynamicObject(3361,130.43457031,1929.55761719,21.12256813,0.00000000,0.00000000,269.98901367); //object(cxref_woodstair) (2)
	CreateDynamicObject(3361,130.43457031,1927.51074219,19.75853539,0.00000000,0.00000000,269.98901367); //object(cxref_woodstair) (3)
	CreateDynamicObject(8580,131.89939880,1956.01074219,27.35955429,0.00000000,0.00000000,0.00000000); //object(vgssstairs05_lvs) (1)
	CreateDynamicObject(994,119.38395691,1940.31347656,27.12810516,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (1)
	CreateDynamicObject(994,146.13539124,1940.31347656,27.12810516,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (2)
	//======================================== Блок пост =======================
 	CreateDynamicObject(1696,-1334.93273926,487.19998169,10.39754200,355.00000000,0.00000000,180.00000000);//лесена на авианосце
	CreateDynamicObject(3279, -1541.521606, 475.820618, 6.263117, 0.0, 0.0, 0.0);//Вышка 1
	CreateDynamicObject(973, 1892.7526855469, -1031.3897705078, 23.714654922485, 0.000000, 0.000000, 193.26123046875);
	CreateDynamicObject(973, 1883.8662109375, -1033.466796875, 23.714654922485, 0.000000, 0.000000, 193.26049804688);
	CreateDynamicObject(973, 1875.4471435547, -1037.2456054688, 23.714654922485, 0.000000, 0.000000, 215.09533691406);
	CreateDynamicObject(973, 1868.6027832031, -1043.1340332031, 23.668344497681, 0.000000, 0.000000, 227.00024414063);
	CreateDynamicObject(973, 1862.8218994141, -1050.4644775391, 23.668344497681, 0.000000, 0.000000, 236.92443847656);
	CreateDynamicObject(973, 1859.1612548828, -1058.8864746094, 23.668344497681, 0.000000, 0.000000, 256.77001953125);
	CreateDynamicObject(973, 1856.6405029297, -1067.8319091797, 23.668344497681, 0.000000, 0.000000, 250.81201171875);
	CreateDynamicObject(3095, 195.75790405273, 176.58215332031, 1001.2734375, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(3095, 191.64668273926, 175.71965026855, 1001.2734375, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(3095, 197.26713562012, 160.2391204834, 1001.2734375, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(3095, 197.26713562012, 160.2391204834, 1001.2734375, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(2970, 968.55859375, -52.525318145752, 1000.1245727539, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(3032, 968.59686279297, -53.524635314941, 1001.4867553711, 0.000000, 89.325012207031, 270.67565917969);
	CreateDynamicObject(3032, 968.59484863281, -52.065414428711, 1001.4867553711, 0.000000, 89.324340820313, 270.67565917969);
	CreateDynamicObject(3032, 968.54077148438, -52.819187164307, 1003.9867553711, 0.000000, 180.63439941406, 270.67565917969);
	CreateDynamicObject(8615, -316.34866333008, 1294.8453369141, 55.389030456543, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(3095, 191.99526977539, 160.93226623535, 1001.2734375, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(966, 1577.6838378906, 1836.7041015625, 9.7616519927979, 0.000000, 0.000000, 89.325012207031);
	CreateDynamicObject(966, 1636.9364013672, 1836.494140625, 9.8031454086304, 0.000000, 0.000000, 91.309326171875);
	//===================================== Автошкола ==========================
	CreateDynamicObject(982,-2087.63916016,-80.39722443,34.84761810,0.00000000,0.00000000,90.00000000); //object(fenceshit) (1)
	CreateDynamicObject(983,-1242.34179688,-1919.50317383,-3.62699223,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (1)
	CreateDynamicObject(983,-2074.83520508,-83.61250305,34.84761810,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (2)
	CreateDynamicObject(983,-2074.83520508,-99.00683594,34.84761810,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (3)
	CreateDynamicObject(1231,-2079.21508789,-80.38124847,36.89445496,0.00000000,0.00000000,0.00000000); //object(binnt07_la) (1)
	CreateDynamicObject(1231,-2075.19238281,-80.67557526,36.89445496,0.00000000,0.00000000,0.00000000); //object(binnt07_la) (2)
	CreateDynamicObject(1231,-2087.67089844,-80.38124847,36.89445496,0.00000000,0.00000000,0.00000000); //object(binnt07_la) (1)
	CreateDynamicObject(1231,-2075.13818359,-86.50878906,36.89445496,0.00000000,0.00000000,90.00000000); //object(binnt07_la) (2)
	CreateDynamicObject(1231,-2075.13818359,-96.06347656,36.89445496,0.00000000,0.00000000,90.00000000); //object(binnt07_la) (2)
	CreateDynamicObject(3877,-2069.99072266,-79.83081818,33.92980576,0.00000000,0.00000000,0.00000000); //object(casino_light1) (1)
	CreateDynamicObject(3877,-2072.64282227,-79.83081818,33.92980576,0.00000000,0.00000000,0.00000000); //object(binnt07_la) (3)
	CreateDynamicObject(3877,-2067.15673828,-79.83081818,33.92980576,0.00000000,0.00000000,0.00000000); //object(casino_light1) (1)
	CreateDynamicObject(3877,-2064.33325195,-79.83081818,33.92980576,0.00000000,0.00000000,0.00000000); //object(casino_light1) (1)
	CreateDynamicObject(3877,-2061.47509766,-80.38510895,33.92980576,0.00000000,0.00000000,0.00000000); //object(casino_light1) (1)
	CreateDynamicObject(3877,-2061.47509766,-82.43222809,33.92980576,0.00000000,0.00000000,0.00000000); //object(casino_light1) (1)
	CreateDynamicObject(3877,-2061.47509766,-84.53079224,33.92980576,0.00000000,0.00000000,0.00000000); //object(casino_light1) (1)
	CreateDynamicObject(3877,-2061.47509766,-86.67069244,33.92980576,0.00000000,0.00000000,0.00000000); //object(casino_light1) (1)
	CreateDynamicObject(3877,-2060.89916992,-89.60840607,33.92980576,0.00000000,0.00000000,0.00000000); //object(casino_light1) (1)
	CreateDynamicObject(3877,-2058.65356445,-91.56771088,33.92980576,0.00000000,0.00000000,0.00000000); //object(casino_light1) (1)
	CreateDynamicObject(1257,-2027.72375488,-83.94020844,36.08337784,0.00000000,0.00000000,270.00000000); //object(bustopm) (1)
	CreateDynamicObject(1359,-2030.86218262,-83.17698669,35.50404739,0.00000000,0.00000000,0.00000000); //object(cj_bin1) (1)
	CreateDynamicObject(1696,-2034.45727539,-83.30000305,34.63999939,341.00000000,0.00000000,0.00000000); //object(roofstuff15) (1)
	CreateDynamicObject(1696,-2034.45727539,-84.00000000,34.63999939,340.99914551,0.00000000,0.00000000); //object(roofstuff15) (2)
	CreateDynamicObject(1696,-2029.00000000,-84.00000000,34.63999939,340.99914551,0.00000000,0.00000000); //object(roofstuff15) (3)
	CreateDynamicObject(1696,-2029.00000000,-83.30000305,34.63999939,340.99914551,0.00000000,0.00000000); //object(roofstuff15) (4)
	CreateDynamicObject(1696,-2023.53002930,-84.00000000,34.63999939,340.99914551,0.00000000,0.00000000); //object(roofstuff15) (5)
	CreateDynamicObject(1696,-2023.53002930,-83.30000305,34.63999939,340.99914551,0.00000000,0.00000000); //object(roofstuff15) (6)
	CreateDynamicObject(1696,-2020.63000488,-83.85974121,34.63999939,340.99914551,0.00000000,0.00000000); //object(roofstuff15) (7)
	CreateDynamicObject(1696,-2020.63000488,-83.30000305,34.63999939,340.99914551,0.00000000,0.00000000); //object(roofstuff15) (8)
	CreateDynamicObject(1215,-2036.94726562,-80.56143188,35.38463593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,-2036.94726562,-87.61889648,35.38463593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
	CreateDynamicObject(1215,-2017.47595215,-87.61889648,35.38463593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
	CreateDynamicObject(1215,-2017.47595215,-80.56143188,35.38463593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
	CreateDynamicObject(966,-2074.50000000,-94.80000305,34.20000076,0.00000000,0.00000000,270.00000000); //object(bar_gatebar01) (1)
	//================================= SFA ====================================
    CreateDynamicObject(5130, -1334.831909, 478.695892, 8.176680, 0.356194, 0.000000, 224.0);//Лестница на авианосце
    CreateDynamicObject(3399, -2038.251953, -110.215775, 35.829094, -1.712389, 0.000000, 90.000000);//Лестница АШ
    //================================= Zone 51 ================================
    CreateObject(3707,353.669983,1950.344604,24.623753,0.141593,0.000000,180.000000);//Склад
    CreateDynamicObject(3279,384.702789,1892.396484,16.716242,-1.570796,0.000000,180.000000);//вышка
    CreateDynamicObject(3279,350.380798,1807.448975,17.561840,1.748893,0.000000,180.000000);//вышка2
    CreateDynamicObject(3279,333.368652,1795.830444,17.059250,0.552544,0.000000,180.000000);//вышка3
    CreateDynamicObject(11480,289.229370,1822.304443,18.834333,0.570796,0.000000,90.000000);//переезд
    CreateDynamicObject(11480,282.921143,1822.302612,18.834333,0.570796,0.000000,90.000000);//переезд
    CreateDynamicObject(16095,291.7807,1830.3577,16.6481,0.000000,0.000000,270.000000);//будка
    //============================== Медики Интерьер ===========================
	CreateObject(14602,374.27539062,-60.06250000,1080.83801270,0.00000000,0.00000000,0.00000000); //object(paperchase01)(1)
	CreateObject(14597,364.12292480,-30.97869873,1077.44995117,0.00000000,0.00000000,270.00000000); //object(paperchase07)(1)
	CreateObject(1567,368.96865845,-67.08923340,1075.47729492,0.00000000,0.00000000,358.00000000); //object(gen_wardrobe)(1)
	CreateObject(14602,374.27539062,-60.06250000,1080.83801270,0.00000000,0.00000000,0.00000000); //object(paperchase01)(1)
	CreateObject(1567,363.54928589,-75.67990112,1075.50280762,0.00000000,0.00000000,0.00000000); //object(gen_wardrobe)(2)
	CreateObject(1703,362.57421875,-69.41406250,1075.47082520,0.00000000,0.00000000,270.00000000); //object(kb_couch02)(1)
	CreateObject(1703,361.37350464,-72.85481262,1075.47082520,0.00000000,0.00000000,180.00000000); //object(kb_couch02)(3)
	CreateObject(1703,361.37304688,-72.85449219,1075.47082520,0.00000000,0.00000000,179.99450684); //object(kb_couch02)(4)
	CreateObject(1703,358.49493408,-71.17904663,1075.47082520,0.00000000,0.00000000,92.00000000); //object(kb_couch02)(5)
	CreateObject(1703,368.20260620,-52.03403091,1075.47082520,0.00000000,0.00000000,90.00000000); //object(kb_couch02)(12)
	CreateObject(1703,368.11425781,-52.12597656,1075.47082520,0.00000000,0.00000000,90.00000000); //object(kb_couch02)(13)
	CreateObject(1703,372.52929688,-50.22558594,1075.47082520,0.00000000,0.00000000,267.99499512); //object(kb_couch02)(14)
	CreateObject(2296,370.59490967,-44.70132446,1075.47729492,0.00000000,0.00000000,0.00000000); //object(tv_unit_1)(1)
	CreateObject(1808,374.59463501,-45.23389053,1075.47729492,0.00000000,0.00000000,324.00000000); //object(cj_watercooler2)(1)
	CreateObject(1997,352.49923706,-41.29287338,1075.45776367,0.00000000,0.00000000,180.00000000); //object(hos_trolley)(1)
	CreateObject(1997,357.22293091,-41.29145050,1075.45776367,0.00000000,0.00000000,180.00000000); //object(hos_trolley)(3)
	CreateObject(1997,354.88546753,-41.28674698,1075.45776367,0.00000000,0.00000000,180.00000000); //object(hos_trolley)(4)
	CreateObject(14532,359.51007080,-36.37860870,1076.44775391,0.00000000,0.00000000,179.99450684); //object(tv_stand_driv)(1)
	CreateObject(14532,357.16040039,-36.39913940,1076.44775391,0.00000000,0.00000000,181.99499512); //object(tv_stand_driv)(2)
	CreateObject(14532,354.77044678,-36.38866806,1076.44042969,0.00000000,0.00000000,181.99952698); //object(tv_stand_driv)(4)
	CreateObject(1723,362.18386841,-25.19425774,1075.45776367,0.00000000,0.00000000,90.00000000); //object(mrk_seating1)(1)
	CreateObject(2166,363.38323975,-20.56666946,1075.46508789,0.00000000,0.00000000,178.00000000); //object(med_office_desk_2)(1)
	CreateObject(2164,363.16012573,-17.83714485,1075.47387695,0.00000000,0.00000000,0.00000000); //object(med_office_unit_5)(2)
	CreateObject(3383,355.20410156,-30.70117188,1075.46508789,0.00000000,0.00000000,0.00000000); //object(a51_labtable1_)(1)
	CreateObject(14532,354.01953125,-33.94433594,1076.44042969,0.00000000,0.00000000,0.00000000); //object(tv_stand_driv)(5)
	CreateObject(2164,354.67745972,-27.21059227,1075.45776367,0.00000000,0.00000000,0.00000000); //object(med_office_unit_5)(3)
	CreateObject(1703,369.51205444,-48.82185364,1075.47729492,0.00000000,0.00000000,359.99499512); //object(kb_couch02)(14)
	CreateObject(1822,369.84472656,-51.59863281,1075.47082520,0.00000000,0.00000000,0.00000000); //object(coffee_swank_6) (1)
	CreateObject(3383,372.06622314,-38.51749039,1075.45776367,0.00000000,0.00000000,0.00000000); //object(a51_labtable1_)(1)
	CreateObject(14532,352.43011475,-36.37911987,1076.44042969,0.00000000,0.00000000,181.98950195); //object(tv_stand_driv)(3)
	CreateObject(14532,377.26409912,-38.52306747,1076.44042969,0.00000000,0.00000000,92.00000000); //object(tv_stand_driv)(5)
	CreateObject(2000,377.30770874,-39.17716217,1075.45776367,0.00000000,0.00000000,272.00000000); //object(filing_cab_nu) (1)
	CreateObject(2000,377.18554688,-37.85644531,1075.45776367,0.00000000,0.00000000,271.99951172); //object(filing_cab_nu) (2)
	CreateObject(2154,372.16540527,-42.10847473,1075.45776367,0.00000000,0.00000000,180.00000000); //object(cj_k5_low_unit1) (1)
	CreateObject(2151,370.86386108,-42.11722946,1075.45776367,0.00000000,0.00000000,180.00000000); //object(cj_k5_low_unit2) (1)
	CreateObject(2151,373.49874878,-42.09830093,1075.45776367,0.00000000,0.00000000,179.99450684); //object(cj_k5_low_unit2) (2)
	CreateObject(2161,377.66760254,-36.77020645,1075.45776367,0.00000000,0.00000000,270.00000000); //object(med_office_unit_4) (1)
	CreateObject(2164,377.62908936,-39.90225220,1075.45776367,0.00000000,0.00000000,270.00000000); //object(med_office_unit_5) (1)
	CreateObject(2604,371.37481689,-35.07409668,1076.25463867,0.00000000,0.00000000,0.00000000); //object(cj_police_counter) (1)
	CreateObject(2606,363.51773071,-17.83714485,1077.54626465,0.00000000,0.00000000,0.00000000); //object(cj_police_counter2) (1)
	CreateObject(1997,369.08117676,-32.60949707,1075.45776367,0.00000000,0.00000000,179.99450684); //object(hos_trolley)(1)
	CreateObject(1997,370.99313354,-32.54833221,1075.45776367,0.00000000,0.00000000,179.99450684); //object(hos_trolley)(1)
	CreateObject(1997,373.33929443,-32.53343582,1075.45776367,0.00000000,0.00000000,179.99450684); //object(hos_trolley)(1)
	CreateObject(1997,375.70501709,-32.54546356,1075.45776367,0.00000000,0.00000000,179.99450684); //object(hos_trolley)(1)
	CreateObject(14532,368.95733643,-27.61697006,1076.44042969,0.00000000,0.00000000,181.99951172); //object(tv_stand_driv)(4)
	CreateObject(14532,370.87658691,-27.58014870,1076.44042969,0.00000000,0.00000000,181.99951172); //object(tv_stand_driv)(4)
	CreateObject(14532,373.38571167,-27.62643242,1076.44042969,0.00000000,0.00000000,181.99951172); //object(tv_stand_driv)(4)
	CreateObject(2008,357.29519653,-59.83173370,1075.47729492,0.00000000,0.00000000,266.00000000); //object(officedesk1) (1)
	CreateObject(2356,356.32742310,-60.38174820,1075.47729492,0.00000000,0.00000000,268.00000000); //object(police_off_chair) (1)
	CreateObject(2774,365.90295410,-44.43481445,1088.54565430,0.00000000,0.00000000,0.00000000); //object(cj_airp_pillars) (1)
	CreateObject(2774,362.69305420,-44.43302917,1088.45776367,0.00000000,0.00000000,0.00000000); //object(cj_airp_pillars) (2)
	CreateObject(18066,364.27432251,-43.94282150,1078.27539062,0.00000000,0.00000000,0.25000000); //object(posterv) (1)
	//================================== News ==================================
	CreateObject(15031,998.90002441,1003.70001221,1998.79998779,0.00000000,0.00000000,0.25000000); //convertffs(0)
    CreateObject(2009,997.09997559,1004.29998779,1998.79998779,0.00000000,0.00000000,180.00000000); //convertffs(1)
    CreateObject(1714,996.00000000,1004.40002441,1998.90002441,0.00000000,0.00000000,45.74642944); //convertffs(2)
    CreateObject(14391,1004.69921875,1002.69921875,1999.79998779,0.00000000,0.00000000,179.99450684); //convertffs(8)
    CreateObject(1567,997.84997559,1000.59997559,1998.79998779,0.00000000,0.00000000,270.00000000); //convertffs(10)
    CreateObject(1671,1002.90002441,1004.29998779,1999.29998779,0.00000000,0.00000000,89.74731445); //convertffs(15)
    CreateObject(1671,1002.90002441,1002.59997559,1999.29998779,0.00000000,0.00000000,89.74731445); //convertffs(17)
    CreateObject(1671,1002.90002441,1000.90002441,1999.29998779,0.00000000,0.00000000,89.74731445); //convertffs(18)
    CreateObject(18098,1005.90002441,1001.70001221,2000.70001221,0.00000000,0.00000000,90.00000000); //object(barber_blinds03) (1)
    CreateObject(18072,1005.79998779,1008.70001221,2000.50000000,0.00000000,0.00000000,270.00000000); //object(gap_window) (2)
    CreateObject(1671,998.20001221,1003.70001221,1999.29998779,0.00000000,0.00000000,269.99731445); //convertffs(17)
    CreateObject(1671,998.20001221,1004.50000000,1999.29998779,0.00000000,0.00000000,269.99450684); //convertffs(17)
    CreateObject(1726,998.09997559,1002.09997559,1998.79998779,0.00000000,0.00000000,0.00000000); //object(mrk_seating2) (1)
    CreateObject(2161,998.50000000,1002.79998779,1998.79998779,0.00000000,0.00000000,179.99993896); //object(med_office_unit_4) (1)
    CreateObject(2167,999.40002441,1002.79998779,1998.79998779,0.00000000,0.00000000,179.25000000); //object(med_office_unit_7) (1)
    CreateObject(14812,994.59997559,1004.90002441,2001.00000000,0.00000000,359.50000000,89.74993896); //object(studiohall_frames) (1)
    CreateObject(14392,996.90002441,1002.90002441,2000.00000000,0.00000000,0.00000000,0.00000000); //object(dr_gsnew08) (1)
    CreateObject(2346,1002.40002441,998.50000000,1998.79998779,0.00000000,0.00000000,179.25000000); //object(cj_hifi_table) (1)
    CreateObject(2346,1002.40002441,998.50000000,1999.20001221,0.00000000,0.00000000,179.24743652); //object(cj_hifi_table) (3)
	//========================== Новое =================================
	CreateDynamicObject(19129,481.85,-16.31,999.68,0.00,0.00,0.00);
	CreateDynamicObject(19159,500.66,-16.76,1002.53,0.00,0.00,0.00);
	CreateDynamicObject(19159,500.52,-17.41,1002.53,0.00,0.00,0.00);
	CreateDynamicObject(19159,500.55,-18.19,1002.53,0.00,0.00,0.00);
	CreateDynamicObject(19159,500.58,-18.99,1002.53,0.00,0.00,0.00);
	CreateDynamicObject(19159,500.56,-19.83,1002.53,0.00,0.00,0.00);
	CreateDynamicObject(19159,500.43,-20.81,1002.53,0.00,0.00,0.00);
	CreateDynamicObject(19159,500.49,-21.59,1002.53,0.00,0.00,0.00);
	CreateDynamicObject(19159,500.50,-22.41,1002.53,0.00,0.00,0.00);
	CreateDynamicObject(19159,500.58,-23.20,1002.53,0.00,0.00,0.00);
	CreateDynamicObject(19159,500.53,-23.98,1002.53,0.00,0.00,0.00);
	//========================== Paint Ball ============================
	CreateDynamicObject(5170,2552.87597656,2766.25659180,13.66572475,0.00000000,0.00000000,0.00000000); //object(imnrmpy2_las2) (1)
	CreateDynamicObject(5170,2551.80981445,2744.61572266,13.66572475,0.00000000,0.00000000,0.00000000); //object(imnrmpy2_las2) (2)
	CreateDynamicObject(5170,2551.49316406,2794.50073242,13.66572475,0.00000000,0.00000000,0.00000000); //object(imnrmpy2_las2) (3)
	CreateDynamicObject(3043,2582.46679688,2807.37036133,11.27223206,0.00000000,0.00000000,0.00000000); //object(kmb_container_open) (1)
	CreateDynamicObject(3043,2613.61181641,2807.70214844,11.27223206,0.00000000,0.00000000,0.00000000); //object(kmb_container_open) (2)
	CreateDynamicObject(18260,2579.22485352,2842.20605469,11.39350510,0.00000000,0.00000000,0.00000000); //object(crates01) (1)
	CreateDynamicObject(1431,2614.69287109,2832.97265625,10.36792564,0.00000000,0.00000000,80.00000000); //object(dyn_box_pile) (1)
	CreateDynamicObject(3565,2598.67114258,2808.57958984,14.60387421,0.00000000,0.00000000,90.00000000); //object(lasdkrt1_la01) (1)
	CreateDynamicObject(3573,2601.66772461,2827.66430664,12.51200390,0.00000000,0.00000000,90.00000000); //object(lasdkrtgrp1) (1)
	CreateDynamicObject(3575,2577.66162109,2823.56713867,12.51200294,0.00000000,0.00000000,0.00000000); //object(lasdkrt05) (1)
	CreateDynamicObject(3576,2603.48193359,2831.21386719,16.70763397,0.00000000,0.00000000,178.00000000); //object(dockcrates2_la) (1)
	CreateDynamicObject(3800,2581.90380859,2829.22216797,12.51763725,0.00000000,0.00000000,0.00000000); //object(acbox4_sfs) (1)
	CreateDynamicObject(3800,2575.81030273,2830.46435547,12.51763725,0.00000000,0.00000000,0.00000000); //object(acbox4_sfs) (2)
	CreateDynamicObject(3800,2581.20703125,2824.35351562,15.21496201,0.00000000,0.00000000,0.00000000); //object(acbox4_sfs) (3)
	CreateDynamicObject(3800,2546.06030273,2831.63256836,13.25593376,0.00000000,0.00000000,0.00000000); //object(acbox4_sfs) (4)
	CreateDynamicObject(3800,2569.89770508,2829.42382812,9.82031250,0.00000000,0.00000000,0.00000000); //object(acbox4_sfs) (5)
	CreateDynamicObject(7040,2562.93725586,2821.91650391,13.24809265,0.00000000,0.00000000,0.00000000); //object(vgnplcehldbox01) (1)
	CreateDynamicObject(8885,2587.69555664,2808.10986328,13.24809265,0.00000000,0.00000000,90.00000000); //object(vgsefrght03) (1)
	CreateDynamicObject(2048,2583.01025391,2824.90185547,13.54934692,0.00000000,0.00000000,90.00000000); //object(cj_flag2) (1)
	CreateDynamicObject(2048,2567.04467773,2820.36108398,15.18964386,0.00000000,0.00000000,90.00000000); //object(cj_flag2) (2)
	CreateDynamicObject(2048,2550.66284180,2839.76000977,12.33377647,0.00000000,0.00000000,90.00000000); //object(cj_flag2) (3)
	CreateDynamicObject(2765,2539.72045898,2829.25317383,14.70967579,0.00000000,0.00000000,60.00000000); //object(cj_cb_list1) (1)
	CreateDynamicObject(2745,2595.37207031,2794.51879883,11.02893162,0.00000000,0.00000000,270.00000000); //object(cj_stat_3) (1)
	CreateDynamicObject(2745,2595.49951172,2786.80615234,11.02893162,0.00000000,0.00000000,270.00000000); //object(cj_stat_3) (2)
	CreateDynamicObject(4515,2896.34228516,476.26184082,-64.61634827,0.00000000,0.00000000,0.00000000); //object(cn2_roadblock02ld) (1)
	CreateDynamicObject(7891, 2539.53, 2823.35, 12.06, 0.00, 0.00, 0.00); //object(vgwspry1) (0)
	CreateDynamicObject(7891, 2539.53, 2823.35, 16.60, 0.00, 0.00, 0.00); //object(vgwspry1) (1)
	CreateDynamicObject(7891, 2616.45, 2830.52, 12.08, 0.00, 0.00, 0.00); //object(vgwspry1) (2)
	CreateDynamicObject(7891, 2616.45, 2830.52, 16.62, 0.00, 0.00, 0.00); //object(vgwspry1) (3)
	CreateDynamicObject(18200,1853.96386719,3129.90771484,-73.40789032,0.00000000,0.00000000,0.00000000); //object(w_town_11) (1)
	CreateDynamicObject(12839,2579.71850586,2819.52880859,16.23694229,0.00000000,0.00000000,88.50000000); //object(cos_sbanksteps02) (1)
	CreateDynamicObject(12958,2503.84667969,2820.36157227,12.91957855,0.00000000,0.00000000,180.00000000); //object(cos_sbanksteps01) (1)
	CreateDynamicObject(12985,2547.93603516,2811.11743164,17.09434509,0.00000000,0.00000000,0.00000000); //object(cos_sbanksteps05) (1)
	CreateDynamicObject(5822,2822.91430664,2972.92187500,-0.44067764,0.00000000,0.00000000,100.00000000); //object(lhroofst14) (1)
	CreateDynamicObject(12839,2567.61547852,2827.19677734,16.97333145,0.00000000,0.00000000,180.00000000); //object(cos_sbanksteps02) (2)
	//==========================================================================
	CreateDynamicObject(1978,2230.8989,1619.5001,1006.2346,0.00,0.00,90.00);
	CreateDynamicObject(1978,2242.4980,1619.5001,1006.2346,0.00,0.00,90.00);
	Braban[0] = CreateObject(1979,2229.5522,1619.2888,1006.1536,0.00,0.00,0.00);
	Braban[1] = CreateObject(1979,2241.1545,1619.2888,1006.1536,0.00,0.00,0.00);
	return true;
}
stock CreateVehicles()
{
	//============================== MEDICS SF =================================
	medicssf[0] = AddStaticVehicle(416,-2667.1025,618.7576,14.6025,269.3032,1,3);// Ambulance 0
	medicssf[1] = AddStaticVehicle(416,-2645.5508,618.7769,14.6022,268.8593,1,3); // Ambulance 1
	medicssf[2] = AddStaticVehicle(416,-2657.40,618.89,14.600,268.8593,1,3); // Ambulance 2
	medicssf[3] = AddStaticVehicle(416,-2633.7793,618.4516,14.6024,268.9531,1,3); // Ambulance 3
	medicssf[4] = AddStaticVehicle(416,-2603.3665,607.8778,14.5964,180.2311,1,3); // Ambulance 4
	medicssf[5] = AddStaticVehicle(416,-2603.2981,617.1184,14.6052,180.2921,1,3); // Ambulance 5
	medicssf[6] = AddStaticVehicle(416,-2603.4512,582.1281,14.6028,178.6690,1,3); // Ambulance 6
	medicssf[7] = AddStaticVehicle(487,-2594.7776,607.0668,14.7185,178.8032,1,3); // Medic Maverick 0
	//================================ MEDICS LS ===============================
	medicsls[0] = AddStaticVehicle(416,1178.5431,-1338.7671,14.0167,270.0624,1,3); // Ambulance 0
	medicsls[1] = AddStaticVehicle(416,1178.0116,-1308.9192,13.9939,268.2672,1,3); // Ambulance 1
	medicsls[2] = AddStaticVehicle(487,1178.7334,-1361.2590,14.2509,269.0083,1,3); // Ambulance 2
	medicsls[3] = AddStaticVehicle(416,1145.6483,-1311.8895,13.8003,91.8553,1,3); // Ambulance 3
	medicsls[4] = AddStaticVehicle(416,1145.3275,-1306.1224,13.8045,88.2659,1,3); // Ambulance 4
	medicsls[5] = AddStaticVehicle(416,1145.8798,-1302.2570,13.8015,88.1521,1,3); // Ambulance 5
	//================================ MEDICS LV ===============================
	medicslv[0] = AddStaticVehicleEx(416,1620.4630,1850.6283,10.9697,180.2412,1,3,900); // Ambulance 0
	medicslv[1] = AddStaticVehicleEx(416,1616.1317,1850.6100,11.0046,180.2408,1,3,900); // Ambulance 1
	medicslv[2] = AddStaticVehicleEx(416,1611.9624,1850.5928,11.0261,180.2408,1,3,900); // Ambulance 2
	medicslv[3] = AddStaticVehicleEx(416,1607.6329,1850.5745,11.0442,180.2408,1,3,900); // Ambulance 3
	medicslv[4] = AddStaticVehicleEx(416,1603.5677,1850.5577,10.9890,180.2408,1,3,900); // Ambulance 4
	medicslv[5] = AddStaticVehicleEx(416,1599.3500,1850.5466,10.9629,180.2446,1,3,900); // Ambulance 5
	medicslv[6] = AddStaticVehicleEx(416,1595.1877,1850.5289,10.9924,180.2446,1,3,900); // Ambulance 6
	medicslv[7] = AddStaticVehicleEx(416,1591.0562,1850.5118,11.0216,180.2446,1,3,900); // Ambulance 7
	//================================ SFPD ====================================
	sfpdcar[0] = AddStaticVehicleEx(427,-1638.7850,653.7558,-5.1094,271.5658,1,79,900); // SFPD Enforcer 0
	sfpdcar[1] = AddStaticVehicleEx(427,-1638.8691,657.6266,-5.1104,271.5658,1,79,900); // SFPD Enforcer 1
	sfpdcar[2] = AddStaticVehicleEx(427,-1638.9778,661.6664,-5.1103,271.5658,1,79,900); // SFPD Enforcer 2
 	sfpdcar[3] = AddStaticVehicleEx(427,-1639.0596,666.1422,-5.1103,271.5658,1,79,900); // SFPD Enforcer 3
 	sfpdcar[4] = AddStaticVehicleEx(427,-1639.1912,670.1107,-5.1098,271.5658,1,79,900); // SFPD Enforcer 4
 	sfpdcar[5] = AddStaticVehicleEx(597,-1608.5095,748.6892,-5.4740,180.7957,1,79,900); // SFPD Cruiser 0
	sfpdcar[6] = AddStaticVehicleEx(597,-1604.3743,748.7833,-5.4732,180.8979,1,79,900); // SFPD Cruiser 1
	sfpdcar[7] = AddStaticVehicleEx(597,-1600.1812,748.8475,-5.4732,180.6038,1,79,900); // SFPD Cruiser 2
	sfpdcar[9] = AddStaticVehicleEx(597,-1579.5892,749.2114,-5.4732,180.1104,1,79,900); // SFPD Cruiser 3
	sfpdcar[10] = AddStaticVehicleEx(597,-1591.9786,748.9724,-5.4733,180.5795,1,79,900); // SFPD Cruiser 4
	sfpdcar[11] = AddStaticVehicleEx(597,-1583.8110,749.2034,-5.4739,179.4646,1,79,900); // SFPD Cruiser 5
	sfpdcar[12] = AddStaticVehicleEx(597,-1596.0133,748.9694,-5.4740,179.9943,1,79,900); // SFPD Cruiser 6
	sfpdcar[13] = AddStaticVehicleEx(597,-1587.7101,749.0371,-5.4737,180.2399,1,79,900); // SFPD Cruiser 7
	sfpdcar[14] = AddStaticVehicleEx(597,-1574.1715,738.8038,-5.4727,90.8081,1,79,900); // SFPD Cruiser 8
	sfpdcar[15] = AddStaticVehicleEx(597,-1574.2087,714.2832,-5.4741,90.8081,1,79,900); // SFPD Cruiser 9
	sfpdcar[16] = AddStaticVehicleEx(597,-1574.2324,718.6381,-5.4733,90.8081,1,79,900); // SFPD Cruiser 10
	sfpdcar[17] = AddStaticVehicleEx(597,-1573.9800,734.5951,-5.4732,90.8081,1,79,900); // SFPD Cruiser 11
	sfpdcar[18] = AddStaticVehicleEx(597,-1573.7732,730.6323,-5.4739,90.8081,1,79,900); // SFPD Cruiser 12
	sfpdcar[19] = AddStaticVehicleEx(497,-1680.9225,705.6724,30.7915,95.5060,0,1,900); // SFPD Helicopter 0
	sfpdcar[20] = AddStaticVehicle(523,-1600.0845,695.2717,-5.6700,180.5546,0,1); // SFPD Bike 0
	sfpdcar[21] = AddStaticVehicle(523,-1603.5908,695.2377,-5.6700,180.5546,0,1); // SFPD Bike 1
	sfpdcar[22] = AddStaticVehicle(523,-1608.4457,695.1907,-5.6700,180.5546,0,1); // SFPD Bike 2
	sfpdcar[23] = AddStaticVehicle(523,-1611.6722,695.1595,-5.6701,180.5546,0,1); // SFPD Bike 3
	sfpdcar[24] = AddStaticVehicle(523,-1616.8567,692.3514,-5.6723,177.3526,0,1); // SFPD Bike 4
	sfpdcar[25] = AddStaticVehicle(523,-1620.4467,692.5175,-5.6723,177.3526,0,1); // SFPD Bike 5
	sfpdcar[26] = AddStaticVehicle(523,-1624.2755,692.6945,-5.6723,177.3526,0,1); // SFPD Bike 6
	sfpdcar[27] = AddStaticVehicle(523,-1629.6143,692.9413,-5.6722,177.3526,0,1); // SFPD Bike 7
	sfpdcar[28] = AddStaticVehicle(523,-1632.7988,693.0886,-5.6722,177.3526,0,1); // SFPD Bike 8
	//================================ АВЛС ====================================
	AddStaticVehicleEx(462,1210.5145,-1826.7781,13.0106,180.0000,125,125,300); // 1
	AddStaticVehicleEx(462,1208.4211,-1826.7314,13.0096,183.0463,125,125,300); // 2
	AddStaticVehicleEx(462,1206.4061,-1826.6624,13.0099,180.0000,125,125,300); // 3
	AddStaticVehicleEx(462,1204.4911,-1826.7062,13.0084,180.0000,125,125,300); // 4
	AddStaticVehicleEx(462,1202.3964,-1826.6492,13.0088,177.3798,125,125,300); // 5
	AddStaticVehicleEx(462,1200.1128,-1826.5488,13.0062,180.0000,125,125,300); // 6
	AddStaticVehicleEx(462,1197.4812,-1826.6182,13.0220,180.0000,125,125,300); // 7
	//===========================
	AddStaticVehicleEx(452,445.2233,-1920.9642,-0.3898,185.0958,6,6,120); // КАТЕР
	AddStaticVehicleEx(452,456.7216,-1918.3641,-0.3869,180.5021,6,6,120); // КАТЕР
	AddStaticVehicleEx(452,467.0102,-1919.4194,-0.2940,183.4172,6,6,120); // КАТЕР
	AddStaticVehicleEx(452,478.4421,-1921.4248,-0.6810,188.6158,6,6,120); // КАТЕР
	AddStaticVehicleEx(452,490.7324,-1924.1136,-0.4312,174.7413,6,6,120); // КАТЕР
	//================== ГРУЗЧИКИ
	AddStaticVehicleEx(462,2193.3730,-2238.2759,13.1186,289.2540,1,1,300); // скутер 1
	AddStaticVehicleEx(462,2194.4766,-2239.8105,13.1437,287.2410,1,1,300); // скутер 2
	AddStaticVehicleEx(462,2196.0400,-2241.3159,13.1468,290.2096,1,1,300); // скутер 3
	AddStaticVehicleEx(462,2197.2349,-2242.9424,13.1452,288.1137,1,1,300); // скутер 4
	AddStaticVehicleEx(462,2198.8320,-2244.4026,13.1473,280.9946,1,1,300); // скутер 5
	//=================== Больница ЛС
	AddStaticVehicleEx(462,1214.2189,-1328.6984,13.1647,110.7490,3,3,300); // МОПЕД МЕДИКИ 1
	AddStaticVehicleEx(462,1213.6212,-1326.5583,13.1645,115.6584,3,3,300); // МОПЕД МЕДИКИ 2
	AddStaticVehicleEx(462,1213.5712,-1324.1215,13.1568,114.7684,3,3,300); // МОПЕД МЕДИКИ 3
	AddStaticVehicleEx(462,1213.5553,-1321.3105,13.1602,110.4821,3,3,300); // МОПЕД МЕДИКИ 4
	AddStaticVehicleEx(462,1213.2275,-1318.5184,13.1571,108.7884,3,3,300); // МОПЕД МЕДИКИ 5
	AddStaticVehicleEx(462,1212.9589,-1315.5927,13.1562,108.3554,3,3,300); // МОПЕД МЕДИКИ 6
	//============================== RUSSIAN MAFIA =============================
	ruscar[0] = AddStaticVehicleEx(579,983.4655,1746.6316,8.5740,91.2397,0,0,600); // RM
	ruscar[1] = AddStaticVehicleEx(579,983.5415,1743.4474,8.5810,90.2642,0,0,600); // RM
	ruscar[2] = AddStaticVehicleEx(505,983.8646,1740.7306,8.7946,89.1991,0,0,600); // RM
	ruscar[3] = AddStaticVehicleEx(505,983.8167,1737.8961,8.7952,89.6745,0,0,600); // RM
	ruscar[4] = AddStaticVehicleEx(405,983.7209,1735.0453,8.5266,89.4270,0,0,600); // RM
	ruscar[5] = AddStaticVehicleEx(405,983.6391,1732.3300,8.5266,90.8181,0,0,600); // RM
	ruscar[6] = AddStaticVehicleEx(562,983.7585,1729.1962,8.3145,92.2911,0,0,600); // RM
	ruscar[7] = AddStaticVehicleEx(562,983.8430,1726.7091,8.3140,91.1873,0,0,600); // RM
	ruscar[8] = AddStaticVehicleEx(415,983.9130,1723.2244,8.4244,89.4807,0,0,600); // RM
	ruscar[9] = AddStaticVehicleEx(415,983.9370,1720.8157,8.4254,89.6148,0,0,600); // RM
	ruscar[10] = AddStaticVehicleEx(580,967.6390,1707.4226,8.4446,268.6805,0,0,600); // RM
	ruscar[11] = AddStaticVehicleEx(580,959.6535,1707.5442,8.4446,268.7364,0,0,600); // RM
	ruscar[12] = AddStaticVehicleEx(468,962.7907,1758.5308,8.3273,183.4013,1,1,600); // RM
	ruscar[13] = AddStaticVehicleEx(468,965.3730,1758.5729,8.3175,179.5400,1,1,600); // RM
	ruscar[14] = AddStaticVehicleEx(468,967.7091,1758.6804,8.3183,179.5100,1,1,600); // RM
	ruscar[15] = AddStaticVehicleEx(409,949.6057,1715.6672,8.5426,181.0793,0,0,900); // RM Limo 0
	//================================== LCN ===================================
	lcncar[0] = AddStaticVehicleEx(545,1413.1761,743.0352,10.6314,270.1702,0,0,600); // LCN
	lcncar[1] = AddStaticVehicleEx(545,1413.2813,746.0916,10.6314,268.6651,0,0,600); // LCN
	lcncar[2] = AddStaticVehicleEx(445,1413.3131,749.2375,10.6952,269.8511,0,0,600); // LCN
	lcncar[3] = AddStaticVehicleEx(445,1413.8673,752.7840,10.6953,270.2536,0,0,600); // LCN
	lcncar[4] = AddStaticVehicleEx(533,1413.5796,755.9451,10.5294,269.7290,0,0,600); // LCN
	lcncar[5] = AddStaticVehicleEx(533,1413.4614,759.2437,10.5294,269.1931,0,0,600); // LCN
	lcncar[6] = AddStaticVehicleEx(603,1413.1725,762.2523,10.6589,269.4897,0,0,600); // LCN
	lcncar[7] = AddStaticVehicleEx(603,1413.5321,765.4927,10.6583,270.5428,0,0,600); // LCN
	lcncar[8] = AddStaticVehicleEx(468,1413.6510,768.8721,10.5011,269.2932,6,6,600); // LCN
	lcncar[9] = AddStaticVehicleEx(468,1413.6985,772.0658,10.4934,270.0716,6,6,600); // LCN
	lcncar[10] = AddStaticVehicleEx(468,1413.6252,774.8523,10.4938,268.0792,6,6,600); // LCN
	lcncar[11] = AddStaticVehicleEx(409,1429.0035,787.3469,10.6200,179.3787,0,0,900); // LCN Limo 0
	//=================================== SF NEWS ==============================
	cnncar[0] = AddStaticVehicle(582,-2031.1930,459.3309,35.2332,1.0561,1,16); // News Van 0
	cnncar[1] = AddStaticVehicle(582,-2022.5162,459.3569,35.2286,359.1067,1,16); // News Van 1
	cnncar[2] = AddStaticVehicle(582,-2056.8635,469.9971,35.2334,270.9870,1,16); // News Van 2
	cnncar[3] = AddStaticVehicle(582,-2052.0874,478.6587,35.2299,269.6934,1,16); // News Van 3
	cnncar[4] = AddStaticVehicle(582,-2051.2991,487.4715,35.2243,269.5258,1,16); // News Van 4
	cnnmav = AddStaticVehicle(488,-2060.9878,442.0086,139.9191,270.0095,11,16); // CNN maverick
	//=================================== ТАКСИ ================================
	taxicar[0] = AddStaticVehicle(420,1062.0615,-1775.7018,13.1535,269.9980,6,6); // TAXI LS 0
	taxicar[1] = AddStaticVehicle(420,1062.0488,-1772.5802,13.1710,269.9309,6,6); // TAXI LS 1
	taxicar[2] = AddStaticVehicle(420,1062.0527,-1769.4326,13.1771,269.9322,6,6); // TAXI LS 2
	taxicar[3] = AddStaticVehicle(420,1062.0631,-1766.5918,13.1792,269.9274,6,6); // TAXI LS 3
	taxicar[4] = AddStaticVehicle(420,1062.0592,-1763.6497,13.2056,269.9315,6,6); // TAXI LS 4
	taxicar[5] = AddStaticVehicle(420,1062.0620,-1760.6293,13.2142,269.9259,6,6); // TAXI LS 5
	taxicar[6] = AddStaticVehicle(420,1062.0664,-1757.6024,13.2499,269.9300,6,6); // TAXI LS 6
	taxicar[7] = AddStaticVehicle(420,1062.0704,-1754.6869,13.2409,269.9322,6,6); // TAXI LS 7
	taxicar[8] = AddStaticVehicle(420,1062.0726,-1751.6990,13.2605,269.9281,6,6); // TAXI LS 8
	taxicar[9] = AddStaticVehicle(420,1062.0757,-1748.7107,13.2629,269.9274,6,6); // TAXI LS 9
	taxicar[10] = AddStaticVehicle(420,1062.0771,-1745.7866,13.2691,269.9208,6,6); // TAXI LS 10
	taxicar[11] = AddStaticVehicle(420,415.2819,-1777.3450,5.1652,270.6627,6,1); // TAXI LS 11
	taxicar[12] = AddStaticVehicle(420,404.2156,-1777.3525,5.1958,270.5549,6,1); // TAXI LS 12
	//============================= АВТОСАЛОН ==================================
	avtcar[0] = AddStaticVehicleEx(558,1776.5079,-1763.7477,20.4168,71.6392,1,0,20); // URANUS 558 : 500.000
	avtcar[1] = AddStaticVehicleEx(559,1766.2323,-1787.1316,20.4590,302.3375,21,0,20); // JESTER 559 : 700.000
	avtcar[2] = AddStaticVehicleEx(565,1778.3732,-1788.4574,20.4107,10.1553,7,45,20); //  FLASH 565 : 670.000
	avtcar[3] = AddStaticVehicleEx(562,1772.0643,-1788.2920,20.4380,331.2305,44,0,20); // ELEGY 562 : 700.000
	avtcar[4] = AddStaticVehicleEx(560,1766.5514,-1781.4580,20.4446,282.7190,10,1,20); // SULTAN 560 : 750.000
	avtcar[5] = AddStaticVehicleEx(534,1789.2792,-1774.9568,20.5378,152.3849,123,1,20); // Remington 534 : 400.000
	avtcar[6] = AddStaticVehicleEx(575,1778.6460,-1778.9556,20.3890,111.6125,111,2,20); // Broadway 575 : 350.000
	avtcar[7] = AddStaticVehicleEx(567,1789.0197,-1766.1682,20.6516,150.9436,5,10,20); // Savanna 567 : 300.000
	avtcar[8] = AddStaticVehicleEx(411,1785.2350,-1788.1459,20.5175,341.4203,0,0,20); // INFERNUS 411 : 900.000
	avtcar[9] = AddStaticVehicleEx(576,1777.4387,-1771.0334,20.4353,111.9067,45,0,20); // Tornado 576 : 350.000
	avtcar[10] = AddStaticVehicleEx(541,1765.9910,-1773.5956,20.4219,251.0752,16,0,20); // BULLET 541 : 950.000
	avtcar[11] = AddStaticVehicleEx(522,1769.7491,-1787.2993,13.3471,340.2999,4,22,20); // NRG 522 : 900.000
	avtcar[12] = AddStaticVehicleEx(521,1777.9901,-1751.9100,13.3588,157.7352,3,15,20); // FCR 521 : 850.000
	avtcar[13] = AddStaticVehicleEx(461,1766.1409,-1782.4349,13.3730,300.2508,1,20,20); // PCJ 461 : 800.000
	avtcar[14] = AddStaticVehicleEx(463,1767.4575,-1752.0521,13.3258,312.7891,16,16,20); // Freeway 463 : 750.000
	avtcar[15] = AddStaticVehicleEx(468,1765.1637,-1759.2305,13.4513,248.0834,33,33,20); // Sanchez 468 : 850.000
	avtcar[16] = AddStaticVehicleEx(462,1778.8372,-1788.4512,13.3866,19.0237,40,40,20); // FAGGIO 462 : 70.000 ---------------
	avtcar[17] = AddStaticVehicleEx(471,1770.5602,-1771.0411,13.2677,69.9887,22,36,20); // Quadro 471 : 700.000
	avtcar[18] = AddStaticVehicleEx(586,1779.4719,-1765.5157,13.3063,250.9062,1,1,20); // Wayfarer 586 : 800.000
	avtcar[19] = AddStaticVehicleEx(451,1766.2378,-1766.7015,20.4928,281.7416,75,0,20); // TURISMO 451 : 925.000
	avtcar[20] = AddStaticVehicleEx(477,1766.1097,-1759.4437,20.5384,281.6042,6,6,20); // ZR 477 : 600.000
	avtcar[21] = AddStaticVehicleEx(494,1769.5170,-1753.7882,20.6811,201.1275,1,1,20); // Hotring Racer 494 : 1000.000
	avtcar[22] = AddStaticVehicleEx(506,1779.7642,-1754.0616,20.4903,201.8120,4,4,20); // SUPER GT 506 : 770.000
	avtcar[23] = AddStaticVehicleEx(495,1786.4528,-1753.0991,21.1322,168.8039,1,1,20); // SANDKING 495 : 820.000
	avtcar[24] = AddStaticVehicleEx(571,1780.6979,-1777.9584,13.0707,139.1030,1,1,20); // Karting 571 : 1200.000
	avtcar[25] = AddStaticVehicleEx(509,1802.0382,-1773.8333,13.2740,107.8918,1,1,20); // VELO 509 : 20.000
	avtcar[26] = AddStaticVehicleEx(510,1802.1575,-1782.0215,13.4099,74.9923,2,2,20); // SPORTVELO 510 : 35.000
	avtcar[27] = AddStaticVehicleEx(568,1786.7496,-1752.3187,13.6502,210.6012,2,2,20); // BANDIDO 568 : 1100.000 -------------
	//=======================================================================================
    arcar[0] = AddStaticVehicleEx(401,1749.2808,-1748.9733,14.3477,220.3647,22,3,600); // ARENDA 1
	arcar[1] = AddStaticVehicleEx(405,1737.7375,-1748.4257,14.4743,180.3532,11,1,600); // ARENDA 2
	arcar[2] = AddStaticVehicleEx(410,1727.6591,-1748.3246,14.2493,179.5584,15,1,600); // ARENDA 3
	arcar[3] = AddStaticVehicleEx(419,1717.5742,-1749.0756,14.3013,159.9667,19,1,600); // ARENDA 4
	arcar[4] = AddStaticVehicleEx(526,1707.0192,-1748.6245,14.3831,228.8872,42,1,600); // ARENDA 5
	//================================== HOT DOG ===============================
	hotdogcar[0] = AddStaticVehicle(588,-2429.2341,741.4066,34.9217,179.6980,1,1); // Hot Dog 0
	hotdogcar[1] = AddStaticVehicle(588,-2433.9192,741.2372,34.9212,179.6447,1,1); // Hot Dog 1
	hotdogcar[2] = AddStaticVehicle(588,-2437.8342,741.0984,34.9189,179.8946,1,1); // Hot Dog 2
	hotdogcar[3] = AddStaticVehicle(588,-2442.5227,741.0941,34.9182,179.8704,1,1); // Hot Dog 3
	hotdogcar[4] = AddStaticVehicle(588,-2446.9268,740.9801,34.9242,179.3379,1,1); // Hot Dog 4
	hotdogcar[5] = AddStaticVehicle(588,-2451.2832,740.9025,34.9189,180.1623,1,1); // Hot Dog 5
	hotdogcar[6] = AddStaticVehicle(588,-2455.7896,740.9033,34.9215,179.2092,1,1); // Hot Dog 6
	hotdogcar[7] = AddStaticVehicle(588,-2460.1279,740.7226,34.9204,180.5361,1,1); // Hot Dog 7
	hotdogcar[8] = AddStaticVehicle(588,-2464.4287,740.7175,34.9191,180.0000,1,1); // Hot Dog 8
	//================================== LVPD ==================================
	lvpdcar[0] = AddStaticVehicle(598,2268.9678,2443.6958,10.5668,359.5409,0,1); // LVPD Cruiser 0
	lvpdcar[1] = AddStaticVehicle(598,2273.5706,2443.7290,10.5665,0.6987,0,1); // LVPD Cruiser 1
	lvpdcar[2] = AddStaticVehicle(598,2277.9482,2443.7490,10.5654,359.8027,0,1); // LVPD Cruiser 2
	lvpdcar[3] = AddStaticVehicle(598,2282.1309,2443.7957,10.5660,359.7104,0,1); // LVPD Cruiser 3
	lvpdcar[4] = AddStaticVehicle(598,2282.5002,2476.4595,10.5663,181.3129,0,1); // LVPD Cruiser 4
	lvpdcar[5] = AddStaticVehicle(598,2277.6665,2476.5178,10.5670,180.8092,0,1); // LVPD Cruiser 5
	lvpdcar[6] = AddStaticVehicle(598,2273.6030,2476.5684,10.5669,180.3357,0,1); // LVPD Cruiser 6
	lvpdcar[7] = AddStaticVehicle(598,2268.8853,2476.6331,10.5663,179.7468,0,1); // LVPD Cruiser 7
	lvpdcar[8] = AddStaticVehicle(598,2269.2004,2459.8330,10.5683,0.1298,0,1); // LVPD Cruiser 8
	lvpdcar[9] = AddStaticVehicle(598,2273.3623,2459.5422,10.5661,178.7547,0,1); // LVPD Cruiser 9
	lvpdcar[10] = AddStaticVehicle(598,2278.0513,2459.7075,10.5667,359.0662,0,1); // LVPD Cruiser 10
	lvpdcar[11] = AddStaticVehicle(598,2281.9307,2459.4504,10.5672,180.7914,0,1); // LVPD Cruiser 11
	lvpdcar[12] = AddStaticVehicle(599,2290.6970,2443.7861,11.0110,1.2899,0,1); // LVPD Cruiser 12
	lvpdcar[13] = AddStaticVehicle(599,2260.5859,2476.3032,11.0123,180.0692,0,1); // LVPD Cruiser 13
	lvpdcar[14] = AddStaticVehicle(497,2271.4736,2470.6799,38.8604,0.0013,0,1); // LVPD Rancher 14
	lvpdcar[15] = AddStaticVehicle(523,2255.9148,2476.6135,10.4263,180.0082,1,1); //
	lvpdcar[16] = AddStaticVehicle(523,2251.9368,2476.6135,10.4263,180.0082,1,1); //
	//================================== LS NEWS ================================
	lsnewscar[0] = AddStaticVehicle(582,1668.2490,-1699.8988,15.6692,113.6156,1,2); // LS NEWS VAN 0
	lsnewscar[1] = AddStaticVehicle(582,1668.3706,-1705.5723,15.6659,113.6156,1,2); // LS NEWS VAN 1
	lsnewscar[2] = AddStaticVehicle(582,1668.7556,-1711.6621,15.6669,113.6156,1,2); // LS NEWS VAN 2
	lsnewscar[3] = AddStaticVehicle(582,1668.5909,-1718.2150,15.6650,113.6156,1,2); // LS NEWS VAN 3
	lsnewscar[4] = AddStaticVehicle(582,1667.6899,-1694.3616,15.6655,113.6156,1,2); // LS NEWS VAN 4
	lsnewscar[5] = AddStaticVehicle(488,1654.3325,-1637.6818,83.9478,360.0000,1,2); // LS NEWS Helicopter 0
	//================================= LV NEWS ================================
	lvnewscar[0] = AddStaticVehicle(488,2647.3130,1214.7228,27.0833,179.9999,1,3); // LV NEWS VAN 0
	lvnewscar[1] = AddStaticVehicle(582,2639.1929,1167.8363,10.8775,33.1387,1,3); // LV NEWS VAN 1
	lvnewscar[2] = AddStaticVehicle(582,2646.3479,1168.2446,10.8790,34.0851,1,3); // LV NEWS VAN 2
	lvnewscar[3] = AddStaticVehicle(582,2653.7300,1169.2220,10.8752,35.7964,1,3); // LV NEWS VAN 3
	lvnewscar[4] = AddStaticVehicle(582,2660.8367,1168.9835,10.8743,33.8417,1,3); // LV NEWS VAN 4
	lvnewscar[5] = AddStaticVehicle(582,2666.9121,1169.7819,10.8752,34.9291,1,3); // LV NEWS Helicopter 0
	//================================ GOVERMENT ===============================
	govcar[0] =	AddStaticVehicleEx(421,1450.8750,-1815.7391,13.4293,270.1084,1,1,600); // Goverment Washingtone
	govcar[1] =	AddStaticVehicleEx(421,1450.5878,-1807.2957,13.4294,270.5604,1,1,600); // Goverment Washingtone
	govcar[2] =	AddStaticVehicleEx(421,1450.7418,-1811.7362,13.4294,269.4632,1,1,600); // Goverment Washingtone
	govcar[3] =	AddStaticVehicleEx(409,1450.8119,-1802.9277,13.3469,271.0076,1,1,600); // Goverment Limo
	govcar[4] =	AddStaticVehicleEx(487,1507.6885,-1797.3051,13.7252,0.0000000,1,1,1800); //Maverick
	//=========================== Дальнобойщики ================================
    Linerunner[0] = AddStaticVehicle(403,2260.9980,2779.8608,11.4380,89.9999,-1,-1);
    AddStaticVehicle(403,2260.9980,2770.3906,11.4380,89.9999,-1,-1);
    AddStaticVehicle(403,2260.9980,2764.0408,11.4380,89.9999,-1,-1);
    AddStaticVehicle(403,2260.9983,2754.5005,11.4380,89.9999,-1,-1);
    AddStaticVehicle(403,2260.9988,2747.9705,11.4380,90.0005,-1,-1);
    Linerunner[1] = AddStaticVehicle(403,2260.9983,2738.4004,11.4380,89.9999,-1,-1);
    Roadtrain[0] = AddStaticVehicle(515,2296.0073,2779.9189,11.8265,270.0013,-1,-1);
    AddStaticVehicle(515,2296.0146,2770.4751,11.8305,270.2599,-1,-1);
    AddStaticVehicle(515,2296.0159,2763.8289,11.8284,270.0019,-1,-1);
    AddStaticVehicle(515,2296.0044,2754.3877,11.8305,269.7369,-1,-1);
    AddStaticVehicle(515,2296.0159,2747.9287,11.8284,270.0018,-1,-1);
    AddStaticVehicle(515,2296.0159,2738.3289,11.8284,270.0019,-1,-1);
    AddStaticVehicle(515,2347.0161,2738.2393,11.8725,270.0006,-1,-1);
    AddStaticVehicle(515,2347.0161,2747.8691,11.8727,270.0008,-1,-1);
    AddStaticVehicle(515,2347.0161,2754.4189,11.8728,270.0009,-1,-1);
    AddStaticVehicle(515,2347.0161,2763.9092,11.8726,270.0006,-1,-1);
    AddStaticVehicle(515,2347.0159,2770.5994,11.8725,270.0005,-1,-1);
    Roadtrain[1] = AddStaticVehicle(515,2347.0159,2779.9290,11.8282,270.0015,-1,-1);
	//================================= Ферма ===================================
	//================================= LSA ====================================
    lsacar[0] = AddStaticVehicle(470,2739.5549,-2419.2371,13.6304,270.2878,0,0);
    lsacar[1] = AddStaticVehicle(470,2739.5923,-2423.3367,13.6305,270.9906,0,0);
    lsacar[2] = AddStaticVehicle(470,2739.6287,-2427.6265,13.6315,271.0866,0,0);
    lsacar[3] = AddStaticVehicle(470,2743.4583,-2448.7090,13.6656,270.0050,0,0);
    lsacar[4] = AddStaticVehicle(470,2743.4321,-2444.9141,13.6371,270.5514,0,0);
    lsacar[5] = AddStaticVehicle(470,2743.3860,-2441.0242,13.6362,270.8676,0,0);
    lsacar[6] = AddStaticVehicle(470,2736.8411,-2474.9597,13.6466,270.4148,0,0);
    lsacar[7] = AddStaticVehicle(470,2736.8289,-2471.1628,13.6426,269.8400,0,0);
    lsacar[8] = AddStaticVehicle(470,2736.8328,-2467.4814,13.6651,269.7310,0,0);
    lsacar[9] = AddStaticVehicle(470,2736.8308,-2463.7458,13.6885,269.8215,0,0);
	lsacar[10] = AddStaticVehicle(470,2736.8667,-2478.7322,13.6415,270.8732,0,0);
	lsacar[11] = AddStaticVehicle(470,2736.7996,-2460.1074,13.6475,269.3318,0,0);
	lsacar[12] = AddStaticVehicle(470,2735.5662,-2392.9441,13.6267,140.8576,0,0);
	lsacar[13] = AddStaticVehicle(470,2740.5520,-2392.8936,13.6257,142.6246,0,0);
	lsacar[14] = AddStaticVehicle(470,2745.5024,-2392.9404,13.6255,142.6646,0,0);
	lsacar[15] = AddStaticVehicle(470,2750.4390,-2392.9768,13.6442,143.1559,0,0);
	lsacarvert[0] = AddStaticVehicle(548,2773.1833,-2354.5332,15.3227,270.0318,0,0);
	//========================== Mechaniks =====================================
    mehanik[0] = AddStaticVehicle(525,1649.8070,-1107.4197,23.7879,270.4307,1,3); // Mechanik 0
    mehanik[1] = AddStaticVehicle(525,1649.5594,-1097.9303,23.7825,271.0184,1,3); // Mechanik 1
	mehanik[2] = AddStaticVehicle(525,1649.5481,-1088.9520,23.7802,271.2585,1,3); // Mechanik 2
	mehanik[3] = AddStaticVehicle(525,1649.4701,-1080.2677,23.7859,269.8732,1,3); // Mechanik 3
	mehanik[4] = AddStaticVehicle(525,1630.1318,-1107.5986,23.7810,90.0636,1,3); // Mechanik 4
	mehanik[5] = AddStaticVehicle(525,1629.4932,-1098.3491,23.7889,91.1477,1,3); // Mechanik 5
	mehanik[6] = AddStaticVehicle(525,1629.3313,-1089.4033,23.7905,89.8329,1,3); // Mechanik 6
	mehanik[7] = AddStaticVehicle(525,-70.9419,-1156.6366,1.6491,106.9529,1,3); // Mechanik 7
	mehanik[8] = AddStaticVehicle(525,-75.4985,-1153.8265,1.5561,106.9529,1,3); // Mechanik 8
	mehanik[9] = AddStaticVehicle(525,-79.4743,-1152.0967,2.1477,106.9529,1,3); // Mechanik 9
	mehanik[10] = AddStaticVehicle(525,-81.0021,-1197.2158,2.0621,13.2738,1,3); // Mechanik 10
	mehanik[11] = AddStaticVehicle(525,-85.3324,-1197.1295,2.1304,13.2739,1,3); // Mechanik 11
	mehanik[12] = AddStaticVehicle(525,-89.2924,-1196.4034,2.1066,13.2739,1,3); // Mechanik 12
	mehanik[13] = AddStaticVehicle(525,981.9313,-911.2308,41.8059,235.0910,1,3); // Mechanik 13
	mehanik[14] = AddStaticVehicle(525,982.1018,-916.5222,41.6776,235.8817,1,3); // Mechanik 14
	mehanik[15] = AddStaticVehicle(525,982.1166,-921.6226,41.5944,237.6462,1,3); // Mechanik 15
	mehanik[16] = AddStaticVehicle(525,982.2241,-927.0219,41.5558,235.2148,1,3); // Mechanik 16
	mehanik[17] = AddStaticVehicle(525,981.9857,-931.9604,41.4651,238.0461,1,3); // Mechanik 17
	mehanik[18] = AddStaticVehicle(525,-1913.1592,302.4428,40.9302,132.1687,1,3); // Mechanik 18
	mehanik[19] = AddStaticVehicle(525,-1912.9362,297.2397,40.9293,130.1418,1,3); // Mechanik 19
	mehanik[20] = AddStaticVehicle(525,-1913.0543,291.9246,40.9192,128.8127,1,3); // Mechanik 20
	mehanik[21] = AddStaticVehicle(525,-1912.9203,286.9842,40.9267,127.0311,1,3); // Mechanik 21
	mehanik[22] = AddStaticVehicle(525,-1912.8986,281.8015,40.9196,125.3126,1,3); // Mechanik 22
	//================================= Licensers ==============================
 	liccar[0] = AddStaticVehicleEx(426,1124.1039,-1725.4438,13.4795,358.4428,2,2,10); // 1
	liccar[1] = AddStaticVehicleEx(426,1120.5099,-1725.5345,13.4693,358.5896,2,2,10); // 2
	liccar[2] = AddStaticVehicleEx(426,1116.8461,-1725.4066,13.4194,0.2315,2,2,10); // 3
	liccar[3] = AddStaticVehicleEx(426,1113.0582,-1725.4253,13.4101,0.5367,2,2,10); // 4
	liccar[4] = AddStaticVehicleEx(426,1108.8021,-1725.5043,13.4095,359.9839,2,2,10); // 5
	liccar[5] = AddStaticVehicleEx(426,1104.3490,-1725.4320,13.4027,359.3706,2,2,10); // 6
	liccar[6] = AddStaticVehicleEx(426,1099.9838,-1725.4236,13.4006,359.0508,2,2,10); // 7
	liccar[7] = AddStaticVehicleEx(426,1096.0149,-1725.4690,13.3996,359.9804,2,2,10); // 8
	liccar[8] = AddStaticVehicleEx(426,1092.0632,-1725.3159,13.3890,359.8870,2,2,10); // 9
	liccar[9] = AddStaticVehicleEx(426,1087.8357,-1725.4025,13.3901,0.4262,2,2,10); // 10
	mavlic = AddStaticVehicleEx(487,1069.3260,-1679.8966,27.4662,191.0277,2,2,10); // ВЕРТ
	//=================================== YAKUZA ===============================
	yakcar[0] = AddStaticVehicleEx(506,1460.9346,2842.4739,10.5249,179.0147,0,0,600); // Yakuza
	yakcar[1] = AddStaticVehicleEx(506,1465.3529,2842.1484,10.5250,177.5671,0,0,600); // Yakuza
	yakcar[2] = AddStaticVehicleEx(477,1470.2155,2841.5740,10.5745,177.5946,0,0,600); // Yakuza
	yakcar[3] = AddStaticVehicleEx(477,1474.5181,2841.4136,10.5746,178.0388,0,0,600); // Yakuza
	yakcar[4] = AddStaticVehicleEx(555,1479.8267,2841.3379,10.5054,180.5208,0,0,600); // Yakuza
	yakcar[5] = AddStaticVehicleEx(555,1484.2659,2841.2644,10.5044,179.0940,0,0,600); // Yakuza
	yakcar[6] = AddStaticVehicleEx(561,1489.0361,2841.5029,10.6340,180.5620,0,0,600); // Yakuza
	yakcar[7] = AddStaticVehicleEx(561,1493.7108,2841.3518,10.6340,179.4466,0,0,600); // Yakuza
	yakcar[8] = AddStaticVehicleEx(468,1530.2556,2832.1895,10.4883,89.2485,3,3,600); // Yakuza
	yakcar[9] = AddStaticVehicleEx(468,1530.2524,2827.6101,10.4880,85.5965,3,3,600); // Yakuza
	yakcar[10] = AddStaticVehicleEx(468,1530.4731,2823.1594,10.4894,93.7720,3,3,600); // Yakuza
	yakcar[11] = AddStaticVehicleEx(426,1472.5717,2780.3994,10.4860,177.1934,0,0,600); // Yakuza
	yakcar[12] = AddStaticVehicleEx(426,1472.7203,2766.0925,10.4865,176.6664,0,0,600); // Yakuza
	yakcar[13] = AddStaticVehicleEx(409,1472.8611,2773.2961,10.5400,180.4315,0,0,900); // Yakuza Limo 0
	//=================================== LSPD =================================
	sapdcar[0] = AddStaticVehicleEx(596,1602.4960,-1683.9705,5.6106,89.9966,1,79, 900); // LSPD Copcar 0
	sapdcar[1] = AddStaticVehicleEx(596,1602.4961,-1688.1863,5.6106,89.9944,1,79, 900); // LSPD Copcar 1
	sapdcar[2] = AddStaticVehicleEx(596,1602.4960,-1692.1858,5.6106,89.9963,1,79, 900); // LSPD Copcar 2
	sapdcar[3] = AddStaticVehicleEx(596,1602.4961,-1696.4399,5.6106,89.9965,1,79, 900); // LSPD Copcar 3
	sapdcar[4] = AddStaticVehicleEx(596,1602.4961,-1700.4475,5.6105,89.9928,1,79, 900); // LSPD Copcar 4
	sapdcar[5] = AddStaticVehicleEx(596,1602.4973,-1704.7720,5.6111,89.9599,1,79, 900); // LSPD Copcar 5
	sapdcar[6] = AddStaticVehicleEx(596,1591.1188,-1710.8458,5.6106,359.9953,1,79, 900); // LSPD Copcar 6
	sapdcar[7] = AddStaticVehicleEx(596,1587.0615,-1710.8457,5.6106,359.9914,1,79, 900); // LSPD Copcar 7
	sapdcar[8] = AddStaticVehicleEx(596,1582.9340,-1710.8418,5.6106,359.9973,1,79, 900); // LSPD Copcar 8
	sapdcar[9] = AddStaticVehicleEx(596,1578.0387,-1710.8459,5.6106,359.9960,1,79, 900); // LSPD Copcar 9
	sapdcar[10] = AddStaticVehicleEx(596,1574.0431,-1710.8464,5.6115,359.9565,1,79, 900); // LSPD Copcar 10
	sapdcar[11] = AddStaticVehicleEx(596,1569.6342,-1710.8481,5.5788,359.9579,1,79, 900); // LSPD Copcar 11
	sapdcar[12] = AddStaticVehicleEx(596,1558.3914,-1710.8352,5.6231,359.9962,1,79, 900); // LSPD Copcar 11
	sapdcar[13] = AddStaticVehicleEx(596,1535.8384,-1678.3375,13.1033,359.9604,1,79, 900); // LSPD Copcar 12
	sapdcar[14] = AddStaticVehicleEx(596,1535.8444,-1668.3137,13.1028,359.8681,1,79, 900); // LSPD Copcar 13
	sapdcar[15] = AddStaticVehicleEx(523,1545.6881,-1684.3760,5.4628,89.8548,0,1, 900); // LSPD copbike 0
	sapdcar[16] = AddStaticVehicleEx(523,1545.6832,-1680.3370,5.4628,90.0000,0,1, 900); // LSPD copbike 1
	sapdcar[17] = AddStaticVehicleEx(523,1545.6796,-1676.2489,5.4715,90.0000,0,1, 900); // LSPD copbike 2
	sapdcar[18] = AddStaticVehicleEx(523,1545.6934,-1672.1342,5.4719,90.0000,0,1, 900); // LSPD copbike 3
	sapdcar[19] = AddStaticVehicleEx(523,1545.7043,-1667.6414,5.4657,89.5909,0,1, 900); // LSPD copbike 4
	sapdcar[20] = AddStaticVehicleEx(523,1545.6930,-1663.1404,5.4719,90.0000,0,1, 900); // LSPD copbike 5
	sapdcar[23] = AddStaticVehicleEx(427,1538.1487,-1644.9996,6.0336,180.0003,1,79, 900); // LSPD Enforcer 0
	sapdcar[24] = AddStaticVehicleEx(427,1534.1730,-1644.9996,6.0335,180.0002,1,79, 900); // LSPD Enforcer 1
	sapdcar[25] = AddStaticVehicleEx(427,1529.9532,-1644.9991,6.0335,180.0003,1,79, 900); // LSPD Enforcer 2
	sapdcar[26] = AddStaticVehicleEx(497,1551.7830,-1609.5548,13.5595,270.2284,1,79,900); // LSPD Maverick 0
	//=================================== FBI ==================================
	fbicar[0] = AddStaticVehicleEx(490,-2427.9131,513.7803,30.0532,215.1379,0,0,900); // FBI 0
	fbicar[1] = AddStaticVehicleEx(490,-2424.6934,516.8582,30.0587,222.8319,0,0,900); // FBI 1
	fbicar[2] = AddStaticVehicleEx(490,-2421.7825,520.8435,30.0605,228.4378,0,0,900); // FBI 2
	fbicar[3] = AddStaticVehicleEx(490,-2418.6829,524.3395,30.1057,228.4384,0,0,900); // FBI 3
	fbicar[4] = AddStaticVehicleEx(490,-2415.4868,528.1856,30.0583,238.5820,0,0,900); // FBI 4
	fbicar[5] = AddStaticVehicleEx(490,-2414.2876,531.9501,30.0543,248.4161,0,0,900); // FBI 5
	fbicar[6] = AddStaticVehicleEx(490,-2411.8467,535.6798,30.0563,260.0896,0,0,900); // FBI 6
	fbicar[7] = AddStaticVehicleEx(490,-2413.0754,539.9163,30.0575,267.8040,0,0,900); // FBI 7
	fbicar[8] = AddStaticVehicleEx(487,-2469.8752,495.2847,30.2099,279.2241,0,0,900); // Helicopter 0
	//================================= Prodz ==================================
	comptruck[0] = AddStaticVehicle(440,1.0235,-368.0243,5.5643,90.6093,-1,-1); // Prodz Van 0
	comptruck[1] = AddStaticVehicle(440,0.9863,-364.7068,5.5351,90.6048,-1,-1); // Prodz Van 1
	comptruck[2] = AddStaticVehicle(440,0.9476,-361.0444,5.5351,90.6048,-1,-1); // Prodz Van 2
	comptruck[3] = AddStaticVehicle(440,0.9099,-357.4743,5.5351,90.6048,-1,-1); // Prodz Van 3
	comptruck[4] = AddStaticVehicle(440,0.8716,-353.8435,5.5351,90.6048,-1,-1); // Prodz Van 4
	comptruck[5] = AddStaticVehicle(440,0.8365,-350.5167,5.5351,90.6048,-1,-1); // Prodz Van 5
	comptruck[6] = AddStaticVehicle(440,0.7862,-346.9642,6.4105,90.6048,-1,-1); // Prodz Van 6
	comptruck[7] = AddStaticVehicle(440,0.6810,-343.2654,5.5471,90.6511,-1,-1); // Prodz Van 7
	comptruck[8] = AddStaticVehicle(440,0.6531,-340.0890,5.5368,90.6518,-1,-1); // Prodz Van 8
	//================================= GASERS =================================
	benzovoz[0] = AddStaticVehicle(403,-1004.8691,-686.8160,32.6148,90.4683,-1,-1); // Lineruner 0
	benzovoz[1] = AddStaticVehicle(403,-1004.9096,-681.8693,32.6147,90.4683,-1,-1); // Lineruner 1
	benzovoz[2] = AddStaticVehicle(403,-1004.9517,-676.7342,32.6146,90.4683,-1,-1); // Lineruner 2
	benzovoz[3] = AddStaticVehicle(403,-1004.9948,-671.4503,32.6146,90.4683,-1,-1); // Lineruner 3
	benzovoz[4] = AddStaticVehicle(403,-1005.0370,-666.2866,32.6145,90.4683,-1,-1); // Lineruner 4
	benzovoz[5] = AddStaticVehicle(403,-1005.0771,-661.3845,32.6145,90.4683,-1,-1); // Lineruner 5
	benzovoz[6] = AddStaticVehicle(403,-1005.1198,-656.1423,32.6144,90.4683,-1,-1); // Lineruner 6
	benzovoz[7] = AddStaticVehicle(403,-1005.1617,-651.0016,32.6144,90.4683,-1,-1); // Lineruner 7
	benzovoz[8] = AddStaticVehicle(403,-1005.2026,-645.9958,32.6143,90.4683,-1,-1); // Lineruner 8
	benzovoz[9] = AddStaticVehicle(403,-1005.2440,-640.9403,32.6143,90.4683,-1,-1); // Lineruner 9
	AddStaticVehicle(584,-984.8389,-635.7936,33.1543,91.1889,1,1); // Pricep 0
	AddStaticVehicle(584,-984.7327,-640.9091,33.1543,91.1889,1,1); // Pricep 1
	AddStaticVehicle(584,-984.6266,-646.0191,33.1543,91.1889,1,1); // Pricep 2
	AddStaticVehicle(584,-984.5270,-650.8137,33.1543,91.1889,1,1); // Pricep 3
	AddStaticVehicle(584,-984.4152,-656.2086,33.1543,91.1889,1,1); // Pricep 4
	AddStaticVehicle(584,-984.3068,-661.4308,33.1543,91.1889,1,1); // Pricep 5
	//============================== Army SFA ==================================
	armycarsf[0] = AddStaticVehicleEx(470,-1382.8628,456.3147,7.1837,358.4553,1,1,900);// Hydra 0
	armycarsf[1] = AddStaticVehicleEx(470,-1388.7695,456.4739,7.1835,358.4553,1,1,900);// Hydra 1
	armycarsf[2] = AddStaticVehicleEx(470,-1396.8483,456.6917,7.1833,358.4553,1,1,900); // Hydra 2
	armycarsf[3] = AddStaticVehicleEx(430,-1441.8682,504.9640,-0.1769,90.9145,44,44,900); // Predator 0
	armycarsf[4] = AddStaticVehicleEx(430,-1444.5718,497.6307,-0.2322,87.5099,44,44,900); // Predator 1
	armycarsf[5] = AddStaticVehicleEx(497,-1267.7926,492.7711,18.4409,205.9990,44,44,900); // Hunter 0
	armycarsf[6] = AddStaticVehicleEx(470,-1353.6660,456.0203,7.2077,358.8921,46,46,900); // Patriot 0
	armycarsf[7] = AddStaticVehicleEx(470,-1359.6062,456.1334,7.2077,0.0182,46,46,900); // Patriot 1
	armycarsf[8] = AddStaticVehicleEx(470,-1365.3795,456.2057,7.2077,358.6358,46,46,900); // Patriot 2
	armycarsf[9] = AddStaticVehicleEx(470,-1371.5607,456.2316,7.1983,0.0280,46,46,900); // Patriot 3
	armycarsf[10] = AddStaticVehicleEx(470,-1377.2144,456.3732,7.1839,357.9771,46,46,900); // Patriot 4
	armycarsf[11] = AddStaticVehicleEx(470,-1348.1566,455.9752,7.1812,359.4036,46,46,900); // Patriot 5
	armycarsf[12] = AddStaticVehicleEx(470,-1342.1515,456.1178,7.1960,358.9728,46,46,900); // Patriot 6
	armycarsf[13] = AddStaticVehicleEx(548,-1274.5247,445.3733,8.8554,29.1718,46,46,900); // Army Helicopter 0
	armycarsf[14] = AddStaticVehicleEx(548,-1247.8242,441.6462,8.7771,29.1654,46,46,900); // Army Helicopter 1
	armycarsf[15] = AddStaticVehicleEx(497,-1280.7985,492.3235,18.4684,205.9990,44,44,900); // Hunter 0
	armycarsf[16] = AddStaticVehicleEx(497,-1294.0475,493.1786,18.4904,205.9990,44,44,900); // Hunter 0
	armycarsf[17] = AddStaticVehicleEx(497,-1308.1738,493.4060,18.5170,205.9990,44,44,900); // Hunter 0
	armycarsf[18] = AddStaticVehicleEx(497,-1404.1675,493.7274,18.4051,206.0088,44,44,900); // Hunter 0
	armycarsf[19] = AddStaticVehicleEx(497,-1422.7838,493.1982,18.4068,206.0107,44,44,900); // Hunter 0
	armycarsf[20] = AddStaticVehicleEx(497,-1448.2502,492.6282,18.4413,205.9975,44,44,900); // Hunter 0
	//================================ Aztecas =================================
	coronoscar[0] = AddStaticVehicleEx(534,1693.9198,-2117.9290,13.1973,304.2858,103,103,600); // AZTEC
	coronoscar[1] = AddStaticVehicleEx(534,1691.0902,-2116.8223,13.1705,308.9514,103,103,600); // AZTEC
	coronoscar[2] = AddStaticVehicleEx(575,1692.5615,-2108.1284,13.0255,236.5135,103,103,600); // AZTEC
	coronoscar[3] = AddStaticVehicleEx(575,1695.5137,-2107.0146,13.1077,236.4354,103,103,600); // AZTEC
	matsfuraactek[0] = AddStaticVehicleEx(482,1670.80004883,-2115.50000000,13.80000019,268.00000000,103,103,900); // MatsVan 0
	//================================= Vagos ==================================
	vagoscar[0] = AddStaticVehicleEx(491,2792.0449,-1623.2385,10.6781,355.0187,6,6,600); // VAGOS
	vagoscar[1] = AddStaticVehicleEx(491,2770.5374,-1611.1775,10.6781,270.7826,6,6,600); // VAGOS
	vagoscar[2] = AddStaticVehicleEx(467,2770.6426,-1615.4159,10.6619,271.0952,6,6,600); // VAGOS
	vagoscar[3] = AddStaticVehicleEx(467,2770.6826,-1606.2231,10.6620,271.5267,6,6,600); // VAGOS
	vagoscar[4] = AddStaticVehicleEx(474,2777.7219,-1623.7372,10.6860,3.0398,6,6,600); // VAGOS
	vagoscar[5] = AddStaticVehicleEx(474,2774.1790,-1624.1050,10.6874,2.7530,6,6,600); // VAGOS
	vagoscar[6] = AddStaticVehicleEx(576,2787.4321,-1622.9286,10.5293,359.5615,6,6,600); // VAGOS
	vagoscar[7] = AddStaticVehicleEx(576,2784.6179,-1622.8275,10.5305,357.3825,6,6,600); // VAGOS
	matsfuravagos[0] = AddStaticVehicleEx(482,2801.3621,-1599.0444,11.1306,337.2412,6,6,900); // MatsVan 0
	//================================== Grove Street =========================
	grovecar[0] = AddStaticVehicleEx(478,2473.5220,-1698.3784,13.5090,359.8155,86,86,600); // GROVE
	grovecar[1] = AddStaticVehicleEx(466,2478.4265,-1655.0271,13.0647,91.2092,86,86,600); // GROVE
	grovecar[2] = AddStaticVehicleEx(466,2486.2151,-1655.0144,13.0718,89.1832,86,86,600); // GROVE
	grovecar[3] = AddStaticVehicleEx(492,2493.5667,-1655.1986,13.1533,87.2949,86,86,600); // GROVE
	grovecar[4] = AddStaticVehicleEx(492,2502.4907,-1657.3933,13.1927,56.0326,86,86,600); // GROVE
	grovecar[5] = AddStaticVehicleEx(600,2508.1489,-1665.8606,13.1107,11.3871,86,86,600); // GROVE
	grovecar[6] = AddStaticVehicleEx(600,2505.9033,-1677.4063,13.0940,324.1652,86,86,600); // GROVE
	matsfuragrove[0] = AddStaticVehicleEx(482,2505.2219,-1694.3187,13.7068,358.9556,86,86,900); // MatsVan 0
	//================================= Rifa ===================================
	rifacar[0] = AddStaticVehicleEx(475,2189.7280,-1799.5426,13.2237,40.8299,12,12,600); // RIFA
	rifacar[1] = AddStaticVehicleEx(475,2188.8608,-1802.3781,13.2219,39.5992,12,12,600); // RIFA
	rifacar[2] = AddStaticVehicleEx(518,2176.0986,-1808.0388,13.0442,1.1819,12,12,600); // RIFA
	rifacar[3] = AddStaticVehicleEx(518,2173.0215,-1807.8722,13.0443,2.0258,12,12,600); // RIFA
	rifacar[4] = AddStaticVehicleEx(518,2169.9929,-1807.9668,13.0444,0.0302,12,12,600); // RIFA
	rifacar[5] = AddStaticVehicleEx(549,2158.1626,-1804.5070,13.0764,269.7135,12,12,600); // RIFA
	rifacar[6] = AddStaticVehicleEx(549,2158.1064,-1801.8737,13.0711,270.8016,12,12,600); // RIFA
	rifacar[7] = AddStaticVehicleEx(549,2158.1096,-1799.4177,13.0664,271.0263,12,12,600); // RIFA
	rifacar[8] = AddStaticVehicleEx(536,2170.7288,-1793.9984,13.1006,179.8010,12,12,600); // RIFA
	rifacar[9] = AddStaticVehicleEx(536,2167.8132,-1793.9042,13.1007,180.2393,12,12,600); // RIFA
	rifacar[10] = AddStaticVehicleEx(536,2165.0234,-1793.8298,13.0982,181.6722,12,12,600); // RIFA
	matsfurarifa[0] = AddStaticVehicleEx(482,2179.7466,-1769.3821,13.5738,359.2124,12,1,900); // MatsVan 0
	//================================== Ballas ================================
    ballascar[0] = AddStaticVehicleEx(412,2655.4268,-2009.1252,13.3057,310.7511,22,22,600); // Ballas
	ballascar[1] = AddStaticVehicleEx(412,2652.4819,-2008.0898,13.2618,309.2134,22,2,600); // Ballas
	ballascar[2] = AddStaticVehicleEx(517,2656.6787,-1999.1788,13.3171,226.0714,22,22,600); // Ballas
	ballascar[3] = AddStaticVehicleEx(517,2653.6223,-2000.0636,13.2820,227.9738,22,22,600); // Ballas
	ballascar[4] = AddStaticVehicleEx(566,2662.6702,-2009.1841,13.3067,304.4198,22,22,600); // Ballas
	ballascar[5] = AddStaticVehicleEx(566,2665.4194,-2010.5757,13.2815,303.9811,22,22,600); // Ballas
	ballascar[6] = AddStaticVehicleEx(567,2662.2568,-1998.8887,13.3583,231.4955,22,22,600); // Ballas
	ballascar[7] = AddStaticVehicleEx(567,2665.4089,-1997.8093,13.3879,232.0740,22,22,600); // Ballas
	matsfura[0] = AddStaticVehicleEx(482,2644.6274,-2034.3457,13.6755,357.7817,22,22,900); // MatsVan 0
	//============================== Zone 51 ===================================
	vertolet = AddStaticVehicleEx(487,1291.1984,-788.8823,96.4609,180.4817,0,0,1000); // vertolet
	armcar[5] = AddStaticVehicleEx(500,221.9194,1855.0072,13.0356,1.6078,77,77,300); // Mesa0
	armcar[6] = AddStaticVehicleEx(500,217.1713,1854.8744,13.0242,1.6078,77,77,300); // Mesa1
	armcar[7] = AddStaticVehicleEx(500,212.6617,1854.7483,13.0134,1.6078,77,77,300); // Mesa2
	armcar[8] = AddStaticVehicleEx(500,203.7943,1862.3488,13.2462,271.1720,77,77,300); // Mesa3
	armcar[9] = AddStaticVehicleEx(500,203.7240,1866.9736,13.2801,271.3324,77,77,300); // Mesa4
	armcar[10] = AddStaticVehicleEx(500,203.5927,1872.2008,13.2459,271.1720,77,77,300); // Mesa5
	armcar[11] = AddStaticVehicleEx(497,144.9689,1950.7150,29.1754,359.9992,44,44,300); // Helicopter1
	armcar[12] = AddStaticVehicleEx(497,135.1045,1950.7152,29.1515,359.9985,44,44,300); // Helicopter2
	armcar[13] = AddStaticVehicleEx(470,317.5983,1796.7000,17.6335,359.8372,0,0,300); // Hydra0
	armcar[14] = AddStaticVehicleEx(470,312.3935,1796.7180,17.6630,359.8343,0,0,300);  // Hydra1
	armcar[15] = AddStaticVehicleEx(470,307.3818,1796.7289,17.6332,359.8372,0,0,300); // Hydra2
	armcar[16] = AddStaticVehicleEx(470,301.5827,1796.7452,17.6331,359.8372,0,0,300); // Hydra3
	armcar[17] = AddStaticVehicleEx(500,152.90450000,1970.09780000, 19.92540000,269.68860000,77,77,300); //Mesa0
	armcar[18] = AddStaticVehicleEx(500,153.69040000,1964.66420000, 20.11020000,267.78740000,77,77,300); //Mesa1
	armcar[19] = AddStaticVehicleEx(500,156.62200000,1958.41270000, 20.02840000,270.06060000,77,77,300); //Mesa2
	armcar[20] = AddStaticVehicleEx(500,172.75340000,1953.63980000, 20.06320000,270.24240000,77,77,300); //Mesa3
	armcar[21] = AddStaticVehicleEx(500,172.99880000,1958.34790000, 20.00980000,268.88950000,77,77,300); //Mesa4
	armcar[22] = AddStaticVehicleEx(500,173.07350000,1963.36410000, 19.93220000,270.17900000,77,77,300); //Mesa5
	armcar[23] = AddStaticVehicleEx(500,173.13080000,1968.48190000, 20.04760000,270.81270000,77,77,300); //Mesa6
	armcar[24] = AddStaticVehicleEx(500,172.93550000,1973.29700000, 20.05970000,269.62710000,77,77,300); //Mesa7
	armcar[25] = AddStaticVehicleEx(500,173.09060000,1978.29140000, 20.10240000,269.76820000,77,77,300); //Mesa8
	armcar[26] = AddStaticVehicleEx(500,172.92090000,1983.38120000, 20.00140000,268.40320000,77,77,300); //Mesa9
	armcar[27] = AddStaticVehicleEx(470,184.40990000,1945.04360000, 19.65430000,91.06440000,77,77,300); //Patriot0
	armcar[28] = AddStaticVehicleEx(470,183.96970000,1950.09970000, 19.78680000,88.88780000,77,77,300); //Patriot1
	armcar[29] = AddStaticVehicleEx(470,183.67430000,1954.93640000, 19.77820000,90.21300000,77,77,300); //Patriot2
	armcar[30] = AddStaticVehicleEx(470,184.13430000,1960.09620000, 19.57300000,88.98510000,77,77,300); //Patriot3
	armcar[31] = AddStaticVehicleEx(470,183.87360000,1965.14810000, 19.73130000,91.99030000,77,77,300); //Patriot4
	armcar[32] = AddStaticVehicleEx(470,184.05790000,1970.22350000, 19.77450000,89.54330000,77,77,300); //Patriot5
	armcar[33] = AddStaticVehicleEx(470,183.93110000,1975.23380000, 19.79280000,90.13170000,77,77,300); //Patriot6
	armcar[34] = AddStaticVehicleEx(470,183.60440000,1980.46470000, 19.71780000,90.51290000,77,77,300); //Patriot7
	armcar[35] = AddStaticVehicleEx(470,183.64470000,1985.51730000, 19.79170000,88.25440000,77,77,300); //Patriot8
	armcar[36] = AddStaticVehicleEx(470,183.76640000,1990.41660000, 19.74800000,88.68630000,77,77,300); //Patriot9
	armcar[37] = AddStaticVehicleEx(470,183.59310000,1995.62610000, 19.76930000,87.44930000,77,77,300); //Patriot10
	armcar[38] = AddStaticVehicleEx(470,274.89999390,1945.69995117,17.79999924,269.25000000,77,77,300); //Patriot11
	armcar[39] = AddStaticVehicleEx(470,274.89999390,1951.19995117,17.79999924,269.24743652,77,77,300); //Patriot12
	armcar[40] = AddStaticVehicleEx(470,274.60000610,1955.80004883,17.79999924,269.24743652,77,77,300); //Patriot13
	armcar[41] = AddStaticVehicleEx(470,274.70001221,1966.09997559,17.79999924,269.24743652,77,77,300); //Patriot14
	armcar[42] = AddStaticVehicleEx(470,274.79998779,1960.59997559,17.79999924,269.24743652,77,77,300); //Patriot15
	gunscar[0] = AddStaticVehicle(433,275.2985,1982.4747,18.0773,269.3129,34,34); // ArmyTruck0
	gunscar[1] = AddStaticVehicle(433,275.3807,1989.3337,18.0773,269.3129,34,34); // ArmyTruck1
	gunscar[2] = AddStaticVehicle(433,275.4670,1996.5306,18.0773,269.3129,34,34); // ArmyTruck2
	///===================== ХИТМАН
	hitcar[0] = AddStaticVehicleEx(522, -691.4482, 999.4048, 11.8489, -180.0000, 0, 0, 600);
	hitcar[1] = AddStaticVehicleEx(522, -688.4482, 999.4048, 11.8009, -180.0000, 0, 0, 600);
	hitcar[2] = AddStaticVehicleEx(522, -694.4482, 999.4048, 11.8549, -180.0000, 0, 0, 600);
	hitcar[3] = AddStaticVehicleEx(522, -697.4482, 999.4048, 11.8749, -180.0000, 0, 0, 600);
	hitcar[4] = AddStaticVehicleEx(522, -700.4482, 999.4048, 11.8989, -180.0000, 0, 0, 600);
	hitcar[5] = AddStaticVehicleEx(522, -703.4482, 999.4048, 11.9309, -180.0000, 0, 0, 600);
	hitcar[6] = AddStaticVehicleEx(475, -685.5643, 999.2770, 11.9915, 180.0000, 0, 0, 600);
	hitcar[7] = AddStaticVehicleEx(475, -682.5523, 999.2770, 11.9915, 180.0000, 0, 0, 600);
	hitcar[8] = AddStaticVehicleEx(475, -679.5523, 999.2770, 11.9915, 180.0000, 0, 0, 600);
	hitcar[9] = AddStaticVehicleEx(475, -676.5523, 999.2770, 11.9915, 180.0000, 0, 0, 600);
	hitcar[10] = AddStaticVehicleEx(475, -673.5523, 999.2770, 11.9915, 180.0000, 0, 0, 600);
	hitcar[11] = AddStaticVehicleEx(442, -703.3544, 981.6959, 12.2056, 0.0000, 0, 0, 600);
	hitcar[12] = AddStaticVehicleEx(442, -700.3564, 981.6959, 12.2056, 0.0000, 0, 0, 600);
	hitcar[13] = AddStaticVehicleEx(439, -670.6805, 999.3087, 11.9849, 180.0000, 0, 0, 600);
	hitcar[14] = AddStaticVehicleEx(439, -667.6805, 999.3087, 11.9849, 180.0000, 0, 0, 600);
	hitcar[15] = AddStaticVehicleEx(439, -664.6805, 999.3087, 11.9849, 180.0000, 0, 0, 600);
	hitcar[16] = AddStaticVehicleEx(439, -661.6805, 999.3087, 11.9849, 180.0000, 0, 0, 600);
	hitcar[17] = AddStaticVehicleEx(439, -658.6805, 999.3087, 11.9849, 180.0000, 0, 0, 600);
	hitcar[18] = AddStaticVehicleEx(477, -664.6873, 981.2192, 11.8398, 0.0000, 0, 0, 600);
	hitcar[19] = AddStaticVehicleEx(477, -661.6833, 981.2192, 11.8398, 0.0000, 0, 0, 600);
	hitcar[20] = AddStaticVehicleEx(477, -658.6833, 981.2192, 11.8398, 0.0000, 0, 0, 600);
	hitcar[21] = AddStaticVehicleEx(477, -691.4492, 981.8685, 11.9658, 0.0000, 0, 0, 600);
	hitcar[22] = AddStaticVehicleEx(487, -630.6320, 891.4097, 4.5236, 229.0000, 0, 0, 600);
	hitcar[23] = AddStaticVehicleEx(472, -648.4573, 875.9272, 0.0630, -132.8400, 0, 0, 600);
	hitcar[24] = AddStaticVehicleEx(472, -640.8561, 868.6832, 0.0630, -132.8400, 0, 0, 600);
	hitcar[25] = AddStaticVehicleEx(452, -660.2183, 874.9070, -0.0085, -134.7600, 0, 0, 600);
	hitcar[26] = AddStaticVehicleEx(493, -649.7979, 868.1424, -0.0092, -133.4401, 0, 0, 600);
	hitcar[27] = AddStaticVehicleEx(477, -694.4492, 981.8685, 11.9658, 0.0000, 0, 0, 600);
	//============================= Лодки ======================================
	AddStaticVehicle(452,719.01116943359,-1704.5384521484,0,182,1,1);
    AddStaticVehicle(452,719.07446289063,-1691.9649658203,0,181.99951171875,1,1);
    AddStaticVehicle(452,-1476.5729980469,686.76409912109,0,180,1,1);
 	return true;
}
stock CreatePickups()
{
	CreatePickup(1582,23,2183.4238,-2268.9087,13.4746);
	CreatePickup(1582,23,1221.3394,-1838.9180,13.5540);
	CreatePickup(1582,23,1415.2924,-1718.1212,13.5469);
	fbimask[0] = CreatePickup(1275, 23, -2447.7119,523.0289,30.3672);
	hitmask[0] = CreatePickup(1275, 23, -692.2068,939.3858,13.6328);
	shotbur[0] = CreatePickup(19132,23,362.8739,-75.1717,1001.5078);
	shotbur[1] = CreatePickup(19132,23,460.5558,-88.6921,999.5547);
	pizza[0] = CreatePickup(19132,23,372.3208,-133.5208,1001.4922);
	pizza[1] = CreatePickup(19132,23,364.9203,-11.7854,1001.8516);
	pizza[2] = CreatePickup(19132,23,377.0486,-193.3056,1000.6328);
	sabrina = CreatePickup(19132,23,-794.9402,489.2831,1376.1953);
	grovebar = CreatePickup(19132,23,502.0838,-67.5646,998.7578);
	jizzy = CreatePickup(19132,23,-2636.7566,1402.4591,906.4609);
	pigpen = CreatePickup(19132,23,1204.9016,-13.5486,1000.9219);
	dice = CreatePickup(1239,23,1139.7209,-6.9123,1000.6797);
	caligula[0] = CreatePickup(19132,23,2233.9912,1714.6836,1012.3828);
	caligula[1] = CreatePickup(19132,23,1213.9939,-1748.4003,13.5947);
	carjackpic[0] = CreatePickup(1239,23,2494.0967,-1464.7074,24.0255);
	carjackpic[1] = CreatePickup(19134,23,2515.4497,-1465.3451,23.9989);
	carjackpic[2] = CreatePickup(19134,23,2120.0693,2718.2942,10.8203);
	carjackpic[3] = CreatePickup(19134,23,-1931.6606,271.5569,41.0469);
	carjackpic[4] = CreatePickup(19134,23,2507.9807,-2113.6448,13.5469);
	mushroom[0] = CreatePickup(1603, 2, -332.3008,-1987.6200,26.1051);
    mushroom[1] = CreatePickup(1603, 2, -375.2895,-2004.4412,28.4262);
    mushroom[2] = CreatePickup(1603, 2, -420.7345,-1962.1367,20.7989);
    mushroom[3] = CreatePickup(1603, 2, -370.9467,-2049.1355,28.5462);
    mushroom[4] = CreatePickup(1603, 2, -448.5980,-2072.9041,80.6654);
    mushroom[5] = CreatePickup(1603, 2, -490.3048,-2121.0930,89.5054);
    mushroom[6] = CreatePickup(1603, 2, -515.2039,-2223.6245,42.7538);
    mushroom[7] = CreatePickup(1603, 2, -556.2787,-2223.5444,34.8664);
    mushroom[8] = CreatePickup(1603, 2, -653.4810,-2185.8540,14.6571);
    mushroom[9] = CreatePickup(1603, 2, -697.4235,-2144.5728,24.7645);
    mushroom[10] = CreatePickup(1603, 2, -913.5545,-2281.5803,45.6804);
	mushroom[11] = CreatePickup(1603, 2, -924.2963,-2392.5601,63.9710);
	mushroom[12] = CreatePickup(1603, 2, -921.2469,-2419.2676,73.1529);
	mushroom[13] = CreatePickup(1603, 2, -928.6000,-2452.7974,90.8816);
	mushroom[14] = CreatePickup(1603, 2, -1092.1782,-2576.2622,77.2730);
	mushroom[15] = CreatePickup(1603, 2, -1114.4218,-2326.8787,44.7146);
	mushroom[16] = CreatePickup(1603, 2, -1095.8896,-2317.7642,51.1427);
	mushroom[17] = CreatePickup(1603, 2, -1036.0745,-2331.6079,60.0633);
	mushroom[18] = CreatePickup(1603, 2, -1823.0471,-2169.1082,77.6051);
	mushroom[19] = CreatePickup(1603, 2, -1745.4077,-2018.1677,74.5071);
	mushroom[20] = CreatePickup(1603, 2, -1943.8130,-2144.5457,76.9309);
	mushroom[21] = CreatePickup(1603, 2, -1955.9766,-2162.8020,75.9688);
	mushroom[22] = CreatePickup(1603, 2, -1685.1254,-2385.9275,99.3290);
	mushroom[23] = CreatePickup(1603, 2, -1643.7135,-2411.9897,95.7691);
	mushroom[24] = CreatePickup(1603, 2, -1551.1573,-2505.1743,90.8708);
	mushroom[25] = CreatePickup(1603, 2, -1465.4910,-2556.2893,63.7663);
	mushroom[26] = CreatePickup(1603, 2, -1435.4855,-2544.3879,60.4281);
	mushroom[27] = CreatePickup(1603, 2, -1401.0656,-2548.1582,55.9067);
	mushroom[28] = CreatePickup(1603, 2, -1347.5752,-2507.9780,37.0068);
	mushroom[29] = CreatePickup(1603, 2, -1328.0197,-2467.7183,27.8259);
	mushroom[30] = CreatePickup(1603, 2, -1290.3135,-2479.8984,16.9108);
	mushroom[31] = CreatePickup(1603, 2, -1277.4055,-2498.1367,11.4951);
	mushroom[32] = CreatePickup(1603, 2, -568.3260,-2276.3220,27.5938);
	mushroom[33] = CreatePickup(1603, 2, -653.1019,-2255.4465,23.3936);
	mushroom[34] = CreatePickup(1603, 2, -614.5738,-2398.0959,28.0911);
	mushroom[35] = CreatePickup(1603, 2, -620.2932,-2477.4644,52.8450);
	mushroom[36] = CreatePickup(1603, 2, -673.6429,-2562.6052,58.4840);
	mushroom[37] = CreatePickup(1603, 2, -797.0350,-2611.4380,85.9543);
	mushroom[38] = CreatePickup(1603, 2, -814.8298,-2713.2485,90.4954);
	mushroom[39] = CreatePickup(1603, 2, -900.3575,-2635.6716,96.5351);
	mushroom[40] = CreatePickup(1603, 2, -908.8201,-2450.1675,86.1361);
	mushroom[41] = CreatePickup(1603, 2, -564.7324,-2000.7518,48.2172);
	mushroom[42] = CreatePickup(1603, 2, -514.0831,-1990.8127,46.7821);
	mushroom[43] = CreatePickup(1603, 2, -386.3437,-1968.6517,25.7109);
	mushroom[44] = CreatePickup(1603, 2, -285.8642,-2063.6074,34.5075);
	mushroom[45] = CreatePickup(1603, 2, -1735.6969,-2501.1594,10.1409);
	mushroom[46] = CreatePickup(1603, 2, -1840.7139,-2382.2207,29.1400);
	mushroom[47] = CreatePickup(1603, 2, -1906.1353,-2212.6089,77.4492);
	mushroom[48] = CreatePickup(1603, 2, -1874.5731,-1969.2981,87.2874);
	mushroom[49] = CreatePickup(1603, 2, -1739.6145,-1950.4650,98.8599);
	mushroom[50] = CreatePickup(1603, 2, -1613.4684,-1867.4391,86.1701);
	mushroom[51] = CreatePickup(1603, 2, -1868.5590,-1894.4634,88.9713);
	mushroom[52] = CreatePickup(1603, 2, -2005.6901,-1937.4910,77.0140);
    medicss[0] = CreatePickup(1318,23,-2664.7141,639.9803,14.4531);
    medicss[1] = CreatePickup(1318,23,387.8577,-59.8890,1076.4708,3);
    medicss[2] = CreatePickup(1318,23,1172.0767,-1323.3440,15.4030);
    medicss[3] = CreatePickup(1318,23,387.8577,-59.8890,1076.4708,4);
    medicss[4] = CreatePickup(1318,23,1607.2877,1815.2422,10.8203);
    medicss[5] = CreatePickup(1318,23,387.8577,-59.8890,1076.4708,5);
	sportroom[0] = CreatePickup(1318,23,2229.7566,-1721.5988,13.5646);
   	sportroom[1] = CreatePickup(1318,23,772.4290,-5.0806,1000.7289);
    lspic[0] = CreatePickup(1318,23,998.2888,999.8617,1999.7999,1);
	lspic[1] = CreatePickup(19130,23,1649.3877,-1641.1318,83.7813);
	lspic[2] = CreatePickup(19130,23,1658.4169,-1691.3796,15.6094);
	lvpic[0] = CreatePickup(19130,23,2648.9949,1185.3920,10.8203);
    lvpic[1] = CreatePickup(1318,23,998.2888,999.8617,1999.7999,3);
    magazmts[0] = CreatePickup(1318,23,1419.1681,-1623.8535,13.5469); // Вход сотики
    magazmts[1] = CreatePickup(1318,23,827.9714,-1.0622,994.5490); // Выход сотики
    porterinfo = CreatePickup(1239,23,2230.4875,-2211.9368,13.5469);
    monitor = CreatePickup(1239,23,359.8004,166.1101,1008.3828);
	chekmaterialssf[0] = CreatePickup(1239,2,-1297.3777,505.1444,11.1953);
	chekmaterialssf[1] = CreatePickup(1239,2,-1405.5594,502.5779,11.1953);
	chekmaterialssf[2] = CreatePickup(1239,2,-1336.0455,500.4789,11.3047);
	cerkva[0] = CreatePickup(19130,23,1377.8051,-1753.0903,14.1406);//Церковь, вход
	cerkva[1] = CreatePickup(19130,23,-2029.4869,1019.2476,1418.4969);//Церковь, выход
	pasportstol = CreatePickup(1581,2,361.7222,173.6271,1008.5189); // паспортный стол
	FormaFracPic[0] = CreatePickup(1275, 23, 255.1582,78.4345,1003.6406);
	FormaFracPic[1] = CreatePickup(1275, 23, -1761.4969,989.0278,1038.9189);
	FormaFracPic[2] = CreatePickup(1275, 23, -1344.0225,490.3044,11.2027);
	FormaFracPic[3] = CreatePickup(1275, 23, 374.0956,-53.1722,1076.4708,3);
	FormaFracPic[4] = CreatePickup(1275, 23, 372.7315,188.7772,1008.3893);
	FormaFracPic[5] = CreatePickup(1275, 23, 999.3918,1003.7467,1999.7999,2);
	FormaFracPic[6] = CreatePickup(1275, 23, 220.2224,111.7548,1010.2118);
	FormaFracPic[7] = CreatePickup(1275, 23, -2022.1334,-114.7256,1035.1719,1);
	FormaFracPic[8] = CreatePickup(1275, 23, 999.3918,1003.7467,1999.7999,1);
	FormaFracPic[9] = CreatePickup(1275, 23, 240.4291,1860.7698,8.7578);
	FormaFracPic[10] = CreatePickup(1275, 23, 999.3918,1003.7467,1999.7999,3);
	FormaFracPic[11] = CreatePickup(1275, 23, 210.0915,187.6858,1003.0313,122);
	FormaFracPic[12] = CreatePickup(1275, 23, 374.0956,-53.1722,1076.4708,4);
	FormaFracPic[13] = CreatePickup(1275, 23, 374.0956,-53.1722,1076.4708,5);
	FormaFracPic[14] = CreatePickup(1275, 23, 2152.5144,1600.2333,1006.1733);
	clothes = CreatePickup(1275, 23, 2137.9661,-2282.2017,20.6719, -1);
	cashs = CreatePickup(1274, 23, 2127.5701,-2275.1938,20.6719, -1);
    gunarm[0] = CreatePickup(353,23,245.6338,1859.2839,14.0840);
	gunarm[1] = CreatePickup(353,23,311.9774,-165.2273,999.6010,3);
	lsamaterials = CreatePickup(1239,23,2729.3267,-2451.5051,17.5937);
    lsaammo = CreatePickup(353,23,2744.2744,-2453.7742,13.8623);
	skinshop[0] = CreatePickup(1275,23,206.0302,-3.5463,1001.2109);
	skinshop[1] = CreatePickup(1275,23,205.9253,-12.9991,1001.2178);
	skinshop[2] = CreatePickup(1275,23,181.3787,-86.4860,1002.0234);
	skinshop[3] = CreatePickup(1275,23,181.5291,-89.3950,1002.0307);
	//=======================================================
	CreatePickup(2061,23,2192.2957,-1814.2941,13.5469); // РИФА
	CreatePickup(2061,23,2500.7104,-1685.8938,13.4788); // ГРУВ
	CreatePickup(2061,23,2649.6631,-2027.8259,13.5469); // БАЛЛАС
	CreatePickup(2061,23,1673.4269,-2107.7671,13.5469); // АЦТЕК
	CreatePickup(2061,23,2795.9868,-1619.3136,10.9219); // ВАГОС
	//======================================================= // СКЛАДЫ
   	alhambra = CreatePickup(19132,23,493.4969,-24.9614,1000.6719);
	chekmaterialslv[0] = CreatePickup(1239,2,223.8502,1931.5122,17.6406);
	chekmaterialslv[1] = CreatePickup(1239,2,190.7502,1931.7085,17.6406);
	chekmaterialslv[2] = CreatePickup(1239,2,155.8935,1903.3306,18.6603);
	chekmaterialslv[3] = CreatePickup(1239,2,137.4635,1880.8014,17.8359);
	chekmaterialslv[4] = CreatePickup(1239,2,117.9774,1869.8710,17.8359);
	chekmaterialslv[5] = CreatePickup(1239,2,112.7323,1875.2440,17.8359);
	chekmaterialslv[6] = CreatePickup(1239,2,153.5131,1845.9530,17.6406);
	chekmaterialslv[7] = CreatePickup(1239,2,171.9801,1834.7606,17.6406);
	chekmaterialslv[8] = CreatePickup(1239,2,176.9783,1841.3126,17.6406);
	chekmaterialslv[9]= CreatePickup(1239,2,233.3041,1842.0875,17.6406);
    arace = CreatePickup(19134, 23, 822.3992,2.7049,1004.1797);
    paint[0] = CreatePickup(353, 23, 294.8574,-38.2151,1001.5156, 1);
    paint[1] = CreatePickup(1318, 23, 1434.4706,-968.5706,37.3876);
    paint[2] = CreatePickup(1318, 23, 285.5204,-41.8050,1001.5156, 1);
	paintguns[0] = CreatePickup(349,2,-1114.3154,1059.7196,1342.8582,1);
	paintguns[1] = CreatePickup(348,2,-1132.0310,1041.6711,1345.7402,1);
	paintguns[2] = CreatePickup(356,2,-1034.8510,1057.3096,1343.8910,1);
	paintguns[3] = CreatePickup(356,2,-973.3054,1077.0735,1344.9955,1);
	paintguns[4] = CreatePickup(358,2,-979.8153,1064.4054,1344.9667,1);
	paintguns[5] = CreatePickup(358,2,-1125.6796,1054.4807,1345.7140,1);
	paintguns[6] = CreatePickup(349,2,-990.0576,1061.4460,1342.9137,1);
	paintguns[7] = CreatePickup(342,2,-1088.2676,1057.6349,1342.8999,1);
	paintguns[8] = CreatePickup(342,2,-1019.0400,1060.2128,1342.9598,1);
    racepic[0] = CreatePickup(1318,23,1956.7323,-2183.6260,13.5469);
	racepic[1] = CreatePickup(1318,23,834.6671,7.2752,1004.1870);
    victim[0] = CreatePickup(1318,23,461.7025,-1500.7941,31.0454);
    victim[1] = CreatePickup(1318,23,227.5632,-8.0904,1002.2109);
    mysti = CreatePickup(19132,23,1212.0931,-25.8776,1000.9531);
    zip[0] = CreatePickup(1318,23,-1882.5100,866.3918,35.1719);
    zip[1] = CreatePickup(1318,23,161.3232,-97.1035,1001.8047);
    shop[0] = CreatePickup(19132,23,-25.8496,-141.5474,1003.5469);
    shop[1] = CreatePickup(19132,23,-25.9730,-188.2542,1003.5469);
    shop[2] = CreatePickup(19132,23,6.0346,-31.6810,1003.5494);
  	shop[3] = CreatePickup(19132,23,-31.0230,-92.0109,1003.5469);
  	shop[4] = CreatePickup(19132,23,-27.3211,-31.7612,1003.5573);
  	shop[5] = CreatePickup(19132,23,-27.3786,-58.2680,1003.5469);
    casino = CreatePickup(19132,23,1133.0715,-15.8281,1000.6797);
    SDA = CreatePickup(1239,23,-2031.5730,-114.8732,1035.1719,1);
    fracgunpic[0] = CreatePickup(353,23,-1739.1494,982.8496,1038.9189);
    fracgunpic[1] = CreatePickup(353,23,311.9774,-165.2273,999.6010,5);
    fracgunpic[2] = CreatePickup(353,23,311.9774,-165.2273,999.6010,1);
    fracgunpic[3] = CreatePickup(353,23,312.5458,-166.1420,999.6010,15);
    mayorpic[0] = CreatePickup(353,23,375.8139,187.4315,1008.3893);
    infpic = CreatePickup(1239,23,1761.7252,-1770.3867,13.7265);
    lspd[0] = CreatePickup(1318,23,1555.1332,-1675.7180,16.1953);
	lspd[1] = CreatePickup(1318,23,246.7096,62.8786,1003.6406);
	lspd[2] = CreatePickup(1318,23,1524.486938,-1677.990844,6.218750);
	lspd[3] = CreatePickup(1318,23,246.4416,87.6784,1003.6406);
	lspd[4] = CreatePickup(1318,23,316.6778,-170.0422,999.5938,5);
	lspd[5] = CreatePickup(1318,23,1568.6144,-1689.9901,6.2188);
	sfpd[4] = CreatePickup(1318,23,-1606.4298,672.0637,-4.9063);
	sfpd[0] = CreatePickup(1318,23,316.3047,-170.2971,999.5938,1);
	sfpd[1] = CreatePickup(1318,23,213.9762,120.8990,999.0156);
	sfpd[2] = CreatePickup(1318,23,-1594.2096,716.1803,-4.9063);
	sfpd[3] = CreatePickup(1318,23,246.4636,107.2969,1003.2188);
	lvpd[0] = CreatePickup(1318,23,2297.1138,2451.4346,10.8203);
	lvpd[1] = CreatePickup(1318,23,238.7510,138.6254,1003.0234,122);
	lvpd[2] = CreatePickup(1318,23,2337.1335,2459.3105,14.9742);
	lvpd[3] = CreatePickup(1318,23,288.8456,166.9235,1007.1719,122);
	lvpd[4] = CreatePickup(1318,23,2297.1165,2468.6892,10.8203);
	lvpd[5] = CreatePickup(1318,23,316.6778,-170.0422,999.5938,15);
	lvpd[6] = CreatePickup(1318,23,2278.3835,2458.0950,38.6837);
	sfnewspic[0] = CreatePickup(19130,23,-2046.4412,453.8438,139.7422);
	sfnewspic[1] = CreatePickup(19130,23,-2056.5552,454.0199,35.1719);
	sfnewspic[2] = CreatePickup(1318,23,998.2888,999.8617,1999.7999,2);
	sfnewspic[3] = CreatePickup(1318,23,-2053.5598,451.6628,35.1719);
	rmpic[0] = CreatePickup(1318,23,1298.7498,-797.0133,1084.0078,1);
	yakuzapic[0] = CreatePickup(1318,23,1298.7498,-797.0133,1084.0078);
    yakuzapic[1] = CreatePickup(1318,23,1456.1324,2773.4790,10.8203);
    fbi[1] = CreatePickup(1318,23,-1754.4323,969.7053,1038.9189);
    fbi[0] = CreatePickup(1318,23,-2456.1270,503.7910,30.0781);
   	lcnpic[0] = CreatePickup(1318,23,1298.7498,-797.0133,1084.0078,2);
    lcnpic[1] = CreatePickup(1318,23,1455.8972,751.4310,11.0234);
   	rmpic[1] = CreatePickup(1318,23,937.0892,1733.2124,8.8516);
   	ammonac[0] = CreatePickup(1318,23,1368.9360,-1279.7216,13.5469);
   	ammonac[1] = CreatePickup(1318,23,285.4752,-41.7966,1001.5156);
   	ammonac[2] = CreatePickup(1318,23,-2625.8296,208.2379,4.8125);
   	ammonac[3] = CreatePickup(1318,23,285.9187,-86.7644,1001.5229);
	ammonac[4] = CreatePickup(1318,23,2159.5449,943.2165,10.8203);
   	ammonac[5] = CreatePickup(1318,23,315.8831,-143.6591,999.6016);
    addictionexit = CreatePickup(1318,23,318.6952,1114.5037,1083.8828);
    addictionenter = CreatePickup(1318,23,2166.0068,-1671.3362,15.0734);
	armijavhod = CreatePickup(1318,23,140.0735,1939.5984,19.2991);
	armijavihod = CreatePickup(1318,23,153.8659,1944.3601,20.0000);
	lspdpvhod = CreatePickup(1318,23,306.3992,-159.1770,999.5938,5); // LSPD VHOD
	lspdpvihod = CreatePickup(1318,23,305.0753,-159.1594,999.5938,5);// LSPD VIHOD
	sfpdpvhod = CreatePickup(1318,23,306.3989,-159.1641,999.5938,1);// SFPD VHOD
	sfpdpvihod = CreatePickup(1318,23,305.3655,-159.2365,999.5938,1);// SFPD ViHOD
	lvpdpvhod = CreatePickup(1318,23,306.4028,-159.1819,999.5938,15);// LVPD VHOD
	lvpdpvihod = CreatePickup(1318,23,305.4975,-159.0354,999.5938,15);// LVPD VIHOD
    avtosh[0] = CreatePickup(1318,23,1096.3724,-1691.9935,23.5469);
    avtosh[1] = CreatePickup(1318,23,-2029.6525,-119.6210,1035.1719,1);
	avtosh[2] = CreatePickup(1318,23,-2026.8085,-103.6107,1035.1798,1);
	avtosh[3] = CreatePickup(1318,23,1081.2170,-1696.7833,13.5469);
    hallenter[0] = CreatePickup(1318,23,1481.4863,-1816.9177,14.0566);
	hallexit = CreatePickup(1318,23,390.1618,173.8988,1008.3828);
    bankpic[0] = CreatePickup(1318,23,1411.5198,-1699.5819,13.5395); // ВХОД
	bankpic[1] = CreatePickup(1318,23,1372.4351,903.2922,1105.2300); // ВЫХОД
    ballasenter[0] = CreatePickup(1318,23,-68.8021,1351.1979,1080.2109,34);
	ballasenter[1] = CreatePickup(1318,23,2650.6992,-2021.8175,14.1766);
	rifaenter[0] = CreatePickup(1318,23,-229.29,1401.13,27.77,63);
	rifaenter[1] = CreatePickup(1318,23,2185.8225,-1815.2219,13.5469);
	lilprobeinn = CreatePickup(19132,23,-229.2950,1401.2843,27.7656);
	vagospic[0] = CreatePickup(1318,23,2770.7471,-1628.7227,12.1775);
	vagospic[1] = CreatePickup(1318,23,300.4915,305.8677,1003.5391,75);
	aztecpic[0] = CreatePickup(1318,23,1667.52,-2106.94,14.07);
	aztecpic[1] = CreatePickup(1318,23,-42.5856,1405.4747,1084.4297,36);
	grove[0] = CreatePickup(1318,23,2495.7993,-1692.4044,1014.7422,1);
    grove[1] = CreatePickup(1318,23,2495.3271,-1690.9893,14.7656);
    zone[0] = CreatePickup(1318,23,279.2340,1833.1393,18.0874);
    zone[1] = CreatePickup(1318,23,291.8918,1833.7253,18.1027);
    warehousearmy[0] = CreatePickup(1318,23,340.5722,1949.2020,22.0172);
    warehousearmy[1] = CreatePickup(1318,23,316.3806,-170.2857,999.5938,228);
    warehousearmy[2] = CreatePickup(1318,23,316.3806,-170.2857,999.5938,3);
    warehousearmy[3] = CreatePickup(1318,23,-1373.0463,498.9842,11.1953);
    robber = CreatePickup(1239, 23, 2755.9060,-2515.5491,13.6397, -1);
	truckerspic[0] = CreatePickup(1239,23,-1731.4509,118.9413,3.5547);
	truckerspic[1] = CreatePickup(1239,23,2601.7222,-2226.5867,13.3732);
	truckerspic[2] = CreatePickup(1239,23,256.4736,1414.5182,10.7075);
	truckerspic[3] = CreatePickup(1239,23,-1046.7723,-670.7208,32.3516);
	truckerspic[4] = CreatePickup(1239,23,608.7718,847.8765,-43.1532);
	truckerspic[5] = CreatePickup(1239,23,-1978.6846,-2434.8274,30.6250);
	truckerspic[6] = CreatePickup(1239,23,-1873.0896,-1720.2430,21.7500);
	truckerspic[7] = CreatePickup(1239,23,323.0342,1118.5804,1083.8828);
	sporthelp = CreatePickup(1239,23,773.8960,5.2577,1000.7802);
 	boxform = CreatePickup(1275,23,756.4088,6.0036,1000.6992);
	boxfight[0] = CreatePickup(1314,23,765.3245,10.8755,1000.7081);
 	return true;
}
stock CreateLabels()
{
	Create3DTextLabel("", 0xFFFFFFAA, 0.0000, 0.0000, 0.0000, 0.0,0,1);
	DLabels[0] = Create3DTextLabel("CITY BANK", 0x6495EDBB, 1411.5004, -1699.6112, 14.0000,10.0,0,1);
	DLabels[1] = Create3DTextLabel("МЭРИЯ", 0x6495EDBB, 1481.4863,-1816.9177,14.0566,10.0,0,1);
	DLabels[2] = Create3DTextLabel("_________________\nАвто Сдача на\nВодительские права\n_________________",TEAM_GROVE_COLOR,-2026.6854,-114.3436,1035.5000,10.0,1,1);
	DLabels[3] = Create3DTextLabel("< Приём на работу >\nВведите команду:\n/работа",COLOR_YELLOW,359.8466,184.7337,1009.0000,10.0,0,1);
	DLabels[4] = Create3DTextLabel("{33AA33}~~~~~~~~~~~~~~~~~\nКупить наркотики:\n{FFFFFF}\"/get drugs\"\n{33AA33}~~~~~~~~~~~~~~~~~",COLOR_WHITE,323.0342,1118.5804,1083.8828,10.0,0,1);
	DLabels[5] = Create3DTextLabel("~~~~~~~~~~~~~~~\nРегистрация на гонку\n~~~~~~~~~~~~~~~",TEAM_GROVE_COLOR,822.3992,2.7049,1004.1797,10.0,0,1);
	DLabels[6] = Create3DTextLabel("_________________\nВыдача\nигральных костей\n_________________",COLOR_INDIGO,1139.7209,-6.9123,1000.6797,10.0,0,1);
	DLabels[7] = Create3DTextLabel(" ",COLOR_GREEN,1689.2626,-1967.3572,8.6000,10.0,0,1);
    DLabels[8] = Create3DTextLabel("Точка наблюдения\n/camera - чтобы смотреть.\n/cameraoff - чтобы прекратить смотреть.",COLOR_WHITE,212.2816,1812.2374,21.8672,10.0,0,0);
    DLabels[9] = Create3DTextLabel("Нажмите ALT",COLOR_LIGHTGREEN,1364.1149,893.0754,1106.0900,10,0,1);
    DLabels[10] = Create3DTextLabel("{00D900}Нажмите: \"ALT\"",COLOR_WHITE,1142.8103,-1764.0710,15.5082,7.0,0,1);
	DLabels[11] = Create3DTextLabel("{00D900}Нажмите: \"ALT\"",COLOR_WHITE,-1676.34570312,434.01806641,8.08183193,7.0,0,1);
	DLabels[12] = Create3DTextLabel("{00D900}Нажмите: \"ALT\"",COLOR_WHITE,-2033.32604980,159.50723267,29.94120598,7.0,0,1);
	DLabels[13] = Create3DTextLabel("{00D900}Нажмите: \"ALT\"",COLOR_WHITE,2236.16186523,-1665.79772949,26.27980804,7.0,0,1);
	DLabels[14] = Create3DTextLabel("{00D900}Нажмите: \"ALT\"",COLOR_WHITE,1367.56359863,-1290.13696289,14.44901943,7.0,0,1);
	DLabels[15] = Create3DTextLabel("{00D900}Нажмите: \"ALT\"",COLOR_WHITE,1142.44287109,-1763.92932129,14.59816360,7.0,0,1);
	DLabels[16] = Create3DTextLabel("{00D900}Нажмите: \"ALT\"",COLOR_WHITE,847.58093262,-1799.19348145,14.71945286,7.0,0,1);
	DLabels[17] = Create3DTextLabel("{00D900}Нажмите: \"ALT\"",COLOR_WHITE,-78.74282837,-1171.64892578,2.95329499,7.0,0,1);
	DLabels[18] = Create3DTextLabel("{00D900}Нажмите: \"ALT\"",COLOR_WHITE,-1551.53637695,-2737.33691406,49.64560318,7.0,0,1);
	DLabels[29] = Create3DTextLabel("{00D900}Нажмите: \"ALT\"",COLOR_WHITE,661.71307373,-576.21777344,17.25428581,7.0,0,1);
	DLabels[20] = Create3DTextLabel("{00D900}Нажмите: \"ALT\"",COLOR_WHITE,557.32824707,-1294.28137207,18.24994087,7.0,0,1);
	DLabels[21] = Create3DTextLabel("{00D900}Нажмите: \"ALT\"",COLOR_WHITE,-2035.70605469,-102.35491180,36.07402039,7.0,0,1);
	DLabels[22] = Create3DTextLabel("{00D900}Нажмите: \"ALT\"",COLOR_WHITE,1919.78381348,-1766.21813965,14.44901943,7.0,0,1);
	DLabels[23] = Create3DTextLabel("{00D900}Нажмите: \"ALT\"",COLOR_WHITE,2843.30444336,1286.17187500,12.29276943,7.0,0,1);
	DLabels[24] = Create3DTextLabel("{00D900}Нажмите: \"ALT\"",COLOR_WHITE,2187.36035156,2478.89160156,12.14433193,7.0,0,1);
	DLabels[25] = Create3DTextLabel("{00D900}Нажмите: \"ALT\"",COLOR_WHITE,1587.30920410,2218.34838867,11.96464443,7.0,0,1);
	DLabels[26] = Create3DTextLabel("{00D900}Нажмите: \"ALT\"",COLOR_WHITE,2174.20336914,1402.93469238,11.96464443,7.0,0,1);
	DLabels[27] = Create3DTextLabel("{00D900}Нажмите: \"ALT\"",COLOR_WHITE,-818.55200195,1567.63708496,28.01933098,7.0,0,1);
	DLabels[28] = Create3DTextLabel("{00D900}Нажмите: \"ALT\"",COLOR_WHITE,91.92106628,1180.56555176,19.56620598,7.0,0,1);
	DLabels[29] = Create3DTextLabel("{00D900}Нажмите: \"ALT\"",COLOR_WHITE,-1282.38098145,2715.18652344,51.16842651,7.0,0,1);
	DLabels[30] = Create3DTextLabel("{00D900}Нажмите: \"ALT\"",COLOR_WHITE,-2452.32275391,2252.62988281,5.87058449,7.0,0,1);
	DLabels[31] = Create3DTextLabel("{00D900}Нажмите: \"ALT\"",COLOR_WHITE,-2621.31445312,1415.23510742,7.88521862,7.0,0,1);
	DLabels[32] = Create3DTextLabel("{00D900}Нажмите: \"ALT\"",COLOR_WHITE,-2421.45410156,958.35540771,46.18632126,7.0,0,1);
	DLabels[33] = Create3DTextLabel("{00D900}Нажмите: \"ALT\"",COLOR_WHITE,2843.3179,1286.2759,11.3000,7.0,0,1);
 	DLabels[34] = Create3DTextLabel("/fight чтобы начать бой", COLOR_BLUE,765.3245,10.8755,1000.7081,25.0,0,1);
	DLabels[35] = Create3DTextLabel("LSPD", 0x6495EDBB, 1555.1332,-1675.7180,16.1953,10.0,0,1);
	DLabels[36] = Create3DTextLabel(" ",COLOR_GREEN,1765.7438,-1909.7069,13.5695,10.0,0,1);
	DLabels[37] = Create3DTextLabel("Используйте команды:\n/ms - чтобы посмотреть свои стили боя\n/fgstyle - чтобы начать тренировку", COLOR_YELLOW, 773.8724,6.9525,1000.7095,25.0,0,1);
	DLabels[38] = Create3DTextLabel("Для изучения Kick-Box\nбейте эту грушу!", 0x00FF00FF,767.1391,-3.5077,1000.6994,20.0,0,1);
 	DLabels[39] = Create3DTextLabel("Автошкола", 0x6495EDBB, 1081.2170,-1696.7833,13.5469, 10.0,0,1);
 	DLabels[40] = Create3DTextLabel("Для изучения Box\nбейте эту грушу!", 0x00FF00FF, 768.9395,14.4115,1000.6994,20.0,0,1);
	DLabels[41] = Create3DTextLabel("Для изучения Kong-Fu\nбейте эту грушу!", 0x00FF00FF, 771.1103,14.3903,1000.6994,20.0,0,1);
	DLabels[42] = Create3DTextLabel("Пейнтбол", 0x6495EDBB, 1434.4706,-968.5706,37.3876, 10.0,0,1);
	DLabels[43] = Create3DTextLabel("{e23434}Столик для ставок от 200 до 1000000 вирт.", 0x00FF00FF, 2231.1865,1619.1476,1007.1303,20.0,0,1);
	DLabels[44] = Create3DTextLabel("{e23434}Столик для ставок от 200 до 1000000 вирт", 0x6495EDBB, 2242.7495,1619.4207,1007.1303, 20.0,0,1);
	DLabels[45] = Create3DTextLabel("{e23434}Столик для игры в Кости\nКоманда: {FFFFFF}/dice [ID] [Ставка]", 0x6495EDBB, 2230.9197,1611.9740,1007.2264, 20.0,0,1);
	DLabels[46] = Create3DTextLabel("{e23434}Столик для игры в Кости\nКоманда: {FFFFFF}/dice [ID] [Ставка]", 0x6495EDBB, 2242.4038,1612.3510,1007.1945, 20.0,0,1);
	DLabels[47] = Create3DTextLabel("Если нету инструкторов на работе\nВы можете преобрести лицензии в любом случаи\nВведите команду: /offlic", 0x33FF33BB, -2026.6418,-118.3758,1035.1719, 20.0,1,1);
	DLabels[48] = Create3DTextLabel("Нажмите ALT",COLOR_LIGHTGREEN,1364.1168,897.8283,1106.0900,10,0,1);
    return true;
}
stock CreateSpecialZone()
{
	Army[0] = GangZoneCreate(-49.979476, 1695.982177, 414.020507, 2175.982177);// LVA
	Army[1] = GangZoneCreate(2634.4395, -2562.5022, 2861.7734, -2320.1594);// SFA
	Army[2] = GangZoneCreate(-1220.6725, 542.0154, -1571.1744, 257.9100);// LSA
	return true;
}
stock CreateMapIcons()
{
	CreateDynamicMapIcon(2503.0608,-1460.4967,24.0115,42,0); // Автоугонщики // 
 	CreateDynamicMapIcon(-2.9803,-363.4466,5.4297,51,0); // Развозчики
   	CreateDynamicMapIcon(472.4380,-1515.5332,40.5726,45,0); // Victim LS
 	CreateDynamicMapIcon(-1882.5100,866.3918,35.1719,45,0); // Victim SF
   	CreateDynamicMapIcon(1733.1948,-1773.1763,13.5136,55,0); // AutoSalone LS
   	//CreateDynamicMapIcon(-1948.4501,278.1562,68.9698,55,0); // AutoSalone SF
   	//CreateDynamicMapIcon(2200.9758,1394.2899,11.0625,55,0); // AutoSalone LV
	//CreateDynamicMapIcon(2196.9663,1677.1544,12.3672,25,0); // Сasino Caligula
	//CreateDynamicMapIcon(2019.3177,1007.7430,10.8203,43,0); // Сasino 4 Dragons
	//CreateDynamicMapIcon(1657.0205,2254.5571,10.8203,25,0); // Сasino Bellaio
   	CreateDynamicMapIcon(1481.2144,-1756.5200,17.5313,56,0); // Goverment
   	CreateDynamicMapIcon(1552.8314,-1675.9022,16.1953,30,0); // Police LS
   	CreateDynamicMapIcon(-1605.4998,710.2729,13.8672,30,0); // Police SF
   	CreateDynamicMapIcon(2340.2075,2459.0200,14.9688,30,0); // Police LV
   	CreateDynamicMapIcon(1173.6215,-1323.2500,15.1953,22,0); // Medics LS
   	CreateDynamicMapIcon(-2664.6611,637.9663,14.4531,22,0); // Medics SF
   	CreateDynamicMapIcon(1607.1716,1817.0586,10.8203,22,0); // Medics LV
	CreateDynamicMapIcon(-2243.8826,-87.9706,35.3203,49,0); // Misty
	CreateDynamicMapIcon(2312.4189,-1641.4185,22.3378,49,0); // Bar Grove Steet
    CreateDynamicMapIcon(1414.0972,-1701.0652,13.5395,52,0); // Bank LS
    CreateDynamicMapIcon(2421.2842,-1221.6509,25.4070,49,0); // Pig Pen
    CreateDynamicMapIcon(1834.7672,-1682.3358,13.4178,49,0); // Alhambra
    CreateDynamicMapIcon(-89.610397,1378.243530,10.469799,49,0); // Lil'Probe'in Bar
    CreateDynamicMapIcon(-2623.7166,1410.6890,7.0938,49,0); // Jizzy
    CreateDynamicMapIcon(1084.0876,-1694.8707,23.5469,36,0); // Autoschool
    CreateDynamicMapIcon(1365.6863,-1279.8872,13.5469,6,0); // Ammo LS
    CreateDynamicMapIcon(-2626.6384,210.3960,4.5971,6,0); // Ammo SF
    CreateDynamicMapIcon(2159.5449,943.2165,10.8203,6,0); // Ammo LV
    CreateDynamicMapIcon(2228.5789,-1721.7820,13.5654,54,0); // Спортзал LS
	CreateDynamicMapIcon(1961.8124,-2189.2671,13.5469,53,0); // Race
    CreateDynamicMapIcon(-382.99908447,-1438.91796875,26.19865036,56,0); // Farm 0
    CreateDynamicMapIcon(212.2816,1812.2374,21.8672,56,0); // Точка наблюдения
    CreateDynamicMapIcon(-1816.5311,618.6709,35.1719,50,0); // Pizza
   	CreateDynamicMapIcon(-1911.7004,828.8093,35.1719,50,0); // Burger
   	CreateDynamicMapIcon(-2336.1675,-168.1730,35.3203,50,0); // Burger
   	CreateDynamicMapIcon(-2671.7808,257.9283,4.6328,50,0); // Pizza
   	CreateDynamicMapIcon(2102.0913,-1808.8442,38.0027,50,0); // Pizza
   	CreateDynamicMapIcon(2397.4641,-1903.6409,38.0027,50,0); // Pizza
   	CreateDynamicMapIcon(800.9893,-1619.9106,38.0027,10,0); // Burger
   	CreateDynamicMapIcon(932.5351,-1381.1470,32.0997,50,0); // Pizza
   	CreateDynamicMapIcon(183.6340,1175.7919,22.6676,50,0); // Pizza
   	CreateDynamicMapIcon(2420.4573,-1508.2711,24.0000,50,0); // Pizza
   	CreateDynamicMapIcon(1204.3881,-915.2735,66.4264,50,0); // Burger
   	CreateDynamicMapIcon(2391.6345,2041.7228,40.0850,50,0); // Pizza
   	CreateDynamicMapIcon(1163.3766,2079.7026,40.0850,50,0); // Burger
   	CreateDynamicMapIcon(1430.5453,-968.1711,37.4078,23,0); // Paintball
   	CreateDynamicMapIcon(1673.2968,-2112.7817,13.5469,58,0); // Ацтеки
   	CreateDynamicMapIcon(2165.0903,-1801.2844,13.3670,61,0); // Рифы
   	CreateDynamicMapIcon(2491.5229,-1668.6648,13.3438,63,0); // Грувы
   	CreateDynamicMapIcon(2641.7095,-2004.5166,13.5547,59,0); // Балласы
   	CreateDynamicMapIcon(2783.1748,-1616.1129,10.9219,60,0); // Вагосы
	CreateDynamicMapIcon(1210.2169,-1750.3079,13.5938,25,0); // КАЛИГУЛА
	CreateDynamicMapIcon(1419.1681,-1623.8535,13.5469,48,0); // МТС
	CreateDynamicMapIcon(2523.8899,-1527.2122,24.0067,27,0); // СТО ЛС
   	return true;
}
stock CreateTimers()
{
	AdvertiseTimerEx = SetTimer("AdvertiseTimer", 1200000, true);// Таймер обьявлений в чат(реклама сервера)
	SaietyTimer = SetTimer("SatietyCheck", 60000, true);// Таймер сытости
	UnJailTimer = SetTimer("SetPlayerUnjail", 1000, true);// Обновление для тюрьмы таймер
	FreshTimer = SetTimer("Fresh", 1000, true);// Обновить
	FixKickedPlayersTimer = SetTimer("FixKickedPlayers", 1000, true);// Обновить
	ClearLastPickupTimer = SetTimer("ClearLastPickup", 100, true);// Обновить
	OtherTimerEx = SetTimer("OtherTimer", 1000, true);// Остальные таймеры
	ServerNameTimer = SetTimer("ServerName", 1000, true);// Имя серверa
	SpeedoTimer = SetTimer("UpdateSpeedometr", 400, true); // Обновление спидометра
	PickupTimer = SetTimer("CustomPickups", 1200, true);// Пикапы бизнесов и домов
	GzCheckTimer = SetTimer("GzCheck", 1000, true);// Таймер на проверку зоны
	MzCheckTimer = SetTimer("MzCheck", 1000, true);// Таймер на проверку бизнеса мафии
	return true;
}
stock PlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
	new Float:xxp,Float:yyp,Float:zzp;
	GetPlayerPos(playerid, xxp, yyp, zzp);
	if((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y)) return true;
	return false;
}
stock CheckPlayerDistanceToVehicle(Float:radi, playerid, vehicleid)
{
	if(IsPlayerConnected(playerid))
	{
	    new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;
	    GetPlayerPos(playerid,PX,PY,PZ);
	    GetVehiclePos(vehicleid, X,Y,Z);
	    new Float:Distance = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
	    if(Distance <= radi*radi)
	    {
        	return true;
	    }
	}
	return false;
}
stock GetGangZoneColor(gangzonex)
{
	new zx;
	switch(GZInfo[gangzonex][gFrakVlad])
	{
		case 12: zx = 0xd200ff99;
		case 13: zx = 0xcfbe0899;
		case 15: zx = 0x06b50699;
		case 17: zx = 0x03c3b899;
		case 18: zx = 0x007fffAA;
		default: zx = 0xFEFEFEAA;
	}
	return zx;
}
stock GetNearestVehicle(playerid)
{
    for(new i = 0; i < MAX_VEHICLES; i++)
	{
        if(GetVehicleModel(i))
        {
            new Float:X,Float:Y,Float:Z;
            GetVehiclePos(i, X, Y, Z);
            if(PlayerToPoint(6.0, playerid, X, Y, Z)) return i;
        }
    }
    return -1;
}
stock IsInAllowedF(fnumbers)
{
	for(new i = 0; i < sizeof(allowedfactions); i++)
	{
		if(fnumbers == allowedfactions[i]) return true;
	}
	return false;
}
stock IsPlayerInBandOnline(bandid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || gPlayerLogged[i] == 0) continue;
		if(PlayerInfo[i][pMember] == bandid || PlayerInfo[i][pLeader] == bandid) return true;
	}
	return false;
}
stock GetGangName(fnumbwer)
{
	new string[128];
	switch(fnumbwer)
	{
		case 12: format(string,sizeof(string), "BALLAS GANG");
		case 13: format(string,sizeof(string), "VAGOS GANG");
		case 15: format(string,sizeof(string), "GROVE GANG");
		case 17: format(string,sizeof(string), "AZTECAS GANG");
		case 18: format(string,sizeof(string), "RIFA GANG");
	}
	return string;
}
stock GetMafiaName(fnumbwer)
{
	new string[128];
	switch(fnumbwer)
	{
		case 5: format(string,sizeof(string), "LCN");
		case 6: format(string,sizeof(string), "Yakuza");
		case 14: format(string,sizeof(string), "Russian Mafia");
	}
	return string;
}
stock CompVehDel(playerid)
{
	PlayerInfo[playerid][pWheels] = 0;
	PlayerInfo[playerid][pSpoiler] = 0;
	PlayerInfo[playerid][pBumper1] = 0;
	PlayerInfo[playerid][pBumper2] = 0;
	PlayerInfo[playerid][pYubki] = 0;
	PlayerInfo[playerid][pYubki2] = 0;
	PlayerInfo[playerid][pVih] = 0;
	PlayerInfo[playerid][pVozd] = 0;
	PlayerInfo[playerid][pPaintJob] = 3;
	PlayerInfo[playerid][pNitro] = 0;
	PlayerInfo[playerid][pHydrawlic] = 0;
	return true;
}
public OnVehicleSpawn(vehicleid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(vehicleid == caridhouse[i])
		{
			Fuell[caridhouse[i]] = PlayerInfo[i][pFuelCar];
			LockCar(caridhouse[i]);
			IsLocked[caridhouse[i]] = 1;
			AddVehicleComponent(caridhouse[i], PlayerInfo[i][pWheels]);
			AddVehicleComponent(caridhouse[i], PlayerInfo[i][pNitro]);
			AddVehicleComponent(caridhouse[i], PlayerInfo[i][pHydrawlic]);
			if(PJ(caridhouse[i]))
			{
				ChangeVehiclePaintjob(caridhouse[i], PlayerInfo[i][pPaintJob]);
				AddVehicleComponent(caridhouse[i], PlayerInfo[i][pSpoiler]);
				AddVehicleComponent(caridhouse[i], PlayerInfo[i][pBumper1]);
				AddVehicleComponent(caridhouse[i], PlayerInfo[i][pBumper2]);
				AddVehicleComponent(caridhouse[i], PlayerInfo[i][pYubki]);
				AddVehicleComponent(caridhouse[i], PlayerInfo[i][pYubki2]);
				AddVehicleComponent(caridhouse[i], PlayerInfo[i][pVih]);
				AddVehicleComponent(caridhouse[i], PlayerInfo[i][pVozd]);
			}
 		}
 	}
 	return true;
}
stock Random(min, max)
{
    new a = random(max - min) + min;
    return a;
}
stock PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return true;
		}
	}
	return false;
}
stock GiveWeapon(playerid, weaponid, ammo)
{
	Weapons[playerid][weaponid] = 1;
	GivePlayerWeapon(playerid, weaponid, ammo);
    return true;
}
stock GetSRVMoney(playerid)
{
	return PlayerInfo[playerid][pCash];
}
stock DelGun(playerid)
{
	ResetPlayerWeapons(playerid);
	PlayerInfo[playerid][pSlot][0] = 0;
	PlayerInfo[playerid][pSlot][1] = 0;
	PlayerInfo[playerid][pSlot][2] = 0;
	PlayerInfo[playerid][pSlot][3] = 0;
	PlayerInfo[playerid][pSlot][4] = 0;
	PlayerInfo[playerid][pSlot][5] = 0;
	PlayerInfo[playerid][pSlot][6] = 0;
	PlayerInfo[playerid][pSlot][7] = 0;
	PlayerInfo[playerid][pSlot][8] = 0;
	PlayerInfo[playerid][pSlot][9] = 0;
	PlayerInfo[playerid][pSlot][10] = 0;
	PlayerInfo[playerid][pSlot][11] = 0;
	PlayerInfo[playerid][pSlot][12] = 0;
	PlayerInfo[playerid][pSlotammo][0] = 0;
	PlayerInfo[playerid][pSlotammo][1] = 0;
	PlayerInfo[playerid][pSlotammo][2] = 0;
	PlayerInfo[playerid][pSlotammo][3] = 0;
	PlayerInfo[playerid][pSlotammo][4] = 0;
	PlayerInfo[playerid][pSlotammo][5] = 0;
	PlayerInfo[playerid][pSlotammo][6] = 0;
	PlayerInfo[playerid][pSlotammo][7] = 0;
	PlayerInfo[playerid][pSlotammo][8] = 0;
	PlayerInfo[playerid][pSlotammo][9] = 0;
	PlayerInfo[playerid][pSlotammo][10] = 0;
	PlayerInfo[playerid][pSlotammo][11] = 0;
	PlayerInfo[playerid][pSlotammo][12] = 0;
	return true;
}
stock SaveWeapon(playerid)
{
	GetPlayerWeaponData(playerid,0,PlayerInfo[playerid][pSlot][0],PlayerInfo[playerid][pSlotammo][0]);
	GetPlayerWeaponData(playerid,1,PlayerInfo[playerid][pSlot][1],PlayerInfo[playerid][pSlotammo][1]);
	GetPlayerWeaponData(playerid,2,PlayerInfo[playerid][pSlot][2],PlayerInfo[playerid][pSlotammo][2]);
	GetPlayerWeaponData(playerid,3,PlayerInfo[playerid][pSlot][3],PlayerInfo[playerid][pSlotammo][3]);
	GetPlayerWeaponData(playerid,4,PlayerInfo[playerid][pSlot][4],PlayerInfo[playerid][pSlotammo][4]);
	GetPlayerWeaponData(playerid,5,PlayerInfo[playerid][pSlot][5],PlayerInfo[playerid][pSlotammo][5]);
	GetPlayerWeaponData(playerid,6,PlayerInfo[playerid][pSlot][6],PlayerInfo[playerid][pSlotammo][6]);
	GetPlayerWeaponData(playerid,7,PlayerInfo[playerid][pSlot][7],PlayerInfo[playerid][pSlotammo][7]);
	GetPlayerWeaponData(playerid,8,PlayerInfo[playerid][pSlot][8],PlayerInfo[playerid][pSlotammo][8]);
	GetPlayerWeaponData(playerid,9,PlayerInfo[playerid][pSlot][9],PlayerInfo[playerid][pSlotammo][9]);
	GetPlayerWeaponData(playerid,10,PlayerInfo[playerid][pSlot][10],PlayerInfo[playerid][pSlotammo][10]);
	GetPlayerWeaponData(playerid,11,PlayerInfo[playerid][pSlot][11],PlayerInfo[playerid][pSlotammo][11]);
	GetPlayerWeaponData(playerid,12,PlayerInfo[playerid][pSlot][12],PlayerInfo[playerid][pSlotammo][12]);
}
stock RemovePlayerFromVehicleAc(playerid)
{
    RemovePlayerFromVehicle(playerid);
	return 1;
}
stock GetMoney()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerConnected(i))
        {
			new money = GetPlayerMoney(i);
			if(PlayerInfo[i][pCash] > money)
	        {
		        ResetPlayerMoney(i);
				GivePlayerMoney(i, PlayerInfo[i][pCash]);
		    }
	        else if(PlayerInfo[i][pCash] < money)
	        {
		        ResetPlayerMoney(i);
				GivePlayerMoney(i, PlayerInfo[i][pCash]);
		    }
		}
	}
	return ;
}
stock UnLockCar(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		gCarLock[carid] = 0;
		GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(carid,engine,lights,alarm,VEHICLE_PARAMS_OFF,bonnet,boot,objective);
		SetVehicleParamsForPlayer(carid,i, 0, 0);
	}
}
stock Exit(playerid)
{
	SetPlayerPos(playerid, 363.2963,167.0351,1008.3828);
	SetPlayerFacingAngle(playerid, 88.1044);
    SetPlayerInterior(playerid, 3);
    HideMenuForPlayer(Buyint,playerid);
    pokupka[playerid] = 0;
}
stock Menu()
{
    Admin = CreateMenu("RECON", 1, 0.0, 160.0, 75.0);
    AddMenuItem(Admin,0,"UPDATE");
    AddMenuItem(Admin,0,"GM");
    AddMenuItem(Admin,0,"SLAP");
	AddMenuItem(Admin,0,"STATS");
	AddMenuItem(Admin,0,"WEAPON");
	AddMenuItem(Admin,0,"OFF");

	Buyint = CreateMenu("BuyInt", 1, 25.0, 160.0, 100.0);
	AddMenuItem(Buyint,0,">> Next >>");
	AddMenuItem(Buyint,0,"$ Buy $");
	AddMenuItem(Buyint,0,"Exit");

	ChoseSkin = CreateMenu("Victim", 1, 50.0, 160.0, 100.0);
	SetMenuColumnHeader(ChoseSkin, 0, "Choose Skin");
	AddMenuItem(ChoseSkin, 0, ">> Next");
	AddMenuItem(ChoseSkin, 0, "<< Previous");
	AddMenuItem(ChoseSkin, 0, "Done");
	bomj[0] = CreateMenu("Victim", 1, 50.0, 160.0, 100.0);
	SetMenuColumnHeader(bomj[0], 0, "Choose Skin");
	AddMenuItem(bomj[0], 0, ">> Next");
	AddMenuItem(bomj[0], 0, "<< Previous");
	AddMenuItem(bomj[0], 0, "Save");
	bomj[1] = CreateMenu("Victim", 1, 50.0, 160.0, 100.0);
	SetMenuColumnHeader(bomj[1], 0, "Choose Skin");
	AddMenuItem(bomj[1], 0, ">> Next>");
    AddMenuItem(bomj[1], 0, "<< Previous");
	AddMenuItem(bomj[1], 0, "Save");
	skinshopmagaz[0] = CreateMenu("Victim", 1, 50.0, 160.0, 100.0);
	SetMenuColumnHeader(skinshopmagaz[0], 0, "Choose Skin");
	AddMenuItem(skinshopmagaz[0], 0, ">> Next");
	AddMenuItem(skinshopmagaz[0], 0, "<< Previous");
	AddMenuItem(skinshopmagaz[0], 0, "Buy");
	AddMenuItem(skinshopmagaz[0], 0, "Exit");
	skinshopmagaz[1] = CreateMenu("Victim", 1, 50.0, 160.0, 100.0);
	SetMenuColumnHeader(skinshopmagaz[1], 0, "Choose Skin");
	AddMenuItem(skinshopmagaz[1], 0, ">> Next");
	AddMenuItem(skinshopmagaz[1], 0, "<< Previous");
	AddMenuItem(skinshopmagaz[1], 0, "Buy");
	AddMenuItem(skinshopmagaz[1], 0, "Exit");
}
stock SetPosInFrontOfPlayer(playerid,giveplayerid,Float:distance)
{
    new Float:x,Float:y,Float:z,Float:a;
    GetPlayerPos(playerid, x, y,z);GetPlayerFacingAngle(playerid, a);
    x += (distance * floatsin(-a, degrees));
    y += (distance * floatcos(-a, degrees));
    ACP_SetPlayerPos(giveplayerid,x,y,z);SetPlayerFacingAngle(giveplayerid,a);
}
stock GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
	new Float:a;
	GetPlayerPos(playerid, x, y, a);
	if (IsPlayerInAnyVehicle(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	else GetPlayerFacingAngle(playerid, a);
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
	return true;
}
stock SpeedVehicle(playerid)
{
    new Float:ST[4];
    if(IsPlayerInAnyVehicle(playerid))
	GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
	else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
    ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 100.3;
    return floatround(ST[3]);
}
forward RukiOff(playerid);
public RukiOff(playerid)
{
    //ClearAnimations(playerid);
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0,0);
	return 1;
}
public UpdateSpeedometr()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		new string[144];
		new sendername[30];
		GetPlayerName(i, sendername, sizeof(sendername));
		new vehicleid = GetPlayerVehicleID(i);
		//new State = GetPlayerState(i);
		if(IsPlayerInAnyVehicle(i))
		{
		    new locked[32],str[64],str2[64],str3[64],str4[64], str5[64], str6[64], Float:vehhel, vehh[20], vehs[20], vehe[20], veher[20];
            if(IsLocked[GetPlayerVehicleID(i)] == 1)
	        {
				locked = "~r~~h~LOCK";
	        }
	        else
	        {
				locked = "~h~UNLOCK";
	        }
            GetVehicleHealth(GetPlayerVehicleID(i), vehhel);
            if(vehhel <= 500) vehh = "~r~";
            else vehh = "";
            if(Fuell[GetPlayerVehicleID(i)] <= 30) vehs = "~r~";
            else vehs = "";
            if(EngineState[i] == true) vehe = "~g~ON";
            else vehe = "~r~OFF";
            format(str, sizeof(str),"%d KM/H",SpeedVehicle(i));
            if(vehhel <= 300) format(str3, sizeof(str3),"%s30%",vehh); else format(str3, sizeof(str3),"%s%.0f%",vehh,vehhel / 10);
            format(str2, sizeof(str2), "%s", locked);
        	format(str4, sizeof(str4), "%s%.0f", vehs,Fuell[GetPlayerVehicleID(i)]);
            format(str5, sizeof(str5), "%s", vehe);
            format(str6, sizeof(str6), "%s", veher);
            TextDrawSetString(FuelShow[i],str4);
            TextDrawSetString(HealthShow[i],str3);
            TextDrawSetString(SpeedShow[i],str);
            TextDrawSetString(StatusShow[i],str2);
            TextDrawSetString(Speed2Show[i],str6);
            TextDrawSetString(EngineShow[i],str5);
            UnSurfCar(GetPlayerVehicleID(i));
			if(Fuell[vehicleid] <= 0)
			{
				if(!IsAPlane(vehicleid) && !IsABoat(vehicleid) && !IsANoSpeed(vehicleid))
				{
					format(string, sizeof(string), "~r~FUEL HAS ENDED");
					Fuell[vehicleid] = 0;
					GameTextForPlayer(i, string, 5000, 3);
					GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
					EngineState[i] = false;
				}
			}
			if(GetPlayerVehicleID(i) == caridhouse[i] && EngineState[i] == true)
			{
			    switch(PlayerInfo[i][pProcents])
			    {
			        case 100:
			        {
						Fuell[vehicleid] -= 0.0050;
					}
					case 80..99:
					{
					    Fuell[vehicleid] -= 0.0100;
					}
					case 60..79:
					{
					    Fuell[vehicleid] -= 0.0150;
					}
					case 30..59:
					{
					    Fuell[vehicleid] -= 0.0200;
					}
					case 20..29:
					{
					    Fuell[vehicleid] -= 0.0250;
					}
				}
			}
			else
			{
				if(SpeedVehicle(i) != 0 || EngineState[i] == true)
				{
					Fuell[vehicleid] -= 0.0050;
				}
			}
		}
		if(PlayerInfo[i][pAdmin] == 0)
		{
			switch(GetVehicleModel(vehicleid))
			{
				case 400,409,516,517,526,535,551,575,576,579,599:{ MaxSpeed[i] = 88; } // 88
				case 401,466:{ MaxSpeed[i] = 82; }// 82
				case 402,477:{ MaxSpeed[i] = 104; } // 104
				case 403,433,471,532,601:{ MaxSpeed[i] = 61; } // 61
				case 404:{ MaxSpeed[i] = 74; }// 74
				case 405,445,518,542:{ MaxSpeed[i] = 91; } // 91
				case 410:{ MaxSpeed[i] = 72; } // 72
				case 411:{ MaxSpeed[i] = 123; } // 123
                case 412,439,560,534,602,603:{ MaxSpeed[i] = 94; }// 94
				case 415,451:{ MaxSpeed[i] = 108; } // 108
				case 416,421:{ MaxSpeed[i] = 86; }// 86
				case 419,436,474,527,529,540,546:{ MaxSpeed[i] = 83; }// 83
				case 420,550,568:{ MaxSpeed[i] = 81; }// 81
				case 422,467,489,492,500:{ MaxSpeed[i] = 78; }// 78
				case 424:{ MaxSpeed[i] = 75; }// 75
				case 426,522,596,597,598:{ MaxSpeed[i] = 98; }// 98
				case 427,507,565,587:{ MaxSpeed[i] = 92; }// 92
				case 429,541:{ MaxSpeed[i] = 113; } // 113
				case 434:{ MaxSpeed[i] = 93; } // 93
				case 438,505,515,547:{ MaxSpeed[i] = 79; } // 79
				case 440,582:{ MaxSpeed[i] = 76; } // 76
				case 461,521,524,566:{ MaxSpeed[i] = 90; } // 90
				case 462,463,468,586:{ MaxSpeed[i] = 80; }// 80
				case 558,470,482,490:{ MaxSpeed[i] = 87; } // 87
				case 475,536,567:{ MaxSpeed[i] = 96; }// 96
				case 478:{ MaxSpeed[i] = 65; } // 65
				case 480:{ MaxSpeed[i] = 103; } // 103
				case 491:{ MaxSpeed[i] = 83; } // 83
				case 494,502,503:{ MaxSpeed[i] = 120; }// 120
				case 523,580,581,585,600:{ MaxSpeed[i] = 85; } // 85
				case 506,559,562:{ MaxSpeed[i] = 100; } // 100
				case 571:{ MaxSpeed[i] = 52; } // 52
				case 514:{ MaxSpeed[i] = 67; } // 67
				default: { MaxSpeed[i] = 115; }
			}
			if(IsPlayerInAnyVehicle(i))
			{
				if(SpeedVehicle(i) > MaxSpeed[i]+3)
				{
					if(GetPVarInt(i, "Fly30") > gettime()) { return 0; }
					format(string, sizeof(string), "-<WARNING> Игрок %s[%d] возможно SpeedHack. Скорость [%d/%d].",sendername,i,SpeedVehicle(i),MaxSpeed[i]);
					ABroadCast(0xFF0000AA, string, 1);
					SetPVarInt(i, "Fly30", gettime()+30);
				}
			}
		}
	}
	return true;
}
stock CheckString(playerid, const string[])
{
	if(IsIpFound(string) || strfind(string, "Переезд", true) != -1 || strfind(string, "Новый сервер", true) != -1 || strfind(string, "NEW IP", true) != -1 ||
			strfind(string, "АДМИНКИ", true) != -1 || strfind(string, "Лидерки", true) != -1 || strfind(string, "vk . com", true) != -1 || strfind(string, "Переехали", true) != -1 ||
			strfind(string, "переезжаем", true) != -1 || strfind(string, "дам админку", true) != -1 || strfind(string, "vk .com", true) != -1 || strfind(string, "vk.com", true) != -1 ||
			strfind(string, ".com", true) != -1 || strfind(string, "cheat-master", true) != -1 || strfind(string, "Переехали", true) != -1 || strfind(string, "переехали", true) != -1 ||
			strfind(string, "Чит Мастер", true) != -1 || strfind(string, "привет от", true) != -1 || strfind(string, "Good Role Play", true) != -1 || strfind(string, "Samp-Grp", true) != -1 || strfind(string, "Bathory", true) != -1
			|| strfind(string, "youtube.com", true) != -1 || strfind(string, ".ws", true) != -1 || strfind(string, ".tk", true) != -1 || strfind(string, "www", true) != -1 ||
		 	strfind(string, "org", true) != -1 || strfind(string, ".net", true) != -1 || strfind(string, ".cc", true) != -1 || strfind(string, ".рф", true) != -1|| strfind(string, ".su", true) != -1 || strfind(string, ".info", true) != -1
			 || strfind(string, "http", true) != -1 || strfind(string, "https", true) != -1)
 	{
 	    new sendername[MAX_PLAYER_NAME];
 	    GetPlayerName(playerid,sendername,sizeof(sendername));
 	    new stringer[100];
	    if(!PlayerInfo[playerid][pAdmin])return 1;
	    SendClientMessage(playerid,COLOR_LIGHTRED,"Подозрение на рекламу... Ваше сообщение заблокировано!");
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(stringer, sizeof(stringer), "-<WARNING> %s[%d]: %s | Реклама",sendername,playerid,string);
		ABroadCast(COLOR_LIGHTRED, stringer, 1);
	 	return 0;
	}
	return 1;
}
stock IsIpFound(const string[])
{
	if(!reklamka) reklamka = regex_build("([0-9]{1,3})[^[:digit:]^[:cntrl:]]{1,3}([0-9]{1,3})[^[:digit:]^[:cntrl:]]{1,3}([0-9]{1,3})[^[:digit:]^[:cntrl:]]{1,3}([0-9]{1,3})");
	return regex_search_exid(string, reklamka);
}
stock GetPlayerNickName(playerid,const instname[])//Код Gameyera
{
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid,name,sizeof(name));
	if(strcmp(name,instname) == 0) return true;
	return false;
}
public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
	new string[128];
   	new Float: carhp;
	new caridpl = GetPlayerVehicleID(playerid);
   	if(PlayerInfo[playerid][pProcents] < 0)
	{
	  	if(GetPlayerVehicleID(playerid) == caridhouse[playerid])
	    {
			format(string, sizeof(string), "~r~ENGINE HAS BROKENED");
			GameTextForPlayer(playerid, string, 5000, 3);
			Fuell[caridpl] = 0;
		}
 	}
	GetVehicleHealth(vehicleid, carhp);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(GetPlayerVehicleID(playerid) == caridhouse[i])
	    {
            if(carhp > 700 && carhp < 1000)
	        {
    			PlayerInfo[playerid][pProcents] -= 0;
          		return true;
			}
			else if(carhp > 500 && carhp < 700)
			{
			    PlayerInfo[playerid][pProcents] -= 1;
				return true;
			}
			else if(carhp > 300 && carhp < 500)
			{
	   			if(PlayerInfo[playerid][pProcents] > 0)
		        {
				    PlayerInfo[playerid][pProcents] -= 2;
	       			return true;
				}
			}
	    }
	}
    return true;
}
stock StartSpectate(playerid, specid)
{
	for(new x = 0; x < GetMaxPlayers(); x++)
	{
		if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && gSpectateID[x] == playerid)
		{
			AdvanceSpectate(x);
		}
	}
	
	if(IsPlayerInAnyVehicle(specid))
	{
		SetPlayerInterior(playerid,GetPlayerInterior(specid));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(specid));
		TogglePlayerSpectating(playerid, 1);
		PlayerSpectateVehicle(playerid, GetPlayerVehicleID(specid));
		gSpectateID[playerid] = specid;
		gSpectateType[playerid] = ADMIN_SPEC_TYPE_VEHICLE;
	}
	else
	{
		SetPlayerInterior(playerid,GetPlayerInterior(specid));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(specid));
		TogglePlayerSpectating(playerid, 1);
		PlayerSpectatePlayer(playerid, specid);
		gSpectateID[playerid] = specid;
		gSpectateType[playerid] = ADMIN_SPEC_TYPE_PLAYER;
	}
}

stock StopSpectate(playerid)
{
    TextDrawHideForPlayer(playerid, FULLRECON[playerid]);
    HideMenuForPlayer(Admin,playerid);
    TogglePlayerSpectating(playerid, 0);
    gSpectateID[playerid] = INVALID_PLAYER_ID;
    gSpectateType[playerid] = ADMIN_SPEC_TYPE_NONE;
    GameTextForPlayer(playerid, "~w~RECON ~r~OFF",1000,3);
    SetTimerEx("ReconOff",100,false,"i",playerid);
    return true;
}
forward ReconOff(playerid);
public ReconOff(playerid)
{
    ACP_SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
	SetPlayerInterior(playerid, TeleportDestNoFloat[playerid][0]);
	SetPlayerVirtualWorld(playerid, TeleportDestNoFloat[playerid][1]);
}
stock AdvanceSpectate(playerid)
{
    if(ConnectedPlayers() == 2)
	{
		StopSpectate(playerid);
		return true;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && gSpectateID[playerid] != INVALID_PLAYER_ID)
	{
		for(new x = gSpectateID[playerid]+1; x <= GetMaxPlayers(); x++)
		{
			if(x == MAX_PLAYERS)
			{
				x = 0;
			}
			if(IsPlayerConnected(x) && x != playerid)
			{
				if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && gSpectateID[x] != INVALID_PLAYER_ID ||
				(GetPlayerState(x) != 1 && GetPlayerState(x) != 2 && GetPlayerState(x) != 3))
				{
					continue;
				}
				else
				{
					StartSpectate(playerid, x);
					break;
				}
			}
		}
	}
	return true;
}
stock ConnectedPlayers()
{
	new count;
	for(new x = 0; x < MAX_PLAYERS; x++)
	{
	    if(IsPlayerConnected(x))
		{
			count ++;
		}
	}
	return count;
}
stock ChangeName(playerid)
{
	new plnamep[MAX_PLAYER_NAME];
	new string[128];
	new key = PlayerInfo[playerid][pPHousekey];
	if(PlayerInfo[playerid][pPHousekey] != 255 && strcmp(plnamep, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
	{
		strmid(HouseInfo[key][hOwner], changenam, 0, strlen(changenam), 255);
	}
	key = PlayerInfo[playerid][pPBiskey];
	if (key != 255)
	{
		if (key > 100)
		{
			key -= 100;
			strmid(SBizzInfo[key][sbOwner], changenam, 0, strlen(changenam), 255);
		}
		else
		{
			strmid(BizzInfo[key][bOwner], changenam, 0, strlen(changenam), 255);
		}
		OnPropUpdate();
	}
	GetPlayerName(playerid,plnamep,sizeof(plnamep));
	SetPlayerName(playerid, changenam);
	format(string,sizeof(string), "%s.ini",plnamep);
	dini_Remove(string);
	format(string,sizeof(string), "{FFFFFF}%s {FF6600}сменил имя на {FFFFFF}%s",plnamep,changenam);
	SendClientMessage(playerid, COLOR_WHITE, "Следуйте указаниям выше!");
	SendClientMessageToAll(COLOR_LIGHTRED,string);
	PlayerInfo[playerid][pCheckip] = 0;
	OnPlayerUpdateAc(playerid);
	SendClientMessage(playerid, COLOR_LIGHTRED, "{e23434}Для выхода из игры используйте /q(uit)");
	OnPropUpdate();
	format(WantNickChange[playerid],MAX_PLAYER_NAME, "");
	FixKickedPlayer[playerid] = 1;
	return true;
}
stock Convert(number)
{
	new hours = 0, mins = 0, secs = 0, string[100];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0)
	{
		format(string, 100, "%d:%02dm:%02ds", hours, mins, secs);
	}
	else
	{
		format(string, 100, "%d:%02d", mins, secs);
	}
	return string;
}
stock CheckHealth()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerConnected(i))
        {
            new Float: Health;
            GetPlayerHealth(i, Health);
            if(PlayerHealth[i] < Health)
			{
				SetPlayerHealth(i, PlayerHealth[i]);
 			}
			else
 			{
				PlayerHealth[i] = Health;
			}
		}
	}
	return true;
}
stock SetPlayerHealthAC(playerid, Float: Health)
{
    if(IsPlayerConnected(playerid))
    {
        PlayerHealth[playerid] = Health;
        SetPlayerHealth(playerid, Health);
    }
    return true;
}
stock CheckArmour()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerConnected(i))
        {
            new Float:armour;
			GetPlayerArmour(i, armour);
            if(Armour[i] < armour)
        	{
            	SetPlayerArmour(i, Armour[i]);
        	}
        	else
        	{
            	Armour[i] = armour;
        	}
        }
    }
    return true;
}
stock SetPlayerArmourAC(playerid, Float: Arm)
{
    if(IsPlayerConnected(playerid))
    {
        Armour[playerid] = Arm;
        SetPlayerArmour(playerid, Arm);
    }
    return true;
}
public CheckForCheater(playerid)
{
	if(!IsPlayerInRangeOfPoint(playerid,20,610.9915,-11.1024,1000.9219))
	{
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(!player_NoCheckTimeVeh[playerid])
			{
				GetVehicleHealth(GetPlayerVehicleID(playerid),player_VehHealth[playerid]);
				if(PlayerInfo[playerid][pAdmin] == 0)
				if(player_VehHealth[playerid] > HealthVeh[playerid])
				{
				    new string[128];
            		new sendername[MAX_PLAYER_NAME];
            		GetPlayerName(playerid, sendername, sizeof(sendername));
					if(IsPlayerInRangeOfPoint(playerid,7.5,2064.2842,-1831.4736,13.5469)) { player_NoCheckTimeVeh[playerid] = 3; return true; }
					if(IsPlayerInRangeOfPoint(playerid,7.5,487.6401,-1739.9479,11.1385)) { player_NoCheckTimeVeh[playerid] = 3; return true; }
					if(IsPlayerInRangeOfPoint(playerid,7.5,1024.8651,-1024.0870,32.1016)) { player_NoCheckTimeVeh[playerid] = 3; return true; }
					if(IsPlayerInRangeOfPoint(playerid,7.5,617.5467,-2.0437,1000.5823)) { player_NoCheckTimeVeh[playerid] = 3; return true; }
					if(IsPlayerInRangeOfPoint(playerid,7.5,615.2847,-124.2390,997.6888)) { player_NoCheckTimeVeh[playerid] = 3; return true; }
					if(IsPlayerInRangeOfPoint(playerid,7.5,-1904.7019,284.5968,41.0469)) { player_NoCheckTimeVeh[playerid] = 3; return true; }
					if(IsPlayerInRangeOfPoint(playerid,7.5,-2425.7822,1022.1392,50.3977)) { player_NoCheckTimeVeh[playerid] = 3; return true; }
					if(IsPlayerInRangeOfPoint(playerid,7.5,-1420.5195,2584.2305,55.8433)) { player_NoCheckTimeVeh[playerid] = 3; return true; }
					if(IsPlayerInRangeOfPoint(playerid,7.5,-99.9417,1117.9048,19.7417)) { player_NoCheckTimeVeh[playerid] = 3; return true; }
					if(IsPlayerInRangeOfPoint(playerid,7.5,1975.2384,2162.5088,11.0703)) { player_NoCheckTimeVeh[playerid] = 3; return true; }
					if(IsPlayerInRangeOfPoint(playerid,7.5,720.0854,-457.8807,16.3359)) { player_NoCheckTimeVeh[playerid] = 3; return true; }
					if(IsPlayerInRangeOfPoint(playerid,7.5,615.9690,-75.0127,997.9922)) { player_NoCheckTimeVeh[playerid] = 3; return true; }
					SendClientMessage(playerid, COLOR_LIGHTRED, "Вы были кикнуты по подозрению в читерстве. Чит [!RepairHack]");
	            	format(string, sizeof(string), "<Kicked> Чит [!RepairHack]. Игрок: %s",sendername);
	    			ABroadCast(0xFF2F00AA, string, 1);
					FixKickedPlayer[playerid] = 1;
				}
			}
			else
			{
				player_NoCheckTimeVeh[playerid] -= 1;
			}
			GetVehicleHealth(GetPlayerVehicleID(playerid),HealthVeh[playerid]);
		}
	}
	return true;
}
stock AnRepairVehicle(vehicleid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(GetPlayerVehicleID(i) == vehicleid && GetPlayerState(i) == PLAYER_STATE_DRIVER)
	        {
	            player_NoCheckTimeVeh[i] = 3;
			}
		}
	}
	RepairVehicle(vehicleid);
 	return true;
}
public LicClose()
{
	MoveObject(LicGate, -2074.50000000, -94.90000153, 35.00000000, 0.2, 0.00, 90.00, 90.00);
}
stock GetPlayerID(string[])
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerConnected(i) == 1)
        {
            new testname[MAX_PLAYER_NAME];
            GetPlayerName(i, testname, sizeof(testname));
            if(strcmp(testname, string, true, strlen(string)) == 0)
            {
                return i;
            }
        }
    }
    return INVALID_PLAYER_ID;
}
stock UpdateCost(playerid)
{
    new rand = 100 + random(1000);
    Sellbenz[0] += rand;
    Sellbenz[1] += rand;
    Sellugol[0] += rand;
    Sellugol[1] += rand;
    Sellderevo[0] += rand;
    Sellderevo[1] += rand;
    Benzbuy[0] += rand;
    Benzbuy[1] += rand;
    ugolbuy[0] += rand;
    ugolbuy[1] += rand;
    Buyderevo[0] += rand;
    Buyderevo[1] += rand;
    new string[60];
    format(string, sizeof(string), "Порт ЛС\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[0],Sellugol[0],Sellderevo[0]);
    Update3DTextLabelText(Doki[0][playerid],0xFFFF00FF,string);
    format(string, sizeof(string), "Порт СФ\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[1],Sellugol[1],Sellderevo[1]);
    Update3DTextLabelText(Doki[1][playerid],0xFFFF00FF,string);
    format(string, sizeof(string), "Нефтезавод №1\nЦена за тонну: %d",Benzbuy[0]);
    Update3DTextLabelText(GasZavod[0][playerid],0xFFFF00FF,string);
    format(string, sizeof(string), "Нефтезавод №2\nЦена за тонну: %d",Benzbuy[1]);
    Update3DTextLabelText(GasZavod[1][playerid],0xFFFF00FF,string);
    format(string, sizeof(string), "Cклад угля №1\nЦена за тонну: %d",ugolbuy[0]);
    Update3DTextLabelText(Sklad[0][playerid],0xFFFF00FF,string);
    format(string, sizeof(string), "Cклад угля №2\nЦена за тонну: %d",ugolbuy[1]);
    Update3DTextLabelText(Sklad[1][playerid],0xFFFF00FF,string);
    format(string, sizeof(string), "Лесопилка №1\nЦена за тонну: %d",Buyderevo[0]);
    Update3DTextLabelText(Derevobuy[0][playerid],0xFFFF00FF,string);
    format(string, sizeof(string), "Лесопилка №2\n Цена за тонну: %d",Buyderevo[1]);
    Update3DTextLabelText(Derevobuy[1][playerid],0xFFFF00FF,string);
    return true;
}
stock Expirence(playerid)
{
    new exp = PlayerInfo[playerid][pDExp];
    new nxtlevel = PlayerInfo[playerid][pDLevel]+1;
    new expamount = nxtlevel*levelDexp;
    if(exp == expamount)
    {
        PlayerInfo[playerid][pDLevel] += 1;
        PlayerInfo[playerid][pDMgruz] *= 2;
        PlayerInfo[playerid][pDExp] = 0;
        return true;
    }
    return true;
}
stock ToDevelopSkills(Slashes,Points)
{
    new SlashesAndPoints[400];
    new Slash[2] = "|";
    new Point[2] = "'";
    for(new i = 0; i < Slashes; i++) strcat(SlashesAndPoints, Slash);
    for(new i = 0; i < Points; i++) strcat(SlashesAndPoints, Point);
    return SlashesAndPoints;
}
stock ToDevelopRating(Slashes,Points)
{
    new SlashesAndPoints[400];
    new Slash[2] = "|";
    new Point[2] = "'";
    for(new i = 0; i < Slashes; i++) strcat(SlashesAndPoints, Slash);
    for(new i = 0; i < Points; i++) strcat(SlashesAndPoints, Point);
    return SlashesAndPoints;
}
stock SetPlayerSkills(playerid)
{
    SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, PlayerInfo[playerid][pGunSkill][0]*10);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, PlayerInfo[playerid][pGunSkill][1]*10);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, PlayerInfo[playerid][pGunSkill][2]*10);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, PlayerInfo[playerid][pGunSkill][3]*10);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, PlayerInfo[playerid][pGunSkill][4]*10);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, PlayerInfo[playerid][pGunSkill][5]*10);
    return true;
}
stock OnPlayerAmmoChange(playerid, newammo, oldammo)
{
    if(newammo < oldammo)
    {
        switch(GetPlayerWeapon(playerid))
        {
            case 24:
            {
                SetPVarInt(playerid, "SkillD",GetPVarInt(playerid, "SkillD") +1);
                if(GetPVarInt(playerid, "SkillD") >= Ammo_DEAGLE && PlayerInfo[playerid][pGunSkill][1] < 100)
                {
                    PlayerInfo[playerid][pGunSkill][1]++;
                    SetPVarInt(playerid, "SkillD",0);
                }
            }
            case 23:
            {
                SetPVarInt(playerid, "SkillSD",GetPVarInt(playerid, "SkillSD") +1);
                if(GetPVarInt(playerid, "SkillSD")>= Ammo_SDPISTOL && PlayerInfo[playerid][pGunSkill][0] < 100)
                {
                     PlayerInfo[playerid][pGunSkill][0]++;
                     SetPVarInt(playerid, "SkillSD",0);
                }
            }
            case 25:
            {
                SetPVarInt(playerid, "SkillShot",GetPVarInt(playerid, "SkillShot") +1);
                if(GetPVarInt(playerid, "SkillShot") >= Ammo_SHOTGUN && PlayerInfo[playerid][pGunSkill][2] < 100)
                {
                    PlayerInfo[playerid][pGunSkill][2]++;
                    SetPVarInt(playerid, "SkillShot",0);
                }
            }
            case 29:
            {
                SetPVarInt(playerid, "SkillMP5",GetPVarInt(playerid, "SkillMP5") +1);
                if(GetPVarInt(playerid, "SkillMP5") >= Ammo_MP5 && PlayerInfo[playerid][pGunSkill][3] < 100)
                {
                    PlayerInfo[playerid][pGunSkill][3]++;
                    SetPVarInt(playerid, "SkillMP5",0);
                }
            }
            case 30:
            {
                SetPVarInt(playerid, "SkillAk47",GetPVarInt(playerid, "SkillAk47") +1);
                if(GetPVarInt(playerid, "SkillAk47") >= Ammo_AK47 && PlayerInfo[playerid][pGunSkill][4] < 100)
                {
                    PlayerInfo[playerid][pGunSkill][4]++;
                    SetPVarInt(playerid, "SkillAk47",0);
                }
            }
            case 31:
            {
                SetPVarInt(playerid, "SkillM4",GetPVarInt(playerid, "SkillM4") +1);
                if(GetPVarInt(playerid, "SkillM4") >= Ammo_M4A1 && PlayerInfo[playerid][pGunSkill][5] < 100)
                {
                    PlayerInfo[playerid][pGunSkill][5]++;
                    SetPVarInt(playerid, "SkillM4",0);
                }
            }
        }
        OnPlayerUpdateAc(playerid);
    }
    return true;
}
stock ClearTotalGz()
{
    TotalGz[0] = 0;
    TotalGz[1] = 0;
    TotalGz[2] = 0;
    TotalGz[3] = 0;
    TotalGz[4] = 0;
    printr("ClearTotalGz");
}
stock SaveBoxer()
{
    new coordsstring[128];
    format(coordsstring, sizeof(coordsstring), "%d,%s,%d", Titel[TitelWins],Titel[TitelName],Titel[TitelLoses]);
    new File: file2 = fopen("gamefiles/boxer.ini", io_write);
    fwrite(file2, coordsstring);
    fclose(file2);
    return true;
}
stock IsWheelModel(modelid)
{
    new wheelmodels[17] = {1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1096,1097,1098};
    for(new i = 0; i < 17; i++)
	{
        if(modelid == wheelmodels[i])
        return true;
    }
    return false;
}
stock IsLegalCarNitroIde(carmodel)
{
    new illegalvehs[29] = { 581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 509, 481, 510, 472, 473, 493, 595, 484, 430, 453, 452, 446, 454, 590, 569, 537, 538, 570, 449 };
    for(new i = 0; i < 29; i++)
	{
        if(carmodel == illegalvehs[i])
        return true;
    }
    return false;
}
stock IsLegal_Nos_Vehicle(PlayerID)
{
    new carid = GetPlayerVehicleID(PlayerID);
    new playercarmodel = GetVehicleModel(carid);
    return IsLegalCarNitroIde(playercarmodel);
}
stock IsLegalCarMod(vehicleide, componentid)
{
    new modok = false;
    if((IsWheelModel(componentid)) || (componentid == 1086) || (componentid == 1087) || ((componentid >= 1008) && (componentid <= 1010)))
	{
	    new nosblocker = IsLegalCarNitroIde(vehicleide);
		if(!nosblocker)
		modok = true;
	}
	else
	{
        for(new I = 0; I < 48; I++)
		{
            if(legalmods[I][0] == vehicleide)
			{
                for(new J = 1; J < 22; J++)
				{
                    if(legalmods[I][J] == componentid)
                    modok = true;
                }
            }
        }
    }
    return modok;
}
stock OnVehicleMod(playerid, vehicleid, componentid)
{
    new vehicleide = GetVehicleModel(vehicleid);
    new modok = IsLegalCarMod(vehicleide, componentid);
	if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pCar] == 462)
	{
	    if(!modok)
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, "Вы были кикнуты по подозрению в читерстве. Чит [!TuningHack]");
   			format(string, sizeof(string), "<Kicked> Чит [!TuningHack]. Игрок: %s",sendername);
			RemoveVehicleComponent(vehicleid,componentid);
    		ABroadCast(0xFF2F00AA, string, 1);
			FixKickedPlayer[playerid] = 1;
			return true;
	    }
	}
    return true;
}
stock AdvertList(playerid)
{
	new full, str[128], strrr[2048];
	switch(PlayerInfo[playerid][pMember])
	{
		case 16: full = 0;
		case 9: full = 1;
		case 20: full = 2;
	}
	for(new i = 1; i <= TOTALADVERT[full]; i++)
	{
		format(str, sizeof(str), "[%i] Текст: %s. Прислал: %s\n",i, AdvertInfo[i][full][adText], AdvertInfo[i][full][adName]);
		strcat(strrr, str);
	}
	if(TOTALADVERT[full] == 0) return ShowPlayerDialog(playerid, 69, 0, "Объявления", "    Новых объявлений нет", "Назад", "");
	ShowPlayerDialog(playerid, 11518, 2, "Объявления", strrr, "Принять", "Отмена");
	return true;
}
public ServerName()
{
	SendRconCommand("language Russian");
	SendRconCommand("hostname Lunik SAMP Role Play | Server Full");
	SendRconCommand("gamemodetext Arizona RP");
}
public AntiBunny(playerid)
{
    ApplyAnimation(playerid, "PED", "getup_front",4.0,0,0,0,0,0);
    times[playerid] = false;
    SetTimerEx("AntiBunnyHop",1000,false, "i",playerid);
    return true;
}
public AntiBunnyHop(playerid)
{
    times[playerid] = true;
}
stock Stavkarul1right(playerid)
{
	switch(NumberFishka[playerid])
	{
		case 1..36:
		{
			fishechkax[playerid]+=0.152;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] +=3;
		}
		case 37..39:
		{
			fishechkay[playerid]=1619.5603;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2241.9082;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =0;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2230.2999;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =0;
			}
		}
		case 0:
		{
			fishechkax[playerid]+=0.152;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] =2;
		}
		case 40,41:
		{
			fishechkax[playerid]+=0.608;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] +=1;
		}
		case 42:
		{
			fishechkay[playerid]=1619.0749;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2242.2783;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =40;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2230.6701;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =40;
			}
		}
		case 43..47:
		{
			fishechkax[playerid]+=0.3;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] +=1;
		}
		case 48:
		{
			fishechkay[playerid]=1618.8292;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2242.1469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =43;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2230.5387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =43;
			}
		}
	}
	return true;
}
stock Stavkarul1left(playerid)
{
	switch(NumberFishka[playerid])
	{
		case 4..39:
		{
			fishechkax[playerid]-=0.152;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] -=3;
		}
		case 41,42:
		{
			fishechkax[playerid]-=0.608;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] -=1;
		}
	case 44..48:
		{
			fishechkax[playerid]-=0.3;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] -=1;
		}
		case 43:
		{
			fishechkay[playerid]=1618.8292;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2243.6469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =48;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2232.0387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =48;
			}
		}
		case 1..3:
		{
			fishechkay[playerid]=1619.5603;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2241.9082;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =0;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2230.2999;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =0;
			}
		}
		case 40:
		{
			fishechkay[playerid]=1619.0749;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2243.4943;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =42;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2231.886;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =42;
			}
		}
	}
	return true;
}
stock Stavkarul1up(playerid)
{
	switch(NumberFishka[playerid])
	{
		case 1,2,4,5,7,8,10,11,13,14,16,17,19,20,22,23,25,26,28,29,31,32,34,35,37,38:
		{
			fishechkay[playerid]+=0.25;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] +=1;
		}
		case 40..42:
		{
			fishechkay[playerid]=1619.5603;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2241.9082;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =0;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2230.2999;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =0;
			}
		}
		case 3,6:
		{
			fishechkay[playerid]=1618.8292;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2242.1469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =43;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2230.5387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =43;
			}
		}
		case 9,12:
		{
			fishechkay[playerid]=1618.8292;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2242.4469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =44;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2230.8387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =44;
			}
		}
		case 15,18:
		{
			fishechkay[playerid]=1618.8292;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2242.7469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =45;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2231.1387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =45;
			}
		}
		case 21,24:
		{
			fishechkay[playerid]=1618.8292;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2243.0469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =46;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2231.4386;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =46;
			}
		}
		case 27,30:
		{
			fishechkay[playerid]=1618.8292;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2243.3469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =47;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2231.7387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =47;
			}
		}
		case 33,36:
		{
			fishechkay[playerid]=1618.8292;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2243.6469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =48;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2232.0387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =48;
			}
		}
		case 43,44:
		{
			fishechkay[playerid]=1619.0749;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2242.2783;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =40;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2230.6701;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =40;
			}
		}
		case 45,46:
		{
			fishechkay[playerid]=1619.0749;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2242.8863;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =41;
			}
			else if (RuletkaStol[playerid] ==1)
			{
				fishechkax[playerid]=2231.2781;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =41;
			}
		}
		case 47,48:
		{
			fishechkay[playerid]=1619.0749;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2243.4943;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =42;
			}
			else if (RuletkaStol[playerid] ==1)
			{
				fishechkax[playerid]=2231.886;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =42;
			}
		}
	}
	return true;
}
stock StopVzlomNick(playerid)
{
    new palka = 0;
    new BUKVA = 0;
    new sendername[MAX_PLAYER_NAME];
    GetPlayerName(playerid,sendername,sizeof(sendername));
    if((sendername[0] > 'a' && sendername[0] < 'z') || strfind(sendername,"_",true,1) == -1)
    {
        SendClientMessage(playerid,COLOR_LIGHTRED,"Вы были кикнуты сервером. Ваш ник не соответствует РП режиму.");
        SendClientMessage(playerid,COLOR_LIGHTRED,"Пример РП никнейма: Sergey_Loginov, El_Capone");
        SendClientMessage(playerid,COLOR_LIGHTRED,"{32CD32}Подсказка: Нету символа '_' или первая буква не заглавная.");
        FixKickedPlayer[playerid] = 1;
        return true;
    }
    for (new i; i < strlen(sendername); i++)
    {
        switch(sendername[i])
        {
        	case '_':
            {
                palka++;
                if(palka > 1)
                {
                    SendClientMessage(playerid,COLOR_RED,"Вы были кикнуты сервером. Ваш ник не соответствует РП режиму.");
                    SendClientMessage(playerid,COLOR_RED,"Пример РП никнейма: Sergey_Loginov, El_Capone");
                    SendClientMessage(playerid,COLOR_RED,"{32CD32}Подсказка: Несколько символов '_' в нике.");
                    FixKickedPlayer[playerid] = 1;
                    break;
                }
                switch(sendername[i+1])
                {
                case 'a'..'z':
                    {
                        SendClientMessage(playerid,COLOR_RED,"Вы были кикнуты сервером. Ваш ник не соответствует РП режиму.");
                        SendClientMessage(playerid,COLOR_RED,"Пример РП никнейма: Sergey_Loginov, El_Capone");
                        SendClientMessage(playerid,COLOR_RED,"{32CD32}Подсказка: Фамилия с маленькой буквы.");
                        FixKickedPlayer[playerid] = 1;
                        break;
                    }
                }
            }
        	case 'A'..'Z':
	        {
	            BUKVA++;
	            if(BUKVA > 2)
	            {
	                SendClientMessage(playerid,COLOR_RED,"Вы были кикнуты сервером. Ваш ник не соответствует РП режиму.");
	                SendClientMessage(playerid,COLOR_RED,"Пример РП никнейма: Sergey_Loginov, El_Capone");
	                SendClientMessage(playerid,COLOR_RED,"{32CD32}Подсказка: Слишком много больших букв.");
	                FixKickedPlayer[playerid] = 1;
	                break;
	            }
	        }
	        case '[',']','{','}','$','#','№','"','@','!',';','%','^',':','?','&','*','(',')','=','+','<','>':
	        {
	            SendClientMessage(playerid,COLOR_RED,"Вы были кикнуты сервером.");
	            SendClientMessage(playerid,COLOR_RED,"В вашем нике найдены запрещенные символы.");
	            FixKickedPlayer[playerid] = 1;
	            break;
	        }
        	case '0'..'9':
            {
                SendClientMessage(playerid,COLOR_RED,"Вы были кикнуты сервером.");
                SendClientMessage(playerid,COLOR_RED,"В вашем нике найдены символы цифр, пожалуйста смените ник.");
                FixKickedPlayer[playerid] = 1;
                break;
            }
        }
    }
    return 1;
}
stock Stavkarul1down(playerid)
{
	switch(NumberFishka[playerid])
	{
		case 2,3,5,6,8,9,11,12,14,15,17,18,20,21,23,24,26,27,29,30,32,33,35,36,38,39:
		{
			fishechkay[playerid]-=0.25;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] -=1;
		}
		case 1,4,7,10:
		{
			fishechkay[playerid]=1619.0749;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2242.2783;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =40;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2230.6701;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =40;
			}
		}
		case 40:
		{
			fishechkay[playerid]=1618.8292;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2242.1469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =43;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2230.5387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =43;
			}
		}
		case 41:
		{
			fishechkay[playerid]=1618.8292;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2242.7469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =45;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2231.1387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =45;
			}
		}
		case 42:
		{
			fishechkay[playerid]=1618.8292;
			if (RuletkaStol[playerid] == 2)
			{
				fishechkax[playerid]=2243.3469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] = 47;
			}
			else if (RuletkaStol[playerid] ==1)
			{
				fishechkax[playerid]=2231.7387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] = 47;
			}

		}
		case 43..48:
		{
			fishechkay[playerid]=1619.5603;
			if (RuletkaStol[playerid] == 2)
			{
				fishechkax[playerid]=2241.9082;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] = 0;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2230.2999;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] = 0;
			}
		}
		case 13,16,19,22:
		{
			fishechkay[playerid]=1619.0749;
			if (RuletkaStol[playerid] == 2)
			{
				fishechkax[playerid] = 2242.8863;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] = 41;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2231.2781;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] = 41;
			}
		}
		case 25,28,31,34:
		{
			fishechkay[playerid]=1619.0749;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2243.4943;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] = 42;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2231.886;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] = 42;
			}
		}
	}
	return true;
}
forward RuletCheck2();
public RuletCheck2()
{
	new string[50];
	new ruletikF;
	new Slotrulet1;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(RuletStart[i] == true)
		{
			if(RuletkaStol[i] == 2)
			{
				if(IsPlayerConnected(i))
				{
					if(KrupieStart[1] == true)
					{
						if(KrupieTime[1] <= 50)
						{
							ruletikF = 0 +random(36);
							KrupieTime[1] += 1;
							if(ruletikF == 0)
							{
								format(string, sizeof(string), "~g~%d",ruletikF);
								GameTextForPlayer(i, string, 50, 6);
							}
							else if (ruletikF ==1 || ruletikF ==3 || ruletikF ==5 || ruletikF ==7 || ruletikF ==9 || ruletikF ==12 || ruletikF ==14 || ruletikF ==16 || ruletikF ==18 || ruletikF ==19 || ruletikF ==21 || ruletikF ==23 || ruletikF ==25 || ruletikF ==27 || ruletikF ==30 || ruletikF ==32 || ruletikF ==34 || ruletikF ==36)
							{
								format(string, sizeof(string), "~r~%d",ruletikF);
								GameTextForPlayer(i, string, 50, 6);
							}
							else if (ruletikF ==2 || ruletikF ==4 || ruletikF ==6 || ruletikF ==8 || ruletikF ==10 || ruletikF ==11 || ruletikF ==13 || ruletikF ==15 || ruletikF ==17 || ruletikF ==20 || ruletikF ==22 || ruletikF ==24 || ruletikF ==26 || ruletikF ==28 || ruletikF ==29 || ruletikF ==31 || ruletikF ==33 || ruletikF ==35)
							{
								format(string, sizeof(string), "~w~%d",ruletikF);
								GameTextForPlayer(i, string, 50, 6);
							}
						}
						else
						{
							ruletikF = 0 +random(36);
							KrupieStart[1] = false;
							RuletStart[i] = false;
							if (ruletikF ==0)
							{
								format(string, sizeof(string), "~g~%d",ruletikF);
								GameTextForPlayer(i, string, 7000, 6);
							}
							else if (ruletikF ==1 || ruletikF ==3 || ruletikF ==5 || ruletikF ==7 || ruletikF ==9 || ruletikF ==12 || ruletikF ==14 || ruletikF ==16 || ruletikF ==18 || ruletikF ==19 || ruletikF ==21 || ruletikF ==23 || ruletikF ==25 || ruletikF ==27 || ruletikF ==30 || ruletikF ==32 || ruletikF ==34 || ruletikF ==36)
							{
								format(string, sizeof(string), "~r~%d",ruletikF);
								GameTextForPlayer(i, string, 7000, 6);
							}
							else if (ruletikF ==2 || ruletikF ==4 || ruletikF ==6 || ruletikF ==8 || ruletikF ==10 || ruletikF ==12 || ruletikF ==14 || ruletikF ==16 || ruletikF ==18 || ruletikF ==20 || ruletikF ==22 || ruletikF ==24 || ruletikF ==26 || ruletikF ==28 || ruletikF ==30 || ruletikF ==32 || ruletikF ==34 || ruletikF ==36)
							{
								format(string, sizeof(string), "~w~%d",ruletikF);
								GameTextForPlayer(i, string, 7000, 6);
							}
							if (ruletikF ==1 || ruletikF ==3 || ruletikF ==5 || ruletikF ==7 || ruletikF ==9 || ruletikF ==12 || ruletikF ==14 || ruletikF ==16 || ruletikF ==18 || ruletikF ==19 || ruletikF ==21 || ruletikF ==23 || ruletikF ==25 || ruletikF ==27 || ruletikF ==30 || ruletikF ==32 || ruletikF ==34 || ruletikF ==36)
							{
								Slotrulet1 = 1;
							}
							else if (ruletikF ==2 || ruletikF ==4 || ruletikF ==6 || ruletikF ==8 || ruletikF ==10 || ruletikF ==12 || ruletikF ==14 || ruletikF ==16 || ruletikF ==18 || ruletikF ==20 || ruletikF ==22 || ruletikF ==24 || ruletikF ==26 || ruletikF ==28 || ruletikF ==30 || ruletikF ==32 || ruletikF ==34 || ruletikF ==36)
							{
								Slotrulet1 = 2;
							}
							else
							{
								Slotrulet1 = 3;
							}
							KrupieStart[1] = false;
							KrupieTime[1] = 0;
							Vidrulvigr[1] = true;
						}
					}
				}
			}
		}
	}
	new RuletVidachaDen[MAX_PLAYERS];
	new RuletikProv[MAX_PLAYERS];
	for(new h = 0; h < MAX_PLAYERS; h++)
	{
		if(RuletkaStol[h] == 2)
		{
			if(Vidrulvigr[1] == true)
			{
				if(RuletTip[h] <= 37 && RuletTip[h] >= 1)
				{
					RuletikProv[h] = RuletTip[h] -1;
					if(RuletikProv[h] == ruletikF)
					{
						RuletVidachaDen[h] = RuletSum[h] *20;
						PlayerInfo[h][pCash] += RuletVidachaDen[h];
						GivePlayerMoney(h,RuletVidachaDen[h]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[h]);
						SendClientMessage(h, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(h, COLOR_YELLOW, string);
					}
				}
			}
		}
	}
	for(new k = 0; k < MAX_PLAYERS; k++)
	{
		if(Vidrulvigr[1] == true)
		{
  			if(krupiedi[1] == k && RuletStart[k] == false)
			{
				format(string, sizeof(string), "Выпало число %d!",ruletikF);
				SendClientMessage(k, COLOR_YELLOW, string);
			}
			if(RuletkaStol[k] == 2)
			{
				if (RuletTip[k] == 38 || RuletTip[k] == 39)
				{
					if (Slotrulet1 == 1 && RuletTip[k]==38)
					{
						RuletVidachaDen[k] = RuletSum[k] * 2;

						PlayerInfo[k][pCash] += RuletVidachaDen[k];
						GivePlayerMoney(k,RuletVidachaDen[k]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[k]);
						SendClientMessage(k, COLOR_YELLOW, string);
					}
					else if (Slotrulet1 == 2 && RuletTip[k]==39)
					{
						RuletVidachaDen[k] = RuletSum[k] * 2;

						PlayerInfo[k][pCash] += RuletVidachaDen[k];
						GivePlayerMoney(k,RuletVidachaDen[k]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[k]);
						SendClientMessage(k, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(k, COLOR_YELLOW, string);
					}
				}
			}
		}
	}
	for(new m = 0; m < MAX_PLAYERS; m++)
	{
		if(Vidrulvigr[1] == true)
		{
			if(RuletkaStol[m] == 2)
			{
				if(RuletTip[m] == 40)
				{
					if(ruletikF >= 1 && ruletikF <= 12)
					{
						RuletVidachaDen[m] = RuletSum[m] * 4;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 41)
				{
					if(ruletikF >= 13 && ruletikF <= 24)
					{
						RuletVidachaDen[m] = RuletSum[m] *4;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 42)
				{
					if(ruletikF >= 25 && ruletikF <= 36)
					{
						RuletVidachaDen[m] = RuletSum[m] *4;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 43)
				{
					if(ruletikF >= 1 && ruletikF <= 18)
					{
						RuletVidachaDen[m] = RuletSum[m] *2;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if (RuletTip[m] == 44)
				{
					if(ruletikF >= 19 && ruletikF <= 36)
					{
						RuletVidachaDen[m] = RuletSum[m] *2;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if (RuletTip[m] == 45)
				{
					if(ruletikF == 2 || ruletikF == 4 || ruletikF == 6 || ruletikF == 8 || ruletikF == 10 || ruletikF == 12 || ruletikF == 14 || ruletikF == 16 || ruletikF == 18 || ruletikF == 20 || ruletikF == 22 || ruletikF == 24 || ruletikF == 26 || ruletikF == 28 || ruletikF == 30 || ruletikF == 32 || ruletikF == 24 || ruletikF == 36)
					{
						RuletVidachaDen[m] = RuletSum[m] *2;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if (RuletTip[m] == 46)
				{
					if(ruletikF == 1 || ruletikF == 3 || ruletikF == 5 || ruletikF == 7 || ruletikF == 9 || ruletikF == 11 || ruletikF == 13 || ruletikF == 15 || ruletikF == 17 || ruletikF == 19 || ruletikF == 21 || ruletikF == 23 || ruletikF == 25 || ruletikF == 27 || ruletikF == 29 || ruletikF == 31 || ruletikF == 23 || ruletikF == 35)
					{
						RuletVidachaDen[m] = RuletSum[m] *2;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 47)
				{
					new bool:resullit;
					switch(ruletikF)
					{
						case 3,6,9,12,15,18,21,24,27,30,33,36:
						{
							RuletVidachaDen[m] = RuletSum[m] * 3;
							PlayerInfo[m][pCash] += RuletVidachaDen[m];
							GivePlayerMoney(m,RuletVidachaDen[m]);
							format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
							SendClientMessage(m, COLOR_YELLOW, string);
							resullit = true;
						}
					}
					if(resullit == false)
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] ==48)
				{
					new bool:resullit;
					switch(ruletikF)
					{
						case 2,5,8,11,14,17,20,23,26,29,32,35:
						{
							RuletVidachaDen[m] = RuletSum[m] * 3;
							PlayerInfo[m][pCash] += RuletVidachaDen[m];
							GivePlayerMoney(m,RuletVidachaDen[m]);
							format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
							SendClientMessage(m, COLOR_YELLOW, string);
							resullit = true;
						}
					}
					if (resullit == false)
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 49)
				{
					new bool:resullit;
					switch(ruletikF)
					{
						case 1,4,7,10,13,16,19,22,25,28,31,34:
						{
							RuletVidachaDen[m] = RuletSum[m] * 3;
							PlayerInfo[m][pCash] += RuletVidachaDen[m];
							GivePlayerMoney(m,RuletVidachaDen[m]);
							format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
							SendClientMessage(m, COLOR_YELLOW, string);
							resullit = true;
						}
					}
					if (resullit == false)
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
			}
		}
	}
	if(Vidrulvigr[1] == true)
	{
		Vidrulvigr[1] = false;
		ruletikF = 0;
		KillTimer(RuletTimer2);
		for(new l = 0; l < MAX_PLAYERS; l++)
		{
			if(RuletkaStol[l] ==2)
			{
				new kollidn = krupiedi[1];
				PlayerInfo[kollidn][pKazpay]+=RuletSum[l]/50;
				switch(kaligmaf1)
				{
					case 5:
					{
						MafiaBank[0][nLcn]+=RuletSum[l]/70;
					}
					case 6:
					{
						MafiaBank[0][nYakuza]+=RuletSum[l]/70;
					}
					case 14:
					{
						MafiaBank[0][nRm]+=RuletSum[l]/70;
					}
				}
				DestroyObject(Fishka[l]);
				Fishka[l] = CreateObject(1913,fishechkax[l],fishechkay[l],1006.0690,0.00,0.00,0.00);
				Upravakazino[l] = true;
				RuletTip[l] = 0;
				RuletSum[l] = 0;
				RuletStart[l] = false;
			}
		}
		krupiedi[1]=5000;
	}
	return true;
}
forward Kazvihod(playerid);
public Kazvihod(playerid)
{
	if (RuletStart[playerid] == true)
	{
		SendClientMessage(playerid, COLOR_BLUE, "Вы отменили ставку");
		RuletTip[playerid] = 0;
		PlayerInfo[playerid][pCash] += RuletSum[playerid];
		RuletSum[playerid] = 0;
		RuletStart[playerid] = false;
	}
	SetCameraBehindPlayer(playerid);
	TogglePlayerControllable(playerid, 1);
	Kazkamera[playerid] =0;
	if(RuletkaStol[playerid] == 1) Maxis[0]-=1;
	else if (RuletkaStol[playerid] == 2) Maxis[1]-=1;
	RuletkaStol[playerid] = 0;
	Upravakazino[playerid] = false;
	DestroyObject(Fishka[playerid]);
	return true;
}
forward BarabanMovie();
public BarabanMovie()
{
	if (Barabanchik <= 500.00)
	{
		Barabanchik+=1.0;
		MoveObject(Braban[0],2229.5522,1619.2888,1006.1536,0.1,0.00,0.00,Barabanchik);
	}
	else
	{
		KillTimer(BarabanTimer[0]);
		Barabanchik =0.00;
	}
}

forward BarabanMovie2();
public BarabanMovie2()
{
	if (Barabanchik2 <= 500.00)
	{
		Barabanchik2 += 1.0;
		MoveObject(Braban[1],2241.1545,1619.2888,1006.1536,0.1,0.00,0.00,Barabanchik2);
	}
	else
	{
		KillTimer(BarabanTimer[1]);
		Barabanchik2 =0.00;
	}
}
stock SaveKazino()
{
	new string[64];
	new iniFile = ini_openFile("gamefiles/mafia.ini");
	format(string, sizeof(string), "Mafia");
	ini_setString(iniFile, string, kaligmaf);
	format(string, sizeof(string), "Mafianumber");
	ini_setInteger(iniFile, string, kaligmaf1);
	ini_closeFile(iniFile);
}

forward RuletCheck();
public RuletCheck()
{
	new string[50];
	new ruletikF;
	new Slotrulet1;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(RuletStart[i] == true)
		{
			if(RuletkaStol[i] == 1)
			{
				if(IsPlayerConnected(i))
				{
					if(KrupieStart[0] == true)
					{
						if(KrupieTime[0] <= 50)
						{
							ruletikF = 0 +random(36);
							KrupieTime[0] += 1;
							if(ruletikF == 0)
							{
								format(string, sizeof(string), "~g~%d",ruletikF);
								GameTextForPlayer(i, string, 50, 6);
							}
							else if(ruletikF == 1 || ruletikF == 3 || ruletikF == 5 || ruletikF == 7 || ruletikF == 9 || ruletikF == 12 || ruletikF == 14 || ruletikF == 16 || ruletikF == 18 || ruletikF == 19 || ruletikF == 21 || ruletikF == 23 || ruletikF == 25 || ruletikF ==27 || ruletikF == 30 || ruletikF == 32 || ruletikF == 24 || ruletikF == 36)
							{
								format(string, sizeof(string), "~r~%d",ruletikF);
								GameTextForPlayer(i, string, 50, 6);
							}
							else if(ruletikF == 2 || ruletikF == 4 || ruletikF == 6 || ruletikF == 8 || ruletikF == 10 || ruletikF == 11 || ruletikF == 13 || ruletikF == 15 || ruletikF == 17 || ruletikF == 20 || ruletikF == 22 || ruletikF == 24 || ruletikF == 26 || ruletikF == 28 || ruletikF == 29 || ruletikF == 31 || ruletikF == 23 || ruletikF == 35)
							{
								format(string, sizeof(string), "~w~%d",ruletikF);
								GameTextForPlayer(i, string, 50, 6);
							}
						}
						else
						{
							ruletikF = 0 + random(36);
							KrupieStart[0] = false;
							RuletStart[i] = false;
							if(ruletikF == 0)
							{
								format(string, sizeof(string), "~g~%d",ruletikF);
								GameTextForPlayer(i, string, 7000, 6);
							}
							else if(ruletikF ==1 || ruletikF ==3 || ruletikF ==5 || ruletikF ==7 || ruletikF ==9 || ruletikF ==12 || ruletikF ==14 || ruletikF ==16 || ruletikF ==18 || ruletikF ==19 || ruletikF ==21 || ruletikF ==23 || ruletikF ==25 || ruletikF ==27 || ruletikF ==30 || ruletikF ==32 || ruletikF ==34 || ruletikF ==36)
							{
								format(string, sizeof(string), "~r~%d",ruletikF);
								GameTextForPlayer(i, string, 7000, 6);
							}
							else if(ruletikF ==2 || ruletikF ==4 || ruletikF ==6 || ruletikF ==8 || ruletikF ==10 || ruletikF ==12 || ruletikF ==14 || ruletikF ==16 || ruletikF ==18 || ruletikF ==20 || ruletikF ==22 || ruletikF ==24 || ruletikF ==26 || ruletikF ==28 || ruletikF ==30 || ruletikF ==32 || ruletikF ==34 || ruletikF ==36)
							{
								format(string, sizeof(string), "~w~%d",ruletikF);
								GameTextForPlayer(i, string, 7000, 6);
							}
							if(ruletikF ==1 || ruletikF ==3 || ruletikF ==5 || ruletikF ==7 || ruletikF ==9 || ruletikF ==12 || ruletikF ==14 || ruletikF ==16 || ruletikF ==18 || ruletikF ==19 || ruletikF ==21 || ruletikF ==23 || ruletikF ==25 || ruletikF ==27 || ruletikF ==30 || ruletikF ==32 || ruletikF ==34 || ruletikF ==36)
							{
								Slotrulet1 = 1;
							}
							else if(ruletikF == 2 || ruletikF == 4 || ruletikF == 6 || ruletikF == 8 || ruletikF == 10 || ruletikF ==12 || ruletikF ==14 || ruletikF ==16 || ruletikF ==18 || ruletikF ==20 || ruletikF ==22 || ruletikF ==24 || ruletikF ==26 || ruletikF ==28 || ruletikF ==30 || ruletikF ==32 || ruletikF ==34 || ruletikF ==36)
							{
								Slotrulet1 = 2;
							}
							else
							{
								Slotrulet1 = 3;
							}
							KrupieStart[0] = false;
							KrupieTime[0] = 0;
							Vidrulvigr[0] = true;
						}
					}
				}
			}
		}
	}
	new RuletVidachaDen[MAX_PLAYERS];
	new RuletikProv[MAX_PLAYERS];
	for(new h = 0; h < MAX_PLAYERS; h++)
	{
		if(RuletkaStol[h] == 1)
		{
			if(Vidrulvigr[0] == true)
			{
				if(RuletTip[h] <= 37 && RuletTip[h] >= 1)
				{
					RuletikProv[h] =RuletTip[h] - 1;
					if(RuletikProv[h] == ruletikF)
					{
						RuletVidachaDen[h] = RuletSum[h] *20;
						PlayerInfo[h][pCash] += RuletVidachaDen[h];
						GivePlayerMoney(h,RuletVidachaDen[h]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[h]);
						SendClientMessage(h, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(h, COLOR_YELLOW, string);
					}
				}
			}
		}
	}
	for(new k = 0; k < MAX_PLAYERS; k++)
	{
		if(Vidrulvigr[0] == true)
		{
  			if(krupiedi[0] == k && RuletStart[k] == false)
			{
 				format(string, sizeof(string), "Выпало число %d!",ruletikF);
				SendClientMessage(k, COLOR_YELLOW, string);
			}
			if(RuletkaStol[k] == 1)
			{
				if(RuletTip[k] == 38 || RuletTip[k] == 39)
				{
					if(Slotrulet1 == 1 && RuletTip[k]== 38)
					{
						RuletVidachaDen[k] = RuletSum[k] * 2;
						PlayerInfo[k][pCash] += RuletVidachaDen[k];
						GivePlayerMoney(k,RuletVidachaDen[k]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[k]);
						SendClientMessage(k, COLOR_YELLOW, string);
					}
					else if(Slotrulet1 == 2 && RuletTip[k] == 39)
					{
						RuletVidachaDen[k] = RuletSum[k] *2;
						PlayerInfo[k][pCash] += RuletVidachaDen[k];
						GivePlayerMoney(k,RuletVidachaDen[k]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[k]);
						SendClientMessage(k, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(k, COLOR_YELLOW, string);
					}
				}
			}
		}
	}
	for(new m = 0; m < MAX_PLAYERS; m++)
	{
		if(Vidrulvigr[0] == true)
		{
			if(RuletkaStol[m] == 1)
			{
				if(RuletTip[m] == 40)
				{
					if(ruletikF >= 1 && ruletikF <= 12)
					{
						RuletVidachaDen[m] = RuletSum[m] *4;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 41)
				{
					if(ruletikF >=13 && ruletikF<=24)
					{
						RuletVidachaDen[m] = RuletSum[m] * 4;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if (RuletTip[m] == 42)
				{
					if(ruletikF >=25 && ruletikF<=36)
					{
						RuletVidachaDen[m] = RuletSum[m] * 4;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 43)
				{
					if(ruletikF >=1 && ruletikF<=18)
					{
						RuletVidachaDen[m] = RuletSum[m] * 2;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 44)
				{
					if(ruletikF >=19 && ruletikF<=36)
					{
						RuletVidachaDen[m] = RuletSum[m] * 2;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 45)
				{
					if(ruletikF == 2 || ruletikF == 4 || ruletikF == 6 || ruletikF == 8 || ruletikF == 10 || ruletikF == 12 || ruletikF == 14 || ruletikF == 16 || ruletikF == 18 || ruletikF == 20 || ruletikF == 22 || ruletikF == 24 || ruletikF == 26 || ruletikF == 28 || ruletikF == 30 || ruletikF == 32 || ruletikF == 34 || ruletikF == 36)
					{
						RuletVidachaDen[m] = RuletSum[m] * 2;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 46)
				{
					if(ruletikF == 1 || ruletikF == 3 || ruletikF == 5 || ruletikF == 7 || ruletikF == 9 || ruletikF == 11 || ruletikF == 13 || ruletikF == 15 || ruletikF == 17 || ruletikF == 19 || ruletikF == 21 || ruletikF == 23 || ruletikF == 25 || ruletikF == 27 || ruletikF == 29 || ruletikF == 31 || ruletikF == 33 || ruletikF == 35)
					{
						RuletVidachaDen[m] = RuletSum[m] * 2;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 47)
				{
					new bool:resullit;
					switch(ruletikF)
					{
						case 3,6,9,12,15,18,21,24,27,30,33,36:
						{
							RuletVidachaDen[m] = RuletSum[m] * 3;
							PlayerInfo[m][pCash] += RuletVidachaDen[m];
							GivePlayerMoney(m,RuletVidachaDen[m]);
							format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
							SendClientMessage(m, COLOR_YELLOW, string);
							resullit = true;
						}
					}
					if(resullit == false)
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 48)
				{
					new bool:resullit;
					switch(ruletikF)
					{
						case 2,5,8,11,14,17,20,23,26,29,32,35:
						{
							RuletVidachaDen[m] = RuletSum[m] * 3;
							PlayerInfo[m][pCash] += RuletVidachaDen[m];
							GivePlayerMoney(m,RuletVidachaDen[m]);
							format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
							SendClientMessage(m, COLOR_YELLOW, string);
							resullit = true;
						}
					}
					if(resullit == false)
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 49)
				{
					new bool:resullit;
					switch(ruletikF)
					{
						case 1,4,7,10,13,16,19,22,25,28,31,34:
						{
							RuletVidachaDen[m] = RuletSum[m] * 3;
							PlayerInfo[m][pCash] += RuletVidachaDen[m];
							GivePlayerMoney(m,RuletVidachaDen[m]);
							format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
							SendClientMessage(m, COLOR_YELLOW, string);
							resullit = true;
						}
					}
					if(resullit == false)
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
			}
		}
	}
	if(Vidrulvigr[0] == true)
	{
		Vidrulvigr[0] = false;
		ruletikF = 0;
		KillTimer(RuletTimer);
		for(new l = 0; l < MAX_PLAYERS; l++)
		{
			if (RuletkaStol[l] ==1)
			{
				new kollidn = krupiedi[0];
				PlayerInfo[kollidn][pKazpay] += RuletSum[l]/50;
				switch(kaligmaf1)
				{
					case 6:
					{
						MafiaBank[0][nYakuza]+=RuletSum[l]/70;
					}
					case 14:
					{
						MafiaBank[0][nRm]+=RuletSum[l]/70;
					}
					case 5:
					{
						MafiaBank[0][nLcn]+=RuletSum[l]/70;
					}
				}
				DestroyObject(Fishka[l]);
				Fishka[l] = CreateObject(1913,fishechkax[l],fishechkay[l],1006.0690,0.00,0.00,0.00);
				Upravakazino[l] = true;
				RuletTip[l] = 0;
				RuletSum[l] = 0;
				RuletStart[l] = false;
			}
		}
		krupiedi[1] = 5000;
	}
	return true;
}
stock LoadKazino()
{
    new time = GetTickCount();
	new string[64];
	new iniFile = ini_openFile("gamefiles/mafia.ini");
	format(string, sizeof(string), "Mafia");
	ini_getString(iniFile, string, kaligmaf);
	format(string, sizeof(string), "Mafianumber");
	ini_getInteger(iniFile, string, kaligmaf1);
	ini_closeFile(iniFile);
	printf("______________________________", GetTickCount() - time);
}
public UnFreeze(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		TogglePlayerControllable(playerid, 1);
	}
}
public GzCheck()
{
    if(capture[12] == 1 || capture[13] == 1 || capture[15] == 1 || capture[17] == 1 || capture[18] == 1)
	{
		for(new i = 0; i < sizeof(GZInfo); i++)
		{
			if(GZSafeTime[i] > 0)
			{
				GZSafeTime[i]--;
		        if(GZSafeTime[i] == 300)
		        {
		            SendFamilyMessage(GZInfo[i][gFrakVlad],COLOR_WHITE,"{e23434}[Внимание] {FFFFFF}До защиты территории осталось 5 минут.");
		            SendFamilyMessage(GZInfo[i][gNapad],COLOR_WHITE,"{e23434}[Внимание] {FFFFFF}До захвата территории осталось 5 минут.");
		        }
		        else if(GZSafeTime[i] == 120)
		        {
		            SendFamilyMessage(GZInfo[i][gFrakVlad],COLOR_WHITE,"{e23434}[Внимание] {FFFFFF}До защиты территории осталось 2 минуты.");
		            SendFamilyMessage(GZInfo[i][gNapad],COLOR_WHITE,"{e23434}[Внимание] {FFFFFF}До захвата территории осталось 2 минуты.");
		        }
		        else if(GZSafeTime[i] == 1)
		        {
		            if(ScoreZahvat[GZInfo[i][gFrakVlad]] > ScoreZahvat[GZInfo[i][gNapad]])
		            {
		                SendFamilyMessage(GZInfo[i][gFrakVlad],COLOR_WHITE,"{e23434}[Внимание] {FFFFFF}Вам удалось отстоять свою территорию.");
		                SendFamilyMessage(GZInfo[i][gNapad],COLOR_WHITE,"{e23434}[Внимание] {FFFFFF}Вам не удалось завоевать территорию.");
		                GangZoneStopFlashForAll(i);
		                //GangZoneHideForAll(i);
		                switch(GZInfo[i][gFrakVlad])
		                {
		                    case 12: GangZoneShowForAll(GZInfo[i][gID],0xd200ff99);
		                    case 18: GangZoneShowForAll(GZInfo[i][gID],0x007fffAA);
		                    case 13: GangZoneShowForAll(GZInfo[i][gID],0xcfbe0899);
		                    case 15: GangZoneShowForAll(GZInfo[i][gID],0x06b50699);
		                    case 17: GangZoneShowForAll(GZInfo[i][gID],0x03c3b899);
		                    default: GangZoneShowForAll(GZInfo[i][gID],0xFFBE0065);
		                }
		                GZInfo[i][gNapad] = 0;
		            }
		            else
		            {
		                SendFamilyMessage(GZInfo[i][gFrakVlad],COLOR_WHITE,"{e23434}[Внимание] {FFFFFF}Вы потеряли контроль над одной из своих территорий.");
		                SendFamilyMessage(GZInfo[i][gNapad],COLOR_WHITE,"{e23434}[Внимание] {FFFFFF}Вы приобрели контроль над новой территорией.");
		                GangZoneStopFlashForAll(i);
		                //GangZoneHideForAll(i);
		                switch(GZInfo[i][gNapad])
		                {
		                    case 12: GangZoneShowForAll(GZInfo[i][gID],0xd200ff99);
		                    case 18: GangZoneShowForAll(GZInfo[i][gID],0x007fffAA);
		                    case 13: GangZoneShowForAll(GZInfo[i][gID],0xcfbe0899);
		                    case 15: GangZoneShowForAll(GZInfo[i][gID],0x06b50699);
		                    case 17: GangZoneShowForAll(GZInfo[i][gID],0x03c3b899);
		                    default: GangZoneShowForAll(GZInfo[i][gID],0xFFBE0065);
		                }
		                GZInfo[i][gFrakVlad] = GZInfo[i][gNapad];
						GZInfo[i][gNapad] = 0;
		                ScoreZahvat[GZInfo[i][gFrakVlad]] = 0;
		                ScoreZahvat[GZInfo[i][gNapad]] = 0;
		            }
		            GZSafeTime[i] = 0;
					FrakCD[GZInfo[i][gNapad]] = 0;
				 	FrakCD[GZInfo[i][gFrakVlad]] = 0;
					SaveGZ();
		        }
			}
		}
	}
}
public MzCheck()
{
    for(new i =0;i<sizeof(MZInfo);i++)
    {
		if(MZSafeTime[i] > 0)
		{
			MZSafeTime[i]--;
	        if(MZSafeTime[i] == 300)
	        {
	            SendFamilyMessage(MZInfo[i][mFrakVlad],COLOR_WHITE,"{e23434}[Внимание] {FFFFFF}До защиты бизнеса осталось 5 минут.");
	            SendFamilyMessage(MZInfo[i][mNapad],COLOR_WHITE,"{e23434}[Внимание] {FFFFFF}До захвата бизнеса осталось 5 минут.");
	        }
	        else if(MZSafeTime[i] == 120)
	        {
	            SendFamilyMessage(MZInfo[i][mFrakVlad],COLOR_WHITE,"{e23434}[Внимание] {FFFFFF}До защиты бизнеса осталось 2 минуты.");
	            SendFamilyMessage(MZInfo[i][mNapad],COLOR_WHITE,"{e23434}[Внимание] {FFFFFF}До захвата бизнеса осталось 2 минуты.");
	        }
	        else if(MZSafeTime[i] == 1)
	        {
	            for(new h = 0; h < sizeof(BizzInfo); h++)
				{
					if(BizzInfo[h][bCapture] == 1)
					{
			            if(ScoreZahvat[MZInfo[i][mFrakVlad]] > ScoreZahvat[MZInfo[i][mNapad]])
			            {
			                startwar = 0;
			                SendFamilyMessage(MZInfo[i][mFrakVlad],COLOR_WHITE,"{e23434}[Внимание] {FFFFFF}Вам удалось отстоять свой бизнес");
			                SendFamilyMessage(MZInfo[i][mNapad],COLOR_WHITE,"{e23434}[Внимание] {FFFFFF}Вам не удалось завоевать бизнес.");
			                //GangZoneStopFlashForAll(i);
			                BizzInfo[h][bMafia] = BizzInfo[h][bMafia];
			                BizzInfo[h][bCapture] = 0;
			            }
			            else
			            {
			                startwar = 0;
			                SendFamilyMessage(MZInfo[i][mFrakVlad],COLOR_WHITE,"{e23434}[Внимание] {FFFFFF}Вы потеряли контроль над одним из своих бизнесов.");
			                SendFamilyMessage(MZInfo[i][mNapad],COLOR_WHITE,"{e23434}[Внимание] {FFFFFF}Вы приобрели контроль над новым бизнесом.");
			                //GangZoneStopFlashForAll(i);
			                BizzInfo[h][bMafia] = MZInfo[i][mNapad];
			                BizzInfo[h][bCapture] = 0;
			                ScoreZahvat[MZInfo[i][mFrakVlad]] = 0;
			                ScoreZahvat[MZInfo[i][mNapad]] = 0;
			            }
						MZInfo[i][mNapad] = 0;
					    MZInfo[i][mFrakVlad] = 0;
						GangZoneStopFlashForAll(zons);
						GangZoneHideForAll(zons);
						GangZoneShowForAll(zons, 0xB2B2B2AA);
						break;
			        }
				}
			}
		}
	}
}
stock GetCoordBonnetVehicle(vehicleid, &Float:x, &Float:y, &Float:z)
{
    new Float:angle,Float:distance;
    GetVehicleModelInfo(GetVehicleModel(vehicleid), 1, x, distance, z);
    distance = distance/2 + 0.1;
    GetVehiclePos(vehicleid, x, y, z);
    GetVehicleZAngle(vehicleid, angle);
    x -= (distance * floatsin(-angle+180, degrees));
    y -= (distance * floatcos(-angle+180, degrees));
    return 1;
}
forward GETHP(playerid);
public GETHP(playerid)
{
    new string[128];
    new sendername[MAX_PLAYER_NAME];
    GetPlayerName(playerid,sendername,sizeof(sendername));
    GetPlayerHealth(playerid,GMHP[playerid][1]);
    GetVehicleHealth(GetPlayerVehicleID(playerid),VEHHP[playerid][1]);
    if(!IsPlayerInAnyVehicle(playerid))
    {
        if(GMHP[playerid][1] >= 100.0)
        {
            format(string, sizeof(string), "Игрок %s[%d] | GM. ---> (%.0f HP)", sendername,playerid,GMHP[playerid][1]);
            ABroadCast(COLOR_REDD,string,2);
            SetPlayerHealthAC(playerid, GMHP[playerid][0]);
            SetPlayerArmourAC(playerid, GMARMOUR[playerid][0]);
            SetPlayerGravity(playerid,0.008);
            return true;
        }
        else
        {
            format(string, sizeof(string), "Игрок %s[%d] | не GM.", sendername,playerid);
            ABroadCast(COLOR_YELLOW,string,2);
            SetPlayerHealthAC(playerid, GMHP[playerid][0]);
            SetPlayerArmourAC(playerid, GMARMOUR[playerid][0]);
            SetPlayerGravity(playerid,0.008);
            return true;
        }
    }
    else
    {
        if(VEHHP[playerid][1] >= 9999.0)
        {
            format(string, sizeof(string), "Игрок %s[%d] | GM car. ---> (%.1f HP car)", sendername,playerid,VEHHP[playerid][1]);
            ABroadCast(COLOR_REDD,string,2);
            SetVehicleHealth(GetPlayerVehicleID(playerid),VEHHP[playerid][0]);
            //DestroyObject(gmcarr);
            //DestroyVehicle(gmcarr);
			AnRepairVehicle(GetPlayerVehicleID(playerid));
            return true;
        }
        else
        {
            format(string, sizeof(string), "Игрок %s[%d] | не GM car.", sendername,playerid);
            ABroadCast(COLOR_YELLOW,string,2);
            SetVehicleHealth(GetPlayerVehicleID(playerid),VEHHP[playerid][0]);
			//DestroyObject(gmcarr);
            //DestroyVehicle(gmcarr);
			AnRepairVehicle(GetPlayerVehicleID(playerid));
            return true;
        }
    }
}
stock SaveServer()
{
	SaveMaterials();
	SaveGZ();
	OnPropUpdate();
	SaveBankMafia();
	SaveHomeSbizz();
	SaveBankFrac();
	SaveKazino();
    SaveAccounts();
}
public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
	new Float:oldX, Float:oldY, Float:oldZ,
		Float:oldRotX, Float:oldRotY, Float:oldRotZ;
	GetObjectPos(objectid, oldX, oldY, oldZ);
	GetObjectRot(objectid, oldRotX, oldRotY, oldRotZ);
	if(!playerobject) // If this is a global object, move it for other players
	{
	    if(!IsValidObject(objectid)) return;
	    MoveObject(objectid, fX, fY, fZ, 10.0, fRotX, fRotY, fRotZ);
	}

	if(response == EDIT_RESPONSE_FINAL)
	{
		// The player clicked on the save icon
		// Do anything here to save the updated object position (and rotation)
	}

	if(response == EDIT_RESPONSE_CANCEL)
	{
		//The player cancelled, so put the object back to it's old position
		if(!playerobject) //Object is not a playerobject
		{
			SetObjectPos(objectid, oldX, oldY, oldZ);
			SetObjectRot(objectid, oldRotX, oldRotY, oldRotZ);
		}
		else
		{
			SetPlayerObjectPos(playerid, objectid, oldX, oldY, oldZ);
			SetPlayerObjectRot(playerid, objectid, oldRotX, oldRotY, oldRotZ);
		}
	}
}
stock SendRacersMessage(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (!IsACop(i) || !IsAArm(i))
			{
				if(!gFam[i])
				{
					SendClientMessage(i, color, string);
				}
			}
		}
	}
}
forward ANTIFLUD(playerid);
public ANTIFLUD(playerid)
{
	AntiFlud[playerid] = 0;
}
stock PlayerSpeed(playerid)
{
	new Float:X, Float:Y, Float:Z;
	if(!IsPlayerInAnyVehicle(playerid)) GetPlayerVelocity(playerid,X,Y,Z);
	return floatround( floatsqroot( X * X + Y * Y + Z * Z ) * 170.0 );
}

stock StripNewLine(string[]) {
        new len = strlen(string);
        if (string[0]==0) return ;
        if ((string[len - 1] == '\n') || (string[len - 1] == '\r')) {
                string[len - 1] = 0;
                if (string[0]==0) return ;
                if ((string[len - 2] == '\n') || (string[len - 2] == '\r')) string[len - 2] = 0;
        }
}

stock fcopytextfile(oldname[],newname[]) {
        new File:ohnd,File:nhnd;
        if (!fexist(oldname)) return false;
        ohnd=fopen(oldname,io_read);
        if (!ohnd) return false;
        nhnd=fopen(newname,io_write);
        if (!nhnd) {
                fclose(ohnd);
                return false;
        }
        new tmpres[DINI_MAX_STRING];
        while (fread(ohnd,tmpres)) {
                DINI_StripNewLine(tmpres);
                format(tmpres,sizeof(tmpres),"%s\r\n",tmpres);
                fwrite(nhnd,tmpres);
        }
        fclose(ohnd);
        fclose(nhnd);
        return true;
}
stock SearchingHit(playerid)
{
    new string[150];
    new giveplayer[MAX_PLAYER_NAME];
    new searchhit = 0;
    for(new i=0; i<GetMaxPlayers(); i++)
    {
        if(IsPlayerConnected(i))
        {
            if(searchhit == 0)
            {
                if(PlayerInfo[i][pHeadValue] > 0 && GotHit[i] == 0 && PlayerInfo[i][pMember] != 29)
                {
                    GetPlayerName(i, giveplayer, sizeof(giveplayer));
                    searchhit = 1;
                    hitfound = 1;
                    hitid = i;
                    for(new k=0; k<GetMaxPlayers(); k++)
                    {
                        if(IsPlayerConnected(k))
                        {
                            if(PlayerInfo[k][pMember] == 24 || PlayerInfo[k][pLeader] == 24)//меняем на свое
                            {
                                format(string, sizeof(string), "Цель: %s[%d] Цена: $%d", giveplayer, i, PlayerInfo[i][pHeadValue]);
                                SendClientMessage(k, COLOR_GREEN, string);
                                SendClientMessage(k, COLOR_GREEN, "Откройте меню и выберите пункт 'Подписать контракт'");
                            }
                        }
                    }
                    return false;
                }
            }
        }
    }
    if(searchhit == 0)
    {
        SendClientMessage(playerid, COLOR_WHITE, "{f9b0b0}x {FFFFFF}Нет доступных контрактов.");
    }
    return false;
}
public Quiz()
{
    new str[128],a,b;
    a = random(vMaxN);
    b = random(vMaxN);
    Viktorina = a + b;
    format(str, sizeof str, "Викторина: Сколько будет {FFFF00}%d {FFFFFF}+ {FFFF00}%d {FFFFFF}(Ответ пишите в обычный чат!)",a,b);
    SendClientMessageToAll(-1, str);
    return 1;
}
stock IsATune(playerid) {
if(IsPlayerInRangeOfPoint(playerid,5,2530.3806,-1519.9351,24.0067) || IsPlayerInRangeOfPoint(playerid,5,2531.3801,-1535.4642,24.0067)) return true;
return false; }
stock IsAKosti(playerid) {
if(PlayerToPoint(3.0,playerid,2242.4038,1612.3510,1007.1945) || PlayerToPoint(3.0,playerid,2230.9197,1611.9740,1007.2264)) return true;
return false; }
public OnPlayerEditAttachedObject( playerid, response, index, modelid, boneid,
                                   Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ,
                                   Float:fRotX, Float:fRotY, Float:fRotZ,
                                   Float:fScaleX, Float:fScaleY, Float:fScaleZ )
{
    SetPlayerAttachedObject(GetPVarInt(playerid, "GetPlayerObject"),index,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ);
    SendClientMessage(playerid, 0xFFFFFFFF, "Объект установлен");

    return 1;
}
AntiDeAMX()
{
    new a[][] =
    {
        "Unarmed (Fist)",
        "Brass K"
    };
    #pragma unused a
}
/*
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
===================================================================
Если, вы захотите его слить тоже!
То, вы должны указать кто разработчик данного мода.
Если, вы его сольете без укзания автора мода.
То, на ваше видео кину жалобу нарушение авторских прав!
И, ваше видео удалят.
===================================================================
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
===================================================================
Разработчик мода : DARCHENSKY                                      |
===================================================================
Группа : vk.com/darchensky                                         |
===================================================================
Страница вк : vk.com/darik_tikhiy                                  |
===================================================================
YouTube : https://www.youtube.com/channel/UCoIB-M7yXIEYVFeaziHB1YA |
===================================================================
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
/*
Разработчик Данного мода DARCHENSKY (YouTube)
*/
